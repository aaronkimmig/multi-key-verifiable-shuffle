(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    744797,      17606]
NotebookOptionsPosition[    724520,      17290]
NotebookOutlinePosition[    725163,      17312]
CellTagsIndexPosition[    725120,      17309]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Multi-Key Shuffle: Network Application for Verifier", "Title",
 CellChangeTimes->{{3.8866048116486998`*^9, 3.8866048441117306`*^9}, {
  3.8866114293743343`*^9, 3.886611429636989*^9}, {3.8866660968375235`*^9, 
  3.886666098328493*^9}, {3.892284689345182*^9, 3.892284689966576*^9}, {
  3.8923451243872128`*^9, 3.8923451276846247`*^9}, {3.8983133344655657`*^9, 
  3.8983133359135623`*^9}, {3.9139488213628263`*^9, 
  3.913948822150549*^9}},ExpressionUUID->"0e3b5f9f-4604-4069-813d-\
65d91e4e7550"],

Cell[TextData[{
 StyleBox["Author: Aaron Kimmig <kimmiga@informatik.uni-freiburg.de> \
<academia@aaronkimmig.de>\nLast Edited: 2023-12-11\n\nImplementing verifier \
component in network application for efficient Multi-Key Shuffle Argument\n\n\
", "Text"],
 StyleBox["For a fast start, go to section \
\[OpenCurlyDoubleQuote]Configuration\[CloseCurlyDoubleQuote] > \
\[OpenCurlyDoubleQuote]Set Notebook Context and \
Kernel\[CloseCurlyDoubleQuote].", "Text",
  FontWeight->"Bold"],
 StyleBox["\n\n", "Text"],
 StyleBox["See", "Text",
  FontSlant->"Italic"],
 StyleBox["\n[Master\[CloseCurlyQuote]s Thesis] Efficient Zero-Knowledge \
Multi-Key Verifiable Shuffles: Implementation, Security and Applications\n[B\
\[UDoubleDot]nzDraft23] B\[UDoubleDot]nz, B., Raykova, M., & Sarathy, J. \
(2023, Draft). Efficient Multi-Key Verifiable Shuffles from Short Arguments \
for Randomized Algorithms.\n", "Text"],
 StyleBox["for Shuffle Argument and", "Text",
  FontSlant->"Italic"],
 StyleBox["\n[B\[UDoubleDot]nz18] B\[UDoubleDot]nz, B., Bootle, J., Boneh, \
D., Poelstra, A., & Maxwell, G. (2018). Bulletproofs: Short proofs for \
confidential transactions and more. In 2018 IEEE Symposium on Security and \
Privacy (SP) (pp. 315-334). IEEE.\n", "Text"],
 StyleBox["for Inner Product argument.", "Text",
  FontSlant->"Italic"],
 StyleBox["\n\n", "Text"],
 StyleBox["Configuration options:\n", "Text",
  FontWeight->"Bold"],
 "\n",
 StyleBox["Crypto & Protocol",
  FontWeight->"Bold"],
 StyleBox["\n", "Text",
  FontWeight->"Bold"],
 Cell[BoxData[
  RowBox[{"-", " ", 
   RowBox[{"interactive", ":"}]}]], "InlineCode",ExpressionUUID->
  "1b0908cf-979c-4562-9c07-48b95c26ca72"],
 StyleBox[" Whether to use interactive protocol or Fiat-Shamir transform\n", 
  "Text"],
 Cell[BoxData[
  RowBox[{"-", " ", 
   RowBox[{"useInnerProductProtocol", ":"}]}]], "InlineCode",ExpressionUUID->
  "b3d5b935-29f7-49e9-87c0-4afe67d8d882"],
 StyleBox[" Whether to use the communication-cost-efficient inner product \
protocol\n", "Text"],
 Cell[BoxData[
  RowBox[{"-", " ", 
   RowBox[{"rngMethod", ":"}]}]], "InlineCode",ExpressionUUID->
  "c557a34a-d9d5-4a42-af09-d3cb52a751c5"],
 StyleBox[" \[OpenCurlyDoubleQuote]OpenSSL\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]ExtendedCA\[CloseCurlyDoubleQuote], ... (All of \
Mathematica\[CloseCurlyQuote]s options)\n", "Text"],
 Cell[BoxData[
  RowBox[{"-", " ", 
   RowBox[{"fixedNUMSRandomSeed", ":"}]}]], "InlineCode",ExpressionUUID->
  "c435e66f-0d73-4da2-8ec2-49d2621a4da2"],
 " Fixed random seed which will be used for calculating the generators for \
Pedersen Commitments\n",
 Cell[BoxData[
  RowBox[{"-", " ", 
   RowBox[{"securityPolicy", ":"}]}]], "InlineCode",ExpressionUUID->
  "a0b01744-9385-4da9-993f-e8d393392088"],
 " required minimum bits for Elliptic Curve and ElGamal primes",
 StyleBox["\n", "Text"],
 Cell[BoxData[
  RowBox[{"-", " ", 
   RowBox[{"setupsPermitted", ":"}]}]], "InlineCode",ExpressionUUID->
  "4aaf335f-b186-4790-af95-f4478f5d96da"],
 " selection of setups that are accepted for verification (additionally, \
entropy policy has to be fulfilled)",
 StyleBox["\n", "Text"],
 StyleBox["By Application of Prover\[CloseCurlyQuote]s Setup", "Text",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox["\n", "Text",
  FontWeight->"Bold"],
 Cell[BoxData[
  RowBox[{"-", " ", 
   RowBox[{"useElGamal", ":"}]}]], "InlineCode",ExpressionUUID->
  "4cd6925d-8418-4d83-b933-43519b3db574"],
 StyleBox[" Choose between El Gamal and Elliptic Curve Cryptography (only EC \
is implemented; configuration option left for demonstration of El Gamal \
setup)\n", "Text"],
 Cell[BoxData[
  RowBox[{
   RowBox[{"-", " ", "p"}], ",", " ", "q", ",", " ", 
   RowBox[{"(", 
    RowBox[{"implicit", ":", " ", "cofactor"}], ")"}], ",", " ", 
   RowBox[{"g", ":"}]}]], "InlineCode",ExpressionUUID->
  "df7d4299-2636-4442-9d87-b7860443a05b"],
 " Trapdoor Function / Schnorr Group\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{"-", " ", "p"}], ",", " ", 
   SubscriptBox["n", "EC"], ",", " ", 
   SubscriptBox["h", "EC"], ",", " ", 
   RowBox[{"(", 
    RowBox[{"implicit", ":", " ", "q"}], ")"}], ",", " ", 
   SubscriptBox["a", "EC"], ",", " ", 
   SubscriptBox["b", "EC"], ",", " ", 
   RowBox[{"g", ":"}]}]], "InlineCode",ExpressionUUID->
  "90bb456b-191d-426b-95cf-d1aa979eae90"],
 " Trapdoor Function / Elliptic Curve (Weierstrass representation)\n",
 StyleBox["\nNetwork, Communication & Environment\n", "Text",
  FontWeight->"Bold"],
 Cell[BoxData[
  RowBox[{"-", " ", "myId"}]], "InlineCode",
  FontWeight->"Plain",ExpressionUUID->
  "042ac8da-2057-411e-8fb5-e0c43d5ebeb3"],
 ": Choose a name that identifies the verifier. Could be replaced by a public \
key if a public key infrastructure was implemented\n",
 Cell[BoxData[
  RowBox[{"-", " ", 
   RowBox[{"proverId", ":"}]}]], "InlineCode",ExpressionUUID->
  "7f838e55-015d-4eb2-bc2a-6f00191152fa"],
 " ID of prover\n",
 Cell[BoxData[
  RowBox[{"-", " ", 
   RowBox[{"room", ":"}]}]], "InlineCode",ExpressionUUID->
  "b6367eca-8cf5-42ac-b851-041adbe23ea0"],
 " \[OpenCurlyDoubleQuote]address\[CloseCurlyDoubleQuote] of the proof and \
where messages are routed over\n",
 Cell[BoxData[
  RowBox[{"-", " ", 
   RowBox[{"roomPassword", ":"}]}]], "InlineCode",ExpressionUUID->
  "51f58b8e-b8eb-4ab0-9430-262e16fdff8e"],
 " password needed to access the room\n",
 Cell[BoxData[
  RowBox[{"-", " ", "inspectionEnabled"}]], "InlineCode",ExpressionUUID->
  "e35e0484-0c72-4ee9-98ae-ba01793d1fcd"],
 ": Publish variables to Inspector for educational purposes\n",
 Cell[BoxData[
  RowBox[{"-", " ", "routerConfig"}]], "InlineCode",ExpressionUUID->
  "8f3312ad-b1c3-49a3-a0cb-602033cbbeaa"],
 ": Connection to message router and inspector\n",
 Cell[BoxData[
  RowBox[{"-", " ", "useLocalRouter"}]], "InlineCode",ExpressionUUID->
  "aef2518d-6a86-411f-aec4-0f36f0f1d580"],
 ": Whether to use a self-hosted local router instance or a public router \
server on the internet\n",
 Cell[BoxData[
  RowBox[{"-", " ", 
   RowBox[{"fiatShamirSingleKernel", ":"}]}]], "InlineCode",ExpressionUUID->
  "bb4489cd-1428-4d62-b6ba-d84f39058f50"],
 " Set to True when using a mathematica test license (which allows only one \
kernel to be run simultaneously) and not running prover and verifier on \
different machines\n",
 Cell[BoxData[
  RowBox[{"-", " ", 
   RowBox[{"verifierKernelName", ":"}]}]], "InlineCode",ExpressionUUID->
  "0af6bc23-1bff-4fa7-93f0-86894ce8fb26"],
 " Name of kernel this notebook shall be run on if fiatShamirSingleKernel = \
False\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{"-", " ", "verbosity"}], " ", 
   RowBox[{"settings", ":"}]}]], "InlineCode",ExpressionUUID->
  "51b6a395-be7a-41ab-9838-f340eb38e14e"],
 " Set verbosity levels for different components\n",
 StyleBox["\nProver\[CloseCurlyQuote]s Notebook: \
\[OpenCurlyDoubleQuote]MultiKeyShuffle-Prover.nb\[CloseCurlyDoubleQuote]\n\n\
Start the router and inspector before running this notebook when using a \
local router:\n", "Text"],
 Cell[BoxData[
  RowBox[{"$", " ", "python3", " ", 
   RowBox[{"RoomServer", ".", "py"}]}]], "InlineCode",ExpressionUUID->
  "115e3040-c5c1-4513-8b74-7405e31dcd18"],
 "\nTo get live inspection, visit http://localhost:11080 when running your \
local server or https://aaronkimmig.de/crypto-insight if you want to use the \
standard external server."
}], "Text",
 CellChangeTimes->{{3.886611447632443*^9, 3.8866115493485985`*^9}, {
   3.8866115874596653`*^9, 3.886611613228103*^9}, {3.886617897066572*^9, 
   3.8866178971486435`*^9}, {3.8866179774696474`*^9, 3.886617984115609*^9}, {
   3.886666140584011*^9, 3.886666167487649*^9}, 3.886670937451439*^9, {
   3.8874805451045275`*^9, 3.8874806053320484`*^9}, {3.8874809146998386`*^9, 
   3.887480923120697*^9}, {3.887480995501309*^9, 3.8874810252249413`*^9}, {
   3.88748976910751*^9, 3.887489770553322*^9}, {3.887552121532795*^9, 
   3.8875521224787703`*^9}, {3.887651216308745*^9, 3.8876512164737673`*^9}, {
   3.889636049852024*^9, 3.8896361169179506`*^9}, {3.8896361723267975`*^9, 
   3.889636216733235*^9}, {3.8896363016401386`*^9, 3.8896363111283183`*^9}, {
   3.8896365618196583`*^9, 3.8896365618196583`*^9}, {3.889636652414957*^9, 
   3.8896366600253468`*^9}, {3.8896369579866123`*^9, 3.889636958174027*^9}, {
   3.8896370338117895`*^9, 3.8896370341265535`*^9}, 3.891506521046133*^9, 
   3.891506678945252*^9, 3.89150679756215*^9, {3.892279796575872*^9, 
   3.8922797987646723`*^9}, {3.89234517951762*^9, 3.892345185566782*^9}, {
   3.892345418314447*^9, 3.892345434083148*^9}, {3.892353692897875*^9, 
   3.892353745992594*^9}, {3.892353837459605*^9, 3.8923538392799263`*^9}, {
   3.892353917843338*^9, 3.89235393226838*^9}, {3.892357468346747*^9, 
   3.89235753486733*^9}, {3.8924392612178707`*^9, 3.892439261339767*^9}, {
   3.8983133432544093`*^9, 3.898313344166505*^9}, {3.898313747370861*^9, 
   3.898313752117813*^9}, {3.898315127352831*^9, 3.8983151480691357`*^9}, 
   3.8983157175325212`*^9, {3.898315771604391*^9, 3.8983157760863523`*^9}, {
   3.8983158194920254`*^9, 3.8983158233405333`*^9}, {3.898315896394058*^9, 
   3.898315896887869*^9}, {3.898315942136051*^9, 3.8983159462685328`*^9}, {
   3.8983160248326316`*^9, 3.898316091279613*^9}, {3.8983162700927*^9, 
   3.8983163030841055`*^9}, {3.8983163546254745`*^9, 
   3.8983163691062927`*^9}, {3.8983164022034035`*^9, 3.898316403608564*^9}, {
   3.89831666839986*^9, 3.898316686835367*^9}, {3.898316974257853*^9, 
   3.8983169755278263`*^9}, {3.8983171753524075`*^9, 3.898317212085785*^9}, {
   3.898317256593622*^9, 3.898317257106755*^9}, {3.8983173490330133`*^9, 
   3.8983173561140866`*^9}, {3.898318110105449*^9, 3.8983182269625645`*^9}, {
   3.898318530156424*^9, 3.8983185468155107`*^9}, {3.8983303342482777`*^9, 
   3.8983303778729444`*^9}, {3.8983450741387806`*^9, 3.898345079697014*^9}, {
   3.8983453169684114`*^9, 3.898345319421467*^9}, {3.8983459539436274`*^9, 
   3.8983459547348003`*^9}, {3.898349843208857*^9, 3.8983498456023765`*^9}, {
   3.898364677993958*^9, 3.8983646801365776`*^9}, {3.898364738304537*^9, 
   3.898364769046538*^9}, 3.8983672811949615`*^9, {3.8993099635504804`*^9, 
   3.89930996385608*^9}, {3.899310006508876*^9, 3.8993100073023577`*^9}, {
   3.899310059401444*^9, 3.8993100872643185`*^9}, {3.9010086493926353`*^9, 
   3.90100865433698*^9}, {3.9010097844308624`*^9, 3.901009788829859*^9}, 
   3.911293765853015*^9, {3.9112938294367437`*^9, 3.911293869909934*^9}, 
   3.911293931040552*^9, {3.9112940031094418`*^9, 3.911294003258172*^9}, 
   3.9112940343959093`*^9, {3.911294405654397*^9, 3.911294406149704*^9}, 
   3.911294634838707*^9, 3.911295305201911*^9, {3.9113963385154967`*^9, 
   3.9113963399514036`*^9}, {3.9114085920307236`*^9, 
   3.9114085934165125`*^9}, {3.913297359970915*^9, 3.9132973629917116`*^9}, {
   3.9132974455426655`*^9, 3.9132974459847198`*^9}, {3.913297479515699*^9, 
   3.913297484460479*^9}, {3.913297515755582*^9, 3.913297536426676*^9}, {
   3.9139488252692327`*^9, 3.9139488478056574`*^9}, {3.9139489031893573`*^9, 
   3.9139489035248733`*^9}},ExpressionUUID->"3441f26f-9488-4511-92ea-\
3513834b6daa"],

Cell[CellGroupData[{

Cell["Reset \[Dash] Clean up Notebook, Clear states", "Section",
 CellChangeTimes->{{3.8866116352067337`*^9, 3.886611635611354*^9}, {
   3.896527318838523*^9, 3.896527319251322*^9}, 3.8965273910322437`*^9, {
   3.8983176480013943`*^9, 
   3.8983176632823954`*^9}},ExpressionUUID->"4885ccce-33c9-4dca-83a9-\
87bec28a0c67"],

Cell[TextData[StyleBox["If fiatShamirSingleKernel is set in section \
\[OpenCurlyDoubleQuote]Configuration\[CloseCurlyDoubleQuote] run CLEAR ALL \
after the prover\[CloseCurlyQuote]s notebook has been run and before this \
notebook is being executed!",
 FontWeight->"Bold",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.8983176720373735`*^9, 3.8983178404454813`*^9}, 
   3.898317939544547*^9, {3.898317980248105*^9, 3.8983179962183914`*^9}, {
   3.898345728570462*^9, 3.8983457288645954`*^9}, {3.901008175453416*^9, 
   3.901008184309857*^9}, {3.9010082261970577`*^9, 
   3.901008231444383*^9}},ExpressionUUID->"4f3b0512-9492-4ba1-96d4-\
91857b9eb28c"],

Cell[TextData[{
 StyleBox["CREATE NEW KERNEL IF NEEDED:\n",
  FontWeight->"Bold"],
 "Menu ",
 StyleBox[">",
  FontWeight->"Bold"],
 " Evaluation > Kernel Configuration Options > Add > Name: Verifier > OK"
}], "Text",
 CellChangeTimes->{{3.8977157233204346`*^9, 3.8977157861088495`*^9}, {
  3.9010082438946457`*^9, 
  3.901008245681041*^9}},ExpressionUUID->"d0df20c0-4d8c-4a29-a4ba-\
148487f5ee91"],

Cell[TextData[StyleBox["The following helper actions are useful for cleanup \
and debugging. They are not required to correctly execute the protocols.",
 FontWeight->"Bold",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.898345662274104*^9, 3.898345676040671*^9}, 
   3.911399859933695*^9},ExpressionUUID->"c13d32e1-49ae-4363-91ac-\
888d003a0636"],

Cell[TextData[StyleBox["CLEAR ALL",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.896417125761096*^9, 3.896417226823968*^9}, {
  3.896527178005731*^9, 
  3.8965271788815117`*^9}},ExpressionUUID->"efe05422-07d9-4de0-b90a-\
656acd91e5cb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"FrontEndTokenExecute", "[", "\"\<DeleteGeneratedCells\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Deleted all generated output cells\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Quit Kernel\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Quit", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8964170595815897`*^9, 3.8964171073895884`*^9}, {
  3.8965274048184013`*^9, 3.896527404905279*^9}, {3.897671545812414*^9, 
  3.897671547531395*^9}},
 CellLabel->
  "In[332]:=",ExpressionUUID->"35220a3e-1b98-4c7c-92a7-cd0883fb8020"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Deleted all generated output cells\"\>"], "Print",
 CellChangeTimes->{3.913299507909056*^9},
 CellLabel->
  "During evaluation of \
In[332]:=",ExpressionUUID->"ba3159d6-bceb-4c46-88e4-9b31abab32d1"],

Cell[BoxData["\<\"Quit Kernel\"\>"], "Print",
 CellChangeTimes->{3.913299507914053*^9},
 CellLabel->
  "During evaluation of \
In[332]:=",ExpressionUUID->"9c0db829-48aa-45f2-a0a8-ef4251e643a6"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 StyleBox["LEAVE ROOM",
  FontWeight->"Bold"],
 " (Can only be executed after initialization)"
}], "Text",
 CellChangeTimes->{{3.896527208504607*^9, 
  3.8965272228292007`*^9}},ExpressionUUID->"8d188f83-423a-460d-bebf-\
7ec11d0ea4c3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SendVariables", "[", 
   RowBox[{"\"\<Router\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<__leave_room__\>\"", "->", "True"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"WaitForVariable", "[", 
  RowBox[{"\"\<__leave_room__\>\"", ",", "\"\<Router\>\""}], "]"}]}], "Input",\

 CellChangeTimes->{{3.8964577083903503`*^9, 3.896457721054666*^9}, {
  3.89646136079779*^9, 3.896461392599414*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"f2d28adb-ca39-49b3-8175-3d8582c24dd5"],

Cell[TextData[{
 StyleBox["RECONNECT",
  FontWeight->"Bold"],
 " (Can only be executed after initialization)"
}], "Text",
 CellChangeTimes->{{3.896417125761096*^9, 3.896417226823968*^9}, {
   3.896457635422511*^9, 3.896457649650158*^9}, {3.89645769443347*^9, 
   3.896457705227622*^9}, 3.8964611967588882`*^9, {3.896461335742795*^9, 
   3.89646133614786*^9}, {3.896522984875979*^9, 3.8965229926878366`*^9}, {
   3.8965271871674633`*^9, 
   3.896527191426383*^9}},ExpressionUUID->"e697eb38-a531-48b2-a4ee-\
5be84c43ac42"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Reconnect", " ", "with", " ", "new", " ", "socket"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"router", "=", 
    RowBox[{"ConnectToRouter", "[", 
     RowBox[{"routerConfig", ",", "True"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.895591180402657*^9, 3.89559123131357*^9}, {
  3.896102413737903*^9, 3.896102426069893*^9}, {3.896523029462657*^9, 
  3.896523041471868*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"d4546b39-d50c-4d93-a1f3-0e3a3f07d7b3"],

Cell[TextData[{
 StyleBox["CLEAR SAVED STATES",
  FontWeight->"Bold"],
 " (Can only be executed after initialization)"
}], "Text",
 CellChangeTimes->{{3.896417125761096*^9, 3.896417226823968*^9}, {
  3.896457635422511*^9, 3.896457649650158*^9}, {3.89645769443347*^9, 
  3.896457705227622*^9}, {3.8964613186761017`*^9, 3.8964613325878897`*^9}, {
  3.896522814963489*^9, 3.8965228469408503`*^9}, {3.896522998739846*^9, 
  3.896523000690649*^9}, {3.8965271503647127`*^9, 3.8965271574915648`*^9}, {
  3.89772603943329*^9, 
  3.897726042642563*^9}},ExpressionUUID->"a4b4ee67-42fc-45c2-80fb-\
6d704e15b8a7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"StateMachineClear", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.895510969857535*^9, 3.895511008832879*^9}, 
   3.895579868068171*^9, {3.89610166332732*^9, 3.896101677965507*^9}, {
   3.896102373316564*^9, 3.896102428407933*^9}, {3.896523032914097*^9, 
   3.896523034715486*^9}, {3.8977260619473925`*^9, 
   3.897726095814425*^9}},ExpressionUUID->"988f914c-7639-4fc3-b199-\
d3a7ef19ec2f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Configuration", "Section",
 CellChangeTimes->{{3.8866054675650663`*^9, 3.8866054680045533`*^9}, {
  3.8983187509877462`*^9, 3.898318753200689*^9}, {3.8983459779939947`*^9, 
  3.8983459791744175`*^9}},ExpressionUUID->"05f9900d-a1b0-4013-9146-\
463daad65f67"],

Cell[CellGroupData[{

Cell["Set Notebook Context and Kernel", "Subsection",
 CellChangeTimes->{{3.89938659234009*^9, 
  3.899386601737139*^9}},ExpressionUUID->"32ef07c3-3a65-4862-871f-\
2d63479d5057"],

Cell[TextData[{
 "- Using a payed license?\n- YES: On your first run, make sure the kernel \
for the prover has been created: Menu ",
 StyleBox[">",
  FontWeight->"Bold"],
 " Evaluation > Kernel Configuration Options > Add > Name: Prover > OK\n- NO: \
set option fiatShamirSingleKernel = True and read the instructions in the \
comment above it.\n\n- To run the whole notebook, place the cursor into this \
cell, press \[OpenCurlyDoubleQuote]Shift-Enter\[CloseCurlyDoubleQuote] and \
click \[OpenCurlyDoubleQuote]Yes\[CloseCurlyDoubleQuote] to evaluate the \
whole notebook. Select \[OpenCurlyDoubleQuote]No\[CloseCurlyDoubleQuote] to \
only evaluate this cell. Go on to the next cells to run them one by one with \
\[OpenCurlyDoubleQuote]Shift-Enter\[CloseCurlyDoubleQuote].\n\n- To clean up \
the notebook and start with a new run, execute the first cell (\
\[OpenCurlyDoubleQuote]Shift-Enter\[CloseCurlyDoubleQuote]) in section \
\[OpenCurlyDoubleQuote]Reset\[CloseCurlyDoubleQuote]. Re-evaluating cells is \
possible because a state machine allows protocol rewinding.\n\n",
 StyleBox["Re-evaluate after changes",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.8993868013321857`*^9, 3.8993868137453547`*^9}, 
   3.913297255690548*^9, {3.91329728761559*^9, 3.913297289812383*^9}, {
   3.9132994862511377`*^9, 
   3.913299486635934*^9}},ExpressionUUID->"949ed0aa-79ea-42f2-b729-\
42b26d3d2816"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Whether", " ", "to", " ", "run", " ", "notbook", " ", "on", " ", 
     "default", " ", 
     RowBox[{"kernel", ".", "\n", "Useful"}], " ", "with", " ", "Mathematica",
      " ", "Test", " ", "License", " ", "where", " ", "only", " ", "a", " ", 
     "single", " ", "kernel", " ", "can", " ", "be", " ", "run", " ", "at", 
     " ", "a", " ", 
     RowBox[{"time", ".", "\n", 
      RowBox[{"Remark", ":", " ", 
       RowBox[{
       "Running", " ", "the", " ", "interactive", " ", "protocol", " ", "is", 
        " ", "not", " ", "possible", " ", "on", " ", "a", " ", "single", " ", 
        
        RowBox[{"kernel", "!"}], "\n", "Also", " ", "apply", " ", "this", " ",
         "setting", " ", "to", " ", "the", " ", "prover", " ", "and", " ", 
        "run", " ", "it", " ", "before", " ", "the", " ", 
        RowBox[{"verifier", ".", "\n", "Quit"}], " ", "Kernel", " ", "after", 
        " ", "prover", " ", "has", " ", "been", " ", "run", " ", "and", " ", 
        "before", " ", "verifier", " ", "is", " ", 
        RowBox[{"started", "!"}], "\n", "interactive"}]}]}]}], " ", "=", " ", 
    
    RowBox[{
    "False", " ", "has", " ", "to", " ", "be", " ", "set", " ", "in", " ", 
     "the", " ", 
     RowBox[{"configuration", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"fiatShamirSingleKernel", " ", "=", " ", "False"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"Default", ":", " ", "False"}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Name", " ", "of", " ", "kernel", " ", "this", " ", "notebook", " ", 
      "should", " ", "be", " ", "run", " ", 
      RowBox[{"on", ".", "\n", "Does"}], " ", "not", " ", "take", " ", 
      "effect", " ", "if", " ", "fiatShamirSingleKernel"}], " ", "=", " ", 
     RowBox[{"True", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
        "the", " ", "notebook", " ", "will", " ", "then", " ", "be", " ", 
         "run", " ", "on", " ", "Kernel", " ", "\"\<Local\>\""}], ")"}], 
       "."}]}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"verifierKernelName", " ", "=", " ", "\"\<Verifier\>\""}], ";"}], 
   
   RowBox[{"(*", 
    RowBox[{"Default", ":", " ", "\"\<Verifier\>\""}], "*)"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"===", " ", 
      RowBox[{
       RowBox[{"don", "'"}], "t", " ", "change", " ", "between", " ", 
       "here"}]}], " ", ">>>", " ", "==="}], "*)"}], "\n", 
   RowBox[{"(*", "Context", "*)"}], "\n", 
   RowBox[{
   "Print", "[", "\"\<Setting Cell Context to Notebook only\>\"", "]"}], "\n", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{
      RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
      RowBox[{"CellContext", "->", "Notebook"}]}], "]"}], ";"}], "\n", 
   RowBox[{"(*", "Kernel", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kernelName", " ", "=", " ", 
     RowBox[{"If", "[", 
      RowBox[{
      "fiatShamirSingleKernel", ",", "\"\<Local\>\"", ",", 
       "verifierKernelName"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Make", " ", "sure", " ", "that", " ", "a", " ", "kernel", " ", "with", 
      " ", "this", " ", "name", " ", "has", " ", "been", " ", "created", " ", 
      "via", " ", "Menu"}], "->", 
     RowBox[{"Evaluation", "->", 
      RowBox[{"Kernel", " ", "Configuration", " ", "Options"}]}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{
      RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
      RowBox[{"Evaluator", "->", "kernelName"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<Evaluating on Kernel named \\\"\>\"", "<>", "kernelName", "<>", 
     "\"\<\\\"\>\""}], "]"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"===", " ", 
     RowBox[{"<<", 
      RowBox[{"<", " ", 
       RowBox[{"and", " ", "here"}]}]}], " ", "==="}], "*)"}]}]}]], "Code",
 CellChangeTimes->{
  3.899386604798806*^9, {3.8993866824569907`*^9, 3.899386760268118*^9}, {
   3.8993901507258615`*^9, 3.8993901512261314`*^9}, {3.901008352743749*^9, 
   3.901008536954545*^9}},
 CellLabel->
  "In[325]:=",ExpressionUUID->"0e45852e-9a7b-443b-b3e3-4e6ca0ba6090"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Setting Cell Context to Notebook only\"\>"], "Print",
 CellChangeTimes->{{3.913948936440029*^9, 3.9139489607584157`*^9}},
 CellLabel->
  "During evaluation of \
In[325]:=",ExpressionUUID->"ef9debbb-1fda-4a2c-b684-f1c2fb82410d"],

Cell[BoxData["\<\"Evaluating on Kernel named \\\"Verifier\\\"\"\>"], "Print",
 CellChangeTimes->{{3.913948936440029*^9, 3.9139489608645205`*^9}},
 CellLabel->
  "During evaluation of \
In[325]:=",ExpressionUUID->"683e536a-b053-4bdd-bc9b-f449934a43fd"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Crypto & Protocol", "Subsection",
 CellChangeTimes->{{3.8983458182899823`*^9, 3.898345819518669*^9}, {
  3.898345890589458*^9, 
  3.898345892554372*^9}},ExpressionUUID->"b35966c4-afb4-4a72-8fb7-\
77c866e2b3ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Whether", " ", "to", " ", "use", " ", "the", " ", "interactive", " ", 
     "protocol", " ", "or", " ", "apply", " ", "Fiat"}], "-", 
    RowBox[{"Shamir", " ", 
     RowBox[{"transform", ":", " ", 
      RowBox[{"True", "/", "False"}]}]}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"interactive", " ", "=", " ", "True"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Whether", " ", "to", " ", "use", " ", "the", " ", "inner", " ", 
      "product", " ", "protocol", " ", "for", " ", "logarithmic", " ", 
      "communication", " ", "cost"}], ";", " ", 
     RowBox[{
      RowBox[{
      "set", " ", "to", " ", "True", " ", "if", " ", 
       "exploitFixedRandomSeedForVerifier"}], " ", "=", " ", "True"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"useInnerProductProtocol", " ", "=", " ", "True"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"Default", ":", " ", "True"}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "How", " ", "random", " ", "numbers", " ", "should", " ", "be", " ", 
      "generated"}], ",", " ", 
     RowBox[{
     "choose", " ", "from", "\[IndentingNewLine]", "\"\<ExtendedCA\>\"", " ", 
      
      RowBox[{"(", 
       RowBox[{"built", "-", 
        RowBox[{
        "in", " ", "pseudo", " ", "random", " ", "number", " ", 
         "generator"}]}], ")"}], " ", "or", "\[IndentingNewLine]", 
      "\"\<OpenSSL\>\""}], ",", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
       "cryptographic", " ", "random", " ", "number", " ", "generator", " ", 
        "from", " ", "OpenSSL"}], ")"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"to", " ", "be", " ", 
        RowBox[{"implemented", ":", " ", 
         RowBox[{"\"\<DevRandom\>\"", " ", 
          RowBox[{"(", 
           RowBox[{"use", " ", "system", " ", "entropy", " ", 
            RowBox[{
             RowBox[{"from", " ", "/", "dev"}], "/", "random"}]}], 
           ")"}]}]}]}], "*)"}], "\[IndentingNewLine]", "This", " ", "setting",
       " ", "is", " ", "automatically", " ", "set", " ", "to", " ", 
      "\"\<ExtendedCA\>\"", " ", "if", " ", "a", " ", "fixed", " ", "random", 
      " ", "seed", " ", "is", " ", "used", " ", "for", " ", "the", " ", 
      "verifier", " ", "to", " ", "show", " ", "how", " ", "a", " ", 
      "weakness", " ", "can", " ", "be", " ", "generated"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rngMethod", " ", "=", " ", "\"\<OpenSSL\>\""}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"Default", ":", " ", "\"\<OpenSSL\>\""}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Fixed", " ", "random", " ", "seed", " ", "which", " ", "will", " ", "be",
      " ", "used", " ", "for", " ", "calculating", " ", "the", " ", 
     "generators", " ", "for", " ", "Pedersen", " ", "Commitments"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fixedNUMSRandomSeed", " ", "=", " ", "314159000001"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"Default", ":", " ", "314159000001"}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Specify", " ", "minimum", " ", "bits", " ", "for", " ", "group", " ", 
     "elements", " ", "and", " ", "scalars"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"securityPolicy", " ", "=", " ", 
     RowBox[{"<|", "\n", "\t", 
      RowBox[{
       RowBox[{"\"\<EC\>\"", "->", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<group\>\"", "->", "256"}], ",", 
          RowBox[{"\"\<scalar\>\"", "->", "256"}]}], "|>"}]}], ",", "\n", 
       "\t", 
       RowBox[{"\"\<ElGamal\>\"", "->", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<group\>\"", "->", "2048"}], ",", 
          RowBox[{"\"\<scalar\>\"", "->", "256"}]}], "|>"}]}]}], "\n", 
      "|>"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
      "specify", " ", "selection", " ", "of", " ", "setups", " ", "that", " ",
        "are", " ", "accepted", " ", "for", " ", "verification"}], ";", " ", 
      RowBox[{
      "empty", " ", "to", " ", "allow", " ", "all", "\n", "Additionally"}]}], 
     ",", " ", 
     RowBox[{
     "entropy", " ", "policy", " ", "has", " ", "to", " ", "be", " ", 
      "fulfilled"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"setupsPermitted", " ", "=", " ", 
     RowBox[{"<|", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{"only", " ", "support", " ", "secp256k1"}], "*)"}], "\n", "\t", 
      RowBox[{
       RowBox[{"\"\<EC\>\"", "->", 
        RowBox[{"<|", "\n", "\t\t", 
         RowBox[{"\"\<SECP256K1\>\"", "->", 
          RowBox[{"<|", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{
            "\"\<curve_representation\>\"", "->", "\"\<Weierstrass\>\""}], 
            ",", "\n", "\t\t\t", 
            RowBox[{"\"\<a_EC\>\"", "->", "0"}], ",", "\n", "\t\t\t", 
            RowBox[{"\"\<b_EC\>\"", "->", "7"}], ",", "\n", "\t\t\t", 
            RowBox[{"\"\<p\>\"", "->", 
             RowBox[{
              RowBox[{"2", "^", "256"}], "-", 
              RowBox[{"2", "^", "32"}], "-", 
              RowBox[{"2", "^", "9"}], "-", 
              RowBox[{"2", "^", "8"}], "-", 
              RowBox[{"2", "^", "7"}], "-", 
              RowBox[{"2", "^", "6"}], "-", 
              RowBox[{"2", "^", "4"}], "-", "1"}]}], ",", "\n", "\t\t\t", 
            RowBox[{"\"\<h_EC\>\"", "->", "1"}]}], "\n", "\t\t", "|>"}]}], 
         "\n", "\t", "|>"}]}], ",", "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{
        "support", " ", "all", " ", "setups", " ", "that", " ", "conform", 
         " ", "to", " ", "entropy", " ", "policy"}], "*)"}], "\n", "\t", 
       RowBox[{"\"\<ElGamal\>\"", "->", 
        RowBox[{"<|", "|>"}]}]}], "\n", "|>"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.898345831340629*^9, 3.8983458322269697`*^9}, 
   3.898345888624636*^9, 3.8983460224728103`*^9, {3.898346203906418*^9, 
   3.898346204377558*^9}, {3.898366179764166*^9, 3.898366181430879*^9}, {
   3.8990190476652813`*^9, 3.899019048261508*^9}, {3.8990203361926193`*^9, 
   3.8990203368135786`*^9}, {3.899032164388762*^9, 3.8990321648589487`*^9}, {
   3.8993094250289135`*^9, 3.899309426254966*^9}, 3.899309833506302*^9, {
   3.899385546517764*^9, 3.8993855470195065`*^9}, {3.8993901547386055`*^9, 
   3.899390155241056*^9}, {3.91140662621733*^9, 3.911406626619932*^9}, {
   3.911406749088127*^9, 3.911406749477062*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"f6a7d77d-e85e-48ec-99e3-a66a2a6109f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Network, Communication & Environment", "Subsection",
 CellChangeTimes->{{3.8983458456194053`*^9, 
  3.8983458517417173`*^9}},ExpressionUUID->"995adf86-1483-4b00-83ec-\
04abb0a2525b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Unique", " ", "ID"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"myId", " ", "=", " ", "\"\<Alice-Shuffle-Ver\>\""}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"ID", " ", "of", " ", "prover"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"proverId", " ", "=", " ", "\"\<Bob-Shuffle-Pro\>\""}], ";"}], 
   "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Room", " ", "the", " ", "communication", " ", "is", " ", "routed", " ", 
     "over"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"room", " ", "=", " ", "\"\<BobsBPShuffle2\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"roomPassword", " ", "=", " ", "\"\<mediumBPShuffle\>\""}], ";"}],
    "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Enable", "/", "Disable"}], " ", "publishing", " ", 
     RowBox[{"(", "secret", ")"}], " ", "variables", " ", "to", " ", 
     "Inspector", " ", "for", " ", "educational", " ", "purposes"}], "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"inspectionEnabled", " ", "=", " ", "True"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"Default", ":", " ", "True"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Connection", " ", "to", " ", "router"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"useLocalRouter", " ", "=", " ", "False"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"routerConfig", " ", "=", " ", 
     RowBox[{"<|", "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"\"\<Host\>\"", "->", 
        RowBox[{"If", "[", 
         RowBox[{"useLocalRouter", ",", "\"\<127.0.0.1\>\"", ",", 
          RowBox[{"TextString", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"HostLookup", "[", "\"\<aaronkimmig.de\>\"", "]"}], "[", 
             
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"\"\<Port\>\"", "->", "25080"}], ",", "\[IndentingNewLine]", 
       "\t", 
       RowBox[{"\"\<Password\>\"", "->", "\"\<Drehkreuz64\>\""}], ",", "\n", 
       "\t", 
       RowBox[{
       "\"\<ConnectionPassword\>\"", "->", "\"\<Call me Alice\>\""}]}], 
      "\[IndentingNewLine]", "|>"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Verbosity", " ", 
      RowBox[{"Levels", ":", " ", "0"}]}], ",", " ", "1", ",", " ", "2"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"stateMachineVerbosity", " ", "=", " ", "0"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fiatShamirVerbosity", " ", "=", " ", "0"}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.884800930669128*^9, 3.884800934235299*^9}, {
   3.884800979685759*^9, 3.8848011900436783`*^9}, {3.884801241103557*^9, 
   3.884801243712435*^9}, {3.884801284170188*^9, 3.884801366688986*^9}, {
   3.8848015126792297`*^9, 3.884801564573984*^9}, {3.884801701149727*^9, 
   3.884801701210188*^9}, {3.884801826097868*^9, 3.884801871780352*^9}, {
   3.884804419784683*^9, 3.8848044334035177`*^9}, {3.8848105611612167`*^9, 
   3.884810570055756*^9}, {3.884810646857059*^9, 3.8848106481654253`*^9}, {
   3.8863111236447744`*^9, 3.886311123862175*^9}, {3.8863113447150974`*^9, 
   3.886311345505064*^9}, {3.8863113791692533`*^9, 3.8863114594651656`*^9}, {
   3.8863115103723364`*^9, 3.886311523873429*^9}, {3.886311670782628*^9, 
   3.8863116714418073`*^9}, {3.8863436698652887`*^9, 3.886343679225382*^9}, {
   3.8865983645390425`*^9, 3.8865983651763678`*^9}, {3.886598906432309*^9, 
   3.8865989087160454`*^9}, {3.8866055772470007`*^9, 3.886605616559933*^9}, {
   3.886605657416505*^9, 3.886605676638733*^9}, {3.886606859667705*^9, 
   3.8866069081367064`*^9}, {3.8866116674751062`*^9, 
   3.8866116803400497`*^9}, {3.897366876405599*^9, 3.8973669337935133`*^9}, {
   3.8973684676395473`*^9, 3.89736847512149*^9}, {3.8973685177895327`*^9, 
   3.897368520779683*^9}, {3.8973685701883087`*^9, 3.897368570326247*^9}, {
   3.897381529104519*^9, 3.897381529970161*^9}, {3.898273060776016*^9, 
   3.898273064225642*^9}, {3.898273116317711*^9, 3.8982731228507385`*^9}, {
   3.898273174825881*^9, 3.8982731767069063`*^9}, {3.898345192018721*^9, 
   3.8983452086115437`*^9}, {3.8983452467785397`*^9, 3.898345247191595*^9}, {
   3.898345995089747*^9, 3.8983460285729494`*^9}, {3.8983660794941964`*^9, 
   3.8983660807645407`*^9}, 3.899020135334076*^9, 3.899386725428661*^9, {
   3.9010256943624487`*^9, 3.9010256948467817`*^9}, {3.911292641447508*^9, 
   3.911292641900476*^9}, {3.913296545596274*^9, 3.9132965470540857`*^9}, {
   3.913298350880374*^9, 3.9132983592874126`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"bd5be895-f812-40b8-b914-6c2a1ce29960"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Initialization and Setup", "Section",
 CellChangeTimes->{{3.8866054675650663`*^9, 3.8866054680045533`*^9}, {
  3.8983187226370153`*^9, 3.8983187267362995`*^9}, {3.8983449908587875`*^9, 
  3.898344995162737*^9}, {3.8983457666250334`*^9, 
  3.8983457780218773`*^9}},ExpressionUUID->"c74e8a86-9c7d-4fe0-8a21-\
5b2b4393b1c9"],

Cell[CellGroupData[{

Cell["Symbolize all Variables with Special Appearance", "Subsection",
 CellChangeTimes->{{3.886606834942309*^9, 3.886606844785334*^9}, {
   3.886664191038972*^9, 3.8866641962617702`*^9}, 3.8983187958081303`*^9, {
   3.898345171167728*^9, 3.898345185571065*^9}, 
   3.901008325539898*^9},ExpressionUUID->"25cd3095-56fb-4bac-b7de-\
d67205534a7d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Load", " ", "notation", " ", "package", " ", "for", " ", "pretty", " ", 
    "variables"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"Needs", "[", "\"\<Notation`\>\"", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SymbolQ", " ", "=", " ", 
     RowBox[{
      RowBox[{"MatchQ", "[", 
       RowBox[{"#", ",", " ", 
        RowBox[{"t_Symbol", " ", "/;", " ", 
         RowBox[{"AtomQ", "[", "t", "]"}]}]}], "]"}], " ", "&"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"SymbolQ", "[", 
       SubscriptBox["guard", "symbolize"], "]"}], ",", "\n", 
      RowBox[{"Print", "[", "\"\<Special symbols already set up\>\"", "]"}], 
      ",", "\n", 
      RowBox[{"(*", 
       RowBox[{"Else", ":", " ", 
        RowBox[{
        "Symbolize", " ", "variables", " ", "with", " ", "special", " ", 
         "appearance"}]}], "*)"}], "\n", 
      RowBox[{
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["guard", "symbolize"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"Elliptic", " ", "curve"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["a", "EC"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["b", "EC"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["h", "EC"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["n", "EC"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"(*", "generators", "*)"}], "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["g", "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "public", " ", "input", " ", "and", " ", "output", " ", "values", " ",
          "to", " ", "shuffle", " ", "argument"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["h", "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["b", "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["c", "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["d", "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           RowBox[{"h", "'"}], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           RowBox[{"b", "'"}], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           RowBox[{"c", "'"}], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           RowBox[{"d", "'"}], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SuperscriptBox["h", "*"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SuperscriptBox["b", "*"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SuperscriptBox["c", "*"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SuperscriptBox["d", "*"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"helper", " ", "scalars", " ", "and", " ", "vectors"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubsuperscriptBox["v", "0", "n"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubsuperscriptBox["v", "1", "n"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubsuperscriptBox["v", "2", "n"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SuperscriptBox["y", "n"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubsuperscriptBox["y", "z", 
            RowBox[{"n", "-", "1"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SuperscriptBox["y", 
           RowBox[{"-", "1"}]]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SuperscriptBox["y", 
            RowBox[{"-", "n"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"shuffle", " ", "protocol"}], "*)"}], "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["k", "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["k", "^"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["k", "_"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["A", 
           RowBox[{"R", ",", "h"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["A", 
           RowBox[{"R", ",", "b"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["A", 
           RowBox[{"R", ",", "c"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["A", 
           RowBox[{"R", ",", "d"}]]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["A", "L"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["S", "L"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["S", 
           RowBox[{"R", ",", "h"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["S", 
           RowBox[{"R", ",", "b"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["S", 
           RowBox[{"R", ",", "c"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["S", 
           RowBox[{"R", ",", "d"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["l", "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["r", "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Tau]", "x"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["T", "3"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["T", "5"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Delta]", "yz"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["t", "^"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Mu]", "h"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Mu]", "b"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Mu]", "c"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Mu]", "d"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubsuperscriptBox["P", "h", "+"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubsuperscriptBox["P", "b", "+"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubsuperscriptBox["P", "c", "+"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubsuperscriptBox["P", "d", "+"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"PR", " ", "protocol"}], "*)"}], "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["A", "W"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["S", "W"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Delta]", "yzw"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["t", 
           RowBox[{"0", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["t", 
           RowBox[{"1", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["t", 
           RowBox[{"2", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["l", "W"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["r", "W"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["T", 
           RowBox[{"1", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["T", 
           RowBox[{"2", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["t", "W"], "^"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Mu]", "W"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubsuperscriptBox["P", "W", "+"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", "inspection", "*)"}], "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SuperscriptBox["\[Pi]", 
           RowBox[{"-", "1"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Symbolize", "[", 
          TemplateBox[{
            SubscriptBox["\[Sigma]", "V"]},
           "NotationTemplateTag"], "]"}], ";"}], "*)"}], "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Sigma]", "W"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["a", "L"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["a", "R"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["s", "L"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["s", "R"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Rho]", "h"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Rho]", "b"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Rho]", "c"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["l", "0"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["l", "2"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["r", "1"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["r", "3"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["t", "3"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["t", "5"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Tau]", "3"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Tau]", "5"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"inspection", ":", " ", "PR"}], "*)"}], "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["a", 
            RowBox[{"L", ",", "W"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["a", 
            RowBox[{"R", ",", "W"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["s", 
            RowBox[{"L", ",", "W"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["s", 
            RowBox[{"R", ",", "W"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Alpha]", "W"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Beta]", "W"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Gamma]", "W"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["l", 
            RowBox[{"0", ",", "W"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["l", 
            RowBox[{"1", ",", "W"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["r", 
            RowBox[{"0", ",", "W"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["r", 
            RowBox[{"1", ",", "W"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Tau]", 
           RowBox[{"1", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Tau]", 
           RowBox[{"2", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Tau]", 
           RowBox[{"x", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"inner", " ", "product", " ", "protocol"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["n", "2"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["n", "pow2"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SuperscriptBox["g", "'"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["u", "IP"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["n", "0"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["k", "2"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["k", "0"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubsuperscriptBox["P", "h", "*"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubsuperscriptBox["P", "b", "*"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubsuperscriptBox["P", "c", "*"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubsuperscriptBox["P", "d", "*"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubsuperscriptBox["P", "W", "*"]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubsuperscriptBox["P", "h", "'"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubsuperscriptBox["P", "b", "'"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubsuperscriptBox["P", "c", "'"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubsuperscriptBox["P", "d", "'"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubsuperscriptBox["P", "W", "'"]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "h"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "b"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "c"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "d"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["P", 
           RowBox[{"next", ",", "h"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["P", 
           RowBox[{"next", ",", "b"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["P", 
           RowBox[{"next", ",", "c"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["P", 
           RowBox[{"next", ",", "d"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["P", 
           RowBox[{"next", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["G", "2"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["G", "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["G", "lo"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["G", "hi"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["G", "next"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["H", "2"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["H", "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["H", "lo"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["H", "hi"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["H", "next"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["B", "2"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["B", "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["B", "lo"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["B", "hi"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["B", "next"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["C", "2"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["C", "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["C", "lo"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["C", "hi"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["C", "next"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["D", "2"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["D", "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["D", "lo"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["D", "hi"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["D", "next"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["L", "h"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["L", "b"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["L", "c"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["L", "d"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["L", "W"]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["L", 
           RowBox[{"2", ",", "h"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["L", 
           RowBox[{"2", ",", "b"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["L", 
           RowBox[{"2", ",", "c"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["L", 
           RowBox[{"2", ",", "d"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["L", 
           RowBox[{"2", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["R", "h"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["R", "b"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["R", "c"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["R", "d"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["R", "W"]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["R", 
           RowBox[{"2", ",", "h"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["R", 
           RowBox[{"2", ",", "b"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["R", 
           RowBox[{"2", ",", "c"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["R", 
           RowBox[{"2", ",", "d"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["R", 
           RowBox[{"2", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["u", "2"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SuperscriptBox["u", 
           RowBox[{"-", "1"}]]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["a", "0"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["b", "0"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["c", "0"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["a", 
           RowBox[{"0", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["b", 
           RowBox[{"0", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["c", 
           RowBox[{"0", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["G", "0"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["H", "0"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["B", "0"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["C", "0"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["D", "0"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["P", 
           RowBox[{"0", ",", "h"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["P", 
           RowBox[{"0", ",", "b"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["P", 
           RowBox[{"0", ",", "c"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["P", 
           RowBox[{"0", ",", "d"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["P", 
           RowBox[{"0", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\n", 
       RowBox[{"(*", "inspection", "*)"}], "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["a", "IP"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["a", "lo"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["a", "hi"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["b", "IP"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["b", "lo"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["b", "hi"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["a", "W"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["a", 
            RowBox[{"lo", ",", "W"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["a", 
            RowBox[{"hi", ",", "W"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["b", "W"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["b", 
            RowBox[{"lo", ",", "W"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["b", 
            RowBox[{"hi", ",", "W"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
       "Print", "[", "\"\<Finished setting up special symbols\>\"", "]"}]}]}],
      "\n", "]"}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.884334386795622*^9, 3.8843343882889547`*^9}, 
   3.884343749486403*^9, {3.88436677734769*^9, 3.8843668222643137`*^9}, {
   3.884760589640399*^9, 3.884760589897274*^9}, {3.884788590853054*^9, 
   3.884788632244547*^9}, {3.886666245391965*^9, 3.886666274476385*^9}, {
   3.886666306940471*^9, 3.8866663675968323`*^9}, {3.8867523175649204`*^9, 
   3.886752325691471*^9}, {3.887618228762849*^9, 3.8876182294750905`*^9}, {
   3.892279925961891*^9, 3.892279926326527*^9}, {3.892280690629448*^9, 
   3.8922806918605337`*^9}, {3.8923454903394203`*^9, 
   3.8923454907190027`*^9}, {3.892345552161003*^9, 3.8923455889465837`*^9}, {
   3.892345627731041*^9, 3.89234567517454*^9}, {3.892345758102009*^9, 
   3.892345770925775*^9}, {3.8923460408281517`*^9, 3.8923460455700083`*^9}, {
   3.892346133907387*^9, 3.892346134517128*^9}, 3.89234632113732*^9, {
   3.892346419041286*^9, 3.892346443339794*^9}, {3.892346478387952*^9, 
   3.892346514723428*^9}, {3.892346858407831*^9, 3.8923468587785378`*^9}, 
   3.892346920619217*^9, 3.8923469899212847`*^9, {3.89234833874372*^9, 
   3.8923483393542967`*^9}, {3.892348395802351*^9, 3.892348419056003*^9}, {
   3.892348581558551*^9, 3.892348583318789*^9}, {3.892350581655912*^9, 
   3.892350612422696*^9}, 3.892350732164505*^9, 3.89235088547827*^9, {
   3.892350923849394*^9, 3.892350933298699*^9}, 3.892350974560288*^9, {
   3.892354562966013*^9, 3.892354564580812*^9}, {3.892362722794704*^9, 
   3.892362756760579*^9}, {3.892364791767909*^9, 3.892364800253626*^9}, {
   3.892392987637104*^9, 3.892393058269779*^9}, {3.8924662774293528`*^9, 
   3.892466289052697*^9}, {3.892466965973114*^9, 3.892466994450555*^9}, {
   3.892477508870323*^9, 3.892477513788151*^9}, 3.892480805038361*^9, {
   3.892481269231258*^9, 3.892481287402438*^9}, {3.892486895249126*^9, 
   3.892486899420374*^9}, {3.8983188118761706`*^9, 3.8983188123491077`*^9}, {
   3.8983354707423725`*^9, 3.898335552853404*^9}, 3.898335588096368*^9, {
   3.898340387036672*^9, 3.8983404141520166`*^9}, {3.8983404498626313`*^9, 
   3.8983404499581504`*^9}, {3.898345193786545*^9, 3.898345194265798*^9}, 
   3.8983654780516806`*^9, {3.899018664047853*^9, 3.8990187321699133`*^9}, {
   3.8990187895980806`*^9, 3.8990188321282063`*^9}, {3.899018886219462*^9, 
   3.8990189601269207`*^9}, {3.899265303538189*^9, 3.8992653047178893`*^9}, 
   3.899386678904318*^9, {3.911294347257458*^9, 3.9112943701918974`*^9}, 
   3.911396828727998*^9, {3.9113968787463517`*^9, 3.9113968827528257`*^9}, {
   3.911396923769388*^9, 3.9113970129691577`*^9}, {3.9113971073712606`*^9, 
   3.9113971876452036`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"63be34d3-b7cc-49c1-a912-08703a578daf"],

Cell[BoxData["\<\"Finished setting up special symbols\"\>"], "Print",
 CellChangeTimes->{3.9139489377384167`*^9},
 CellLabel->
  "During evaluation of \
In[23]:=",ExpressionUUID->"83af8319-0061-4a4c-997f-5b4f730f3f05"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Apply Configuration, Load Libraries, Set up Network and Communication\
\>", "Subsection",
 CellChangeTimes->{{3.8866069350802546`*^9, 
  3.8866069794922123`*^9}},ExpressionUUID->"506f9cdd-398a-4d3d-9cf4-\
ee49ef563eb4"],

Cell["Re-evaluate after changes to configuration", "Text",
 CellChangeTimes->{{3.886606989391242*^9, 3.8866069976059265`*^9}, {
  3.8866073815501127`*^9, 
  3.8866073936791477`*^9}},ExpressionUUID->"3e611f6f-d9aa-4550-b53b-\
67945263bf60"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Check", " ", "Configuration"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{"fiatShamirSingleKernel", ",", "\n", "\t", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{"interactive", ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<fiatShamirSingleKernel only works with Fiat-Shamir activated, \
but it is not. Forcing it.\>\"", "]"}], ";", "\n", "\t\t", 
          RowBox[{"interactive", " ", "=", " ", "False"}], ";"}]}], "\n", 
        "\t", "]"}], ";"}]}], "\n", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Load", " ", "ElGamal", " ", "library"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Looking for SchnorrPrimes library: \>\"", "<>", 
      RowBox[{"TextString", "[", 
       RowBox[{"FindFile", "[", "\"\<SchnorrPrimes`\>\"", "]"}], "]"}]}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Needs", "[", "\"\<SchnorrPrimes`\>\"", "]"}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Load", " ", "Elliptic", " ", "Curve", " ", "library"}], "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Looking for elliptic curve library with overloaded + and * \
operators (ECOverloaded): \>\"", "<>", 
      RowBox[{"TextString", "[", 
       RowBox[{"FindFile", "[", "\"\<ECOverloaded`\>\"", "]"}], "]"}]}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Needs", "[", "\"\<ECOverloaded`\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Load", " ", "Sigma", " ", "Tools", " ", "library"}], "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Looking for Sigma Protocol Tools library (SigmaTools): \>\"", "<>", 
      
      RowBox[{"TextString", "[", 
       RowBox[{"FindFile", "[", "\"\<SigmaTools`\>\"", "]"}], "]"}]}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Needs", "[", "\"\<SigmaTools`\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Fiat", "-", "Shamir"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{"interactive", ",", "\n", "\t", 
      RowBox[{
       RowBox[{
       "semanticsOfRandomChallenge", " ", "=", " ", 
        "\"\<Random Challenge\>\""}], ";", "\n", "\t", 
       RowBox[{
       "Print", "[", 
        "\"\<Interactive mode. Sending challenge values to prover. Not using \
Fiat-Shamir heuristic.\>\"", "]"}]}], ",", "\n", 
      RowBox[{"(*", "Else", "*)"}], "\n", "\t", 
      RowBox[{
       RowBox[{
       "semanticsOfRandomChallenge", " ", "=", " ", 
        "\"\<Fiat-Shamir transform\\nof Random Challenge\>\""}], ";", "\n", 
       "\t", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Looking for Fiat-Shamir library (FiatShamir): \>\"", "<>", 
         RowBox[{"TextString", "[", 
          RowBox[{"FindFile", "[", "\"\<FiatShamir`\>\"", "]"}], "]"}]}], 
        "]"}], ";", "\[IndentingNewLine]", "\t", 
       RowBox[{"Needs", "[", "\"\<FiatShamir`\>\"", "]"}], ";", "\n", "\t", 
       RowBox[{
       "Print", "[", 
        "\"\<Non-interactive mode. Using Fiat-Shamir heuristic.\>\"", 
        "]"}]}]}], "\[IndentingNewLine]", "]"}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Verification", " ", 
     RowBox[{"success", "/", "failure"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"VerificationSucceeded", "[", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"SendVerificationSucceeded", "[", "]"}], ";", "\n", "\t", 
       RowBox[{"Print", "[", "\"\<Verification succeeded.\>\"", "]"}]}]}], 
     "\n", "]"}]}], "\n", 
   RowBox[{
    RowBox[{"VerificationFailed", "[", "reason_String", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"SendVerificationFailed", "[", "reason", "]"}], ";", "\n", 
       "\t", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Verification failed: \>\"", "<>", "reason"}], "]"}], ";",
        "\n", "\t", 
       RowBox[{
       "FrontEndTokenExecute", "[", "\"\<EvaluatorAbort\>\"", "]"}]}]}], "\n",
      "]"}]}], "\n", 
   RowBox[{"(*", "Inspection", "*)"}], "\n", 
   RowBox[{
    RowBox[{"InspectionSucceeded", "[", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"SendInspectionSucceeded", "[", "]"}], ";", "\n", "\t", 
       RowBox[{"Print", "[", "\"\<Inspection succeeded.\>\"", "]"}]}]}], "\n",
      "]"}]}], "\n", 
   RowBox[{
    RowBox[{"InspectionFailed", "[", "reason_String", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"SendInspectionFailed", "[", "reason", "]"}], ";", "\n", "\t", 
       
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Inspection failed: \>\"", "<>", "reason"}], "]"}], 
       ";"}]}], "\n", "]"}]}], "\n", 
   RowBox[{"(*", 
    RowBox[{"General", " ", "Error"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Error", "[", 
     RowBox[{"reason_", ":", "\"\<\>\""}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"reason", "==", "\"\<\>\""}], ",", "\"\<Error.\>\"", ",", 
          RowBox[{"\"\<Error: \>\"", "<>", "reason"}]}], "]"}], "]"}], ";", 
       "\n", "\t", 
       RowBox[{
       "FrontEndTokenExecute", "[", "\"\<EvaluatorAbort\>\"", "]"}]}]}], "\n",
      "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Random", " ", "Number", " ", "Generator"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"SetRNGMethod", "[", "rngMethod", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SetFixedRandomSeeds", "[", "False", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SeedRandom", "[", 
     RowBox[{"Method", "->", "rngMethod"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetStateMachineVerbosity", "[", "stateMachineVerbosity", "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetFiatShamirVerbosity", "[", "fiatShamirVerbosity", "]"}], 
    ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Communication", " ", "setup"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"SetMyRole", "[", 
     RowBox[{"If", "[", 
      RowBox[{
      "interactive", ",", "\"\<InteractiveVerifier\>\"", ",", 
       "\"\<Verifier\>\""}], "]"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SetMyId", "[", "myId", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetRoom", "[", "room", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SetInspection", "[", "inspectionEnabled", "]"}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Network", ":", " ", 
     RowBox[{"set", " ", "up", " ", "connection", " ", "to", " ", 
      RowBox[{"router", " ", "/", " ", 
       RowBox[{"don", "'"}]}], "t", " ", "force", " ", 
      RowBox[{"reconnection", " ", "/", " ", "force"}], " ", 
      "authorization"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"router", " ", "=", " ", 
     RowBox[{"ConnectToRouter", "[", 
      RowBox[{"routerConfig", ",", " ", "False", ",", " ", "True"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"StateMachineClear", "[", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{"interactive", ",", "\n", "\t", 
      RowBox[{"(*", "Interactive", "*)"}], "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{"Network", ":", " ", 
        RowBox[{
        "join", " ", "room", " ", "for", " ", "interactive", " ", 
         "verification"}]}], "*)"}], "\n", "\t", 
      RowBox[{
       RowBox[{"roomConfig", " ", "=", " ", 
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{"\"\<password\>\"", "->", "roomPassword"}], ",", "\n", 
          "\t\t", 
          RowBox[{"\"\<ownership_type\>\"", "->", "\"\<creator\>\""}], ",", 
          "\n", "\t\t", 
          RowBox[{"\"\<ids_allowed\>\"", "->", 
           RowBox[{"{", 
            RowBox[{"proverId", ",", " ", "myId"}], "}"}]}], ",", "\n", 
          "\t\t", 
          RowBox[{"\"\<role_restrictions\>\"", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"proverId", "->", "\"\<Prover\>\""}], ",", " ", 
             RowBox[{"myId", "->", "\"\<InteractiveVerifier\>\""}]}], "}"}]}],
           ",", "\n", "\t\t", 
          RowBox[{"\"\<creator\>\"", "->", "proverId"}], ",", "\n", "\t\t", 
          RowBox[{"\"\<wait_if_non_existing\>\"", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<timeout\>\"", "->", "90"}], "}"}]}], ",", "\n", 
          "\t\t", 
          RowBox[{"\"\<external_keys\>\"", "->", 
           RowBox[{"{", "\n", "\t\t\t", 
            RowBox[{
            "\"\<_verification_result_\>\"", ",", "\n", "\t\t\t", 
             "\"\<_inspection_request_\>\"", ",", "\n", "\t\t\t", 
             "\"\<_inspection_result_\>\""}], "\n", "\t\t", "}"}]}]}], "\n", 
         "\t", "}"}]}], ";", "\n", "\t", 
       RowBox[{"roomInfo", " ", "=", " ", 
        RowBox[{"JoinRoomAndWaitUntilComplete", "[", "roomConfig", "]"}]}], 
       ";", "\[IndentingNewLine]", "\t", 
       RowBox[{"memberIds", " ", "=", " ", 
        RowBox[{"roomInfo", "[", "\"\<members\>\"", "]"}]}], ";", "\n", "\t", 
       
       RowBox[{"(*", 
        RowBox[{"Verify", " ", "room", " ", "and", " ", "members"}], "*)"}], 
       "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "memberIds", "]"}], "!=", "2"}], ",", "\n", 
         "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Assertion failure: Expecting two members in room '\>\"", "<>", 
           "room", "<>", "\"\<' but members are \>\"", "<>", 
           RowBox[{"ToString", "[", "memberIds", "]"}]}], "]"}], ",", "\n", 
         "\t", 
         RowBox[{"(*", 
          RowBox[{"Else", " ", "If"}], "*)"}], "\n", "\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"!", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"memberIds", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "==", "myId"}], " ", "&&", 
               " ", 
               RowBox[{
                RowBox[{"memberIds", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "==", "proverId"}]}], 
              ")"}]}], " ", "&&", " ", 
            RowBox[{"!", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"memberIds", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "==", "proverId"}], " ", "&&",
                " ", 
               RowBox[{
                RowBox[{"memberIds", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "==", "myId"}]}], ")"}]}]}], 
           ",", "\n", "\t\t", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Assertion failure: Expecting to be member of room '\>\"", "<>",
              "room", "<>", "\"\<' but members are \>\"", "<>", 
             RowBox[{"ToString", "[", "memberIds", "]"}]}], "]"}]}], "\n", 
          "\t", "]"}]}], "]"}]}]}], "\n", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"StateMachineSave", "[", "\"\<Init\>\"", "]"}], ";"}]}]}]], "Code",\

 CellChangeTimes->{{3.88212601182014*^9, 3.882126105437923*^9}, {
   3.882126157386588*^9, 3.8821262881927834`*^9}, {3.882126347034425*^9, 
   3.8821264131165047`*^9}, {3.882126444112059*^9, 3.88212651495254*^9}, {
   3.882126562810522*^9, 3.882126675292706*^9}, {3.8821267290386257`*^9, 
   3.882126819147428*^9}, {3.882126947730332*^9, 3.882127010581114*^9}, {
   3.882127040826435*^9, 3.882127057605983*^9}, {3.882127094040963*^9, 
   3.8821271016343327`*^9}, {3.8821272281874533`*^9, 3.88212725584726*^9}, {
   3.8821273345477467`*^9, 3.8821277273460207`*^9}, {3.882127804152906*^9, 
   3.882127955971611*^9}, {3.882127996573687*^9, 3.8821280294834843`*^9}, {
   3.882128064190221*^9, 3.882128500497726*^9}, {3.8821285458515997`*^9, 
   3.882128551121953*^9}, {3.882128645119608*^9, 3.882128697756805*^9}, {
   3.882128769795108*^9, 3.882128905724498*^9}, {3.882128940563304*^9, 
   3.882128961288136*^9}, {3.882128998404777*^9, 3.882129334727005*^9}, {
   3.882129383041806*^9, 3.882129388267255*^9}, {3.8821294575951157`*^9, 
   3.8821296685807247`*^9}, {3.882129707929736*^9, 3.88212971400136*^9}, {
   3.8821298003342123`*^9, 3.882129804360395*^9}, {3.882129851264415*^9, 
   3.882129878662881*^9}, {3.882129913806769*^9, 3.882129916183968*^9}, {
   3.882129961387993*^9, 3.882129963501919*^9}, {3.882129998273814*^9, 
   3.882130014967355*^9}, {3.882130050059778*^9, 3.88213018288277*^9}, {
   3.8821302243218117`*^9, 3.8821302342603073`*^9}, {3.882130289200131*^9, 
   3.882130334694265*^9}, {3.8821304327092857`*^9, 3.8821309157371197`*^9}, {
   3.88213106030072*^9, 3.882131078862301*^9}, {3.882131943756884*^9, 
   3.882131994432254*^9}, {3.882132687376068*^9, 3.882132704169653*^9}, {
   3.882132772122848*^9, 3.882132801348428*^9}, {3.882132834644919*^9, 
   3.88213292892269*^9}, {3.882132960827092*^9, 3.8821331366154757`*^9}, {
   3.882133167317733*^9, 3.882133176348699*^9}, {3.882133211890716*^9, 
   3.8821334786210938`*^9}, {3.882133669319498*^9, 3.882133682642777*^9}, {
   3.882133728801046*^9, 3.8821337859984493`*^9}, {3.882133912459515*^9, 
   3.8821340073172293`*^9}, {3.882134045139497*^9, 3.882134050432169*^9}, {
   3.882134082761634*^9, 3.88213414806208*^9}, {3.882134182987084*^9, 
   3.882134349038516*^9}, {3.882134399709898*^9, 3.88213462278892*^9}, {
   3.882134657003234*^9, 3.8821347375948*^9}, {3.882134838699885*^9, 
   3.882134840162394*^9}, {3.882134891229196*^9, 3.882134919664143*^9}, {
   3.88213513519214*^9, 3.882135177442281*^9}, {3.8821352293551807`*^9, 
   3.8821352647448874`*^9}, {3.882135301985763*^9, 3.88213530963519*^9}, {
   3.882135347440674*^9, 3.882135855423963*^9}, {3.8821359902787237`*^9, 
   3.8821365902631702`*^9}, {3.882136625983577*^9, 3.8821366744417257`*^9}, {
   3.8821367205193443`*^9, 3.8821367462664967`*^9}, {3.8821367930365963`*^9, 
   3.8821368440809517`*^9}, {3.882136948002544*^9, 3.882137045156837*^9}, {
   3.882137079350708*^9, 3.882137103427137*^9}, {3.88213725273446*^9, 
   3.882137267955884*^9}, {3.8821373140744257`*^9, 3.882137376051867*^9}, {
   3.88213740685463*^9, 3.8821374734788933`*^9}, {3.882137523354168*^9, 
   3.8821376216534767`*^9}, {3.882137655452276*^9, 3.882137709504652*^9}, {
   3.882137775585711*^9, 3.882137795352852*^9}, {3.882137829792243*^9, 
   3.882137845806089*^9}, {3.8821378843051147`*^9, 3.882138050976985*^9}, {
   3.882138120220517*^9, 3.882138225573895*^9}, {3.882138303173203*^9, 
   3.882138306583927*^9}, {3.882138360150798*^9, 3.8821384599145184`*^9}, {
   3.882139005002782*^9, 3.882139011965911*^9}, {3.882139294660211*^9, 
   3.8821393492309637`*^9}, {3.8821393940802402`*^9, 3.882139396282548*^9}, {
   3.88213946757045*^9, 3.882139522047206*^9}, {3.882139571507119*^9, 
   3.8821396131848307`*^9}, {3.882139838397388*^9, 3.882139864389881*^9}, 
   3.882139894900915*^9, {3.882140055690908*^9, 3.8821400659250917`*^9}, {
   3.882140147483499*^9, 3.8821402017157383`*^9}, {3.8821402375914173`*^9, 
   3.882140270852751*^9}, {3.882140326525936*^9, 3.882140343496992*^9}, {
   3.8821404691451178`*^9, 3.8821405173388987`*^9}, {3.882140550235352*^9, 
   3.882140575568034*^9}, 3.882192065123015*^9, {3.882193500836578*^9, 
   3.882193505309998*^9}, {3.88219408981535*^9, 3.882194095053145*^9}, {
   3.882194128590591*^9, 3.8821941364948797`*^9}, {3.882194217053501*^9, 
   3.8821942781384983`*^9}, {3.88219431870242*^9, 3.882194356130012*^9}, {
   3.882194512523588*^9, 3.8821946504298763`*^9}, {3.882194713373938*^9, 
   3.882194749056649*^9}, {3.882194788145919*^9, 3.8821947941284037`*^9}, {
   3.882194863614307*^9, 3.882194897791012*^9}, {3.882194937799952*^9, 
   3.8821949831747713`*^9}, {3.88219518989085*^9, 3.882195232556176*^9}, {
   3.882195264927945*^9, 3.882195305030101*^9}, {3.882195473977054*^9, 
   3.882195588740888*^9}, {3.882196298735532*^9, 3.882196388601799*^9}, {
   3.882196575164035*^9, 3.882196663090411*^9}, {3.882196753131729*^9, 
   3.882196864038718*^9}, {3.882196895186059*^9, 3.8821969732970343`*^9}, {
   3.882197005384575*^9, 3.882197014065464*^9}, {3.882197222379483*^9, 
   3.882197279956543*^9}, {3.882197321073032*^9, 3.88219734545315*^9}, {
   3.882197405250618*^9, 3.882197406625124*^9}, 3.882197441284197*^9, {
   3.882197476183638*^9, 3.8821974796858673`*^9}, {3.882197524958724*^9, 
   3.882197613332275*^9}, {3.882197653683772*^9, 3.882197655571095*^9}, {
   3.882197757713047*^9, 3.882197909499144*^9}, {3.882197974394305*^9, 
   3.882198093077166*^9}, {3.882198153477728*^9, 3.8821983767566338`*^9}, {
   3.882198423858922*^9, 3.8821984436240387`*^9}, {3.882198483389039*^9, 
   3.882198490776629*^9}, {3.882198573091659*^9, 3.8821987458584146`*^9}, {
   3.882198777077024*^9, 3.882198915480092*^9}, {3.882198974672318*^9, 
   3.8821990383767157`*^9}, {3.882199121623045*^9, 3.882199146129395*^9}, {
   3.8821991791272297`*^9, 3.8821992083389883`*^9}, {3.882199357608898*^9, 
   3.882199482581058*^9}, {3.882199548910131*^9, 3.882199569238881*^9}, {
   3.8821997303771133`*^9, 3.882199753490342*^9}, {3.8821999072697268`*^9, 
   3.882199914978574*^9}, {3.882200035150516*^9, 3.882200036674315*^9}, {
   3.8822001062569437`*^9, 3.882200110675108*^9}, {3.882200299615374*^9, 
   3.882200450429554*^9}, {3.8822004851259117`*^9, 3.882200521488659*^9}, {
   3.882200552873735*^9, 3.882200568833187*^9}, {3.882200599951137*^9, 
   3.882200724186326*^9}, {3.882200960450082*^9, 3.882200975507918*^9}, {
   3.8822010589071617`*^9, 3.882201061279714*^9}, {3.882201264763714*^9, 
   3.882201270802184*^9}, {3.882201449713717*^9, 3.882201573407618*^9}, {
   3.8822016379086523`*^9, 3.8822016604078503`*^9}, {3.882201707386568*^9, 
   3.882201750424069*^9}, {3.882201788236005*^9, 3.882201856949258*^9}, {
   3.88220190270993*^9, 3.882201910190909*^9}, {3.882202009342135*^9, 
   3.882202100471319*^9}, {3.882202143186777*^9, 3.882202170659362*^9}, {
   3.882202281161335*^9, 3.882202311202969*^9}, {3.882202350832992*^9, 
   3.882202503318931*^9}, {3.8822025493681726`*^9, 3.8822026842451363`*^9}, 
   3.882202809313452*^9, {3.882202966285385*^9, 3.88220310284501*^9}, {
   3.8822031373788013`*^9, 3.8822031669743032`*^9}, {3.882203653571155*^9, 
   3.882203798306149*^9}, {3.882203841062583*^9, 3.882203935481428*^9}, {
   3.882203995085587*^9, 3.88220417276462*^9}, {3.882204221448368*^9, 
   3.882204271944983*^9}, {3.882204330885243*^9, 3.8822043812111063`*^9}, {
   3.8822044665109797`*^9, 3.882204535570982*^9}, {3.8822045787320843`*^9, 
   3.8822045928988237`*^9}, {3.882204626653207*^9, 3.8822046278348503`*^9}, {
   3.882204692316037*^9, 3.882204736759535*^9}, {3.882204770043853*^9, 
   3.882204792252318*^9}, {3.882204833234228*^9, 3.882204835599333*^9}, {
   3.882204866617132*^9, 3.882204892534419*^9}, {3.882204993032811*^9, 
   3.882205064456547*^9}, {3.8822051470975447`*^9, 3.882205319885234*^9}, {
   3.8822054657452106`*^9, 3.88220550148939*^9}, {3.882205604795354*^9, 
   3.8822057442630167`*^9}, {3.88220588235357*^9, 3.882205945903767*^9}, {
   3.882206097780099*^9, 3.8822061598611307`*^9}, {3.882206216582226*^9, 
   3.882206283418428*^9}, {3.882206335611457*^9, 3.882206438347677*^9}, {
   3.8822064820853024`*^9, 3.882206649696603*^9}, {3.88220704257137*^9, 
   3.882207052469508*^9}, {3.8822071885645857`*^9, 3.8822071902655163`*^9}, {
   3.882207304099574*^9, 3.8822073186915417`*^9}, {3.882207394162148*^9, 
   3.882207432256916*^9}, {3.882207558318184*^9, 3.882207583102152*^9}, {
   3.882207629293126*^9, 3.8822076426471157`*^9}, {3.882208320929102*^9, 
   3.882208321796633*^9}, {3.882208413418886*^9, 3.8822084762528343`*^9}, {
   3.8822085528081303`*^9, 3.882208649565406*^9}, {3.882208808114996*^9, 
   3.8822088269163637`*^9}, {3.8822088840489893`*^9, 3.88220891203957*^9}, {
   3.882209027857005*^9, 3.8822090737269077`*^9}, {3.882209216838233*^9, 
   3.8822092814669113`*^9}, {3.882209341628975*^9, 3.8822093429322357`*^9}, {
   3.882209401877328*^9, 3.882209402436228*^9}, {3.8822095102964993`*^9, 
   3.88220951123901*^9}, {3.8822939301095943`*^9, 3.882293940456396*^9}, {
   3.8822940887207317`*^9, 3.882294129870932*^9}, {3.8822941779519787`*^9, 
   3.88229430343824*^9}, {3.882302234265407*^9, 3.882302264180707*^9}, {
   3.882302301201641*^9, 3.882302423234139*^9}, {3.882302466109255*^9, 
   3.8823024681858797`*^9}, {3.882302514123599*^9, 3.8823027779943533`*^9}, {
   3.8823028198289337`*^9, 3.882302821870695*^9}, {3.882302901556707*^9, 
   3.882303340344048*^9}, 3.882303634893717*^9, {3.8823036814048433`*^9, 
   3.882303698624256*^9}, {3.8823038886089163`*^9, 3.882303930384218*^9}, {
   3.882303968782867*^9, 3.882304025580078*^9}, {3.882304056098542*^9, 
   3.882304116972925*^9}, {3.8823042631793537`*^9, 3.882304271682087*^9}, {
   3.882304394979478*^9, 3.8823045285112753`*^9}, {3.8823045840537863`*^9, 
   3.8823046629241867`*^9}, {3.882304698811737*^9, 3.882304804712007*^9}, {
   3.8823048941072197`*^9, 3.882304957614531*^9}, {3.88230503651202*^9, 
   3.882305081427507*^9}, {3.882305135290264*^9, 3.882305180868849*^9}, {
   3.882305247740623*^9, 3.882305338739213*^9}, {3.882305469575721*^9, 
   3.882305548277141*^9}, {3.882305610510664*^9, 3.882305691044917*^9}, {
   3.882305752701919*^9, 3.882305830895217*^9}, {3.882305870296335*^9, 
   3.882305870992592*^9}, {3.8823061484074097`*^9, 3.882306196655452*^9}, {
   3.882306458035907*^9, 3.882306459775858*^9}, {3.882306752562751*^9, 
   3.882306826260364*^9}, {3.8823076230993357`*^9, 3.882307623618671*^9}, {
   3.882310864619494*^9, 3.882310969421712*^9}, {3.8823110090270844`*^9, 
   3.8823110943717537`*^9}, 3.8823111532314157`*^9, {3.88231140336876*^9, 
   3.88231140590866*^9}, 3.8823115322920303`*^9, {3.882311943154574*^9, 
   3.882311943626403*^9}, {3.882864986123872*^9, 3.882865078513582*^9}, {
   3.8828651379624453`*^9, 3.882865186090396*^9}, {3.8828652361198673`*^9, 
   3.88286539566438*^9}, {3.882865446621125*^9, 3.882865583023419*^9}, {
   3.882865974741119*^9, 3.882865980128611*^9}, {3.882867135014968*^9, 
   3.882867255469198*^9}, {3.882867289895159*^9, 3.8828674960602427`*^9}, {
   3.882867534588509*^9, 3.882867577131681*^9}, {3.8828678735837927`*^9, 
   3.882867899872834*^9}, {3.882867992464081*^9, 3.882868037005001*^9}, {
   3.8828681215749397`*^9, 3.882868122689673*^9}, {3.882870313564369*^9, 
   3.882870342233037*^9}, {3.882874266130307*^9, 3.8828743153057003`*^9}, {
   3.882874413510981*^9, 3.882874451592154*^9}, 3.882874521870805*^9, {
   3.882874552837023*^9, 3.8828745543549843`*^9}, {3.8828754114875717`*^9, 
   3.882875419400181*^9}, {3.882875487778812*^9, 3.882875489119706*^9}, {
   3.8828780800443707`*^9, 3.882878121994216*^9}, {3.8828781674077883`*^9, 
   3.882878290088257*^9}, {3.8828784184589367`*^9, 3.8828784253791533`*^9}, {
   3.88287853308856*^9, 3.882878575050109*^9}, {3.882878688600387*^9, 
   3.88287868905013*^9}, {3.882878731692284*^9, 3.882878751543413*^9}, {
   3.882878858430202*^9, 3.882878914649925*^9}, {3.8828790172084513`*^9, 
   3.8828791035032997`*^9}, {3.8828791746375637`*^9, 3.882879301297443*^9}, {
   3.882879431455205*^9, 3.882879435936301*^9}, {3.882879574660709*^9, 
   3.8828796113851967`*^9}, {3.88287966831327*^9, 3.882879790339419*^9}, {
   3.882879822874797*^9, 3.882879844027636*^9}, {3.8828798908910418`*^9, 
   3.882879923612228*^9}, {3.8828800567611628`*^9, 3.8828800726936617`*^9}, {
   3.882881282134593*^9, 3.882881335903575*^9}, {3.8828817586842747`*^9, 
   3.882881760439081*^9}, {3.8828818838164253`*^9, 3.8828818877891407`*^9}, {
   3.882881941774206*^9, 3.882881981073742*^9}, {3.8828820162511377`*^9, 
   3.882882018735437*^9}, {3.8828820943764553`*^9, 3.882882103247757*^9}, {
   3.882883564297489*^9, 3.8828835706719923`*^9}, {3.882883632110436*^9, 
   3.88288366365374*^9}, {3.8828923832778063`*^9, 3.882892388982342*^9}, {
   3.88289282704873*^9, 3.882892837296764*^9}, {3.8828929847638617`*^9, 
   3.882893021922858*^9}, {3.8828930699179792`*^9, 3.8828931999353313`*^9}, {
   3.882893258479357*^9, 3.882893330494035*^9}, {3.8828934014090014`*^9, 
   3.882893409574836*^9}, {3.8828960621133833`*^9, 3.882896135213361*^9}, {
   3.882896308474349*^9, 3.882896339534343*^9}, {3.882900212092536*^9, 
   3.882900217285266*^9}, {3.8829002987422867`*^9, 3.88290033861909*^9}, 
   3.882900454961732*^9, {3.882901937320882*^9, 3.8829019414404583`*^9}, {
   3.8829019928276653`*^9, 3.8829019955721893`*^9}, 3.882902102450321*^9, {
   3.882902252627213*^9, 3.882902261876905*^9}, {3.882902386951342*^9, 
   3.882902403819035*^9}, {3.882902435650567*^9, 3.882902516267696*^9}, {
   3.882903583423465*^9, 3.882903638518117*^9}, {3.882903679059396*^9, 
   3.882903727013197*^9}, {3.882904100994236*^9, 3.8829041013139*^9}, {
   3.882905887301301*^9, 3.882905935357439*^9}, {3.882906155451808*^9, 
   3.882906157210938*^9}, {3.8829429952390337`*^9, 3.882943064510337*^9}, {
   3.882945178866675*^9, 3.882945205869027*^9}, {3.882947281001225*^9, 
   3.882947281165937*^9}, {3.882952710945794*^9, 3.8829527179643297`*^9}, {
   3.882952836499731*^9, 3.882952871915497*^9}, {3.882952912259851*^9, 
   3.882952940517151*^9}, {3.882953012955618*^9, 3.882953034169532*^9}, {
   3.882953149639352*^9, 3.882953213516227*^9}, {3.882953249851203*^9, 
   3.88295325020431*^9}, {3.88295337814587*^9, 3.882953411816267*^9}, {
   3.883110966141296*^9, 3.883110966714332*^9}, {3.883113332777082*^9, 
   3.8831133336540117`*^9}, {3.88313023239769*^9, 3.8831302329584913`*^9}, {
   3.8831316756023407`*^9, 3.883131676335102*^9}, {3.883214004478293*^9, 
   3.883214010241516*^9}, {3.883214615148129*^9, 3.883214616234303*^9}, {
   3.88321497629558*^9, 3.883214988174963*^9}, {3.8832151344942827`*^9, 
   3.883215177625341*^9}, {3.88321525300345*^9, 3.883215279828981*^9}, {
   3.883218736911982*^9, 3.8832187820941067`*^9}, 3.883218814665265*^9, {
   3.883218924507181*^9, 3.883218940382181*^9}, {3.883218993640576*^9, 
   3.883219040388791*^9}, {3.883219375371291*^9, 3.8832193766608887`*^9}, {
   3.8832194492786913`*^9, 3.883219465057497*^9}, {3.883219505245916*^9, 
   3.883219505688088*^9}, {3.883220181560358*^9, 3.8832201818931513`*^9}, {
   3.883220446911151*^9, 3.8832204915348587`*^9}, {3.883220900213842*^9, 
   3.88322098873741*^9}, {3.883221021421081*^9, 3.88322103747652*^9}, {
   3.883224588147306*^9, 3.88322460749232*^9}, {3.883238825138562*^9, 
   3.883238839346238*^9}, {3.8832388746555433`*^9, 3.883238924302216*^9}, {
   3.8832391651505537`*^9, 3.883239209235908*^9}, {3.883506868986225*^9, 
   3.883506882771954*^9}, {3.883509552438151*^9, 3.88350955261209*^9}, {
   3.883518453461055*^9, 3.8835184554415007`*^9}, {3.883602036638248*^9, 
   3.883602045533318*^9}, {3.8837115147842417`*^9, 3.883711520388974*^9}, {
   3.88432516150415*^9, 3.8843251703982058`*^9}, {3.884334376400425*^9, 
   3.884334376500865*^9}, {3.884349647801095*^9, 3.8843496519377737`*^9}, {
   3.8847508970508127`*^9, 3.884750911254798*^9}, {3.884751410307897*^9, 
   3.884751414916923*^9}, {3.8847546495959177`*^9, 3.8847546595301313`*^9}, {
   3.884754696836896*^9, 3.8847547212070208`*^9}, {3.884754776542639*^9, 
   3.884754777608828*^9}, {3.884754808170369*^9, 3.884754824873966*^9}, {
   3.88475486423385*^9, 3.884754865066814*^9}, {3.88475494741825*^9, 
   3.884755082702667*^9}, {3.8847554323883057`*^9, 3.884755511308667*^9}, {
   3.884755641234149*^9, 3.884755692171859*^9}, {3.884755916509211*^9, 
   3.884755918633418*^9}, {3.884756142653103*^9, 3.884756156819991*^9}, {
   3.884756313640252*^9, 3.8847563141753397`*^9}, {3.884756905538703*^9, 
   3.8847569060417967`*^9}, {3.884757076794455*^9, 3.884757367736745*^9}, {
   3.884757428824686*^9, 3.884757486120605*^9}, {3.884757567639979*^9, 
   3.8847575803669567`*^9}, {3.8847580392001057`*^9, 3.884758039702713*^9}, {
   3.884759925811565*^9, 3.8847600819067307`*^9}, {3.8847606137276363`*^9, 
   3.8847606256668777`*^9}, {3.884761126655387*^9, 3.8847611273116417`*^9}, 
   3.884766664686741*^9, {3.8847667398044643`*^9, 3.88476675274926*^9}, {
   3.884766789222825*^9, 3.884766860410701*^9}, {3.884767436244617*^9, 
   3.884767438346272*^9}, {3.884781591028343*^9, 3.884781592873878*^9}, {
   3.8847850407251863`*^9, 3.88478507397093*^9}, {3.88478511341072*^9, 
   3.884785154371935*^9}, {3.884785471373972*^9, 3.884785477218648*^9}, {
   3.884785524364985*^9, 3.884785525028438*^9}, {3.884785734542274*^9, 
   3.884785764477461*^9}, {3.884786040372875*^9, 3.884786051982007*^9}, 
   3.884786090983922*^9, 3.8847861632883368`*^9, {3.884786314590458*^9, 
   3.8847863151538153`*^9}, {3.884788658116411*^9, 3.884788678909452*^9}, {
   3.8866664377222843`*^9, 3.886666544851368*^9}, {3.8866665782129354`*^9, 
   3.886666631685379*^9}, {3.886666686316366*^9, 3.886666791123341*^9}, {
   3.886666830227725*^9, 3.886666927320059*^9}, 3.886666970565131*^9, {
   3.8866670416052456`*^9, 3.8866670419582224`*^9}, {3.886672872302738*^9, 
   3.886672962963893*^9}, 3.8867384397672577`*^9, 3.8867384879776983`*^9, {
   3.8867393748611593`*^9, 3.8867393753089437`*^9}, {3.886739741631245*^9, 
   3.886739931830216*^9}, {3.8867399978634157`*^9, 3.886740029842416*^9}, {
   3.8867400811397066`*^9, 3.886740081261209*^9}, {3.8867404571287627`*^9, 
   3.886740496349411*^9}, {3.8867570029336214`*^9, 3.8867570398813615`*^9}, {
   3.8867950697843704`*^9, 3.8867950702791996`*^9}, {3.8874811416735663`*^9, 
   3.887481152200487*^9}, {3.8874836264000773`*^9, 3.887483647250373*^9}, {
   3.8874837619222555`*^9, 3.887483762586026*^9}, {3.887483888651024*^9, 
   3.8874838899050207`*^9}, {3.8874862339046984`*^9, 
   3.8874862422801037`*^9}, {3.887552078260474*^9, 3.887552100087748*^9}, {
   3.8875542709356823`*^9, 3.887554270990788*^9}, {3.887616238683051*^9, 
   3.8876164379795437`*^9}, {3.8876164789716444`*^9, 3.887616512098701*^9}, {
   3.887616547504154*^9, 3.8876165475450487`*^9}, {3.8876172853998036`*^9, 
   3.8876173303775268`*^9}, {3.887617505256896*^9, 3.8876175052898088`*^9}, {
   3.88761825786856*^9, 3.887618271101125*^9}, {3.8876353868195457`*^9, 
   3.88763538947156*^9}, {3.887638379751491*^9, 3.8876383802041836`*^9}, {
   3.8876440354306173`*^9, 3.887644035497656*^9}, {3.8876441015613527`*^9, 
   3.88764418204109*^9}, {3.8876442679612265`*^9, 3.8876442685362277`*^9}, {
   3.8876512495266623`*^9, 3.8876512730738087`*^9}, {3.8876525062914495`*^9, 
   3.8876525105114765`*^9}, {3.8876551560708447`*^9, 3.887655169117337*^9}, {
   3.887655246820306*^9, 3.8876552471935563`*^9}, {3.8896267761261625`*^9, 
   3.8896267791024084`*^9}, 3.8896283315461993`*^9, {3.889628403851149*^9, 
   3.889628406745517*^9}, {3.8896290795737925`*^9, 3.889629081031192*^9}, 
   3.889636056321641*^9, {3.88968007649861*^9, 3.889680077024232*^9}, {
   3.890888897927867*^9, 3.890888898054474*^9}, {3.891506443129631*^9, 
   3.891506444332466*^9}, 3.891506561713175*^9, {3.891506647981292*^9, 
   3.891506648953053*^9}, {3.891507266283657*^9, 3.891507268386525*^9}, {
   3.89150779211522*^9, 3.891507795570366*^9}, {3.8922786154391108`*^9, 
   3.892278676937008*^9}, {3.892353246104205*^9, 3.892353342818822*^9}, {
   3.892353406465047*^9, 3.892353407791018*^9}, {3.89235355174531*^9, 
   3.892353576254485*^9}, {3.8923574449125633`*^9, 3.8923574523833113`*^9}, {
   3.892357580065873*^9, 3.892357580379506*^9}, {3.892381397431959*^9, 
   3.8923814544002037`*^9}, {3.892381575066928*^9, 3.892381583789403*^9}, {
   3.8924761220810213`*^9, 3.89247612293467*^9}, {3.898317533330294*^9, 
   3.8983175722874193`*^9}, {3.898320357661272*^9, 3.8983205232835393`*^9}, {
   3.8983247581453037`*^9, 3.8983248058736734`*^9}, 3.898330488411863*^9, {
   3.8983435092276726`*^9, 3.8983435097028704`*^9}, {3.898345226525707*^9, 
   3.898345237419199*^9}, {3.8983471132816687`*^9, 3.898347119104511*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"57563dad-e424-45be-a527-b71718fddf77"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Looking for SchnorrPrimes library: \
C:\\\\Users\\\\Aaron\\\\AppData\\\\Roaming\\\\Mathematica\\\\Applications\\\\\
SchnorrPrimes.wl\"\>"], "Print",
 CellChangeTimes->{3.9139489378201513`*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"26a6cb33-42d3-4915-9cb8-e5107657fd73"],

Cell[BoxData["\<\"Looking for elliptic curve library with overloaded + and * \
operators (ECOverloaded): \
C:\\\\Users\\\\Aaron\\\\AppData\\\\Roaming\\\\Mathematica\\\\Applications\\\\\
ECOverloaded.wl\"\>"], "Print",
 CellChangeTimes->{3.9139489378421392`*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"19996cec-07dc-46c4-8a57-eb1906b594a1"],

Cell[BoxData["\<\"Looking for Sigma Protocol Tools library (SigmaTools): C:\\\
\\Users\\\\Aaron\\\\AppData\\\\Roaming\\\\Mathematica\\\\Applications\\\\\
SigmaTools.wl\"\>"], "Print",
 CellChangeTimes->{3.913948937915092*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"6ee7543f-3c06-4185-8315-b5f5762ef9a5"],

Cell[BoxData["\<\"Interactive mode. Sending challenge values to prover. Not \
using Fiat-Shamir heuristic.\"\>"], "Print",
 CellChangeTimes->{3.9139489379240913`*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"19c4f050-b0aa-4ddc-9be6-3ccd21974426"],

Cell[BoxData["\<\"Network connection to router:\"\>"], "Print",
 CellChangeTimes->{3.9139489412961555`*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"94d04716-4ad9-4300-829f-5f7ccb2ce55d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SocketObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             GeometricTransformationBox[{{{
                 FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                 FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                  FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                  FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                  FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                  FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                  FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                 FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                 FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                 FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
             ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
              BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Foreign IPAddress: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"5.189.143.94\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Foreign Port: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["25080", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"TCP\"", 
                    TagBox[
                    "\" (Client)\"", Deploy, DefaultBaseStyle -> "Deploy"]}, 
                   "RowDefault"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"752f5657-d717-4213-9093-25fb2d920a87\"", "SummaryItem"]}],
                "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             GeometricTransformationBox[{{{
                 FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                 FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                  FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                  FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                  FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                  FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                  FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                 FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                 FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                 FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
             ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
              BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Foreign IPAddress: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"5.189.143.94\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Foreign Port: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["25080", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"TCP\"", 
                    TagBox[
                    "\" (Client)\"", Deploy, DefaultBaseStyle -> "Deploy"]}, 
                   "RowDefault"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"752f5657-d717-4213-9093-25fb2d920a87\"", "SummaryItem"]}],
                "\[SpanFromLeft]", "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Endpoint: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "}"}], "SummaryItem"]}], "\[SpanFromLeft]", 
               "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SocketObject["752f5657-d717-4213-9093-25fb2d920a87"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Print",
 CellChangeTimes->{3.913948941323123*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"3f1435b9-cd47-4866-b6fe-d03123ee1556"],

Cell[BoxData["\<\"Authorizing, waiting for confirmation ...\"\>"], "Print",
 CellChangeTimes->{3.9139489415000267`*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"b53fca4c-4bcb-4d14-8775-e0c8d5f0a666"],

Cell[BoxData["\<\"Waiting to receive __authorize__ ...\"\>"], "Print",
 CellChangeTimes->{3.9139489415040245`*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"039d096f-9c88-4a8a-a64f-3a2aa40d15e8"],

Cell[BoxData["\<\"Handling Event: success: __authorize__ (Router): \
Authorization successful\"\>"], "Print",
 CellChangeTimes->{3.913948941507023*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"b13e9423-3fd1-4dc3-a69f-07b8a9eac1bc"],

Cell[BoxData["\<\"Sending \
message:\\nInteractiveVerifier@Alice-Shuffle-Ver:Router:BobsBPShuffle2:json:{\
\\\"__join_room__\\\":{\\\"password\\\":\\\"mediumBPShuffle\\\",\\\"ownership_\
type\\\":\\\"creator\\\",\\\"ids_allowed\\\":[\\\"Bob-Shuffle-Pro\\\",\\\"\
Alice-Shuffle-Ver\\\"],\\\"role_restrictions\\\":{\\\"Bob-Shuffle-Pro\\\":\\\"\
Prover\\\",\\\"Alice-Shuffle-Ver\\\":\\\"InteractiveVerifier\\\"},\\\"creator\
\\\":\\\"Bob-Shuffle-Pro\\\",\\\"wait_if_non_existing\\\":{\\\"timeout\\\":90}\
,\\\"external_keys\\\":[\\\"_verification_result_\\\",\\\"_inspection_request_\
\\\",\\\"_inspection_result_\\\"]}}\"\>"], "Print",
 CellChangeTimes->{3.913948942562067*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"050726ce-dbfd-45af-a984-d01f58e78035"],

Cell[BoxData["\<\"Joining room 'BobsBPShuffle2'. Waiting for confirmation and \
for all members to have joined to room ...\"\>"], "Print",
 CellChangeTimes->{3.913948942575059*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"5575ddbc-9a11-4e67-b8ac-25c37bac372d"],

Cell[BoxData["\<\"Waiting to receive __join_room__, __room_complete__ \
...\"\>"], "Print",
 CellChangeTimes->{3.9139489425850534`*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"0365a9b7-b41b-419a-b6b5-207ddaddf646"],

Cell[BoxData["\<\"Handling Event: success: __join_room__ (Router): Joined \
room 'BobsBPShuffle2'\"\>"], "Print",
 CellChangeTimes->{3.9139489425920486`*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"977a7db3-52ba-4d5a-8af0-fbc122ad262e"],

Cell[BoxData["\<\"Handling Event: success: __room_complete__ (Router):\\n  \
Event Data: <|Length:1|>\\n  Keys: {__room_complete__, _Message, _Valid, \
_SenderRoleAtId, _SenderRole, _SenderId, _ReceiverRoleAtId, _ReceiverRole, \
_ReceiverId, _UniqueKey, _Room, _DataFormat, _Data, _UnderscoreVars1, \
_UnderscoreVars2}\"\>"], "Print",
 CellChangeTimes->{3.913948942664485*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"b4511a03-eb7d-43b6-953a-74b1564fda90"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Trapdoor Function: El Gamal or Elliptic Curve", "Subsection",
 CellChangeTimes->{{3.8866083052324157`*^9, 3.886608345952487*^9}, {
   3.8964188942680693`*^9, 3.896418915815207*^9}, 3.896425650860757*^9, {
   3.896426028703158*^9, 
   3.896426032991284*^9}},ExpressionUUID->"b0db06b7-50f4-48d6-b322-\
9449ba7a601b"],

Cell["Get and apply setup of crypto algorithm from prover.", "Text",
 CellChangeTimes->{{3.886608364983677*^9, 3.8866084313278475`*^9}, {
   3.896418841120001*^9, 3.896418869593217*^9}, {3.8964260389133997`*^9, 
   3.896426085887041*^9}, 
   3.896527562588283*^9},ExpressionUUID->"887b9114-6d7a-4eb9-95aa-\
4901b284dd79"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"StateMachineRestore", "[", "\"\<Init\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{"Non", "-", "interactive"}], "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"SendVariables", "[", 
       RowBox[{"\"\<Inspector\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<__get_public_room_info__\>\"", "->", "True"}], ",", 
          RowBox[{"\"\<__room_password__\>\"", "->", "roomPassword"}]}], 
         "}"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"roomInfo", " ", "=", " ", 
       RowBox[{
       "WaitForVariable", "[", "\"\<__get_public_room_info__\>\"", "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"proof", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"roomInfo", "[", "\"\<proof\>\"", "]"}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"(*", 
       RowBox[{"Check", " ", "if", " ", "proof", " ", "is", " ", "finished"}],
        "*)"}], "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"KeyExistsQ", "[", 
          RowBox[{"proof", ",", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
             "useInnerProductProtocol", ",", "\"\<b0\>\"", ",", 
              "\"\<rvec\>\""}], "]"}], "<>", "\"\<:Prover@\>\"", "<>", 
            RowBox[{"EscapeColonsAndAts", "[", "proverId", "]"}], "<>", 
            "\"\<:Proof\>\""}]}], "]"}]}], ",", "\n", "\t\t", 
        RowBox[{"Print", "[", "\n", "\t\t\t", 
         RowBox[{
         "\"\<Info: The prover has not yet added all required variables to \
the proof. \>\"", "<>", "\n", "\t\t\t", 
          "\"\<Won't be able to do complete verification. Currently knowing: \
\>\"", "<>", "\n", "\t\t\t", 
          RowBox[{"ToString", "[", 
           RowBox[{"Keys", "[", "proof", "]"}], "]"}]}], "\n", "\t\t", 
         "]"}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"proof", "[", "\"\<_cost\>\"", "]"}], " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", "\"\<entropy\>\"", "]"}], "&"}], ",", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"roomInfo", "[", "\"\<variable_meta\>\"", "]"}], ",", " ", 
           
           RowBox[{
            RowBox[{"KeyExistsQ", "[", 
             RowBox[{"#", ",", " ", "\"\<entropy\>\""}], "]"}], "&"}]}], 
          "]"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"EnqueueAsUnreadVariables", "[", "proof", "]"}], ";"}]}], "\n", 
    "\t", 
    RowBox[{"(*", 
     RowBox[{
     "variables", " ", "will", " ", "now", " ", "be", " ", "accessible", " ", 
      "via", " ", "WaitForProversVariable"}], "*)"}], "\n", "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"setupParameters", " ", "=", " ", 
    RowBox[{"WaitForProversVariable", "[", "\"\<setup\>\"", "]"}]}], ";"}], 
  "\n", 
  RowBox[{"(*", "Assertions", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"setupParameters", "[", "\"\<room\>\"", "]"}], " ", "!=", " ", 
     "room"}], ",", " ", 
    RowBox[{"Error", "[", 
     RowBox[{"\"\<Assertion failure: prover's room \>\"", "<>", 
      RowBox[{"setupParameters", "[", "\"\<room\>\"", "]"}], "<>", 
      "\"\< does not match \>\"", "<>", "room"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"setupParameters", "[", "\"\<prover\>\"", "]"}], " ", "!=", " ", 
     "proverId"}], ",", " ", 
    RowBox[{"Error", "[", 
     RowBox[{"\"\<Assertion failure: prover's id \>\"", "<>", 
      RowBox[{"setupParameters", "[", "\"\<prover\>\"", "]"}], "<>", 
      "\"\< does not match \>\"", "<>", "proverId"}], "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{"interactive", ",", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"setupParameters", "[", "\"\<verifier\>\"", "]"}], " ", "!=", 
       " ", "myId"}], ",", " ", 
      RowBox[{"Error", "[", 
       RowBox[{"\"\<Assertion failure: verifier id \>\"", "<>", 
        RowBox[{"setupParameters", "[", "\"\<verifier\>\"", "]"}], "<>", 
        "\"\< given by prover does not match \>\"", "<>", "myId"}], "]"}]}], 
     "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"setupParameters", "[", "\"\<interactive\>\"", "]"}], " ", "!=", 
     " ", "interactive"}], ",", " ", 
    RowBox[{"Error", "[", 
     RowBox[{"\"\<Assertion failure: interactivity \>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"setupParameters", "[", "\"\<interactive\>\"", "]"}], "]"}], 
      "<>", "\"\< given by prover does not match \>\"", "<>", 
      RowBox[{"ToString", "[", "interactive", "]"}]}], "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"n", " ", "=", " ", 
   RowBox[{"setupParameters", "[", "\"\<n\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"!", 
     RowBox[{"IntegerQ", "[", "n", "]"}]}], " ", "||", " ", 
    RowBox[{"n", " ", "<=", " ", "0"}]}], ",", " ", 
   RowBox[{"Error", "[", 
    RowBox[{
    "\"\<Assertion failure: prover's number of elements to be shuffled \>\"", 
     "<>", "n", "<>", "\"\< (n) must be a positive integer\>\""}], "]"}]}], 
  "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"!", "interactive"}], " ", "&&", " ", 
      RowBox[{
       RowBox[{"setupParameters", "[", "\"\<nums_seed\>\"", "]"}], " ", "!=", 
       " ", "fixedNUMSRandomSeed"}]}], ",", " ", 
     RowBox[{"Error", "[", 
      RowBox[{"\"\<Assertion failure: prover's nums_seed \>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"setupParameters", "[", "\"\<nums_seed\>\"", "]"}], "]"}], 
       "<>", "\"\< does not match \>\"", "<>", 
       RowBox[{"ToString", "[", "fixedNUMSRandomSeed", "]"}]}], "]"}]}], 
    "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"Trapdoor", " ", "function"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"encryptionMethod", " ", "=", " ", 
   RowBox[{"setupParameters", "[", "\"\<encryption_method\>\"", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"useElGamal", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{"encryptionMethod", " ", "==", " ", "\"\<ElGamal\>\""}], ")"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"CheckSetup", "[", "setupType_String", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"permitted", ",", " ", "permitted2", ",", " ", "requiredValue"}],
      "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"setupsPermitted", ",", " ", "setupType"}], "]"}]}], ",", 
       " ", 
       RowBox[{"Return", "[", "True", "]"}]}], "]"}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"setupsPermitted", "[", "setupType", "]"}], "]"}], " ", "==",
         " ", "0"}], ",", " ", 
       RowBox[{"Return", "[", "True", "]"}]}], "]"}], ";", "\n", "\t", 
     RowBox[{"permitted", " ", "=", " ", "False"}], ";", "\n", "\t", 
     RowBox[{"Scan", "[", 
      RowBox[{
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", "setupName", "}"}], ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"permitted2", " ", "=", " ", "True"}], ";", "\n", "\t\t", 
          RowBox[{"Scan", "[", 
           RowBox[{
            RowBox[{"Function", "[", 
             RowBox[{
              RowBox[{"{", "configKey", "}"}], ",", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"!", 
                  RowBox[{"MemberQ", "[", 
                   RowBox[{"setupParameters", ",", " ", "configKey"}], 
                   "]"}]}], ",", " ", 
                 RowBox[{
                  RowBox[{"permitted2", " ", "=", " ", "False"}], ";", " ", 
                  RowBox[{"Return", "[", "]"}]}]}], "]"}], ";", "\n", 
               "\t\t\t", 
               RowBox[{"requiredValue", " ", "=", " ", 
                RowBox[{
                 RowBox[{"setupsPermitted", "[", "setupName", "]"}], "[", 
                 "configKey", "]"}]}], ";", "\n", "\t\t\t", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"ListQ", "[", "requiredValue", "]"}], ",", " ", 
                 RowBox[{"requiredValue", " ", "=", " ", 
                  RowBox[{"ecPnt", "[", 
                   RowBox[{
                    RowBox[{"requiredValue", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                    RowBox[{"requiredValue", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}], "]"}], ";", 
               "\n", "\t\t\t", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"setupParameters", "[", "configKey", "]"}], " ", "!=",
                   " ", "requiredValue"}], ",", " ", 
                 RowBox[{"permitted2", " ", "=", " ", "False"}]}], "]"}], 
               ";"}]}], "\n", "\t\t", "]"}], ",", " ", 
            RowBox[{"Keys", "[", 
             RowBox[{"setupsPermitted", "[", "setupName", "]"}], "]"}]}], 
           "]"}], ";", "\n", "\t\t", 
          RowBox[{"If", "[", 
           RowBox[{"permitted2", ",", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<Prover's \>\"", "<>", "setupType", "<>", 
               "\"\< setup matches \>\"", "<>", "setupName", "<>", 
               "\"\< which is permitted\>\""}], "]"}], ";", "\n", "\t\t\t", 
             RowBox[{"permitted", " ", "=", " ", "True"}], ";"}]}], "\n", 
           "\t\t", "]"}], ";"}]}], "\n", "\t", "]"}], ",", " ", 
       RowBox[{"Keys", "[", "setupsPermitted", "]"}]}], "]"}], ";", "\n", 
     "\t", 
     RowBox[{"If", "[", 
      RowBox[{"permitted", ",", "\n", "\t\t", "True", "\n", "\t", 
       RowBox[{"(*", "Else", "*)"}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"VerificationFailed", "[", 
         RowBox[{
         "setupType", "<>", 
          "\"\< configuration does not match any of the ones permitted by the \
verifier\>\""}], "]"}], ";", "\n", "\t\t", "False"}]}], "\n", "\t", "]"}]}]}],
    "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{"useElGamal", ",", "\n", "\t", 
     RowBox[{
      RowBox[{"CheckSetup", "[", "\"\<ElGamal\>\"", "]"}], ";", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{"p", ",", " ", "q", ",", " ", "g"}], "*)"}], "\n", "\t", 
      RowBox[{"p", " ", "=", " ", 
       RowBox[{"setupParameters", "[", "\"\<crypt_p\>\"", "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"h", " ", "=", " ", 
       RowBox[{"setupParameters", "[", "\"\<crypt_h\>\"", "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"g", " ", "=", " ", 
       RowBox[{"setupParameters", "[", "\"\<crypt_g\>\"", "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"q", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"p", " ", "-", " ", "1"}], ")"}], " ", "/", " ", "h"}]}], 
      ";", "\n", "\t", 
      RowBox[{"pBits", " ", "=", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"IntegerDigits", "[", 
         RowBox[{"p", ",", "2"}], "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"qBits", " ", "=", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"IntegerDigits", "[", 
         RowBox[{"q", ",", "2"}], "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"modq", " ", "=", " ", 
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"#", ",", "q"}], "]"}], "&"}]}], ";", "\n", "\t", 
      RowBox[{"modinvq", " ", "=", " ", 
       RowBox[{
        RowBox[{"ModularInverse", "[", 
         RowBox[{"#", ",", "q"}], "]"}], "&"}]}], ";", "\n", "\t", 
      RowBox[{"powermodq", " ", "=", " ", 
       RowBox[{
        RowBox[{"PowerMod", "[", 
         RowBox[{"#1", ",", "#2", ",", "q"}], "]"}], "&"}]}], ";", "\n", "\t", 
      RowBox[{"modp", " ", "=", " ", 
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"#", ",", "p"}], "]"}], "&"}]}], ";", "\n", "\t", 
      RowBox[{"modinvp", " ", "=", " ", 
       RowBox[{
        RowBox[{"ModularInverse", "[", 
         RowBox[{"#", ",", "p"}], "]"}], "&"}]}], ";", "\n", "\t", 
      RowBox[{"powermodp", " ", "=", " ", 
       RowBox[{
        RowBox[{"PowerMod", "[", 
         RowBox[{"#1", ",", "#2", ",", "p"}], "]"}], "&"}]}], ";", "\n", "\t", 
      RowBox[{"Print", "[", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", "\t\t", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<p is prime\>\"", ",", 
             RowBox[{"PrimeQ", "[", "p", "]"}]}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{"\"\<bits of p\>\"", ",", "pBits"}], "}"}], ",", "\n", 
           "\t\t", 
           RowBox[{"{", 
            RowBox[{"\"\<q is prime\>\"", ",", 
             RowBox[{"PrimeQ", "[", "q", "]"}]}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{"\"\<bits of q\>\"", ",", "qBits"}], "}"}], ",", "\n", 
           "\t\t", 
           RowBox[{"{", 
            RowBox[{"\"\<bits of cofactor\>\"", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"IntegerDigits", "[", 
               RowBox[{"h", ",", "2"}], "]"}], "]"}]}], "}"}], ",", "\n", 
           "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<cofactor * q \!\(\*OverscriptBox[\(=\), \(?\)]\) p - 1\>\"", 
             ",", 
             RowBox[{
              RowBox[{"h", "*", "q"}], "==", 
              RowBox[{"p", "-", "1"}]}]}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SuperscriptBox[\(g\), \(q\)]\) \
\!\(\*SubscriptBox[OverscriptBox[\(\[Congruent]\), \(?\)], \(p\)]\) 1\>\"", 
             ",", 
             RowBox[{
              RowBox[{"PowerMod", "[", 
               RowBox[{"g", ",", "q", ",", "p"}], "]"}], "==", "1"}]}], 
            "}"}]}], "\n", "\t", "}"}], ",", 
         RowBox[{"Alignment", "->", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"Left", ",", "Left"}], "}"}], "}"}]}], ",", 
         RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], ";", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{
       "Selection", " ", "of", " ", "security", " ", "and", " ", "sanity", 
        " ", "checks"}], "*)"}], "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"PrimeQ", "[", "p", "]"}]}], ",", 
        RowBox[{
        "VerificationFailed", "[", 
         "\"\<Non-prime Schnorr group modulus p\>\"", "]"}]}], "]"}], ";", 
      "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"PrimeQ", "[", "q", "]"}]}], ",", 
        RowBox[{
        "VerificationFailed", "[", "\"\<Non-prime subgroup order q\>\"", 
         "]"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"IntegerQ", "[", "h", "]"}]}], ",", 
        RowBox[{
        "VerificationFailed", "[", "\"\<Non-integer cofactor p/q\>\"", 
         "]"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"KeyExistsQ", "[", 
         RowBox[{"setupParameters", ",", " ", "\"\<entropy_parameters\>\""}], 
         "]"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"entropyParameters", " ", "=", " ", 
          RowBox[{
          "setupParameters", "[", "\"\<entropy_parameters\>\"", "]"}]}], ";", 
         "\n", "\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"pBits", " ", "<", " ", 
            RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], ",", 
           RowBox[{
           "Print", "[", 
            "\"\<Warning: number of bits of p is smaller than prover's \
entropy for group elements\>\"", "]"}]}], "]"}], ";", "\n", "\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"qBits", " ", "<", " ", 
            RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], ",", 
           
           RowBox[{
           "Print", "[", 
            "\"\<Warning: number of bits of q is smaller than prover's \
entropy for scalars\>\"", "]"}]}], "]"}], ";"}], "\n", "\t", 
        RowBox[{"(*", "Else", "*)"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"entropyParameters", " ", "=", " ", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<group\>\"", "->", "qBits"}], ",", 
            RowBox[{"\"\<scalar\>\"", "->", "qBits"}]}], "|>"}]}], ";"}]}], 
       "\n", "\t", "]"}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"KeyExistsQ", "[", 
         RowBox[{"setupParameters", ",", " ", "\"\<security_parameters\>\""}],
          "]"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"securityParameters", " ", "=", " ", 
          RowBox[{
          "setupParameters", "[", "\"\<security_parameters\>\"", "]"}]}], ";",
          "\n", "\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"pBits", " ", "!=", " ", 
            RowBox[{"securityParameters", "[", "\"\<group\>\"", "]"}]}], ",", 
           
           RowBox[{
           "Print", "[", 
            "\"\<Warning: number of bits of p does not match prover's bits \
for group elements\>\"", "]"}]}], "]"}], ";", "\n", "\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"qBits", " ", "!=", " ", 
            RowBox[{"securityParameters", "[", "\"\<scalar\>\"", "]"}]}], ",", 
           RowBox[{
           "Print", "[", 
            "\"\<Warning: number of bits of q does not match prover's bits \
for scalars\>\"", "]"}]}], "]"}], ";"}], "\n", "\t", 
        RowBox[{"(*", "Else", "*)"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"securityParameters", " ", "=", " ", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<group\>\"", "->", "pBits"}], ",", 
            RowBox[{"\"\<scalar\>\"", "->", "qBits"}]}], "|>"}]}], ";"}]}], 
       "\n", "\t", "]"}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"securityParameters", "[", "\"\<group\>\"", "]"}], " ", "<", 
         " ", 
         RowBox[{
          RowBox[{"securityPolicy", "[", "\"\<ElGamal\>\"", "]"}], "[", 
          "\"\<group\>\"", "]"}]}], ",", 
        RowBox[{
        "VerificationFailed", "[", 
         "\"\<Security policy for group elements not fulfilled\>\"", "]"}]}], 
       "]"}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"securityParameters", "[", "\"\<scalar\>\"", "]"}], " ", "<",
          " ", 
         RowBox[{
          RowBox[{"securityPolicy", "[", "\"\<ElGamal\>\"", "]"}], "[", 
          "\"\<scalar\>\"", "]"}]}], ",", 
        RowBox[{
        "VerificationFailed", "[", 
         "\"\<Security policy for scalars not fulfilled\>\"", "]"}]}], "]"}], 
      ";", "\n", "\t", 
      RowBox[{"SetCostSpecification", "[", "securityParameters", "]"}], ";"}],
      "\n", 
     RowBox[{"(*", "Else", "*)"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"CheckSetup", "[", "\"\<EllipticCurve\>\"", "]"}], ";", "\n", 
      "\t", 
      RowBox[{"(*", 
       RowBox[{
       "Set", " ", "up", " ", "and", " ", "check", " ", "Elliptic", " ", 
        "Curve"}], "*)"}], "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"encryptionMethod", " ", "!=", " ", "\"\<EllipticCurve\>\""}],
         ",", " ", 
        RowBox[{"Error", "[", 
         RowBox[{
         "\"\<Setup Error: unknown encryption method \>\"", "<>", 
          "encryptionMethod"}], "]"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"curveRepresentation", " ", "=", " ", 
       RowBox[{
       "setupParameters", "[", "\"\<crypt_curve_representation\>\"", "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
        "curveRepresentation", " ", "!=", " ", "\"\<Weierstrass\>\""}], ",", 
        " ", 
        RowBox[{"Error", "[", 
         RowBox[{
         "\"\<Setup Error: Unsupported Elliptic Curve representation: \>\"", "<>",
           "curveRepresentation"}], "]"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{"EC", " ", "modulus"}], "*)"}], "\n", "\t", 
      RowBox[{"p", " ", "=", " ", 
       RowBox[{"setupParameters", "[", "\"\<crypt_p\>\"", "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"(*", 
       RowBox[{"linear", " ", "coefficient"}], "*)"}], "\n", "\t", 
      RowBox[{
       SubscriptBox["a", "EC"], " ", "=", " ", 
       RowBox[{"setupParameters", "[", "\"\<crypt_a\>\"", "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"(*", 
       RowBox[{"constant", " ", "coefficient"}], "*)"}], "\n", "\t", 
      RowBox[{
       SubscriptBox["b", "EC"], " ", "=", " ", 
       RowBox[{"setupParameters", "[", "\"\<crypt_b\>\"", "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"(*", 
       RowBox[{
       "number", " ", "of", " ", "points", " ", "on", " ", "elliptic", " ", 
        "curve"}], "*)"}], "\n", "\t", 
      RowBox[{
       SubscriptBox["n", "EC"], " ", "=", " ", 
       RowBox[{"setupParameters", "[", "\"\<crypt_n\>\"", "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"(*", "cofactor", "*)"}], "\n", "\t", 
      RowBox[{
       SubscriptBox["h", "EC"], " ", "=", " ", 
       RowBox[{"setupParameters", "[", "\"\<crypt_h\>\"", "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"(*", 
       RowBox[{"group", " ", "modulus"}], "*)"}], "\n", "\t", 
      RowBox[{"q", " ", "=", " ", 
       RowBox[{
        SubscriptBox["n", "EC"], " ", "/", " ", 
        SubscriptBox["h", "EC"]}]}], ";", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{"standard", " ", "generator", " ", "point"}], "*)"}], "\n", 
      "\t", 
      RowBox[{"g", " ", "=", " ", 
       RowBox[{"setupParameters", "[", "\"\<crypt_g\>\"", "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"pBits", " ", "=", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"IntegerDigits", "[", 
         RowBox[{"p", ",", "2"}], "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"qBits", " ", "=", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"IntegerDigits", "[", 
         RowBox[{"q", ",", "2"}], "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"KeyExistsQ", "[", 
         RowBox[{"setupParameters", ",", " ", "\"\<entropy_parameters\>\""}], 
         "]"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"entropyParameters", " ", "=", " ", 
          RowBox[{
          "setupParameters", "[", "\"\<entropy_parameters\>\"", "]"}]}], ";", 
         "\n", "\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"pBits", " ", "<", " ", 
            RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], ",", 
           RowBox[{
           "Print", "[", 
            "\"\<Warning: number of bits of p is smaller than prover's \
entropy for group elements\>\"", "]"}]}], "]"}], ";", "\n", "\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"qBits", " ", "<", " ", 
            RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], ",", 
           
           RowBox[{
           "Print", "[", 
            "\"\<Warning: number of bits of q is smaller than prover's \
entropy for scalars\>\"", "]"}]}], "]"}], ";"}], "\n", "\t", 
        RowBox[{"(*", "Else", "*)"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"entropyParameters", " ", "=", " ", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<group\>\"", "->", "qBits"}], ",", 
            RowBox[{"\"\<scalar\>\"", "->", "qBits"}]}], "|>"}]}], ";"}]}], 
       "\n", "\t", "]"}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"KeyExistsQ", "[", 
         RowBox[{"setupParameters", ",", " ", "\"\<security_parameters\>\""}],
          "]"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"securityParameters", " ", "=", " ", 
          RowBox[{
          "setupParameters", "[", "\"\<security_parameters\>\"", "]"}]}], ";",
          "\n", "\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"pBits", " ", "+", " ", "1"}], " ", 
            RowBox[{"(*", 
             RowBox[{"sign", " ", "bit"}], "*)"}], " ", "!=", " ", 
            RowBox[{"securityParameters", "[", "\"\<group\>\"", "]"}]}], ",", 
           
           RowBox[{
           "Print", "[", 
            "\"\<Warning: Security parameters: Number of bits of EC modulus p \
plus sign bit is not equal to specified bits for group elements specified by \
prover\>\"", "]"}]}], "]"}], ";", "\n", "\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"qBits", " ", "!=", " ", 
            RowBox[{"securityParameters", "[", "\"\<scalar\>\"", "]"}]}], ",", 
           RowBox[{
           "Print", "[", 
            "\"\<Warning: Security parameters: Number of bits of group \
modulus q does not match specified bits for scalars by prover\>\"", "]"}]}], 
          "]"}], ";"}], "\n", "\t", 
        RowBox[{"(*", "Else", "*)"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"securityParameters", " ", "=", " ", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<group\>\"", "->", 
             RowBox[{"pBits", "+", "1"}]}], 
            RowBox[{"(*", 
             RowBox[{"sing", " ", "bit"}], "*)"}], ",", 
            RowBox[{"\"\<scalar\>\"", "->", "qBits"}]}], "|>"}]}], ";"}]}], 
       "\n", "\t", "]"}], ";", "\n", "\t", 
      RowBox[{"setEC", "[", 
       RowBox[{"ecCurve", "[", 
        RowBox[{
         SubscriptBox["a", "EC"], ",", 
         SubscriptBox["b", "EC"], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           SubscriptBox["h", "EC"]}], "}"}]}], "]"}], "]"}], ";", "\n", "\t", 
      
      RowBox[{
       RowBox[{"compressPoint", "[", "point_ecPnt", "]"}], " ", ":=", " ", 
       RowBox[{
        RowBox[{"point", "[", 
         RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"point", "[", 
            RowBox[{"[", "2", "]"}], "]"}], " ", ">", " ", 
           RowBox[{"p", "/", "2"}]}], ",", " ", 
          RowBox[{"2", "^", "pBits"}], ",", " ", "0"}], "]"}]}]}], ";", "\n", 
      "\t", 
      RowBox[{"modq", " ", "=", " ", 
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"#", ",", "q"}], "]"}], "&"}]}], ";", "\n", "\t", 
      RowBox[{"modinvq", " ", "=", " ", 
       RowBox[{
        RowBox[{"ModularInverse", "[", 
         RowBox[{"#", ",", "q"}], "]"}], "&"}]}], ";", "\n", "\t", 
      RowBox[{"powermodq", " ", "=", " ", 
       RowBox[{
        RowBox[{"PowerMod", "[", 
         RowBox[{"#1", ",", "#2", ",", "q"}], "]"}], "&"}]}], ";", "\n", "\t", 
      RowBox[{"Print", "[", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", "\t\t", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<p is prime\>\"", ",", 
             RowBox[{"PrimeQ", "[", "p", "]"}]}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{"\"\<bits of p\>\"", ",", "pBits"}], "}"}], ",", "\n", 
           "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<|\!\(\*SubscriptBox[\(n\), \(EC\)]\) - (p+1)| <= \
2\!\(\*SqrtBox[SubscriptBox[\(n\), \(EC\)]]\);\\n(\!\(\*SubscriptBox[\(n\), \
\(EC\)]\) = number of points on EC)\\n(Hasse's Theorem on ECs)\>\"", ",", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{
                SubscriptBox["n", "EC"], " ", "-", " ", 
                RowBox[{"(", 
                 RowBox[{"p", "+", "1"}], ")"}]}], "]"}], " ", "<=", " ", 
              RowBox[{"2", "*", 
               RowBox[{"Sqrt", "[", "p", "]"}]}]}]}], "}"}], ",", "\n", 
           "\t\t", 
           RowBox[{"{", 
            RowBox[{"\"\<q is prime\>\"", ",", 
             RowBox[{"PrimeQ", "[", "q", "]"}]}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{"\"\<bits of q\>\"", ",", "qBits"}], "}"}], ",", "\n", 
           "\t\t", 
           RowBox[{"{", 
            RowBox[{"\"\<\!\(\*SubscriptBox[\(h\), \(EC\)]\)\>\"", ",", 
             SubscriptBox["h", "EC"]}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(h\), \(EC\)]\) * q \!\(\*OverscriptBox[\
\(=\), \(?\)]\) \!\(\*SubscriptBox[\(n\), \(EC\)]\)\>\"", ",", 
             RowBox[{
              RowBox[{
               SubscriptBox["h", "EC"], " ", "*", " ", "q"}], " ", "==", " ", 
              
              SubscriptBox["n", "EC"]}]}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{"\"\<qg = \[ScriptCapitalO]\>\"", ",", 
             RowBox[{
              RowBox[{"q", " ", "*", " ", "g"}], " ", "==", " ", 
              "\[ScriptCapitalO]"}]}], "}"}]}], "\n", "\t", "}"}], ",", 
         RowBox[{"Alignment", "->", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"Left", ",", "Left"}], "}"}], "}"}]}], ",", 
         RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], ";", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{
       "Selection", " ", "of", " ", "security", " ", "and", " ", "sanity", 
        " ", "checks"}], "*)"}], "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"PrimeQ", "[", "p", "]"}]}], ",", 
        RowBox[{
        "VerificationFailed", "[", "\"\<Non-prime EC modulus p\>\"", "]"}]}], 
       "]"}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"PrimeQ", "[", "q", "]"}]}], ",", 
        RowBox[{
        "VerificationFailed", "[", "\"\<Non-prime group order q\>\"", "]"}]}],
        "]"}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"IntegerQ", "[", 
          SubscriptBox["h", "EC"], "]"}]}], ",", 
        RowBox[{
        "VerificationFailed", "[", 
         "\"\<Non-integer cofactor \!\(\*SubscriptBox[\(h\), \(EC\)]\) := \
\!\(\*SubscriptBox[\(n\), \(EC\)]\)/q\>\"", "]"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"securityParameters", "[", "\"\<EC\>\"", "]"}], "[", 
          "\"\<group\>\"", "]"}], " ", "<", " ", 
         RowBox[{"securityPolicy", "[", "\"\<group\>\"", "]"}]}], ",", 
        RowBox[{
        "VerificationFailed", "[", 
         "\"\<Security policy for group elements not fulfilled\>\"", "]"}]}], 
       "]"}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"securityParameters", "[", "\"\<EC\>\"", "]"}], "[", 
          "\"\<scalar\>\"", "]"}], " ", "<", " ", 
         RowBox[{"securityPolicy", "[", "\"\<scalar\>\"", "]"}]}], ",", 
        RowBox[{
        "VerificationFailed", "[", 
         "\"\<Security policy for scalars not fulfilled\>\"", "]"}]}], "]"}], 
      ";", "\n", "\t", 
      RowBox[{"SetCostSpecification", "[", "securityParameters", "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"setupParameters", "[", "\"\<nums_seed\>\"", "]"}], " ", "=", 
       " ", "fixedNUMSRandomSeed"}], ";", "\n", "\t", 
      RowBox[{"Scan", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"FiatShamirAdd", "[", "\n", "\t\t\t", 
          RowBox[{"#", ",", "\n", "\t\t\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"StringQ", "[", 
              RowBox[{"setupParameters", "[", "#", "]"}], "]"}], ",", "\n", 
             "\t\t\t\t", 
             RowBox[{"StringToInteger", "[", 
              RowBox[{"setupParameters", "[", "#", "]"}], "]"}], ",", "\n", 
             "\t\t\t\t", 
             RowBox[{"setupParameters", "[", "#", "]"}]}], "\n", "\t\t\t", 
            "]"}]}], "\n", "\t\t", "]"}], "&"}], ",", "\n", "\t\t", 
        RowBox[{"(*", 
         RowBox[{
         "sort", " ", "to", " ", "ensure", " ", "fixed", " ", "order"}], 
         "*)"}], "\n", "\t\t", 
        RowBox[{"Sort", "[", 
         RowBox[{"Keys", "[", "setupParameters", "]"}], "]"}]}], "\n", "\t", 
       "]"}], ";"}]}], "\n", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Name/Equation\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Value/Equality\>\"", ",", "Bold"}], "]"}]}], "}"}], 
       ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<n\>\"", ",", "\"\<Number of Elements\\nto be Shuffled\>\"", ",", 
         "n"}], "}"}]}], "\n", "}"}], ",", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left"}], "}"}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "interactive"}], ",", " ", 
    RowBox[{"Print", "[", 
     RowBox[{"FiatShamirGrid", "[", "]"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ProcessNewMessages", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"StateMachineSave", "[", "\"\<Setup\>\"", "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.8786655704132843`*^9, 3.878665571345381*^9}, {
   3.878665616792317*^9, 3.878665722056831*^9}, {3.884544729796012*^9, 
   3.884544735444632*^9}, {3.884800077872711*^9, 3.8848000782761087`*^9}, {
   3.884800111194648*^9, 3.8848002721776247`*^9}, {3.8848003112610292`*^9, 
   3.884800390713089*^9}, {3.884800616707436*^9, 3.884800720658853*^9}, {
   3.884800876827126*^9, 3.884800896683572*^9}, {3.884801258936254*^9, 
   3.8848012625343924`*^9}, {3.884801380321656*^9, 3.884801455104535*^9}, {
   3.884801654111761*^9, 3.884801698725898*^9}, {3.884801760141735*^9, 
   3.884801760229102*^9}, {3.884802523216024*^9, 3.884802531134529*^9}, {
   3.884803666721505*^9, 3.884803769838204*^9}, {3.884803957953341*^9, 
   3.8848042915314083`*^9}, {3.884804330249054*^9, 3.884804408628948*^9}, {
   3.8848044405771093`*^9, 3.8848044496698923`*^9}, {3.886347340921402*^9, 
   3.8863473410425873`*^9}, 3.8866082868308935`*^9, {3.8866083390307646`*^9, 
   3.8866083391491013`*^9}, {3.886608446945418*^9, 3.8866084821903086`*^9}, {
   3.88660851589537*^9, 3.886608520550521*^9}, 3.8866085771107087`*^9, {
   3.886608618477708*^9, 3.886608637277816*^9}, 3.8866086871247945`*^9, {
   3.886608723376481*^9, 3.886608893430298*^9}, {3.886615750142084*^9, 
   3.8866157684245872`*^9}, {3.886616881606135*^9, 3.886616896419631*^9}, {
   3.8866528848150997`*^9, 3.8866529134070883`*^9}, {3.8874382925619855`*^9, 
   3.887438298126069*^9}, {3.887470016930853*^9, 3.8874700231913877`*^9}, {
   3.887470840515648*^9, 3.8874708474640417`*^9}, {3.8874711229321136`*^9, 
   3.8874711384308343`*^9}, {3.8874739755966196`*^9, 3.887474007885593*^9}, {
   3.887474368949133*^9, 3.88747438221249*^9}, {3.887476052833146*^9, 
   3.8874761156487164`*^9}, 3.887476174974331*^9, {3.887476798939227*^9, 
   3.8874768019743557`*^9}, {3.887476870709006*^9, 3.887476871328568*^9}, {
   3.88747818019668*^9, 3.887478183990401*^9}, 3.8874791420175605`*^9, {
   3.889683221294034*^9, 3.889683221603524*^9}, 3.891416311166754*^9, {
   3.8955914170240183`*^9, 3.895591431123261*^9}, {3.895591484499928*^9, 
   3.895591484884632*^9}, {3.895591517309202*^9, 3.895591564685142*^9}, {
   3.8955919803351517`*^9, 3.89559198359343*^9}, {3.89610533010244*^9, 
   3.896105335426834*^9}, {3.896107494086094*^9, 3.896107506212901*^9}, {
   3.896416075797637*^9, 3.896416075917967*^9}, {3.8964178345254183`*^9, 
   3.896417834632071*^9}, {3.8964189184721107`*^9, 3.896418991522979*^9}, {
   3.896419086418867*^9, 3.896419092372199*^9}, {3.896424981393648*^9, 
   3.896425056226924*^9}, {3.8964254777720137`*^9, 3.896425478071823*^9}, {
   3.896426017402389*^9, 3.896426022336525*^9}, {3.896426233817577*^9, 
   3.896426236130353*^9}, {3.896426390812539*^9, 3.896426400452351*^9}, {
   3.89642663708379*^9, 3.896427046692026*^9}, {3.896427088060349*^9, 
   3.896427112517619*^9}, {3.8964271581286077`*^9, 3.896427207798542*^9}, {
   3.896427238501155*^9, 3.896427259926167*^9}, {3.896427293460842*^9, 
   3.896427308627705*^9}, {3.8964273634311857`*^9, 3.896427568367434*^9}, {
   3.896427690939301*^9, 3.896427736280257*^9}, {3.896427799116111*^9, 
   3.8964278114987707`*^9}, {3.8964278427956047`*^9, 3.89642784506579*^9}, {
   3.896427884938478*^9, 3.896427983224525*^9}, {3.896428016857052*^9, 
   3.8964284977431097`*^9}, {3.896454011419258*^9, 3.896454012359728*^9}, {
   3.8964618252112713`*^9, 3.896461829101264*^9}, {3.896498850575655*^9, 
   3.896498858586686*^9}, {3.8965108964424753`*^9, 3.8965109119399652`*^9}, {
   3.8965110970854673`*^9, 3.896511130753564*^9}, {3.89651685425683*^9, 
   3.8965168734423037`*^9}, {3.896517488806212*^9, 3.896517489448908*^9}, {
   3.896518261238716*^9, 3.896518291294099*^9}, {3.896523344111918*^9, 
   3.896523355951453*^9}, {3.896523438898241*^9, 3.896523464238257*^9}, {
   3.896523691788063*^9, 3.896523708790856*^9}, {3.896523982057811*^9, 
   3.896523996520481*^9}, {3.8965243022626047`*^9, 3.896524331642271*^9}, {
   3.896524575602601*^9, 3.896524595227522*^9}, {3.896524643726181*^9, 
   3.89652465253516*^9}, {3.8965252869304657`*^9, 3.8965252977528276`*^9}, {
   3.896525611697822*^9, 3.8965256164441967`*^9}, {3.896526556134143*^9, 
   3.896526570563197*^9}, {3.8965425053157883`*^9, 3.896542536335425*^9}, {
   3.896542612086356*^9, 3.896542620566741*^9}, {3.89654269369316*^9, 
   3.896542712809474*^9}, {3.8965427539998426`*^9, 3.896542777834667*^9}, {
   3.896542809586076*^9, 3.8965428194031887`*^9}, 3.896542910016233*^9, {
   3.896544245444127*^9, 3.896544249029817*^9}, {3.896544802168757*^9, 
   3.89654481661866*^9}, {3.896544850999071*^9, 3.896544852090917*^9}, {
   3.896544997020194*^9, 3.896545021074394*^9}, {3.8965456209377823`*^9, 
   3.896545622499742*^9}, {3.896586219073181*^9, 3.896586220582531*^9}, {
   3.896588034355445*^9, 3.896588053005542*^9}, {3.896588090882834*^9, 
   3.896588162012104*^9}, {3.896589948001071*^9, 3.896589963137453*^9}, {
   3.8965906016257553`*^9, 3.8965906098030043`*^9}, {3.896590665577023*^9, 
   3.896590673031007*^9}, {3.896590802054905*^9, 3.8965908096964417`*^9}, {
   3.896590941256847*^9, 3.896590961928071*^9}, {3.8966801285099363`*^9, 
   3.8966801412608747`*^9}, {3.8966802037271643`*^9, 
   3.8966802284662733`*^9}, {3.896680537684667*^9, 3.896680567304572*^9}, {
   3.896682130355448*^9, 3.896682134941515*^9}, {3.8969394758878117`*^9, 
   3.896939479433886*^9}, {3.897039247035531*^9, 3.897039281037998*^9}, {
   3.897044731192922*^9, 3.897044775707102*^9}, {3.8970526841356363`*^9, 
   3.897052734263723*^9}, {3.897052791628866*^9, 3.8970528675056553`*^9}, {
   3.897052945384522*^9, 3.897053221756823*^9}, {3.897053258827949*^9, 
   3.897053457221689*^9}, {3.897053521911832*^9, 3.897053587433082*^9}, {
   3.8970536250707817`*^9, 3.897053699243588*^9}, {3.897053753532288*^9, 
   3.897053764044588*^9}, {3.897053846453846*^9, 3.8970539050691023`*^9}, {
   3.8970543850882*^9, 3.8970544097927313`*^9}, {3.897054526255612*^9, 
   3.89705472900171*^9}, {3.8972922368017263`*^9, 3.8972922403121967`*^9}, {
   3.897292763685767*^9, 3.897292803148431*^9}, {3.897292902040794*^9, 
   3.897292905617861*^9}, {3.897292960775488*^9, 3.897293053570862*^9}, {
   3.897293104126758*^9, 3.897293117318858*^9}, {3.897293423901989*^9, 
   3.897293433618503*^9}, {3.8972952373202343`*^9, 3.897295280774578*^9}, {
   3.89729669196235*^9, 3.897296713270708*^9}, {3.897324071485043*^9, 
   3.8973240730996723`*^9}, {3.897324111239274*^9, 3.8973241244323673`*^9}, {
   3.897325027600809*^9, 3.897325030411289*^9}, {3.897325118152775*^9, 
   3.897325122900661*^9}, {3.8973312698376913`*^9, 3.897331292088805*^9}, {
   3.897331562081802*^9, 3.897331572249062*^9}, {3.897362779781625*^9, 
   3.897362809944545*^9}, {3.897362857935378*^9, 3.897362863760262*^9}, {
   3.897362945970475*^9, 3.897362946096002*^9}, {3.89736600278699*^9, 
   3.897366003825933*^9}, {3.897382892055952*^9, 3.897382892218083*^9}, {
   3.897669410491582*^9, 3.897669442713236*^9}, {3.897669632529134*^9, 
   3.897669635077965*^9}, {3.8977272049497843`*^9, 3.8977273013832006`*^9}, {
   3.89772756980762*^9, 3.8977276034988956`*^9}, {3.897727672493286*^9, 
   3.897727706959979*^9}, {3.897728210988489*^9, 3.8977282397291636`*^9}, {
   3.8977284604470353`*^9, 3.897728478825034*^9}, {3.897728594842868*^9, 
   3.897728595140313*^9}, 3.8977286267368116`*^9, {3.8977286837158365`*^9, 
   3.8977287149008675`*^9}, {3.897729006625518*^9, 3.897729087445447*^9}, {
   3.8977294117581353`*^9, 3.897729587067686*^9}, {3.897729618587944*^9, 
   3.8977296474288855`*^9}, {3.8977296974608574`*^9, 3.89772970282153*^9}, {
   3.897730788535288*^9, 3.8977308399084234`*^9}, {3.89773182626639*^9, 
   3.897731860293478*^9}, {3.89773194710771*^9, 3.897731955228094*^9}, {
   3.897732042905569*^9, 3.8977320449611125`*^9}, {3.897750946687968*^9, 
   3.8977511165640173`*^9}, {3.8981839226625023`*^9, 3.898183978803567*^9}, {
   3.898184039700699*^9, 3.8981840403059*^9}, {3.8981848730004463`*^9, 
   3.898184909808052*^9}, {3.8981894404192266`*^9, 3.8981894525308404`*^9}, {
   3.8981895532837152`*^9, 3.8981895784418464`*^9}, 3.898189632967865*^9, {
   3.898189712816722*^9, 3.898189727128517*^9}, {3.8981897845568705`*^9, 
   3.8981898749841585`*^9}, 3.898189912451374*^9, {3.898191372282792*^9, 
   3.898191372819975*^9}, {3.8981926538858857`*^9, 3.8981926548710938`*^9}, {
   3.898270277388694*^9, 3.898270382323929*^9}, {3.8982705488879175`*^9, 
   3.898270559060855*^9}, {3.898270926220521*^9, 3.8982709480650296`*^9}, {
   3.8982709936884136`*^9, 3.898271121997857*^9}, {3.8982711685775843`*^9, 
   3.898271237156252*^9}, {3.8982713122946773`*^9, 3.8982714933645134`*^9}, {
   3.898271541132036*^9, 3.8982717675531116`*^9}, {3.8982718323951783`*^9, 
   3.8982718377671747`*^9}, {3.898271904507515*^9, 3.898272094773512*^9}, {
   3.8982721470213375`*^9, 3.8982722524277377`*^9}, {3.898272293911726*^9, 
   3.898272447735338*^9}, {3.898272622341422*^9, 3.8982726233434153`*^9}, {
   3.8983167372178183`*^9, 3.8983168734013066`*^9}, {3.8983169373927975`*^9, 
   3.898316937595925*^9}, {3.898317032827695*^9, 3.898317111272623*^9}, {
   3.8983208858591843`*^9, 3.8983208863335724`*^9}, {3.8983210644132743`*^9, 
   3.8983210657514977`*^9}, {3.898344036243639*^9, 3.898344047112141*^9}, 
   3.898349219777611*^9, {3.89836496780704*^9, 3.898364971449971*^9}, {
   3.8983650243397474`*^9, 3.898365040749883*^9}, 3.8993078711600323`*^9, {
   3.899309030854783*^9, 3.8993090333613596`*^9}, {3.89930913556631*^9, 
   3.8993091480947437`*^9}, {3.8993091842982006`*^9, 
   3.8993093007383966`*^9}, {3.8993093481879215`*^9, 3.899309353741495*^9}, {
   3.899309389217536*^9, 3.8993094063920174`*^9}, {3.8993094596206264`*^9, 
   3.899309582401676*^9}, {3.8993096154136887`*^9, 3.899309657665123*^9}, {
   3.8993097380216703`*^9, 3.8993097927851863`*^9}, {3.8993853060782895`*^9, 
   3.89938541657794*^9}, 3.89938548746007*^9, 3.89938567249382*^9, {
   3.89938574080431*^9, 3.8993857415709357`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"f5335562-f277-4e1d-a91f-fa70910e4fdb"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Waiting to receive setup from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.9139489432144337`*^9},
 CellLabel->
  "During evaluation of \
In[52]:=",ExpressionUUID->"178970b7-bdab-4c0a-a805-95b338a33795"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"p is prime\"\>", "True"},
    {"\<\"bits of p\"\>", "256"},
    {"\<\"|\\!\\(\\*SubscriptBox[\\(n\\), \\(EC\\)]\\) - (p+1)| <= \
2\\!\\(\\*SqrtBox[SubscriptBox[\\(n\\), \
\\(EC\\)]]\\);\\n(\\!\\(\\*SubscriptBox[\\(n\\), \\(EC\\)]\\) = number of \
points on EC)\\n(Hasse's Theorem on ECs)\"\>", "True"},
    {"\<\"q is prime\"\>", "True"},
    {"\<\"bits of q\"\>", "256"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(h\\), \\(EC\\)]\\)\"\>", "1"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(h\\), \\(EC\\)]\\) * q \
\\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) \\!\\(\\*SubscriptBox[\\(n\\), \
\\(EC\\)]\\)\"\>", "True"},
    {"\<\"qg = \[ScriptCapitalO]\"\>", "True"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.9139489433164225`*^9},
 CellLabel->
  "During evaluation of \
In[52]:=",ExpressionUUID->"f142a907-0417-4ac7-a6bc-bbe20ea8e15e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Name/Equation\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Semantics\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Value/Equality\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {"\<\"n\"\>", "\<\"Number of Elements\\nto be Shuffled\"\>", "3"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.913948943330412*^9},
 CellLabel->
  "During evaluation of \
In[52]:=",ExpressionUUID->"9271ce5d-c323-46e9-ad7b-a1a9779a3d1d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["NUMS Generators for Pedersen Commitments", "Subsection",
 CellChangeTimes->{{3.886669117149886*^9, 
  3.8866691345738077`*^9}},ExpressionUUID->"c492a59f-41fe-4f70-93f0-\
b8f335ca46fa"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]NUMS\[CloseCurlyDoubleQuote] \
(\[OpenCurlyDoubleQuote]nothing up my sleeve\[CloseCurlyDoubleQuote]) \
generators for Pedersen Commitments. Created based on ",
 Cell[BoxData[
 "fixedNUMSRandomSeed"], "InlineCode",ExpressionUUID->
  "23415c9f-056b-451e-8104-c18608ee879d"]
}], "Text",
 CellChangeTimes->{{3.886672321575017*^9, 3.886672406477848*^9}, {
   3.88667247830145*^9, 3.8866724933250127`*^9}, {3.886672728605925*^9, 
   3.88667275170693*^9}, {3.8867381653649645`*^9, 3.886738174865137*^9}, 
   3.8983213755731955`*^9},ExpressionUUID->"f6848030-2bba-44b8-9885-\
fb0a5e44d11f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"StateMachineRestore", "[", "\"\<Setup\>\"", "]"}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", 
   RowBox[{
   "Standard", " ", "\"\<NUMS\>\"", " ", "generator", " ", "point", " ", "g", 
    " ", "is", " ", "already", " ", "given"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
   "Get", " ", "more", " ", "\"\<NUMS\>\"", " ", "generator", " ", "points", 
    " ", "with", " ", "pseudorandom", " ", "number", " ", "generator", " ", 
    "initialized", " ", "by", " ", "fixed", " ", "constant"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"Standard", " ", "behaviour"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"BlockRandom", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"SeedRandom", "[", 
     RowBox[{"fixedNUMSRandomSeed", ",", 
      RowBox[{"Method", "->", "\"\<ExtendedCA\>\""}]}], "]"}], ";", "\n", 
    "\t", 
    RowBox[{"numsGenerators", " ", "=", " ", 
     RowBox[{"ecRandomGenerators", "[", 
      RowBox[{"p", ",", 
       SubscriptBox["h", "EC"], ",", 
       RowBox[{"n", "+", "2"}]}], "]"}]}], ";"}], "\n", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"h", " ", "=", " ", 
   RowBox[{"numsGenerators", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox["g", "\[RightVector]"], " ", "=", " ", 
   RowBox[{"numsGenerators", "[", 
    RowBox[{"[", 
     RowBox[{"2", ";;", 
      RowBox[{"n", "+", "1"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SuperscriptBox["g", "'"], " ", "=", " ", 
   RowBox[{"numsGenerators", "[", 
    RowBox[{"[", 
     RowBox[{"n", "+", "2"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"GiveInsight", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<h\>\"", "->", "h"}], ",", 
     RowBox[{"\"\<gvec\>\"", "->", 
      OverscriptBox["g", "\[RightVector]"]}], ",", 
     RowBox[{"\"\<g'\>\"", "->", 
      SuperscriptBox["g", "'"]}]}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"Join", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Knowledge\>\"", ",", "Bold"}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{"{", 
          RowBox[{"\"\<g\>\"", ",", "\"\<public\>\"", ",", "g"}], "}"}], ",", 
         "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{"\"\<h\>\"", ",", "\"\<public\>\"", ",", "h"}], "}"}]}], 
        "\n", "\t", "}"}], ",", " ", "\n", "\t", 
       RowBox[{"MapIndexed", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<\!\(\*OverscriptBox[\(g\), \(\[RightVector]\)]\).\>\"", "<>", 
             RowBox[{"IntegerString", "[", 
              RowBox[{"First", "[", "#2", "]"}], "]"}]}], ",", 
            "\"\<public (implicit)\>\"", ",", "#1"}], "}"}], "&"}], ",", 
         OverscriptBox["g", "\[RightVector]"]}], "]"}], ",", "\n", "\t", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{"{", 
         RowBox[{"\"\<g'\>\"", ",", "\"\<public\>\"", ",", 
          SuperscriptBox["g", "'"]}], "}"}], "\n", "\t", "}"}]}], "\n", "]"}],
      ",", " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left"}], "}"}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "interactive"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"numsParameters", " ", "=", " ", 
      RowBox[{"Join", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"<|", "\n", "\t\t\t", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Already", " ", 
            RowBox[{"added", ":", "\n", "\t\t\t", "\"\<nums_seed\>\""}]}], "->",
            "fixedNUMSRandomSeed"}], "*)"}], "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"\"\<nums_method\>\"", "->", 
           RowBox[{
           "StringToInteger", "[", "\"\<Mathematica-ExtendedCA\>\"", "]"}]}], 
          ",", "\n", "\t\t\t", 
          RowBox[{"\"\<g\>\"", "->", 
           RowBox[{"compressPoint", "[", "g", "]"}]}], ",", "\n", "\t\t\t", 
          RowBox[{"\"\<h\>\"", "->", 
           RowBox[{"compressPoint", "[", "h", "]"}]}]}], "\n", "\t\t", "|>"}],
         ",", "\n", "\t\t", 
        RowBox[{"Association", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\"\<g.\>\"", "<>", 
              RowBox[{"IntegerString", "[", "#", "]"}]}], "->", 
             RowBox[{"compressPoint", "[", 
              RowBox[{
               OverscriptBox["g", "\[RightVector]"], "[", 
               RowBox[{"[", "#", "]"}], "]"}], "]"}]}], "&"}], ",", " ", 
           RowBox[{"Range", "[", "n", "]"}]}], "]"}], "]"}], ",", "\n", 
        "\t\t", 
        RowBox[{"<|", "\n", "\t\t\t", 
         RowBox[{"\"\<g'\>\"", "->", 
          RowBox[{"compressPoint", "[", 
           SuperscriptBox["g", "'"], "]"}]}], "\n", "\t\t", "|>"}]}], "\n", 
       "\t", "]"}]}], ";", "\n", "\t", 
     RowBox[{"Scan", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"FiatShamirAdd", "[", 
         RowBox[{"#", ",", " ", 
          RowBox[{"numsParameters", "[", "#", "]"}], ",", " ", "0"}], "]"}], 
        "&"}], ",", "\n", "\t\t", 
       RowBox[{"Sort", "[", 
        RowBox[{"Keys", "[", "numsParameters", "]"}], "]"}]}], "\n", "\t", 
      "]"}], ";", "\n", "\t", 
     RowBox[{"Print", "[", 
      RowBox[{"FiatShamirGrid", "[", "]"}], "]"}], ";"}]}], "\n", "]"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"ProcessNewMessages", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"StateMachineSave", "[", "\"\<NUMS\>\"", "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.881611267233099*^9, 3.8816112678870163`*^9}, {
   3.881611305861981*^9, 3.881611367692526*^9}, {3.881612388077072*^9, 
   3.8816123888624268`*^9}, {3.881613483351815*^9, 3.8816135877598886`*^9}, {
   3.881613631488398*^9, 3.8816137275903482`*^9}, {3.881614033955858*^9, 
   3.881614381496943*^9}, {3.882295234175817*^9, 3.882295514933865*^9}, {
   3.882295562817848*^9, 3.8822956145998583`*^9}, {3.882295648145958*^9, 
   3.8822956615701103`*^9}, {3.882299078122971*^9, 3.882299501332181*^9}, {
   3.882299562211405*^9, 3.882299582438773*^9}, {3.8822996437964287`*^9, 
   3.88229981550349*^9}, {3.882299845890562*^9, 3.882300053383555*^9}, {
   3.882306480609292*^9, 3.88230661963726*^9}, {3.8823066553043327`*^9, 
   3.882306657949801*^9}, {3.882306922982127*^9, 3.882307037850234*^9}, {
   3.882307081932117*^9, 3.882307092178425*^9}, {3.882307965645447*^9, 
   3.882308193775022*^9}, {3.882426384666493*^9, 3.882426385563363*^9}, {
   3.882426482103406*^9, 3.882426495433629*^9}, {3.882426569292823*^9, 
   3.8824266883995323`*^9}, {3.882426744424374*^9, 3.8824267821474648`*^9}, {
   3.88242688348168*^9, 3.882427034848382*^9}, {3.882427092456151*^9, 
   3.8824270984561777`*^9}, {3.882614495501625*^9, 3.882614931320109*^9}, {
   3.882614965640972*^9, 3.882615013854362*^9}, {3.882615065385633*^9, 
   3.882615094338655*^9}, {3.8826151442183447`*^9, 3.882615318654228*^9}, {
   3.8826270181994762`*^9, 3.8826270239377937`*^9}, {3.882630775144374*^9, 
   3.882630785372822*^9}, {3.882868160232136*^9, 3.882868160989832*^9}, {
   3.8828685538422403`*^9, 3.882868587825058*^9}, {3.88287058116236*^9, 
   3.882870634171438*^9}, {3.882873275178392*^9, 3.882873275790399*^9}, {
   3.882902581925274*^9, 3.882902620027721*^9}, {3.882952085481254*^9, 
   3.882952094210978*^9}, 3.8835079428428583`*^9, {3.883508046101471*^9, 
   3.8835080825188723`*^9}, {3.883593057102131*^9, 3.883593075486949*^9}, {
   3.8835932203286667`*^9, 3.883593233388596*^9}, {3.883774726025736*^9, 
   3.883774801248807*^9}, {3.884367930939432*^9, 3.884367978729415*^9}, 
   3.884368010507949*^9, {3.884788733227435*^9, 3.884788734242415*^9}, {
   3.886669142028721*^9, 3.886669219004548*^9}, {3.886669264306959*^9, 
   3.8866693247860155`*^9}, {3.886670185955055*^9, 3.8866704576210513`*^9}, {
   3.886671585292697*^9, 3.886671779261938*^9}, {3.8866718465551147`*^9, 
   3.8866719439261*^9}, {3.886671998601804*^9, 3.886672020497059*^9}, {
   3.886672258534028*^9, 3.886672273913044*^9}, {3.886672442982859*^9, 
   3.8866724670285487`*^9}, 3.886672713455326*^9, {3.886672785495875*^9, 
   3.8866728008869143`*^9}, 3.886672849369367*^9, 3.88667355703472*^9, {
   3.886674406487527*^9, 3.886674407861404*^9}, 3.8866745855866966`*^9, {
   3.886674714701798*^9, 3.886674718999462*^9}, {3.886674767890582*^9, 
   3.886674792321434*^9}, {3.8866749609969945`*^9, 3.8866749890739365`*^9}, 
   3.886675029425592*^9, 3.886738571852249*^9, {3.887396565628125*^9, 
   3.887396572178132*^9}, {3.8874820372840953`*^9, 3.8874820375629787`*^9}, {
   3.88748209716356*^9, 3.8874821000944557`*^9}, {3.8874821347395625`*^9, 
   3.887482137522623*^9}, 3.8874822125748224`*^9, {3.88748245847666*^9, 
   3.887482459620388*^9}, {3.8874858440928593`*^9, 3.887485844746806*^9}, 
   3.8874878820628214`*^9, 3.8874893261835294`*^9, 3.887617451678618*^9, {
   3.887618447362409*^9, 3.887618474845643*^9}, 3.8876359343326254`*^9, 
   3.887636050098424*^9, {3.887636344160102*^9, 3.887636407129819*^9}, {
   3.8876371865692177`*^9, 3.88763727746626*^9}, {3.8876375096603036`*^9, 
   3.8876375305791955`*^9}, {3.8876375734134274`*^9, 3.887637707611678*^9}, {
   3.8876377841088943`*^9, 3.8876378317294173`*^9}, {3.887643801613142*^9, 
   3.8876438198272743`*^9}, {3.8876439795900583`*^9, 3.887644013433631*^9}, {
   3.8876442915711384`*^9, 3.8876442933082943`*^9}, 3.8894603146392994`*^9, 
   3.892392569644825*^9, 3.892394701794793*^9, {3.892395194969152*^9, 
   3.892395203218128*^9}, {3.8983214355699844`*^9, 3.8983214634876757`*^9}, {
   3.8983218935760016`*^9, 3.898321893668636*^9}, {3.898321982393484*^9, 
   3.898321986207222*^9}, {3.898322198501176*^9, 3.898322205240183*^9}, 
   3.898325188214439*^9, {3.8983252410839987`*^9, 3.89832524125799*^9}, {
   3.8983650674778643`*^9, 3.898365068974246*^9}, {3.9113994242752953`*^9, 
   3.911399477841543*^9}, 3.9113995695379333`*^9, 3.91139968156502*^9, {
   3.9114048347321568`*^9, 3.9114048476453257`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"382b5246-672b-4169-81b0-1275686c70c9"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Name\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Knowledge\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Value\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {"\<\"g\"\>", "\<\"public\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "55066263022277343669578718895168534326250603453777594175500187360389116\
729240", ",", 
       "3267051002075881697808308513050704318447127338065924327593890433575733\
7482424"}], "]"}]},
    {"\<\"h\"\>", "\<\"public\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "96137567500391445872529956175960328224372161700720340121622040718272419\
693213", ",", 
       "7073201208330433862055468844061383467466795955757973914571965846813637\
5884866"}], "]"}]},
    {"\<\"\\!\\(\\*OverscriptBox[\\(g\\), \\(\[RightVector]\\)]\\).1\"\>", \
"\<\"public (implicit)\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "10154847012435821018807267918167818845038778991665471846237432127716180\
5765354", ",", 
       "7010835063303519975906537635437071921035751054439276679602771141458708\
6150112"}], "]"}]},
    {"\<\"\\!\\(\\*OverscriptBox[\\(g\\), \\(\[RightVector]\\)]\\).2\"\>", \
"\<\"public (implicit)\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "81881281191882355160881140819926411859223579216161786219247020789084841\
886435", ",", 
       "4055152606342064442158096538672572985954414705312359852538253155693466\
6119757"}], "]"}]},
    {"\<\"\\!\\(\\*OverscriptBox[\\(g\\), \\(\[RightVector]\\)]\\).3\"\>", \
"\<\"public (implicit)\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "27427957168767222510921650620077570798709753797557336240233137618475833\
226690", ",", 
       "4265044150952028444800573751571033163016320984676295713464551239272435\
6208176"}], "]"}]},
    {"\<\"g'\"\>", "\<\"public\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "56472720079496714458128130368877680293647814114642090837679403063618918\
620862", ",", 
       "1409574216230205928085731360218395254916935586156740265109284118691243\
3952389"}], "]"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.9139489434193788`*^9},
 CellLabel->
  "During evaluation of \
In[71]:=",ExpressionUUID->"fb69958c-ab39-43d8-8a4a-4b5e5757aedc"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Shuffle Proof", "Section",
 CellChangeTimes->{{3.8866755964292774`*^9, 3.88667560657975*^9}, {
  3.8923943552623463`*^9, 
  3.892394355814794*^9}},ExpressionUUID->"16b1050f-9bcc-4fa9-91af-\
fcf02bdf842e"],

Cell[CellGroupData[{

Cell[TextData[{
 "Get public ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["h", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "efc249d3-a004-4c2c-b7a2-e68d9c71bf3a"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["b", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "870697d6-a48e-4aa6-99a5-b33c4e83e026"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["c", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "2d34d47d-fcb9-4b81-917b-cc084745d42b"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["d", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "bf57a836-8728-4e2a-9974-79285992f474"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{"h", "'"}], "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "202755dd-6dd0-4758-a06a-617b3bbd9f17"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{"b", "'"}], "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "9186104a-9596-471f-96cd-a6cc6cf53c37"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{"c", "'"}], "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "7f618b90-00a2-43c9-a330-2ec583178326"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{"d", "'"}], "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "649b4b8a-ec2a-497c-9e77-14b30e3122a5"],
 ", Receive W and V"
}], "Subsection",
 CellChangeTimes->{{3.892393498715678*^9, 3.8923935444582767`*^9}, {
   3.892393630239914*^9, 3.892393630367642*^9}, {3.892393715828499*^9, 
   3.8923937257711897`*^9}, 3.898322161977003*^9, {3.911397229694217*^9, 
   3.9113972577358007`*^9}},ExpressionUUID->"5c5a834f-7f3f-4468-a9e2-\
0cd8bcef3769"],

Cell[TextData[{
 StyleBox["Public:",
  FontWeight->"Bold"],
 "\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox["h", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "e880c020-9650-44d9-8374-54a0ee924760"],
 ": public keys of receivers - to allow receivers to identify their messages\n\
",
 Cell[BoxData[
  FormBox[
   OverscriptBox["b", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "af2ace9f-e6c2-4da5-abd8-f7b5be2c7f00"],
 ": commitments to blinding values - ElGamal randomizers\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox["c", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "ad54adc5-df7c-4d22-adf7-cf4bbc4eca16"],
 ": blinded commitments to messages - ElGamal message\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox["d", "\[RightVector]"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "6b8e50a5-3100-48d0-9bb7-383eb765ec85"],
 ": public keys of senders - to allow receivers to reply\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{"h", "'"}], "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "629dbd9a-a2b7-42d4-984d-ebd4206e8292"],
 ": shuffled and shifted ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["h", "\[RightVector]"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c237fb09-8c9e-4226-90c5-8b36596cbc79"],
 "\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{"b", "'"}], "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "3695a41e-b92f-48b3-b489-0f0fe8904b46"],
 ": shuffled and shifted ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["b", "\[RightVector]"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "06b52302-c6d7-4e53-9e4e-8a31ce6bf3e9"],
 "\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{"c", "'"}], "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "a9c70bad-a2ff-43b8-a3eb-e5a554a3cff1"],
 ": shuffled and shifted ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["c", "\[RightVector]"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f7a906ca-1e0b-4f29-838e-c6f6d30d9c7a"],
 "\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{"d", "'"}], "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "0037862b-e11d-4026-9d71-c454d4458b84"],
 ": shuffled and shifted ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["d", "\[RightVector]"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1959fce3-80c6-4cc3-8057-124879ec8574"],
 "\n",
 StyleBox["CRS:",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "5934ee27-88f0-4cd0-a0b7-677346257c07"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["g", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "a75e445a-3bf1-4737-95ec-5a3730fad299"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["h", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "86e87237-faba-4785-8203-4ae837a508c7"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["b", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "6b34df62-d50e-420a-a185-3c5d971bcad4"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["c", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "1495c6b0-19d1-4dd5-92f0-09654ddec4e6"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["d", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "6b057148-596c-4d03-991b-f21d576f1c6b"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{"h", "'"}], "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "4c78da92-7cc7-4a8d-b761-1527f85e7ff7"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{"b", "'"}], "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "ee3f48e3-554d-4348-be64-e5648275e9d8"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{"c", "'"}], "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "3d74322a-7699-4690-8191-3c6926ad41e7"],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{"d", "'"}], "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "1fcf3edf-b909-4c87-a5cf-d812b24dc491"],
 "\n",
 StyleBox["Commitment to Shift ",
  FontWeight->"Bold"],
 StyleBox["s",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[":",
  FontWeight->"Bold"],
 "\nV: commitment to ",
 Cell[BoxData[
  FormBox["s", TraditionalForm]],ExpressionUUID->
  "34be428b-1d05-4aec-be9d-6ddd833d7d92"],
 "\nW: commitment to ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["s", "n"], TraditionalForm]],ExpressionUUID->
  "5e370b7d-2a84-44c4-b599-03d707cf15e6"]
}], "Text",
 CellChangeTimes->{{3.892393670701833*^9, 3.8923936763190317`*^9}, {
   3.892393734470244*^9, 3.892393776011011*^9}, {3.8924678826007977`*^9, 
   3.892467926442226*^9}, {3.892477380797464*^9, 3.892477387500866*^9}, {
   3.8993873889559045`*^9, 3.8993874087561235`*^9}, {3.9113972630487795`*^9, 
   3.911397288401743*^9}, {3.9113973235308695`*^9, 3.9113973661172514`*^9}, {
   3.911397407780838*^9, 3.911397427316818*^9}, {3.9113974800128236`*^9, 
   3.9113975469389653`*^9}, {3.9113990227304883`*^9, 3.9113991090966716`*^9}, 
   3.911404974786105*^9},ExpressionUUID->"ca09bbbe-0f43-4e0d-87df-\
fde4cb3250b5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"StateMachineRestore", "[", "\"\<NUMS\>\"", "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"V", " ", "=", " ", 
   RowBox[{"WaitForProversVariable", "[", "\"\<V\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"W", " ", "=", " ", 
    RowBox[{"WaitForProversVariable", "[", "\"\<W\>\"", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{"interactive", ",", "\n", 
     RowBox[{"(*", 
      RowBox[{"now", ",", " ", 
       RowBox[{
       "that", " ", "the", " ", "verifier", " ", "has", " ", "received", " ", 
        "the", " ", "encrypted", " ", "shuffles"}], ",", " ", 
       RowBox[{
       "he", " ", "knows", " ", "the", " ", "CRS", " ", "is", " ", 
        "ready"}]}], "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"SendVariables", "[", 
       RowBox[{"\"\<Inspector\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<__get_public_room_info__\>\"", "->", "True"}], ",", 
          RowBox[{"\"\<__room_password__\>\"", "->", "roomPassword"}]}], 
         "}"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"roomInfo", " ", "=", " ", 
       RowBox[{
       "WaitForVariable", "[", "\"\<__get_public_room_info__\>\"", "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"crs", " ", "=", " ", 
       RowBox[{"roomInfo", "[", "\"\<crs\>\"", "]"}]}], ";"}], "\n", 
     RowBox[{"(*", "Else", "*)"}], ",", "\n", 
     RowBox[{"(*", 
      RowBox[{
      "Already", " ", "received", " ", "crs", " ", "with", " ", "previous", 
       " ", "request", " ", "of", " ", "public", " ", "room", " ", "info"}], 
      "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"crs", " ", "=", " ", 
       RowBox[{"roomInfo", "[", "\"\<crs\>\"", "]"}]}], ";"}]}], "\n", "]"}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"KeyExistsQ", "[", 
      RowBox[{"crs", ",", " ", "\"\<hvec\>\""}], "]"}]}], ",", " ", 
    RowBox[{
    "VerificationFailed", "[", 
     "\"\<Assertion Error: Missing 'hvec' in CRS\>\"", "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"KeyExistsQ", "[", 
      RowBox[{"crs", ",", " ", "\"\<bvec\>\""}], "]"}]}], ",", " ", 
    RowBox[{
    "VerificationFailed", "[", 
     "\"\<Assertion Error: Missing 'bvec' in CRS\>\"", "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"KeyExistsQ", "[", 
      RowBox[{"crs", ",", " ", "\"\<cvec\>\""}], "]"}]}], ",", " ", 
    RowBox[{
    "VerificationFailed", "[", 
     "\"\<Assertion Error: Missing 'cvec' in CRS\>\"", "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"KeyExistsQ", "[", 
      RowBox[{"crs", ",", " ", "\"\<dvec\>\""}], "]"}]}], ",", " ", 
    RowBox[{
    "VerificationFailed", "[", 
     "\"\<Assertion Error: Missing 'dvec' in CRS\>\"", "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"KeyExistsQ", "[", 
      RowBox[{"crs", ",", " ", "\"\<hprimevec\>\""}], "]"}]}], ",", " ", 
    RowBox[{
    "VerificationFailed", "[", 
     "\"\<Assertion Error: Missing 'hprimevec' in CRS\>\"", "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"KeyExistsQ", "[", 
      RowBox[{"crs", ",", " ", "\"\<bprimevec\>\""}], "]"}]}], ",", " ", 
    RowBox[{
    "VerificationFailed", "[", 
     "\"\<Assertion Error: Missing 'bprimevec' in CRS\>\"", "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"KeyExistsQ", "[", 
      RowBox[{"crs", ",", " ", "\"\<cprimevec\>\""}], "]"}]}], ",", " ", 
    RowBox[{
    "VerificationFailed", "[", 
     "\"\<Assertion Error: Missing 'cprimevec' in CRS\>\"", "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"KeyExistsQ", "[", 
      RowBox[{"crs", ",", " ", "\"\<dprimevec\>\""}], "]"}]}], ",", " ", 
    RowBox[{
    "VerificationFailed", "[", 
     "\"\<Assertion Error: Missing 'dprimevec' in CRS\>\"", "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox["h", "\[RightVector]"], " ", "=", " ", 
   RowBox[{"crs", "[", "\"\<hvec\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox["b", "\[RightVector]"], " ", "=", " ", 
   RowBox[{"crs", "[", "\"\<bvec\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox["c", "\[RightVector]"], " ", "=", " ", 
   RowBox[{"crs", "[", "\"\<cvec\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox["d", "\[RightVector]"], " ", "=", " ", 
   RowBox[{"crs", "[", "\"\<dvec\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    RowBox[{"h", "'"}], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"crs", "[", "\"\<hprimevec\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    RowBox[{"b", "'"}], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"crs", "[", "\"\<bprimevec\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    RowBox[{"c", "'"}], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"crs", "[", "\"\<cprimevec\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    OverscriptBox[
     RowBox[{"d", "'"}], "\[RightVector]"], " ", "=", " ", 
    RowBox[{"crs", "[", "\"\<dprimevec\>\"", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FiatShamirAdd", "[", 
          RowBox[{
           RowBox[{"\"\<h.\>\"", "<>", 
            RowBox[{"ToString", "[", "#", "]"}]}], ",", " ", 
           RowBox[{
            OverscriptBox["h", "\[RightVector]"], "[", 
            RowBox[{"[", "#", "]"}], "]"}], ",", " ", "0"}], "]"}], "&"}], 
        ",", " ", 
        RowBox[{"Range", "[", "n", "]"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FiatShamirAdd", "[", 
          RowBox[{
           RowBox[{"\"\<b.\>\"", "<>", 
            RowBox[{"ToString", "[", "#", "]"}]}], ",", " ", 
           RowBox[{
            OverscriptBox["b", "\[RightVector]"], "[", 
            RowBox[{"[", "#", "]"}], "]"}], ",", " ", "0"}], "]"}], "&"}], 
        ",", " ", 
        RowBox[{"Range", "[", "n", "]"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FiatShamirAdd", "[", 
          RowBox[{
           RowBox[{"\"\<c.\>\"", "<>", 
            RowBox[{"ToString", "[", "#", "]"}]}], ",", " ", 
           RowBox[{
            OverscriptBox["c", "\[RightVector]"], "[", 
            RowBox[{"[", "#", "]"}], "]"}], ",", " ", "0"}], "]"}], "&"}], 
        ",", " ", 
        RowBox[{"Range", "[", "n", "]"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FiatShamirAdd", "[", 
          RowBox[{
           RowBox[{"\"\<d.\>\"", "<>", 
            RowBox[{"ToString", "[", "#", "]"}]}], ",", " ", 
           RowBox[{
            OverscriptBox["d", "\[RightVector]"], "[", 
            RowBox[{"[", "#", "]"}], "]"}], ",", " ", "0"}], "]"}], "&"}], 
        ",", " ", 
        RowBox[{"Range", "[", "n", "]"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FiatShamirAdd", "[", 
          RowBox[{
           RowBox[{"\"\<h'.\>\"", "<>", 
            RowBox[{"ToString", "[", "#", "]"}]}], ",", " ", 
           RowBox[{
            OverscriptBox[
             RowBox[{"h", "'"}], "\[RightVector]"], "[", 
            RowBox[{"[", "#", "]"}], "]"}], ",", " ", "0"}], "]"}], "&"}], 
        ",", " ", 
        RowBox[{"Range", "[", "n", "]"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FiatShamirAdd", "[", 
          RowBox[{
           RowBox[{"\"\<b'.\>\"", "<>", 
            RowBox[{"ToString", "[", "#", "]"}]}], ",", " ", 
           RowBox[{
            OverscriptBox[
             RowBox[{"b", "'"}], "\[RightVector]"], "[", 
            RowBox[{"[", "#", "]"}], "]"}], ",", " ", "0"}], "]"}], "&"}], 
        ",", " ", 
        RowBox[{"Range", "[", "n", "]"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FiatShamirAdd", "[", 
          RowBox[{
           RowBox[{"\"\<c'.\>\"", "<>", 
            RowBox[{"ToString", "[", "#", "]"}]}], ",", " ", 
           RowBox[{
            OverscriptBox[
             RowBox[{"c", "'"}], "\[RightVector]"], "[", 
            RowBox[{"[", "#", "]"}], "]"}], ",", " ", "0"}], "]"}], "&"}], 
        ",", " ", 
        RowBox[{"Range", "[", "n", "]"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FiatShamirAdd", "[", 
          RowBox[{
           RowBox[{"\"\<d'.\>\"", "<>", 
            RowBox[{"ToString", "[", "#", "]"}]}], ",", " ", 
           RowBox[{
            OverscriptBox[
             RowBox[{"d", "'"}], "\[RightVector]"], "[", 
            RowBox[{"[", "#", "]"}], "]"}], ",", " ", "0"}], "]"}], "&"}], 
        ",", " ", 
        RowBox[{"Range", "[", "n", "]"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"FiatShamirAdd", "[", 
       RowBox[{"\"\<V\>\"", ",", " ", 
        RowBox[{"compressPoint", "[", "V", "]"}], ",", " ", 
        RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}], 
      ";", "\n", "\t", 
      RowBox[{"FiatShamirAdd", "[", 
       RowBox[{"\"\<W\>\"", ",", " ", 
        RowBox[{"compressPoint", "[", "W", "]"}], ",", " ", 
        RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}], 
      ";"}]}], "\n", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Name/Equation\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Value/Equality\>\"", ",", "Bold"}], "]"}]}], "}"}], 
       ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(h\), \(\[RightVector]\)]\)\>\"", ",", 
         "\"\<Public Keys of Receivers for Message Identification\>\"", ",", 
         "\"\<P,V\>\"", ",", 
         OverscriptBox["h", "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(b\), \(\[RightVector]\)]\)\>\"", ",", 
         "\"\<Commitments to \!\(\*OverscriptBox[\(\[Gamma]\), \(\
\[RightVector]\)]\): ElGamal randomizer part\>\"", ",", "\"\<P,V\>\"", ",", 
         OverscriptBox["b", "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(c\), \(\[RightVector]\)]\)\>\"", ",", 
         "\"\<Blinded Commitments \!\(\*OverscriptBox[\(m\), \(\[RightVector]\
\)]\): ElGamal message part\>\"", ",", "\"\<P,V\>\"", ",", 
         OverscriptBox["c", "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(d\), \(\[RightVector]\)]\)\>\"", ",", 
         "\"\<Public Keys of Senders to Allow Receivers to Reply\>\"", ",", 
         "\"\<P,V\>\"", ",", 
         OverscriptBox["d", "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(h'\), \(\[RightVector]\)]\)\>\"", ",", 
         "\"\<Shuffled and Shifted \!\(\*OverscriptBox[\(h\), \
\(\[RightVector]\)]\)\>\"", ",", "\"\<P,V\>\"", ",", 
         OverscriptBox[
          RowBox[{"h", "'"}], "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(b'\), \(\[RightVector]\)]\)\>\"", ",", 
         "\"\<Shuffled and Shifted \!\(\*OverscriptBox[\(b\), \
\(\[RightVector]\)]\)\>\"", ",", "\"\<P,V\>\"", ",", 
         OverscriptBox[
          RowBox[{"b", "'"}], "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(c'\), \(\[RightVector]\)]\)\>\"", ",", 
         "\"\<Shuffled and Shifted \!\(\*OverscriptBox[\(c\), \
\(\[RightVector]\)]\)\>\"", ",", "\"\<P,V\>\"", ",", 
         OverscriptBox[
          RowBox[{"c", "'"}], "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(d'\), \(\[RightVector]\)]\)\>\"", ",", 
         "\"\<Shuffled and Shifted \!\(\*OverscriptBox[\(d\), \
\(\[RightVector]\)]\)\>\"", ",", "\"\<P,V\>\"", ",", 
         OverscriptBox[
          RowBox[{"d", "'"}], "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{"\"\<V\>\"", ",", "\"\<Commitment\>\"", ",", "V"}], "}"}], 
       ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<W\>\"", ",", "\"\<Blinded Pedersen Commitment\>\"", ",", "W"}], 
        "}"}]}], "\[IndentingNewLine]", "}"}], ",", " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left"}], "}"}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "interactive"}], ",", " ", 
    RowBox[{"Print", "[", 
     RowBox[{"FiatShamirGrid", "[", "]"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ProcessNewMessages", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"StateMachineSave", "[", "\"\<Shuffle\>\"", "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.892393786294475*^9, 3.89239386456702*^9}, {
   3.892393958363716*^9, 3.892393979353691*^9}, {3.892394023439941*^9, 
   3.892394173285985*^9}, {3.8923942091348267`*^9, 3.892394209265592*^9}, {
   3.8923946548590317`*^9, 3.8923946759118423`*^9}, {3.892399746607922*^9, 
   3.8923997542819633`*^9}, {3.89240048205539*^9, 3.892400578901259*^9}, {
   3.892400630568231*^9, 3.892400692694889*^9}, {3.892400786846561*^9, 
   3.892400959950865*^9}, {3.892402376573566*^9, 3.892402390609105*^9}, {
   3.892467877589005*^9, 3.8924678778728*^9}, {3.892477356484119*^9, 
   3.892477373885067*^9}, {3.8983221912415543`*^9, 3.898322192159793*^9}, {
   3.898323297937896*^9, 3.8983233518875017`*^9}, {3.898323388377037*^9, 
   3.898323388465121*^9}, {3.898323428350635*^9, 3.8983234474077435`*^9}, {
   3.8983234883366227`*^9, 3.8983236309921584`*^9}, {3.898323724269043*^9, 
   3.8983238593890657`*^9}, {3.8983239081757574`*^9, 3.898323916972134*^9}, {
   3.8983241458150415`*^9, 3.89832416296054*^9}, {3.898324246490715*^9, 
   3.8983242713678255`*^9}, {3.8983245462112584`*^9, 3.898324547449684*^9}, {
   3.898325421676567*^9, 3.898325428991653*^9}, {3.8983261170909195`*^9, 
   3.898326123942602*^9}, {3.89832660583417*^9, 3.8983266060076585`*^9}, {
   3.899271446819517*^9, 3.8992714927378845`*^9}, 3.8992717018283195`*^9, {
   3.8993859000520515`*^9, 3.8993859037869587`*^9}, {3.911404979668546*^9, 
   3.9114050485329714`*^9}, {3.91140508200111*^9, 3.9114050893916388`*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"6fec45b3-9a64-454e-ac8c-fdacb9fb6916"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Waiting to receive V from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.9139489434783287`*^9},
 CellLabel->
  "During evaluation of \
In[81]:=",ExpressionUUID->"d81ee03e-735b-4e01-99ed-d7d8faaf645b"],

Cell[BoxData["\<\"Waiting to receive W from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.913948944338468*^9},
 CellLabel->
  "During evaluation of \
In[81]:=",ExpressionUUID->"80d743ae-167a-4111-ac7a-600c2ad2ab8a"],

Cell[BoxData["\<\"Waiting to receive __get_public_room_info__ ...\"\>"], \
"Print",
 CellChangeTimes->{3.9139489444054317`*^9},
 CellLabel->
  "During evaluation of \
In[81]:=",ExpressionUUID->"fc41aa4f-cccd-44f7-b674-bca1048f7351"],

Cell[BoxData["\<\"Handling Event: success: __get_public_room_info__ \
(Inspector):\\n  Event Data: <|Length:7|>\\n  Keys: {status, \
__get_public_room_info__, _Message, _Valid, _SenderRoleAtId, _SenderRole, \
_SenderId, _ReceiverRoleAtId, _ReceiverRole, _ReceiverId, _UniqueKey, _Room, \
_DataFormat, _Data, _UnderscoreVars1, _UnderscoreVars2}\"\>"], "Print",
 CellChangeTimes->{3.913948944447407*^9},
 CellLabel->
  "During evaluation of \
In[81]:=",ExpressionUUID->"8b61ceba-2e9b-46be-bfdb-9cdf7b5d5948"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Name/Equation\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Semantics\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Value/Equality\"\>",
      StripOnInput->False,
      FontWeight->Bold], ""},
    {"\<\"\\!\\(\\*OverscriptBox[\\(h\\), \\(\[RightVector]\\)]\\)\"\>", \
"\<\"Public Keys of Receivers for Message Identification\"\>", "\<\"P,V\"\>", 
     
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "785674097981298148661500560603078103996738496710942114275537926180097\
91659223", ",", 
         "50464327830870926983164620566499054037449550745776160850919973618220\
747519859"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "112833199765439381220313056754339883049575956772957261999371154938084\
814614071", ",", 
         "55162480627138884082362925002107050797199473890589593047995087693795\
006543339"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "112833199765439381220313056754339883049575956772957261999371154938084\
814614071", ",", 
         "55162480627138884082362925002107050797199473890589593047995087693795\
006543339"}], "]"}]}], "}"}]},
    {"\<\"\\!\\(\\*OverscriptBox[\\(b\\), \\(\[RightVector]\\)]\\)\"\>", \
"\<\"Commitments to \\!\\(\\*OverscriptBox[\\(\[Gamma]\\), \
\\(\[RightVector]\\)]\\): ElGamal randomizer part\"\>", "\<\"P,V\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "590437198390560930604556477730311104265134154459595929062830225361099\
82690406", ",", 
         "15581121562794375473593189690062526490521359132176103829752471918632\
370295336"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "280429377539159307885470135996454487550921236528254916640729152099893\
52569125", ",", 
         "66178112684916740202185738178122665166924136365485410183964496421067\
142001343"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "111806062643405673294107625231702294233837817439330823704476585911809\
812118278", ",", 
         "96271173562246442335118096000002956980355600440300789883776848991926\
176478624"}], "]"}]}], "}"}]},
    {"\<\"\\!\\(\\*OverscriptBox[\\(c\\), \\(\[RightVector]\\)]\\)\"\>", \
"\<\"Blinded Commitments \\!\\(\\*OverscriptBox[\\(m\\), \
\\(\[RightVector]\\)]\\): ElGamal message part\"\>", "\<\"P,V\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "826779931946659024745411227286282391069746337307219163154487996543807\
24509062", ",", 
         "82899414855368741404724030068539514612899114324925700999638050403382\
505421116"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "231729124052787334154357106021448154799165881700145974184082781168252\
80333989", ",", 
         "10305398534302133447467399024894573057391326960242328298391239160439\
3736989700"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "692709026984550109812242830440387659968301112431739797196636652850997\
45648151", ",", 
         "11238069780225045328336309294587811742117677034545447683212306911382\
0053308875"}], "]"}]}], "}"}]},
    {"\<\"\\!\\(\\*OverscriptBox[\\(d\\), \\(\[RightVector]\\)]\\)\"\>", \
"\<\"Public Keys of Senders to Allow Receivers to Reply\"\>", "\<\"P,V\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "970388739976675561648906271591438165840367376014120471817861153251375\
86601893", ",", 
         "28632182194222295567409644033114434203763962660717808858714880991421\
895676479"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "785674097981298148661500560603078103996738496710942114275537926180097\
91659223", ",", 
         "50464327830870926983164620566499054037449550745776160850919973618220\
747519859"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "537297295139945956954624551955914896165670698327458508184429547914574\
54586503", ",", 
         "46689817571753923136101794604835956974062844035967844446006462798830\
494937046"}], "]"}]}], "}"}]},
    {"\<\"\\!\\(\\*OverscriptBox[\\(h'\\), \\(\[RightVector]\\)]\\)\"\>", "\<\
\"Shuffled and Shifted \\!\\(\\*OverscriptBox[\\(h\\), \
\\(\[RightVector]\\)]\\)\"\>", "\<\"P,V\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "655819435619392763963464744474303145656316743483596390130630274941462\
5082577", ",", 
         "52488910954347611664776036389515076273016905927124685240883874979762\
544524251"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "655819435619392763963464744474303145656316743483596390130630274941462\
5082577", ",", 
         "52488910954347611664776036389515076273016905927124685240883874979762\
544524251"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "108307431480415358180321645455139043814092501321721357106162810647213\
997236025", ",", 
         "36351342789842377099456363842641744188644647315961192968880873781984\
072160774"}], "]"}]}], "}"}]},
    {"\<\"\\!\\(\\*OverscriptBox[\\(b'\\), \\(\[RightVector]\\)]\\)\"\>", "\<\
\"Shuffled and Shifted \\!\\(\\*OverscriptBox[\\(b\\), \
\\(\[RightVector]\\)]\\)\"\>", "\<\"P,V\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "210150487229188888371635919284772203990537084878746811814622152073333\
5251689", ",", 
         "65115508047731923893233981475555061524146271691497591331496761282280\
449337031"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "669273835229763042361571014805917365798471327367148885150434270376069\
02257812", ",", 
         "10757206864234046912497974723581022910919449267169518262732546654870\
2521834811"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "545977201639643103548220015117222884038204251056737322557294867949406\
21160858", ",", 
         "20908987614905642180155174127108215487754334737572205712326950797042\
952996262"}], "]"}]}], "}"}]},
    {"\<\"\\!\\(\\*OverscriptBox[\\(c'\\), \\(\[RightVector]\\)]\\)\"\>", "\<\
\"Shuffled and Shifted \\!\\(\\*OverscriptBox[\\(c\\), \
\\(\[RightVector]\\)]\\)\"\>", "\<\"P,V\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "764504615766759147929657220511809435650944283588131610747951759621428\
97288719", ",", 
         "38216996469148933963905268396466886302699197112751046297550831186589\
191968048"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "332168042326782784712607191411005366386970956559694661966495834874805\
97031229", ",", 
         "50837094068179798642615040674478571973683896170876032187756757016184\
304763337"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "236404953552024916085544932253935305253579332545807115193952208048796\
44232744", ",", 
         "63745865814030357294809620337129418176053657581482167229204651942724\
506248630"}], "]"}]}], "}"}]},
    {"\<\"\\!\\(\\*OverscriptBox[\\(d'\\), \\(\[RightVector]\\)]\\)\"\>", "\<\
\"Shuffled and Shifted \\!\\(\\*OverscriptBox[\\(d\\), \
\\(\[RightVector]\\)]\\)\"\>", "\<\"P,V\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "108307431480415358180321645455139043814092501321721357106162810647213\
997236025", ",", 
         "36351342789842377099456363842641744188644647315961192968880873781984\
072160774"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "937612871902444318497902702541337901300364323087255454042770556409942\
32068357", ",", 
         "35500574849318626019937037834919246834175404043884801123182806451365\
357886461"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "112929678132582868571013728088079645858007540176146226385430663184270\
576277149", ",", 
         "14824914823240419034627386886119912697597949803924732256908023900511\
111437483"}], "]"}]}], "}"}]},
    {"\<\"V\"\>", "\<\"Commitment\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "80311418295773201369076106032905885135762203375069519910440352607757637\
919026", ",", 
       "7233007236570964380436807543858011720992463347452767161597885366175105\
5433193"}], "]"}], ""},
    {"\<\"W\"\>", "\<\"Blinded Pedersen Commitment\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "10390679260557753217575559839615615846145215297637514901142601620602173\
5424243", ",", 
       "8639053939835222931862461894565315949457175448284511703628842207473483\
9991103"}], "]"}], ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.913948944554344*^9},
 CellLabel->
  "During evaluation of \
In[81]:=",ExpressionUUID->"a7db3a75-21f4-46c2-b440-244b5886b069"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Receive ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "W"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "8b3204ba-72fe-4d7b-b191-007d99218356"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", "W"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ef62720c-ba04-49e8-ad24-809e10486801"],
 " for Verifying W being Well-Formed w.r.t. V"
}], "Subsection",
 CellChangeTimes->{{3.899009929982044*^9, 
  3.899009967262639*^9}},ExpressionUUID->"fe3ce019-e551-4f29-86d6-\
5f659825e2d8"],

Cell[TextData[{
 "In addition to the correctness of key shift and shuffle it has to be proved \
that W which is a commitment to the n-th power of the key shift is \
well-formed with respect to V which is a commitment to the (first power of \
the) key shift. No details of this protocol are explained in the paper draft \
but it is nevertheless implemented alongside the shuffle argument in this \
notebook.\nAll variables exclusive to the PR argument contain a \
\[OpenCurlyDoubleQuote]W\[CloseCurlyDoubleQuote] in their names:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["A", "W"], ",", 
    SubscriptBox["S", "W"], ",", "w", ",", 
    SubscriptBox["\[Delta]", "yzw"], ",", 
    SubscriptBox["T", 
     RowBox[{"1", ",", "W"}]], ",", 
    SubscriptBox["T", 
     RowBox[{"2", ",", "W"}]], ",", 
    SubscriptBox["\[Tau]", 
     RowBox[{"x", ",", "W"}]], ",", 
    OverscriptBox[
     SubscriptBox["t", "W"], "^"], ",", 
    SubscriptBox["\[Mu]", "W"], ",", 
    SubsuperscriptBox["P", "W", "+"], ",", 
    OverscriptBox[
     SubscriptBox["l", "W"], "\[RightVector]"], ",", 
    OverscriptBox[
     SubscriptBox["r", "W"], "\[RightVector]"]}], TraditionalForm]],
  ExpressionUUID->"5ab9776a-b4db-414b-b733-4ef689bb01e7"]
}], "Text",
 CellChangeTimes->{
  3.8990099735102415`*^9, {3.8992821692295294`*^9, 3.899282329626665*^9}, {
   3.899282361783345*^9, 3.8992824242182236`*^9}, {3.8992824556071014`*^9, 
   3.8992826474629974`*^9}, {3.899386140105307*^9, 3.8993861402765903`*^9}, {
   3.899387466039941*^9, 3.899387505627921*^9}, 
   3.911294372400173*^9},ExpressionUUID->"aeabe293-281f-4145-9995-\
841431c80ae1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"StateMachineRestore", "[", "\"\<Shuffle\>\"", "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["A", "W"], " ", "=", " ", 
   RowBox[{"WaitForProversVariable", "[", "\"\<AW\>\"", "]"}]}], ";"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["S", "W"], " ", "=", " ", 
    RowBox[{"WaitForProversVariable", "[", "\"\<SW\>\"", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"FiatShamirAdd", "[", 
       RowBox[{"\"\<AW\>\"", ",", " ", 
        RowBox[{"compressPoint", "[", 
         SubscriptBox["A", "W"], "]"}], ",", " ", 
        RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}], 
      ";", "\n", "\t", 
      RowBox[{"FiatShamirAdd", "[", 
       RowBox[{"\"\<SW\>\"", ",", " ", 
        RowBox[{"compressPoint", "[", 
         SubscriptBox["S", "W"], "]"}], ",", " ", 
        RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}], 
      ";"}]}], "\n", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Name/Equation\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Value/Equality\>\"", ",", "Bold"}], "]"}]}], "}"}], 
       ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(A\), \(W\)]\)\>\"", ",", 
         "\"\<Blinded\\nPedersen\\nVector\\nCommitment\>\"", ",", 
         SubscriptBox["A", "W"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(S\), \(W\)]\)\>\"", ",", 
         "\"\<Blinded\\nPedersen\\nVector\\nCommitment\>\"", ",", 
         SubscriptBox["S", "W"]}], "}"}]}], "\[IndentingNewLine]", "}"}], ",",
      " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left"}], "}"}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], "\n"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"CommunicationCostGrid", "[", "]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "interactive"}], ",", 
    RowBox[{"Print", "[", 
     RowBox[{"FiatShamirGrid", "[", "]"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ProcessNewMessages", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"StateMachineSave", "[", "\"\<AWSW\>\"", "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.899009981730317*^9, 3.899010071561614*^9}, {
  3.899010453801238*^9, 3.899010498697424*^9}, {3.8993859079236374`*^9, 
  3.899385908995117*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"89863500-83e0-4274-8b98-14245c171d7f"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Waiting to receive AW from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.9139489446163096`*^9},
 CellLabel->
  "During evaluation of \
In[106]:=",ExpressionUUID->"ee138fb2-f09c-4bfc-9323-f1d79c194163"],

Cell[BoxData["\<\"Waiting to receive SW from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.913948944671277*^9},
 CellLabel->
  "During evaluation of \
In[106]:=",ExpressionUUID->"46b54822-451e-4752-9b22-ee1b34afdd99"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Name/Equation\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Semantics\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Value/Equality\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(A\\), \\(W\\)]\\)\"\>", \
"\<\"Blinded\\nPedersen\\nVector\\nCommitment\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "10253307401557878583043566872365638203263908932907618801225813963055826\
1897965", ",", 
       "4604989956289730456033444587949741692415828004007114064378994681522098\
1299101"}], "]"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(S\\), \\(W\\)]\\)\"\>", \
"\<\"Blinded\\nPedersen\\nVector\\nCommitment\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "60802009577214426038022799869417466939097580576611454797233973333907472\
889599", ",", 
       "4544274886182003749351257221639993502991294730296803633157620175479609\
245008"}], "]"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.913948944704336*^9},
 CellLabel->
  "During evaluation of \
In[106]:=",ExpressionUUID->"268d5636-0681-445b-bbee-e5719afbcd26"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Total Communication Cost\"\>",
      StripOnInput->False,
      FontWeight->Bold], "\[SpanFromLeft]", "\[SpanFromLeft]", 
     "\[SpanFromLeft]"},
    {
     StyleBox["\<\"Type\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Count\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Names\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Bits\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {"\<\"group\"\>", "4", "\<\"V, W, AW, SW\"\>", "1028"},
    {
     StyleBox["\<\"total\"\>",
      StripOnInput->False,
      FontSlant->Italic], "4", "\<\"\"\>", "1028"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left, Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.913948944713326*^9},
 CellLabel->
  "During evaluation of \
In[106]:=",ExpressionUUID->"c21b4e28-79bc-444b-a00d-838d69982d0b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Send Challenges r and u, calculate ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["k", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "7a35b913-3d99-418f-9b77-b68f9d702740"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", 
    RowBox[{"R", ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]}]], 
   TraditionalForm]],ExpressionUUID->"e8e64966-7e9b-49bf-bc41-58d685d442fb"]
}], "Subsection",
 CellChangeTimes->{{3.886675628435684*^9, 3.886675632694269*^9}, {
  3.886675673427261*^9, 3.8866757084039*^9}, {3.886736097757019*^9, 
  3.8867361085643215`*^9}, {3.8867391176015487`*^9, 3.8867391358981457`*^9}, {
  3.8867853589577084`*^9, 3.886785369462713*^9}, {3.892399814998691*^9, 
  3.892399870144745*^9}, {3.911407982133206*^9, 
  3.911407982172206*^9}},ExpressionUUID->"0d40bcce-9bef-467a-96dd-\
fef292e536b7"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["k", "i"], ":=", 
    RowBox[{"r", "-", 
     SuperscriptBox["u", "i"]}]}], TraditionalForm]],ExpressionUUID->
  "d7a7c292-55d2-4231-9ebe-a784725151f3"],
 " for all i in the range of 1 to n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["A", 
     RowBox[{"R", ",", 
      RowBox[{"{", 
       RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]}]], ":=", 
    RowBox[{
     SubsuperscriptBox["\[CapitalPi]", 
      RowBox[{"i", "=", "1"}], "n"], 
     SuperscriptBox[
      RowBox[{"{", 
       RowBox[{
        SubsuperscriptBox["h", "i", "'"], ",", 
        SubsuperscriptBox["b", "i", "'"], ",", 
        SubsuperscriptBox["c", "i", "'"], ",", 
        SubsuperscriptBox["d", "i", "'"]}], "}"}], 
      SubscriptBox["k", "i"]]}]}], TraditionalForm]],ExpressionUUID->
  "904f9288-171a-42d3-8efd-702b5df4a1db"],
 "\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", 
    RowBox[{"R", ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]}]], 
   TraditionalForm]],ExpressionUUID->"cc920ef1-55e7-4745-a191-b083982ed9f5"],
 " bind to the prover\[CloseCurlyQuote]s secret ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["a", "R"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"21d2bdb2-07e2-4ec4-99a4-ef05c84d8f8d"],
 " which is defined as the shifted and inversely shuffled version of ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["k", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "00005913-0e91-476c-a955-2f4d041142f5"],
 " and therefore the list of discrete logarithms in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", 
    RowBox[{"R", ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]}]], 
   TraditionalForm]],ExpressionUUID->"f5d5dac4-71c4-4f40-8b3e-b5534dde92ee"],
 " w.r.t. bases ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     OverscriptBox["h", "\[RightVector]"], ",", 
     OverscriptBox["b", "\[RightVector]"], ",", 
     OverscriptBox["c", "\[RightVector]"], ",", 
     OverscriptBox["d", "\[RightVector]"]}], "}"}], TraditionalForm]],
  ExpressionUUID->"bb001725-894f-4f6d-bb7d-b1b4e9b801a7"],
 "."
}], "Text",
 CellChangeTimes->{{3.8867854079077144`*^9, 3.8867855241469173`*^9}, {
  3.886785555524653*^9, 3.886785592323432*^9}, {3.8867856527133174`*^9, 
  3.886785659823975*^9}, {3.892400132427265*^9, 3.892400133715757*^9}, {
  3.899387747872042*^9, 3.899387950077223*^9}, {3.9114080642357836`*^9, 
  3.9114081138822656`*^9}},ExpressionUUID->"dcc57f28-42fb-42f3-86e4-\
c54880b324a3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"StateMachineRestore", "[", "\"\<AWSW\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{"interactive", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Generate", " ", "random", " ", "challenges"}], "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"r", " ", "=", " ", 
       RowBox[{"SendRandomChallenge", "[", 
        RowBox[{"\"\<r\>\"", ",", "1", ",", 
         RowBox[{"q", "-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"u", " ", "=", " ", 
       RowBox[{"SendRandomChallenge", "[", 
        RowBox[{"\"\<u\>\"", ",", "1", ",", 
         RowBox[{"q", "-", "1"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"fiatShamirCheck", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
     RowBox[{"(*", "Else", "*)"}], ",", "\n", 
     RowBox[{"(*", 
      RowBox[{"Fiat", "-", "Shamir"}], "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"r", " ", "=", " ", 
       RowBox[{"FiatShamirGet", "[", 
        RowBox[{"\"\<r\>\"", ",", "q", ",", 
         RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}]}],
       ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"rProver", " ", "=", " ", 
       RowBox[{"WaitForProversVariable", "[", "\"\<r\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"fiatShamirCheckROk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{"rProver", " ", "==", " ", "r"}], ")"}]}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", "fiatShamirCheckROk"}], ",", " ", 
        RowBox[{"GiveInsight", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<r\>\"", "->", "r"}], "}"}], "]"}]}], "]"}], ";", "\n", 
      "\t", 
      RowBox[{"u", " ", "=", " ", 
       RowBox[{"FiatShamirGet", "[", 
        RowBox[{"\"\<u\>\"", ",", "q", ",", 
         RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}]}],
       ";", "\n", "\t", 
      RowBox[{"uProver", " ", "=", " ", 
       RowBox[{"WaitForProversVariable", "[", "\"\<u\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"fiatShamirCheckUOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{"uProver", " ", "==", " ", "u"}], ")"}]}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", "fiatShamirCheckUOk"}], ",", " ", 
        RowBox[{"GiveInsight", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<u\>\"", "->", "u"}], "}"}], "]"}]}], "]"}], ";", "\n", 
      "\t", 
      RowBox[{"fiatShamirCheck", " ", "=", " ", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<Fiat-Shamir check on r:\\n\!\(\*SubscriptBox[\(r\), \
\(Prover\)]\) \!\(\*OverscriptBox[\(=\), \(?\)]\) FiatShamir(setup,CRS,V,W,\!\
\(\*SubscriptBox[\(A\), \(W\)]\),\!\(\*SubscriptBox[\(S\), \(W\)]\))\>\"", 
           ",", "\"\<\>\"", ",", "fiatShamirCheckROk"}], "}"}], ",", "\n", 
         "\t\t", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Fiat-Shamir check on u:\\n\!\(\*SubscriptBox[\(u\), \
\(Prover\)]\) \!\(\*OverscriptBox[\(=\), \(?\)]\) FiatShamir(r)\>\"", ",", 
           "\"\<\>\"", ",", "fiatShamirCheckUOk"}], "}"}]}], "\n", "\t", 
        "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"uPowers", " ", "=", " ", 
   RowBox[{"Thread", "[", 
    RowBox[{"powermodq", "[", 
     RowBox[{
      RowBox[{"ConstantArray", "[", 
       RowBox[{"u", ",", "n"}], "]"}], ",", " ", 
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "n"}], "]"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox["k", "\[RightVector]"], " ", "=", " ", 
   RowBox[{"modq", "[", 
    RowBox[{"r", " ", "-", " ", "uPowers"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox["k", "^"], " ", "=", " ", 
   RowBox[{"modq", "[", 
    RowBox[{"Fold", "[", 
     RowBox[{"Times", ",", " ", "1", ",", " ", 
      OverscriptBox["k", "\[RightVector]"]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox["k", "_"], " ", "=", " ", 
   RowBox[{"modq", "[", 
    RowBox[{"Fold", "[", 
     RowBox[{"Plus", ",", " ", "0", ",", " ", 
      OverscriptBox["k", "\[RightVector]"]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["A", 
    RowBox[{"R", ",", "h"}]], " ", "=", " ", 
   RowBox[{"Total", "[", 
    RowBox[{
     OverscriptBox["k", "\[RightVector]"], " ", "*", " ", 
     OverscriptBox[
      RowBox[{"h", "'"}], "\[RightVector]"]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["A", 
    RowBox[{"R", ",", "b"}]], " ", "=", " ", 
   RowBox[{"Total", "[", 
    RowBox[{
     OverscriptBox["k", "\[RightVector]"], " ", "*", " ", 
     OverscriptBox[
      RowBox[{"b", "'"}], "\[RightVector]"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["A", 
    RowBox[{"R", ",", "c"}]], " ", "=", " ", 
   RowBox[{"Total", "[", 
    RowBox[{
     OverscriptBox["k", "\[RightVector]"], " ", "*", " ", 
     OverscriptBox[
      RowBox[{"c", "'"}], "\[RightVector]"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["A", 
     RowBox[{"R", ",", "d"}]], " ", "=", " ", 
    RowBox[{"Total", "[", 
     RowBox[{
      OverscriptBox["k", "\[RightVector]"], " ", "*", " ", 
      OverscriptBox[
       RowBox[{"d", "'"}], "\[RightVector]"]}], "]"}]}], ";"}], "\n"}], "\n", 

 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"Join", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{"{", 
          RowBox[{"\"\<r\>\"", ",", "semanticsOfRandomChallenge", ",", "r"}], 
          "}"}], ",", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{"\"\<u\>\"", ",", "semanticsOfRandomChallenge", ",", "u"}], 
          "}"}]}], "\n", "\t", "}"}], ",", "\n", "\t", "fiatShamirCheck", ",",
        "\n", "\t", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(u\), \(powers\)]\) :\!\(\*SubscriptBox[\(\
\[Congruent]\), \(q\)]\) {u,\!\(\*SuperscriptBox[\(u\), \
\(2\)]\),\!\(\*SuperscriptBox[\(u\), \
\(3\)]\),\[Ellipsis],\!\(\*SuperscriptBox[\(u\), \(n\)]\)}\>\"", ",", 
           "\"\<\>\"", ",", "uPowers"}], "}"}], ",", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\) \
:\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) r - \!\(\*SubscriptBox[\(u\), \
\(powers\)]\)\>\"", ",", "\"\<\>\"", ",", 
           OverscriptBox["k", "\[RightVector]"]}], "}"}], ",", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(A\), \(R, h\)]\) := \
\[CapitalSigma]{\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\) \
\[SmallCircle] \!\(\*OverscriptBox[\(h'\), \(\[RightVector]\)]\)}\>\"", ",", 
           "\"\<\>\"", ",", 
           SubscriptBox["A", 
            RowBox[{"R", ",", "h"}]]}], "}"}], ",", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(A\), \(R, b\)]\) := \
\[CapitalSigma]{\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\) \
\[SmallCircle] \!\(\*OverscriptBox[\(b'\), \(\[RightVector]\)]\)}\>\"", ",", 
           "\"\<\>\"", ",", 
           SubscriptBox["A", 
            RowBox[{"R", ",", "b"}]]}], "}"}], ",", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(A\), \(R, c\)]\) := \
\[CapitalSigma]{\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\) \
\[SmallCircle] \!\(\*OverscriptBox[\(c'\), \(\[RightVector]\)]\)}\>\"", ",", 
           "\"\<\>\"", ",", 
           SubscriptBox["A", 
            RowBox[{"R", ",", "c"}]]}], "}"}], ",", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(A\), \(R, d\)]\) := \
\[CapitalSigma]{\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\) \
\[SmallCircle] \!\(\*OverscriptBox[\(d'\), \(\[RightVector]\)]\)}\>\"", ",", 
           "\"\<\>\"", ",", 
           SubscriptBox["A", 
            RowBox[{"R", ",", "d"}]]}], "}"}]}], "\n", "\t", "}"}]}], "\n", 
      "]"}], ",", " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left", ",", "Left"}], "}"}], 
       "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"CommunicationCostGrid", "[", "]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "interactive"}], ",", 
    RowBox[{"Print", "[", 
     RowBox[{"FiatShamirGrid", "[", "]"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ProcessNewMessages", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"StateMachineSave", "[", "\"\<ruk\>\"", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"!", "interactive"}], " ", "&&", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"!", "fiatShamirCheckROk"}], " ", "||", " ", 
       RowBox[{"!", "fiatShamirCheckUOk"}]}], ")"}]}], ",", " ", 
    RowBox[{
    "VerificationFailed", "[", "\"\<Fiat-Shamir check on r and/or u\>\"", 
     "]"}]}], "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.8816116243241453`*^9, 3.881611660171441*^9}, {
   3.881614428125318*^9, 3.8816144496610193`*^9}, {3.88161456204353*^9, 
   3.881614633721884*^9}, {3.881614843193446*^9, 3.8816148437044764`*^9}, {
   3.8816148754029293`*^9, 3.8816149675400553`*^9}, {3.881615002931444*^9, 
   3.881615060507916*^9}, {3.881615098029173*^9, 3.8816151210318823`*^9}, {
   3.8816151524868107`*^9, 3.881615276835181*^9}, {3.881615353446512*^9, 
   3.88161537924996*^9}, {3.8816154103144712`*^9, 3.881615456025964*^9}, {
   3.881615532069525*^9, 3.8816155364721947`*^9}, {3.8816155931257677`*^9, 
   3.881615853669375*^9}, {3.881615889559787*^9, 3.881616029813496*^9}, {
   3.881616061006765*^9, 3.881616075566166*^9}, {3.881616435998459*^9, 
   3.881616445519804*^9}, {3.881616491950706*^9, 3.881616518889913*^9}, 
   3.881616552421973*^9, {3.881663698233253*^9, 3.8816641171728354`*^9}, {
   3.881664149537904*^9, 3.881664293468644*^9}, {3.881664376793399*^9, 
   3.881664378418961*^9}, {3.881665060875719*^9, 3.881665064461875*^9}, {
   3.8823072034925957`*^9, 3.882307298841543*^9}, {3.882307485379715*^9, 
   3.8823075186820307`*^9}, {3.882307593677328*^9, 3.882307593772273*^9}, {
   3.882307757689488*^9, 3.8823077771481133`*^9}, {3.882307940115011*^9, 
   3.882307940976143*^9}, {3.882308297880229*^9, 3.882308400821534*^9}, {
   3.882308533669093*^9, 3.8823085729845448`*^9}, {3.882308892185584*^9, 
   3.882308900838636*^9}, {3.882427208288774*^9, 3.882427231293509*^9}, {
   3.882427275867312*^9, 3.882427276443467*^9}, {3.882613506378192*^9, 
   3.8826135481819057`*^9}, {3.8826154237894163`*^9, 3.882615624059663*^9}, {
   3.882616883412961*^9, 3.882616883525497*^9}, {3.882627068554702*^9, 
   3.882627070783558*^9}, {3.882868641928274*^9, 3.882868655062811*^9}, {
   3.8828686904264593`*^9, 3.882868736079137*^9}, {3.882873288978519*^9, 
   3.882873301769669*^9}, {3.8828733558712482`*^9, 3.882873358268668*^9}, {
   3.882902746856721*^9, 3.882902761820488*^9}, {3.882902997748527*^9, 
   3.8829030318467197`*^9}, {3.8829030767907267`*^9, 3.882903077626718*^9}, {
   3.88290312197725*^9, 3.882903178130712*^9}, {3.882904726887302*^9, 
   3.882904733620944*^9}, {3.882905354372302*^9, 3.8829053921787367`*^9}, 
   3.8829060259486227`*^9, {3.8832063682743597`*^9, 3.883206368692296*^9}, {
   3.8832071872109947`*^9, 3.8832071916723957`*^9}, 3.8832210669528418`*^9, {
   3.8835085779374523`*^9, 3.883508596723027*^9}, {3.883513458663869*^9, 
   3.8835134588704844`*^9}, {3.8835177564248877`*^9, 
   3.8835177709801683`*^9}, {3.883588448447198*^9, 3.883588498901017*^9}, {
   3.883588599118574*^9, 3.883588656025865*^9}, {3.883588740196557*^9, 
   3.88358889244312*^9}, {3.8835889477096367`*^9, 3.8835889608818827`*^9}, {
   3.883589862678192*^9, 3.8835899224627542`*^9}, {3.883589966151805*^9, 
   3.883590003146893*^9}, {3.8835900521929483`*^9, 3.883590057332889*^9}, {
   3.883590102102605*^9, 3.883590104797296*^9}, {3.883590220844473*^9, 
   3.883590226759103*^9}, {3.883597031700203*^9, 3.883597031758154*^9}, {
   3.8835970658440237`*^9, 3.8835971148430767`*^9}, {3.883598271862887*^9, 
   3.883598280727023*^9}, {3.883598382910121*^9, 3.883598383440894*^9}, {
   3.883598434453437*^9, 3.883598437758047*^9}, {3.883601352846313*^9, 
   3.883601361680204*^9}, {3.8837719792178698`*^9, 3.8837720437906017`*^9}, {
   3.883772084086521*^9, 3.883772104069454*^9}, {3.8847846919386253`*^9, 
   3.884784703547657*^9}, {3.8866996822997513`*^9, 3.886699686122918*^9}, {
   3.8867391409327354`*^9, 3.8867391559460964`*^9}, {3.886739203650074*^9, 
   3.886739232458167*^9}, {3.8867399661855335`*^9, 3.886739983733938*^9}, {
   3.8867401368289022`*^9, 3.886740324313093*^9}, {3.8867403701563177`*^9, 
   3.8867404395158014`*^9}, {3.8867407569832554`*^9, 
   3.8867407633047557`*^9}, {3.886740797183312*^9, 3.886740799352705*^9}, {
   3.886740843365221*^9, 3.8867408880877247`*^9}, {3.8867409196174865`*^9, 
   3.88674098243491*^9}, {3.8867410312816873`*^9, 3.8867413464186077`*^9}, {
   3.8867413787665606`*^9, 3.8867415398859224`*^9}, {3.8867416828784647`*^9, 
   3.886741740823513*^9}, {3.886741803106953*^9, 3.886741849897688*^9}, {
   3.8867420756874437`*^9, 3.8867420766324453`*^9}, {3.886742129075741*^9, 
   3.8867421295713468`*^9}, {3.8867528729583783`*^9, 
   3.8867528747953386`*^9}, {3.886761645008831*^9, 3.88676164975484*^9}, 
   3.886761687645384*^9, {3.8867617336222725`*^9, 3.8867617337892904`*^9}, {
   3.886785693980115*^9, 3.8867857049518595`*^9}, {3.886786610969736*^9, 
   3.8867866136395426`*^9}, {3.887396203314185*^9, 3.887396205519001*^9}, {
   3.8873964849210997`*^9, 3.887396493625237*^9}, {3.887482519891205*^9, 
   3.8874825298015347`*^9}, {3.8874879852090364`*^9, 3.887488000148489*^9}, {
   3.8874898679603014`*^9, 3.8874898691437283`*^9}, {3.8875522680605416`*^9, 
   3.8875523393218784`*^9}, {3.887552378450172*^9, 3.8875523798951015`*^9}, {
   3.887552662399988*^9, 3.8875526666828856`*^9}, {3.887552994116601*^9, 
   3.8875530036022406`*^9}, {3.8876185213695884`*^9, 3.887618548943448*^9}, {
   3.892400367617119*^9, 3.892400426591264*^9}, 3.8924010824890547`*^9, {
   3.892401210355939*^9, 3.892401245298106*^9}, {3.892401516899055*^9, 
   3.892401520844849*^9}, {3.892401814575816*^9, 3.8924018496140127`*^9}, 
   3.8924019645007153`*^9, 3.8924020205896063`*^9, {3.892466592206089*^9, 
   3.892466592311384*^9}, {3.892467113386531*^9, 3.892467113802002*^9}, 
   3.8924693004991093`*^9, {3.8983245831971664`*^9, 3.8983245850444775`*^9}, {
   3.898326169312042*^9, 3.8983261938590765`*^9}, {3.8983262750161085`*^9, 
   3.8983262772576704`*^9}, {3.898326308411497*^9, 3.898326499446777*^9}, {
   3.8983265902330294`*^9, 3.898326590760174*^9}, {3.8983266344735727`*^9, 
   3.8983266623295813`*^9}, {3.8983269728653207`*^9, 3.898326979890255*^9}, 
   3.898327145850334*^9, {3.8983439300793724`*^9, 3.89834393017301*^9}, 
   3.8983440830876613`*^9, {3.8983441644377947`*^9, 3.8983441712380395`*^9}, {
   3.8983445428586836`*^9, 3.8983445439603786`*^9}, {3.89900999892159*^9, 
   3.899009999390069*^9}, {3.899303604943104*^9, 3.899303608265092*^9}, {
   3.8993859137801886`*^9, 3.8993859148437467`*^9}, {3.899388640235509*^9, 
   3.899388644365547*^9}, {3.9112956892856283`*^9, 3.9112956947990713`*^9}, {
   3.911405108908207*^9, 3.911405127101575*^9}, {3.911407756672454*^9, 
   3.911407757389063*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"38f9c8f7-5101-4df9-a427-f299ea6cb5b6"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Generated random challenge\\n  r = \
37072487844121016544199508458329903725504628962986741349058985323004642065609\
\"\>"], "Print",
 CellChangeTimes->{3.913948944810259*^9},
 CellLabel->
  "During evaluation of \
In[115]:=",ExpressionUUID->"3913d98a-6341-42ae-9d4d-b72cad415a38"],

Cell[BoxData["\<\"Generated random challenge\\n  u = \
112269625660350362882863760160812690082016551740788795940136101880060177832694\
\"\>"], "Print",
 CellChangeTimes->{3.9139489448182526`*^9},
 CellLabel->
  "During evaluation of \
In[115]:=",ExpressionUUID->"28e8a504-3f56-44c7-a4ca-af16ca1c7aa8"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Name\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Semantics\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Value\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {"\<\"r\"\>", "\<\"Random Challenge\"\>", 
     "370724878441210165441995084583299037255046289629867413490589853230046420\
65609"},
    {"\<\"u\"\>", "\<\"Random Challenge\"\>", 
     "112269625660350362882863760160812690082016551740788795940136101880060177\
832694"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(u\\), \\(powers\\)]\\) \
:\\!\\(\\*SubscriptBox[\\(\[Congruent]\\), \\(q\\)]\\) \
{u,\\!\\(\\*SuperscriptBox[\\(u\\), \
\\(2\\)]\\),\\!\\(\\*SuperscriptBox[\\(u\\), \
\\(3\\)]\\),\[Ellipsis],\\!\\(\\*SuperscriptBox[\\(u\\), \\(n\\)]\\)}\"\>", "\
\<\"\"\>", 
     RowBox[{"{", 
      RowBox[{
      "11226962566035036288286376016081269008201655174078879594013610188006017\
7832694", ",", 
       "1189054227351933146242503898691405155950741746951631467686222790696488\
4492193", ",", 
       "3338780415999566108720425223894108133137925911750753504909823873858201\
6269690"}], "}"}]},
    {"\<\"\\!\\(\\*OverscriptBox[\\(k\\), \\(\[RightVector]\\)]\\) \
:\\!\\(\\*SubscriptBox[\\(\[Congruent]\\), \\(q\\)]\\) r - \
\\!\\(\\*SubscriptBox[\\(u\\), \\(powers\\)]\\)\"\>", "\<\"\"\>", 
     RowBox[{"{", 
      RowBox[{
      "40594951421086849084906733306205121496325641501272849791528046584462625\
727252", ",", 
       "2518194557060168508177446947141585216599721149347042667219675741603975\
7573416", ",", 
       "3684683684125355456995256219388822394125369845479206299960746584422625\
795919"}], "}"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(A\\), \\(R, h\\)]\\) := \
\[CapitalSigma]{\\!\\(\\*OverscriptBox[\\(k\\), \\(\[RightVector]\\)]\\) \
\[SmallCircle] \\!\\(\\*OverscriptBox[\\(h'\\), \
\\(\[RightVector]\\)]\\)}\"\>", "\<\"\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "75827213137871704164931521628089874212004001725498144777005823861414415\
878326", ",", 
       "8555808827475336170223945871410975217025734389365712448828132037288537\
7844970"}], "]"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(A\\), \\(R, b\\)]\\) := \
\[CapitalSigma]{\\!\\(\\*OverscriptBox[\\(k\\), \\(\[RightVector]\\)]\\) \
\[SmallCircle] \\!\\(\\*OverscriptBox[\\(b'\\), \
\\(\[RightVector]\\)]\\)}\"\>", "\<\"\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "10149013827812056005453513411268514952753118611066276754702180114590393\
9319509", ",", 
       "4518939622636963976447518375021087519116136691410061303868308001160687\
8795742"}], "]"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(A\\), \\(R, c\\)]\\) := \
\[CapitalSigma]{\\!\\(\\*OverscriptBox[\\(k\\), \\(\[RightVector]\\)]\\) \
\[SmallCircle] \\!\\(\\*OverscriptBox[\\(c'\\), \
\\(\[RightVector]\\)]\\)}\"\>", "\<\"\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "80032568196835196626944046435262813649995163939592905385880753783724791\
743679", ",", 
       "2355296937129003315826667423883515946521144672066934892974585017143103\
1988187"}], "]"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(A\\), \\(R, d\\)]\\) := \
\[CapitalSigma]{\\!\\(\\*OverscriptBox[\\(k\\), \\(\[RightVector]\\)]\\) \
\[SmallCircle] \\!\\(\\*OverscriptBox[\\(d'\\), \
\\(\[RightVector]\\)]\\)}\"\>", "\<\"\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "24071036944939597465031966034523295170786141480642933426129120087221778\
84863", ",", 
       "5688082388913250946703017430937943631273749852079965184516174686451793\
1461934"}], "]"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left, Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.913948945110095*^9},
 CellLabel->
  "During evaluation of \
In[115]:=",ExpressionUUID->"8d60570d-957f-47c0-b927-f7edc138e3a4"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Total Communication Cost\"\>",
      StripOnInput->False,
      FontWeight->Bold], "\[SpanFromLeft]", "\[SpanFromLeft]", 
     "\[SpanFromLeft]"},
    {
     StyleBox["\<\"Type\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Count\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Names\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Bits\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {"\<\"group\"\>", "4", "\<\"V, W, AW, SW\"\>", "1028"},
    {"\<\"scalar\"\>", "2", "\<\"r, u\"\>", "512"},
    {
     StyleBox["\<\"total\"\>",
      StripOnInput->False,
      FontSlant->Italic], "6", "\<\"\"\>", "1540"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left, Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.913948945125103*^9},
 CellLabel->
  "During evaluation of \
In[115]:=",ExpressionUUID->"574f76aa-6c4a-4165-83d5-22c324afcc04"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Receive P\[CloseCurlyQuote]s Commitments ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "L"], TraditionalForm]],ExpressionUUID->
  "fc17f8bf-5f55-41c2-ae8c-abcec22ff735"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", "L"], TraditionalForm]],ExpressionUUID->
  "71aae280-aca4-4540-bd2c-940d26797656"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", 
    RowBox[{"R", ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]}]], 
   TraditionalForm]],ExpressionUUID->"fd87c7c0-e742-4f46-98f2-d238dd5e627b"]
}], "Subsection",
 CellChangeTimes->{{3.8867443107698793`*^9, 3.886744333953594*^9}, {
  3.886753687539881*^9, 3.886753694167199*^9}, {3.8867537426341496`*^9, 
  3.8867537837461643`*^9}, {3.886753967887128*^9, 3.8867539704484797`*^9}, {
  3.8867554489477715`*^9, 3.886755451377734*^9}, {3.892402082236041*^9, 
  3.8924021175986967`*^9}, {3.9114079779009027`*^9, 
  3.9114079779303255`*^9}},ExpressionUUID->"913b13e7-627a-44e6-a1fa-\
4b2b19eafd49"],

Cell[TextData[{
 "The commitments ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["A", "L"], ",", " ", 
    RowBox[{
     SubscriptBox["S", "L"], " ", "and", " ", 
     SubscriptBox["S", 
      RowBox[{"R", ",", 
       RowBox[{"{", 
        RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]}]]}]}], 
   TraditionalForm]],ExpressionUUID->"030aa1c1-6efe-4062-8b46-3af29bb985cc"],
 " bind to ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["a", "L"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"a9f1bb8d-b3ed-435e-ba35-5dfd0fb2f2bb"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["s", "L"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"0f3c1497-5dd6-4412-bb5c-bcabd3658513"],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["s", "R"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"33823edb-1fa7-4774-93ed-7ba970f0c7ff"],
 ", the latter w.r.t. bases ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["h", "\[RightVector]"], ",", " ", 
    OverscriptBox["b", "\[RightVector]"], ",", " ", 
    OverscriptBox["c", "\[RightVector]"]}], TraditionalForm]],ExpressionUUID->
  "622a72e6-c434-4750-8449-1b1ed2cbeee4"],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["d", "\[RightVector]"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e87ab5ff-d9e3-4138-aa04-a212ed6c8db8"],
 "."
}], "Text",
 CellChangeTimes->{{3.8867539758349843`*^9, 3.8867540275571065`*^9}, {
  3.886754476492996*^9, 3.886754491574772*^9}, {3.8867547180991096`*^9, 
  3.8867547453948774`*^9}, {3.8867548390240746`*^9, 3.8867548409923553`*^9}, {
  3.8867549359783154`*^9, 3.8867549685734935`*^9}, {3.886755001194379*^9, 
  3.8867551213488326`*^9}, {3.886755523444172*^9, 3.8867555277030554`*^9}, {
  3.886786143966459*^9, 3.886786159327512*^9}, {3.886786243586472*^9, 
  3.8867862558589487`*^9}, {3.8924024599030733`*^9, 3.892402461683262*^9}, {
  3.8993876540665116`*^9, 3.8993877323874063`*^9}, {3.8993879600347977`*^9, 
  3.899388056951356*^9}, {3.8993881740644393`*^9, 3.899388242651724*^9}, {
  3.899388305947847*^9, 3.899388306804752*^9}, {3.9114081181849375`*^9, 
  3.9114081284018087`*^9}},ExpressionUUID->"ded9ef62-555f-4017-a51b-\
8df1e310c9e2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"StateMachineRestore", "[", "\"\<ruk\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["A", "L"], " ", "=", " ", 
   RowBox[{"WaitForProversVariable", "[", "\"\<AL\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", 
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<AL\>\"", ",", 
       RowBox[{"compressPoint", "[", 
        SubscriptBox["A", "L"], "]"}], ",", 
       RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}]}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["S", "L"], " ", "=", " ", 
   RowBox[{"WaitForProversVariable", "[", "\"\<SL\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", 
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<SL\>\"", ",", 
       RowBox[{"compressPoint", "[", 
        SubscriptBox["S", "L"], "]"}], ",", 
       RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}]}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["S", 
    RowBox[{"R", ",", "h"}]], " ", "=", " ", 
   RowBox[{"WaitForProversVariable", "[", "\"\<SRh\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", 
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<SRh\>\"", ",", 
       RowBox[{"compressPoint", "[", 
        SubscriptBox["S", 
         RowBox[{"R", ",", "h"}]], "]"}], ",", 
       RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}]}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["S", 
    RowBox[{"R", ",", "b"}]], " ", "=", " ", 
   RowBox[{"WaitForProversVariable", "[", "\"\<SRb\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", 
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<SRb\>\"", ",", 
       RowBox[{"compressPoint", "[", 
        SubscriptBox["S", 
         RowBox[{"R", ",", "b"}]], "]"}], ",", 
       RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}]}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["S", 
    RowBox[{"R", ",", "c"}]], " ", "=", " ", 
   RowBox[{"WaitForProversVariable", "[", "\"\<SRc\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", 
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<SRc\>\"", ",", 
       RowBox[{"compressPoint", "[", 
        SubscriptBox["S", 
         RowBox[{"R", ",", "c"}]], "]"}], ",", 
       RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}]}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["S", 
    RowBox[{"R", ",", "d"}]], " ", "=", " ", 
   RowBox[{"WaitForProversVariable", "[", "\"\<SRd\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", 
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<SRd\>\"", ",", 
       RowBox[{"compressPoint", "[", 
        SubscriptBox["S", 
         RowBox[{"R", ",", "d"}]], "]"}], ",", 
       RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}]}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(A\), \(L\)]\)\>\"", ",", 
         "\"\<Blinded\\nPedersen\\nCommitment\>\"", ",", 
         SubscriptBox["A", "L"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(S\), \(L\)]\)\>\"", ",", 
         "\"\<Blinded\\nPedersen\\nCommitment\>\"", ",", 
         SubscriptBox["S", "L"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(S\), \(R, h\)]\)\>\"", ",", 
         "\"\<Blinded\\nPedersen\\nCommitment\>\"", ",", 
         SubscriptBox["S", 
          RowBox[{"R", ",", "h"}]]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(S\), \(R, b\)]\)\>\"", ",", 
         "\"\<Blinded\\nPedersen\\nCommitment\>\"", ",", 
         SubscriptBox["S", 
          RowBox[{"R", ",", "b"}]]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(S\), \(R, c\)]\)\>\"", ",", 
         "\"\<Blinded\\nPedersen\\nCommitment\>\"", ",", 
         SubscriptBox["S", 
          RowBox[{"R", ",", "c"}]]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(S\), \(R, d\)]\)\>\"", ",", 
         "\"\<Blinded\\nPedersen\\nCommitment\>\"", ",", 
         SubscriptBox["S", 
          RowBox[{"R", ",", "d"}]]}], "}"}]}], "\[IndentingNewLine]", "}"}], 
     ",", " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left"}], "}"}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], "\n"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"CommunicationCostGrid", "[", "]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "interactive"}], ",", 
    RowBox[{"Print", "[", 
     RowBox[{"FiatShamirGrid", "[", "]"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ProcessNewMessages", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"StateMachineSave", "[", "\"\<AS\>\"", "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.8867540573840933`*^9, 3.886754103124192*^9}, {
   3.886754333798148*^9, 3.88675440204392*^9}, {3.8867546844909377`*^9, 
   3.8867546978459215`*^9}, {3.8867547501328735`*^9, 3.886754750482732*^9}, 
   3.886755429364829*^9, {3.8867563690305195`*^9, 3.8867563701258345`*^9}, {
   3.8867866594842205`*^9, 3.8867866617586927`*^9}, {3.887396224116624*^9, 
   3.887396228090295*^9}, {3.887396331129924*^9, 3.8873963430769024`*^9}, {
   3.8874826146154013`*^9, 3.8874826161879735`*^9}, {3.88748989869664*^9, 
   3.887489899622702*^9}, {3.8874899452528744`*^9, 3.887489945598939*^9}, {
   3.8875530136000533`*^9, 3.8875530159738007`*^9}, {3.8876516228145227`*^9, 
   3.8876518322427998`*^9}, {3.8876518746459136`*^9, 3.887651876579751*^9}, {
   3.8876519090351334`*^9, 3.8876519417722235`*^9}, {3.887651983327797*^9, 
   3.887652063512514*^9}, {3.8876521096615934`*^9, 3.8876523373835297`*^9}, {
   3.8876523708567505`*^9, 3.8876524646083775`*^9}, {3.8876526035498734`*^9, 
   3.8876526829780617`*^9}, {3.8876530687995443`*^9, 3.887653176994917*^9}, {
   3.8924023140744247`*^9, 3.89240233729147*^9}, {3.892402451757104*^9, 
   3.892402667971059*^9}, {3.8924039289806557`*^9, 3.8924039292219954`*^9}, {
   3.898326684713293*^9, 3.8983266866144547`*^9}, {3.898326841072895*^9, 
   3.898326857229188*^9}, {3.898327372328915*^9, 3.8983273916873074`*^9}, {
   3.899385962835738*^9, 3.8993859644429855`*^9}, {3.911405140271512*^9, 
   3.9114051571983*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"d9e8701c-bd10-4709-a2d0-f2064d4914f8"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Waiting to receive AL from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.913948945191066*^9},
 CellLabel->
  "During evaluation of \
In[131]:=",ExpressionUUID->"1ed95636-eb45-492e-855d-fbb62b4f0358"],

Cell[BoxData["\<\"Waiting to receive SL from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.9139489453819375`*^9},
 CellLabel->
  "During evaluation of \
In[131]:=",ExpressionUUID->"2c946a42-fb2d-489f-9abc-3a42a61aec66"],

Cell[BoxData["\<\"Waiting to receive SRh from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.9139489454619694`*^9},
 CellLabel->
  "During evaluation of \
In[131]:=",ExpressionUUID->"c4489971-0950-4784-886b-795a350ba379"],

Cell[BoxData["\<\"Waiting to receive SRb from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.913948945554124*^9},
 CellLabel->
  "During evaluation of \
In[131]:=",ExpressionUUID->"00a8e81b-e104-4ff1-a576-b1229651c7ad"],

Cell[BoxData["\<\"Waiting to receive SRc from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.9139489456480703`*^9},
 CellLabel->
  "During evaluation of \
In[131]:=",ExpressionUUID->"8305f753-e983-4b62-abb6-c7789143460b"],

Cell[BoxData["\<\"Waiting to receive SRd from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.913948945727025*^9},
 CellLabel->
  "During evaluation of \
In[131]:=",ExpressionUUID->"8587aab3-9570-4ae2-a320-0533edc87846"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Name\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Semantics\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Value\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(A\\), \\(L\\)]\\)\"\>", \
"\<\"Blinded\\nPedersen\\nCommitment\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "65878393082004773440562899378524775455428557795831203431354254805446990\
54079", ",", 
       "2185727872912664248596558371241923997051231854180743555974368558112945\
768953"}], "]"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(S\\), \\(L\\)]\\)\"\>", \
"\<\"Blinded\\nPedersen\\nCommitment\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "40340943996844244833074461423533235281687070671537752342432637232855350\
27265", ",", 
       "1057193652905337803800520398726820808484142070996950787689613880280921\
36442987"}], "]"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(S\\), \\(R, h\\)]\\)\"\>", \
"\<\"Blinded\\nPedersen\\nCommitment\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "11062846075927556161018668668084583015816759293220479147709096809487697\
3217838", ",", 
       "5304693054449904688326008829038550901554024028550115729307204635136817\
245677"}], "]"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(S\\), \\(R, b\\)]\\)\"\>", \
"\<\"Blinded\\nPedersen\\nCommitment\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "42640815911507716472477938340233126446598231831337676705110847057191691\
627240", ",", 
       "4125903392733218735207787455588152550014463503111169981313848726007025\
2465805"}], "]"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(S\\), \\(R, c\\)]\\)\"\>", \
"\<\"Blinded\\nPedersen\\nCommitment\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "62635959701511398581525732065492888015851399229301995870753638223458110\
077747", ",", 
       "8531081005403786518304297796223304954124982157180023898452286703877359\
5657876"}], "]"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(S\\), \\(R, d\\)]\\)\"\>", \
"\<\"Blinded\\nPedersen\\nCommitment\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "93333551283426889209650746890228923405712607594824962743876131424188627\
252440", ",", 
       "1233627738639505080563722406138023686027722377354074299358760633736228\
3853740"}], "]"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.9139489458054132`*^9},
 CellLabel->
  "During evaluation of \
In[131]:=",ExpressionUUID->"19a62a1b-0825-4cbf-9e5e-9a0234729fac"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Total Communication Cost\"\>",
      StripOnInput->False,
      FontWeight->Bold], "\[SpanFromLeft]", "\[SpanFromLeft]", 
     "\[SpanFromLeft]"},
    {
     StyleBox["\<\"Type\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Count\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Names\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Bits\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {"\<\"group\"\>", 
     "10", "\<\"V, W, AW, SW, AL, SL, SRh, SRb, SRc, SRd\"\>", "2570"},
    {"\<\"scalar\"\>", "2", "\<\"r, u\"\>", "512"},
    {
     StyleBox["\<\"total\"\>",
      StripOnInput->False,
      FontSlant->Italic], "12", "\<\"\"\>", "3082"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left, Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.9139489458144097`*^9},
 CellLabel->
  "During evaluation of \
In[131]:=",ExpressionUUID->"326b54bd-d099-46e0-9130-c061438efb64"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Send Random Challenges y and z
or Generate Fiat-Shamir Transform\
\>", "Subsection",
 CellChangeTimes->{{3.8867443107698793`*^9, 3.886744333953594*^9}, {
   3.886753687539881*^9, 3.886753694167199*^9}, 3.88675373361314*^9, {
   3.8867567380697317`*^9, 3.88675674410888*^9}, 3.8867567816874647`*^9, {
   3.8867870622860575`*^9, 
   3.886787064009448*^9}},ExpressionUUID->"9ecbcdb3-a8a2-41fc-b783-\
fa7f18c01a10"],

Cell["\<\
The random challenges y and z are used to enforce the linear constraints of \
the shuffle. For the PR protocol, an additional challenge w is needed.\
\>", "Text",
 CellChangeTimes->{{3.8993883302348785`*^9, 3.899388403176777*^9}, {
   3.8993884396530824`*^9, 3.8993884973371296`*^9}, 
   3.9112943741482544`*^9},ExpressionUUID->"e1e3cd47-4160-4dd9-aeb1-\
e375a5e41ab3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"StateMachineRestore", "[", "\"\<AS\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{"interactive", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Generate", " ", "random", " ", "challenges"}], "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"y", " ", "=", " ", 
       RowBox[{"SendRandomChallenge", "[", 
        RowBox[{"\"\<y\>\"", ",", "1", ",", 
         RowBox[{"q", "-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"z", " ", "=", " ", 
       RowBox[{"SendRandomChallenge", "[", 
        RowBox[{"\"\<z\>\"", ",", "1", ",", 
         RowBox[{"q", "-", "1"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"w", " ", "=", " ", 
       RowBox[{"SendRandomChallenge", "[", 
        RowBox[{"\"\<w\>\"", ",", "1", ",", 
         RowBox[{"q", "-", "1"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"fiatShamirCheck", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
     RowBox[{"(*", "Else", "*)"}], ",", "\n", 
     RowBox[{"(*", 
      RowBox[{"Fiat", "-", "Shamir"}], "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"y", " ", "=", " ", 
       RowBox[{"FiatShamirGet", "[", 
        RowBox[{"\"\<y\>\"", ",", "q", ",", 
         RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}]}],
       ";", "\n", "\t", 
      RowBox[{"yProver", " ", "=", " ", 
       RowBox[{"WaitForProversVariable", "[", "\"\<y\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"fiatShamirCheckYOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{"yProver", " ", "==", " ", "y"}], ")"}]}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", "fiatShamirCheckYOk"}], ",", " ", 
        RowBox[{"GiveInsight", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<y\>\"", "->", "y"}], "}"}], "]"}]}], "]"}], ";", "\n", 
      "\t", 
      RowBox[{"z", " ", "=", " ", 
       RowBox[{"FiatShamirGet", "[", 
        RowBox[{"\"\<z\>\"", ",", "q", ",", 
         RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}]}],
       ";", "\n", "\t", 
      RowBox[{"zProver", " ", "=", " ", 
       RowBox[{"WaitForProversVariable", "[", "\"\<z\>\"", "]"}]}], ";", "\n",
       "\t", 
      RowBox[{"fiatShamirCheckZOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{"zProver", " ", "==", " ", "z"}], ")"}]}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", "fiatShamirCheckZOk"}], ",", " ", 
        RowBox[{"GiveInsight", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<z\>\"", "->", "z"}], "}"}], "]"}]}], "]"}], ";", "\n", 
      "\t", 
      RowBox[{"w", " ", "=", " ", 
       RowBox[{"FiatShamirGet", "[", 
        RowBox[{"\"\<w\>\"", ",", "q", ",", 
         RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}]}],
       ";", "\n", "\t", 
      RowBox[{"wProver", " ", "=", " ", 
       RowBox[{"WaitForProversVariable", "[", "\"\<w\>\"", "]"}]}], ";", "\n",
       "\t", 
      RowBox[{"fiatShamirCheckWOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{"wProver", " ", "==", " ", "w"}], ")"}]}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", "fiatShamirCheckWOk"}], ",", " ", 
        RowBox[{"GiveInsight", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<w\>\"", "->", "w"}], "}"}], "]"}]}], "]"}], ";", "\n", 
      "\t", 
      RowBox[{"fiatShamirCheck", " ", "=", " ", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<Fiat-Shamir check on y:\\n\!\(\*SubscriptBox[\(y\), \
\(Prover\)]\) \!\(\*OverscriptBox[\(=\), \(?\)]\) \
FiatShamir(u,\!\(\*SubscriptBox[\(A\), \(L\)]\),\!\(\*SubscriptBox[\(S\), \(L\
\)]\),\!\(\*SubscriptBox[\(S\), \(R, h\)]\),\!\(\*SubscriptBox[\(S\), \(R, \
b\)]\),\!\(\*SubscriptBox[\(S\), \(R, c\)]\))\>\"", ",", "\"\<\>\"", ",", 
           "fiatShamirCheckYOk"}], "}"}], ",", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Fiat-Shamir check on z:\\n\!\(\*SubscriptBox[\(z\), \
\(Prover\)]\) \!\(\*OverscriptBox[\(=\), \(?\)]\) FiatShamir(y)\>\"", ",", 
           "\"\<\>\"", ",", "fiatShamirCheckZOk"}], "}"}], ",", "\n", "\t\t", 
         
         RowBox[{"{", 
          RowBox[{
          "\"\<Fiat-Shamir check on w:\\n\!\(\*SubscriptBox[\(w\), \
\(Prover\)]\) \!\(\*OverscriptBox[\(=\), \(?\)]\) FiatShamir(z)\>\"", ",", 
           "\"\<\>\"", ",", "fiatShamirCheckWOk"}], "}"}]}], "\n", "\t", 
        "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SuperscriptBox["y", "n"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"Thread", "[", 
    RowBox[{"powermodq", "[", 
     RowBox[{
      RowBox[{"ConstantArray", "[", 
       RowBox[{"y", ",", "n"}], "]"}], ",", " ", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", 
        RowBox[{"n", "-", "1"}]}], "]"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubsuperscriptBox["y", "z", 
     RowBox[{"n", "-", "1"}]], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", "z", "}"}], ",", 
     RowBox[{
      OverscriptBox[
       SuperscriptBox["y", "n"], "\[RightVector]"], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", 
        RowBox[{"n", "-", "1"}]}], "]"}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SuperscriptBox["y", 
    RowBox[{"-", "1"}]], " ", "=", " ", 
   RowBox[{"modinvq", "[", "y", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SuperscriptBox["y", 
     RowBox[{"-", "n"}]], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"Thread", "[", 
    RowBox[{"powermodq", "[", 
     RowBox[{
      RowBox[{"ConstantArray", "[", 
       RowBox[{
        SuperscriptBox["y", 
         RowBox[{"-", "1"}]], ",", "n"}], "]"}], ",", " ", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", 
        RowBox[{"n", "-", "1"}]}], "]"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SuperscriptBox["w", "n"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"Thread", "[", 
    RowBox[{"powermodq", "[", 
     RowBox[{
      RowBox[{"ConstantArray", "[", 
       RowBox[{"w", ",", "n"}], "]"}], ",", " ", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", 
        RowBox[{"n", "-", "1"}]}], "]"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubsuperscriptBox["w", "0", 
     RowBox[{"n", "-", "1"}]], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{
      OverscriptBox[
       SuperscriptBox["w", "n"], "\[RightVector]"], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", 
        RowBox[{"n", "-", "1"}]}], "]"}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Delta]", "yz"], " ", "=", " ", 
   RowBox[{"modq", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"z", "^", "3"}]}], " ", "*", " ", 
      RowBox[{"(", 
       RowBox[{"z", " ", "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "-", "1"}], ")"}], " ", "*", " ", 
         SuperscriptBox["y", 
          RowBox[{"-", "1"}]]}]}], ")"}]}], " ", "-", " ", "z"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Delta]", "yzw"], " ", "=", " ", 
    RowBox[{"modq", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "z"}], " ", "*", " ", 
       RowBox[{"(", 
        RowBox[{"2", " ", "+", " ", "z", " ", "+", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}], " ", "*", " ", 
          SuperscriptBox["y", 
           RowBox[{"-", "1"}]]}]}], ")"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["y", 
          RowBox[{"-", "1"}]], " ", "-", " ", "w"}], ")"}], " ", "*", " ", 
       RowBox[{"(", "\n", "\t", 
        RowBox[{"Total", "[", 
         RowBox[{"Thread", "[", 
          RowBox[{"powermodq", "[", 
           RowBox[{
            RowBox[{"ConstantArray", "[", 
             RowBox[{
              RowBox[{"w", "*", "y"}], ",", 
              RowBox[{"n", "-", "1"}]}], "]"}], ",", " ", 
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", 
              RowBox[{"n", "-", "2"}]}], "]"}]}], "]"}], "]"}], "]"}], "\n", 
        ")"}]}]}], "]"}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"Join", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{"{", 
          RowBox[{"\"\<y\>\"", ",", "semanticsOfRandomChallenge", ",", "y"}], 
          "}"}], ",", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{"\"\<z\>\"", ",", "semanticsOfRandomChallenge", ",", "z"}], 
          "}"}], ",", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{"\"\<w\>\"", ",", "semanticsOfRandomChallenge", ",", "w"}], 
          "}"}]}], "\n", "\t", "}"}], ",", "\n", "\t", "fiatShamirCheck", ",",
        "\n", "\t", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(\[Delta]\), \(yz\)]\) \
:\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) -\!\(\*SuperscriptBox[\(z\), \
\(3\)]\)(z + (n-1)\!\(\*SuperscriptBox[\(y\), \(-1\)]\)) - z\>\"", ",", 
           "\"\<\>\"", ",", 
           SubscriptBox["\[Delta]", "yz"]}], "}"}], ",", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(\[Delta]\), \(yzw\)]\) \
:\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) -z (2 + z + \
(n-1)\!\(\*SuperscriptBox[\(y\), \(-1\)]\)) + (\!\(\*SuperscriptBox[\(y\), \
\(-1\)]\)-w)\!\(\*SubsuperscriptBox[\(\[CapitalSigma]\), \(i = 0\), \(n - \
2\)]\)(wy\!\(\*SuperscriptBox[\()\), \(i\)]\)\>\"", ",", "\"\<\>\"", ",", 
           SubscriptBox["\[Delta]", "yzw"]}], "}"}]}], "\[IndentingNewLine]", 
        "\t", "}"}]}], "\n", "]"}], ",", " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left", ",", "Left"}], "}"}], 
       "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"CommunicationCostGrid", "[", "]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "interactive"}], ",", 
    RowBox[{"Print", "[", 
     RowBox[{"FiatShamirGrid", "[", "]"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ProcessNewMessages", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"StateMachineSave", "[", "\"\<yzw\>\"", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "interactive"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", "fiatShamirCheckYOk"}], ",", " ", 
       RowBox[{
       "VerificationFailed", "[", "\"\<Fiat-Shamir check on y\>\"", "]"}]}], 
      "]"}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", "fiatShamirCheckZOk"}], ",", " ", 
       RowBox[{
       "VerificationFailed", "[", "\"\<Fiat-Shamir check on z\>\"", "]"}]}], 
      "]"}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", "fiatShamirCheckWOk"}], ",", " ", 
       RowBox[{
       "VerificationFailed", "[", "\"\<Fiat-Shamir check on w\>\"", "]"}]}], 
      "]"}], ";"}]}], "\n", "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.879929202420212*^9, 3.8799292162419443`*^9}, {
   3.879929246343347*^9, 3.879929396030283*^9}, {3.879929486990447*^9, 
   3.879929733650737*^9}, {3.879929841500627*^9, 3.8799298467311087`*^9}, {
   3.879930165151589*^9, 3.879930193604713*^9}, {3.879930314414579*^9, 
   3.8799305223080273`*^9}, {3.879930596036702*^9, 3.879930610854463*^9}, {
   3.879930644910576*^9, 3.879930723106235*^9}, {3.879930829881606*^9, 
   3.8799308517986937`*^9}, {3.879930883915588*^9, 3.8799309960744457`*^9}, {
   3.8799313220499783`*^9, 3.8799313473435183`*^9}, {3.8799314249303703`*^9, 
   3.879931436202737*^9}, {3.8799314884476833`*^9, 3.879931751770083*^9}, {
   3.879931786208527*^9, 3.879931786804702*^9}, {3.8799318287978992`*^9, 
   3.8799318317232924`*^9}, {3.879934804148394*^9, 3.8799348423540373`*^9}, {
   3.8801096511101837`*^9, 3.8801096661101103`*^9}, {3.880170317613798*^9, 
   3.8801703275034*^9}, {3.880170433819805*^9, 3.8801704346936893`*^9}, {
   3.88017534440836*^9, 3.880175357573516*^9}, {3.8801754988386517`*^9, 
   3.880175557530816*^9}, {3.880175624363955*^9, 3.880175662662733*^9}, {
   3.8801757118866796`*^9, 3.880175743233543*^9}, {3.880175973155924*^9, 
   3.8801759758570538`*^9}, {3.880314042152143*^9, 3.8803140569776077`*^9}, {
   3.880315454272731*^9, 3.8803155564964333`*^9}, {3.8803156162000723`*^9, 
   3.880315617612403*^9}, {3.881418920339044*^9, 3.881419272082273*^9}, {
   3.881419336736154*^9, 3.881419510709008*^9}, {3.881664422716837*^9, 
   3.8816644876955833`*^9}, {3.881664523324218*^9, 3.88166468279115*^9}, {
   3.8816648872133017`*^9, 3.881665014364256*^9}, {3.8816651489822617`*^9, 
   3.881665279413066*^9}, {3.881665311771908*^9, 3.881665400913005*^9}, {
   3.881665508546651*^9, 3.881665623353014*^9}, {3.881665667096427*^9, 
   3.881665682073811*^9}, {3.881748739484495*^9, 3.8817488281232357`*^9}, {
   3.881748864423725*^9, 3.8817488852934113`*^9}, {3.882307400624168*^9, 
   3.882307467153316*^9}, {3.882307528760528*^9, 3.882307530721395*^9}, {
   3.882307586861433*^9, 3.882307586946967*^9}, {3.8823076676826563`*^9, 
   3.882307727710319*^9}, {3.882307817389818*^9, 3.882307929625205*^9}, {
   3.882308471025764*^9, 3.882308528329956*^9}, {3.882308909357819*^9, 
   3.882308930013749*^9}, {3.882308999326336*^9, 3.882309052093055*^9}, 
   3.882309118127131*^9, {3.882309159946217*^9, 3.8823095250785227`*^9}, {
   3.8823095692910633`*^9, 3.882309662167963*^9}, {3.88230971875214*^9, 
   3.882309752796762*^9}, {3.882309868868947*^9, 3.882309985070734*^9}, {
   3.88231003018969*^9, 3.882310186448641*^9}, 3.882310238692954*^9, {
   3.882310322375005*^9, 3.882310543422235*^9}, {3.88231061750636*^9, 
   3.8823106449894257`*^9}, {3.882310682434618*^9, 3.882310704334346*^9}, {
   3.882310738340761*^9, 3.882310748263194*^9}, {3.882310784966886*^9, 
   3.882310787318973*^9}, {3.882310842896213*^9, 3.882310845460981*^9}, {
   3.8823111328896217`*^9, 3.882311145720422*^9}, {3.882311193088913*^9, 
   3.882311234812995*^9}, {3.882311304282084*^9, 3.882311319114716*^9}, {
   3.8823114588197193`*^9, 3.882311461403575*^9}, {3.882311507133708*^9, 
   3.882311523597467*^9}, 3.882311759467402*^9, {3.882311790243484*^9, 
   3.88231185181598*^9}, {3.882311888506427*^9, 3.882311895817589*^9}, {
   3.8823119872060757`*^9, 3.8823120156024103`*^9}, {3.882312333916847*^9, 
   3.88231239635502*^9}, {3.88231242741282*^9, 3.882312589864313*^9}, {
   3.882312628093954*^9, 3.882312713505712*^9}, {3.882312752843227*^9, 
   3.882312801938551*^9}, {3.882312843806136*^9, 3.882312900780325*^9}, {
   3.8823129576237993`*^9, 3.882313225793015*^9}, {3.882313256062626*^9, 
   3.882313418154488*^9}, {3.882313612503628*^9, 3.882313613386386*^9}, {
   3.882358602766431*^9, 3.882358651688929*^9}, 3.8824248609764547`*^9, 
   3.882425094594297*^9, {3.882425246467757*^9, 3.88242528750207*^9}, {
   3.882425370471677*^9, 3.882425434325447*^9}, {3.882425518554407*^9, 
   3.8824255252916803`*^9}, 3.88242558385886*^9, {3.882427252417466*^9, 
   3.882427262797104*^9}, {3.8824274103190517`*^9, 3.882427422399465*^9}, {
   3.88242745513201*^9, 3.882427537896587*^9}, {3.882427568107493*^9, 
   3.882427624159794*^9}, {3.882427663699511*^9, 3.8824278323268137`*^9}, {
   3.882427864169558*^9, 3.8824281243927803`*^9}, {3.88242817785845*^9, 
   3.882428308938002*^9}, {3.882428584485615*^9, 3.882428601846816*^9}, {
   3.88242882676499*^9, 3.8824288872614393`*^9}, {3.882430261000534*^9, 
   3.882430275079853*^9}, {3.882433635834856*^9, 3.882433684107037*^9}, {
   3.882433749327137*^9, 3.8824337866245613`*^9}, {3.882433821584209*^9, 
   3.882433875498137*^9}, {3.8824345849158773`*^9, 3.8824347004232063`*^9}, {
   3.8824347387976294`*^9, 3.882434746024279*^9}, {3.88244295133805*^9, 
   3.882442957754553*^9}, {3.88261565254813*^9, 3.882615678752944*^9}, {
   3.8826157397356443`*^9, 3.882615752265128*^9}, {3.88261600652862*^9, 
   3.882616052554932*^9}, {3.8826161224326143`*^9, 3.88261633179005*^9}, {
   3.882617012231573*^9, 3.882617082422771*^9}, {3.88261963406408*^9, 
   3.882619677401579*^9}, {3.882619780770638*^9, 3.8826197865371113`*^9}, {
   3.8826270812116623`*^9, 3.882627140243272*^9}, {3.8828687512736263`*^9, 
   3.882868770904778*^9}, {3.882868850594379*^9, 3.882868945252095*^9}, {
   3.8828689899174633`*^9, 3.882869007291855*^9}, {3.8828690476168423`*^9, 
   3.882869056595374*^9}, {3.882869126878224*^9, 3.882869153611556*^9}, {
   3.882870779921494*^9, 3.882870780493198*^9}, {3.8828733910261393`*^9, 
   3.8828734070420628`*^9}, {3.882874255544504*^9, 3.8828742564613733`*^9}, {
   3.882874335521782*^9, 3.882874376555695*^9}, {3.882905411614842*^9, 
   3.882905598193084*^9}, {3.882905669986951*^9, 3.8829057347256823`*^9}, {
   3.882905848229823*^9, 3.882905864405552*^9}, {3.8829059619340687`*^9, 
   3.882905998779422*^9}, {3.8829060360821543`*^9, 3.882906053358131*^9}, 
   3.8829428325055103`*^9, {3.882951128716601*^9, 3.882951173140333*^9}, {
   3.882951331933573*^9, 3.8829513342011747`*^9}, {3.883206309272212*^9, 
   3.883206347142806*^9}, {3.8832063909553003`*^9, 3.883206398062982*^9}, {
   3.883206966288069*^9, 3.883207008178843*^9}, {3.883207092264275*^9, 
   3.88320711371842*^9}, {3.883207377069468*^9, 3.883207390639152*^9}, {
   3.883210761945722*^9, 3.883210762806096*^9}, {3.8832210754672623`*^9, 
   3.883221077505107*^9}, {3.883508599803825*^9, 3.883508624169319*^9}, {
   3.883513465460272*^9, 3.883513479167603*^9}, {3.883517747327647*^9, 
   3.883517752945485*^9}, {3.883590046460964*^9, 3.883590235590221*^9}, {
   3.8835905421484623`*^9, 3.883590590589904*^9}, {3.883590636439857*^9, 
   3.8835906640575323`*^9}, {3.883590724908215*^9, 3.883590729717845*^9}, {
   3.883593566022299*^9, 3.883593573740384*^9}, {3.883594325710462*^9, 
   3.883594328377366*^9}, {3.883594367429793*^9, 3.883594412346262*^9}, {
   3.883594444793247*^9, 3.883594448236806*^9}, 3.8835951732980947`*^9, {
   3.8835985392533827`*^9, 3.8835985537109737`*^9}, {3.883598633067848*^9, 
   3.8835986350217123`*^9}, {3.883599049132208*^9, 3.883599056380801*^9}, {
   3.883599256405202*^9, 3.8835992619882383`*^9}, {3.8835994345988817`*^9, 
   3.8835994583933353`*^9}, {3.883601723907877*^9, 3.883601764325099*^9}, {
   3.8843231016419287`*^9, 3.8843231311935177`*^9}, {3.884325201556448*^9, 
   3.88432520300209*^9}, {3.8843365381050243`*^9, 3.884336544033978*^9}, {
   3.884752099704474*^9, 3.884752102146294*^9}, 3.884768317951562*^9, {
   3.8847763784833603`*^9, 3.884776380694975*^9}, {3.88478480789814*^9, 
   3.884784808113948*^9}, {3.884786180142146*^9, 3.884786189676702*^9}, {
   3.886745854933474*^9, 3.886745864790487*^9}, {3.8867529601600113`*^9, 
   3.8867529726203213`*^9}, {3.886753954590052*^9, 3.886753954660039*^9}, {
   3.886754012262481*^9, 3.886754056361006*^9}, {3.8867541059340544`*^9, 
   3.8867541237549567`*^9}, {3.886754416183598*^9, 3.886754423443946*^9}, {
   3.8867566999564323`*^9, 3.8867567161307855`*^9}, {3.886756897259358*^9, 
   3.886756915335419*^9}, 3.886756952382922*^9, 3.8867571234505205`*^9, {
   3.887396240950693*^9, 3.8873962416301804`*^9}, {3.887396365603709*^9, 
   3.887396369704172*^9}, {3.8874900259086313`*^9, 3.8874900297301283`*^9}, {
   3.887490244910579*^9, 3.887490247320567*^9}, {3.8876446131590033`*^9, 
   3.8876446229087496`*^9}, {3.892404693215321*^9, 3.892404728875576*^9}, {
   3.8924409245125313`*^9, 3.892440929401986*^9}, {3.89244113120082*^9, 
   3.89244115525445*^9}, {3.892468386937817*^9, 3.892468442286085*^9}, {
   3.898327510049609*^9, 3.898327540793768*^9}, {3.8983275744092607`*^9, 
   3.898327630114682*^9}, {3.899012553680791*^9, 3.899012657756459*^9}, {
   3.899012783077037*^9, 3.8990127884329643`*^9}, {3.899012822838995*^9, 
   3.899012874005878*^9}, {3.899012989960514*^9, 3.8990130512360086`*^9}, 
   3.8990136694669886`*^9, 3.8990277118744144`*^9, {3.899303610807082*^9, 
   3.8993036143885374`*^9}, {3.8993859656443853`*^9, 3.8993859667562046`*^9}, 
   3.89938866873563*^9, {3.911295795121193*^9, 3.911295821137855*^9}, {
   3.9114077608266573`*^9, 3.911407764968669*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"777f6ea7-b113-48bf-9ef2-cee3439f8f53"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Generated random challenge\\n  y = \
34071807136020401556542966374520839966408801837667695887196400659657467356250\
\"\>"], "Print",
 CellChangeTimes->{3.9139489459283295`*^9},
 CellLabel->
  "During evaluation of \
In[149]:=",ExpressionUUID->"11220b60-04f6-4e51-9f59-42875cbb8ca2"],

Cell[BoxData["\<\"Generated random challenge\\n  z = \
51229650329065518720689096099379898312022759911804433524422971782942501299478\
\"\>"], "Print",
 CellChangeTimes->{3.9139489459353256`*^9},
 CellLabel->
  "During evaluation of \
In[149]:=",ExpressionUUID->"f3830423-bfe5-4120-bdaa-a40b223b8681"],

Cell[BoxData["\<\"Generated random challenge\\n  w = \
42781056564410839501179897936311018651211153484828394010058930403301036390238\
\"\>"], "Print",
 CellChangeTimes->{3.913948945944334*^9},
 CellLabel->
  "During evaluation of \
In[149]:=",ExpressionUUID->"b1e5a358-09d3-493f-9389-0a0216e3af9e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Name\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Semantics\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Value\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {"\<\"y\"\>", "\<\"Random Challenge\"\>", 
     "340718071360204015565429663745208399664088018376676958871964006596574673\
56250"},
    {"\<\"z\"\>", "\<\"Random Challenge\"\>", 
     "512296503290655187206890960993798983120227599118044335244229717829425012\
99478"},
    {"\<\"w\"\>", "\<\"Random Challenge\"\>", 
     "427810565644108395011798979363110186512111534848283940100589304033010363\
90238"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(\[Delta]\\), \\(yz\\)]\\) \
:\\!\\(\\*SubscriptBox[\\(\[Congruent]\\), \\(q\\)]\\) \
-\\!\\(\\*SuperscriptBox[\\(z\\), \\(3\\)]\\)(z + \
(n-1)\\!\\(\\*SuperscriptBox[\\(y\\), \\(-1\\)]\\)) - z\"\>", "\<\"\"\>", 
     "806558631098099542810409818085573981153564228160354407451915218755867237\
07423"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(\[Delta]\\), \\(yzw\\)]\\) \
:\\!\\(\\*SubscriptBox[\\(\[Congruent]\\), \\(q\\)]\\) -z (2 + z + \
(n-1)\\!\\(\\*SuperscriptBox[\\(y\\), \\(-1\\)]\\)) + \
(\\!\\(\\*SuperscriptBox[\\(y\\), \
\\(-1\\)]\\)-w)\\!\\(\\*SubsuperscriptBox[\\(\[CapitalSigma]\\), \\(i = 0\\), \
\\(n - 2\\)]\\)(wy\\!\\(\\*SuperscriptBox[\\()\\), \\(i\\)]\\)\"\>", \
"\<\"\"\>", 
     "362807911546158246737413715623715739614779892899603703762935826895211483\
09524"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left, Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.91394894595033*^9},
 CellLabel->
  "During evaluation of \
In[149]:=",ExpressionUUID->"f13e15c7-1f73-4183-8533-34f5a70e7169"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Total Communication Cost\"\>",
      StripOnInput->False,
      FontWeight->Bold], "\[SpanFromLeft]", "\[SpanFromLeft]", 
     "\[SpanFromLeft]"},
    {
     StyleBox["\<\"Type\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Count\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Names\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Bits\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {"\<\"group\"\>", 
     "10", "\<\"V, W, AW, SW, AL, SL, SRh, SRb, SRc, SRd\"\>", "2570"},
    {"\<\"scalar\"\>", "5", "\<\"r, u, y, z, w\"\>", "1280"},
    {
     StyleBox["\<\"total\"\>",
      StripOnInput->False,
      FontSlant->Italic], "15", "\<\"\"\>", "3850"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left, Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.913948945957327*^9},
 CellLabel->
  "During evaluation of \
In[149]:=",ExpressionUUID->"1aea79c0-2076-4306-9f22-457725eb2df0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Receive P\[CloseCurlyQuote]s Pedersen Commitments ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "3"], TraditionalForm]],ExpressionUUID->
  "914920c0-38ca-4640-9f5e-ba3e0955c3e8"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "5"], TraditionalForm]],ExpressionUUID->
  "4960b80b-3262-4bf7-88bc-2f5e14df01ab"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", 
    RowBox[{"1", ",", "W"}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "cd4ee240-da30-49f0-ac21-f399f1abb353"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", 
    RowBox[{"2", ",", "W"}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "81493660-8274-431b-b3a1-fa65a2590aca"]
}], "Subsection",
 CellChangeTimes->{{3.886795444898007*^9, 3.886795457661789*^9}, {
  3.892441273380437*^9, 3.8924412820506*^9}, {3.892443597905909*^9, 
  3.892443598084399*^9}, {3.8924681814706306`*^9, 3.892468197597628*^9}, {
  3.8990134904452496`*^9, 
  3.8990135017675443`*^9}},ExpressionUUID->"6bce2a2f-3161-4d95-b0a7-\
b4c4f4992aac"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"StateMachineRestore", "[", "\"\<yzw\>\"", "]"}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"Wait", " ", "for", " ", "Pedersen", " ", "Commitment", " ", 
    SubscriptBox["T", "3"], " ", 
    RowBox[{"(", 
     RowBox[{"to", " ", 
      SubscriptBox["t", "3"], " ", "with", " ", "blinding", " ", "value", " ", 
      SubscriptBox["\[Tau]", "3"]}], ")"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["T", "3"], " ", "=", " ", 
   RowBox[{"WaitForProversVariable", "[", "\"\<T3\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", 
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<T3\>\"", ",", 
       RowBox[{"compressPoint", "[", 
        SubscriptBox["T", "3"], "]"}], ",", 
       RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}]}], 
    "]"}], ";"}], "\n", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Wait", " ", "for", " ", "Pedersen", " ", "Commitment", " ", 
    SubscriptBox["T", "5"], " ", 
    RowBox[{"(", 
     RowBox[{"to", " ", 
      SubscriptBox["t", "5"], " ", "with", " ", "blinding", " ", "value", " ", 
      SubscriptBox["\[Tau]", "5"]}], ")"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["T", "5"], " ", "=", " ", 
   RowBox[{"WaitForProversVariable", "[", "\"\<T5\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", 
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<T5\>\"", ",", 
       RowBox[{"compressPoint", "[", 
        SubscriptBox["T", "5"], "]"}], ",", 
       RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}]}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(T\), \(3\)]\)\>\"", ",", 
         "\"\<Blinded\\nPedersen\\nCommitment\>\"", ",", 
         SubscriptBox["T", "3"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(T\), \(5\)]\)\>\"", ",", 
         "\"\<Blinded\\nPedersen\\nCommitment\>\"", ",", 
         SubscriptBox["T", "5"]}], "}"}]}], "\[IndentingNewLine]", "}"}], ",",
      " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left"}], "}"}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Wait", " ", "for", " ", "Pedersen", " ", "Commitment", " ", 
    SubscriptBox["T", 
     RowBox[{"1", ",", "W"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"to", " ", 
       SubscriptBox["t", 
        RowBox[{"1", ",", "W"}]], " ", "with", " ", "blinding", " ", "value", 
       " ", 
       SubscriptBox["\[Tau]", 
        RowBox[{"1", ",", "W"}]], " ", "for", " ", "proving", " ", "W", " ", 
       "is", " ", "well"}], "-", 
      RowBox[{"formed", " ", 
       RowBox[{"w", ".", "r", ".", "t", ".", " ", "V"}]}]}], ")"}]}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["T", 
    RowBox[{"1", ",", "W"}]], " ", "=", " ", 
   RowBox[{"WaitForProversVariable", "[", "\"\<T1W\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", 
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<T1W\>\"", ",", 
       RowBox[{"compressPoint", "[", 
        SubscriptBox["T", 
         RowBox[{"1", ",", "W"}]], "]"}], ",", 
       RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}]}], 
    "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Wait", " ", "for", " ", "Pedersen", " ", "Commitment", " ", 
    SubscriptBox["T", 
     RowBox[{"2", ",", "W"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"to", " ", 
       SubscriptBox["t", 
        RowBox[{"2", ",", "W"}]], " ", "with", " ", "blinding", " ", "value", 
       " ", 
       SubscriptBox["\[Tau]", 
        RowBox[{"2", ",", "W"}]], " ", "for", " ", "proving", " ", "W", " ", 
       "is", " ", "well"}], "-", 
      RowBox[{"formed", " ", 
       RowBox[{"w", ".", "r", ".", "t", ".", " ", "V"}]}]}], ")"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["T", 
    RowBox[{"2", ",", "W"}]], " ", "=", " ", 
   RowBox[{"WaitForProversVariable", "[", "\"\<T2W\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", 
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<T2W\>\"", ",", 
       RowBox[{"compressPoint", "[", 
        SubscriptBox["T", 
         RowBox[{"2", ",", "W"}]], "]"}], ",", 
       RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}]}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(T\), \(1, W\)]\)\>\"", ",", 
         "\"\<Blinded\\nPedersen\\nCommitment\>\"", ",", 
         SubscriptBox["T", 
          RowBox[{"1", ",", "W"}]]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(T\), \(2, W\)]\)\>\"", ",", 
         "\"\<Blinded\\nPedersen\\nCommitment\>\"", ",", 
         SubscriptBox["T", 
          RowBox[{"2", ",", "W"}]]}], "}"}]}], "\[IndentingNewLine]", "}"}], 
     ",", " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left"}], "}"}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], "\n"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"CommunicationCostGrid", "[", "]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "interactive"}], ",", 
    RowBox[{"Print", "[", 
     RowBox[{"FiatShamirGrid", "[", "]"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ProcessNewMessages", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"StateMachineSave", "[", "\"\<T3T5T1WT2W\>\"", "]"}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.886795519272731*^9, 3.8867955503795877`*^9}, {
   3.8867956141529493`*^9, 3.886795758330596*^9}, {3.886795810559472*^9, 
   3.8867959982612696`*^9}, {3.8867960428172026`*^9, 
   3.8867960467116365`*^9}, {3.887087096312403*^9, 3.887087099890402*^9}, {
   3.887396245022566*^9, 3.887396246090746*^9}, {3.8873963740781813`*^9, 
   3.887396384647689*^9}, {3.887482776961077*^9, 3.8874827924066687`*^9}, {
   3.887490295757661*^9, 3.887490328428671*^9}, 3.887490805666823*^9, {
   3.8875530497853565`*^9, 3.8875530526034455`*^9}, {3.892441266703135*^9, 
   3.8924412667960663`*^9}, {3.892468169026827*^9, 3.892468169081663*^9}, {
   3.8924682105250387`*^9, 3.892468344818027*^9}, {3.892468400325059*^9, 
   3.892468400806035*^9}, {3.892468474020595*^9, 3.892468504797471*^9}, {
   3.892471645736828*^9, 3.892471646898718*^9}, {3.898327900895789*^9, 
   3.898327944226022*^9}, {3.898328061641223*^9, 3.898328062133233*^9}, {
   3.8983281187644053`*^9, 3.8983281232974453`*^9}, {3.899013509969027*^9, 
   3.899013628457116*^9}, 3.8990136661913013`*^9, {3.899385986971839*^9, 
   3.899385989763788*^9}},
 CellLabel->
  "In[165]:=",ExpressionUUID->"c6abacf1-0060-4e25-be38-81d88c38711c"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Waiting to receive T3 from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.9139489459893084`*^9},
 CellLabel->
  "During evaluation of \
In[165]:=",ExpressionUUID->"37b31e90-d1b6-4762-8a8d-0f87a809f673"],

Cell[BoxData["\<\"Waiting to receive T5 from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.913948946274783*^9},
 CellLabel->
  "During evaluation of \
In[165]:=",ExpressionUUID->"071cb842-0269-4146-b420-f0888cbd73b3"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Name\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Semantics\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Value\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(T\\), \\(3\\)]\\)\"\>", \
"\<\"Blinded\\nPedersen\\nCommitment\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "14448711964151254610079813969094599304991556686032655240425388262152998\
792866", ",", 
       "3581865215558670641027969823888377480277758841734830019790214108862923\
2808578"}], "]"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(T\\), \\(5\\)]\\)\"\>", \
"\<\"Blinded\\nPedersen\\nCommitment\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "95840125068125223175775950838735910594996026329945329600069894500083191\
471477", ",", 
       "9241000835906654850727455356097345936630887112888812989153961871661132\
5817962"}], "]"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.913948946336752*^9},
 CellLabel->
  "During evaluation of \
In[165]:=",ExpressionUUID->"6bf065bf-e5f7-4b47-bc19-eb360e6624d7"],

Cell[BoxData["\<\"Waiting to receive T1W from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.9139489463447294`*^9},
 CellLabel->
  "During evaluation of \
In[165]:=",ExpressionUUID->"7e47e060-94eb-491d-a86e-dcba1bd0f2d6"],

Cell[BoxData["\<\"Waiting to receive T2W from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.9139489463497396`*^9},
 CellLabel->
  "During evaluation of \
In[165]:=",ExpressionUUID->"5dad41a7-a4fd-4191-b7c1-451a8ec6c410"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Name\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Semantics\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Value\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(T\\), \\(1, W\\)]\\)\"\>", \
"\<\"Blinded\\nPedersen\\nCommitment\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "54436156700322526824490321689266074037897208791295253995206880824352866\
79707", ",", 
       "1158075880379833854298611692089802639000235251499938120152451184576793\
1697226"}], "]"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(T\\), \\(2, W\\)]\\)\"\>", \
"\<\"Blinded\\nPedersen\\nCommitment\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "46991716425756598968559577543620785423160955041139713706964410377968981\
965216", ",", 
       "4657731279335558284314085177372862328560875889120724498030667686171890\
8945325"}], "]"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.9139489464356604`*^9},
 CellLabel->
  "During evaluation of \
In[165]:=",ExpressionUUID->"94d1b70c-b2fe-49f4-aa41-f23431fc044f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Total Communication Cost\"\>",
      StripOnInput->False,
      FontWeight->Bold], "\[SpanFromLeft]", "\[SpanFromLeft]", 
     "\[SpanFromLeft]"},
    {
     StyleBox["\<\"Type\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Count\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Names\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Bits\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {"\<\"group\"\>", 
     "14", "\<\"V, W, AW, SW, AL, SL, SRh, SRb, SRc, SRd, T3, T5, T1W, \
T2W\"\>", "3598"},
    {"\<\"scalar\"\>", "5", "\<\"r, u, y, z, w\"\>", "1280"},
    {
     StyleBox["\<\"total\"\>",
      StripOnInput->False,
      FontSlant->Italic], "19", "\<\"\"\>", "4878"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left, Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.913948946443655*^9},
 CellLabel->
  "During evaluation of \
In[165]:=",ExpressionUUID->"d65afe71-21bf-4e6a-abc7-987d265f88ec"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Send Random Challenge x
or Generate Fiat-Shamir Transform\
\>", "Subsection",
 CellChangeTimes->{{3.8867961138170357`*^9, 
  3.8867961253540955`*^9}},ExpressionUUID->"35fc9252-ecd2-47f6-8476-\
c0d5b6a196ad"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"StateMachineRestore", "[", "\"\<T3T5T1WT2W\>\"", "]"}], ";"}], 
  "\n", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Send", " ", "random", " ", "challenge", " ", "x", " ", 
    RowBox[{"(", 
     RowBox[{"evaluation", " ", "point", " ", "of", " ", "t", 
      RowBox[{"(", 
       RowBox[{"X", "=", "x"}], ")"}]}], ")"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{"interactive", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Generate", " ", "random", " ", "challenge"}], "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"x", " ", "=", " ", 
       RowBox[{"SendRandomChallenge", "[", 
        RowBox[{"\"\<x\>\"", ",", "1", ",", 
         RowBox[{"q", "-", "1"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"fiatShamirCheck", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
     RowBox[{"(*", "Else", "*)"}], ",", "\n", 
     RowBox[{"(*", 
      RowBox[{"Fiat", "-", "Shamir"}], "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"x", " ", "=", " ", 
       RowBox[{"FiatShamirGet", "[", 
        RowBox[{"\"\<x\>\"", ",", "q", ",", 
         RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}]}],
       ";", "\n", "\t", 
      RowBox[{"xProver", " ", "=", " ", 
       RowBox[{"WaitForProversVariable", "[", "\"\<x\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"fiatShamirCheckXOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{"xProver", " ", "==", " ", "x"}], ")"}]}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", "fiatShamirCheckXOk"}], ",", " ", 
        RowBox[{"GiveInsight", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<x\>\"", "->", "x"}], "}"}], "]"}]}], "]"}], ";", "\n", 
      "\t", 
      RowBox[{"fiatShamirCheck", " ", "=", " ", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Fiat-Shamir check on x:\\n\!\(\*SubscriptBox[\(x\), \(Prover\)]\
\) \!\(\*OverscriptBox[\(=\), \(?\)]\) FiatShamir(setup,w,\!\(\*SubscriptBox[\
\(T\), \(3\)]\),\!\(\*SubscriptBox[\(T\), \(5\)]\),\!\(\*SubscriptBox[\(T\), \
\(1, W\)]\),\!\(\*SubscriptBox[\(T\), \(2, W\)]\))\>\"", ",", "\"\<\>\"", ",",
           "fiatShamirCheckXOk"}], "}"}], "\n", "\t", "}"}]}], ";"}]}], "\n", 
    "\t", "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]"}], "\n", 

 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"Join", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{"{", 
          RowBox[{"\"\<x\>\"", ",", "semanticsOfRandomChallenge", ",", "x"}], 
          "}"}]}], "\n", "\t", "}"}], ",", "\n", "\t", "fiatShamirCheck"}], 
      "\n", "]"}], ",", " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left", ",", "Left"}], "}"}], 
       "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], "\n"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"CommunicationCostGrid", "[", "]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "interactive"}], ",", 
    RowBox[{"Print", "[", 
     RowBox[{"FiatShamirGrid", "[", "]"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ProcessNewMessages", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"StateMachineSave", "[", "\"\<x\>\"", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "interactive"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", "fiatShamirCheckXOk"}], ",", " ", 
       RowBox[{
       "VerificationFailed", "[", "\"\<Fiat-Shamir check on x\>\"", "]"}]}], 
      "]"}], ";"}]}], "\n", "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.8867965331546955`*^9, 3.886796626813054*^9}, {
   3.8867966671740217`*^9, 3.8867966809816236`*^9}, {3.887396250248204*^9, 
   3.8873962515669622`*^9}, {3.8873963895241394`*^9, 
   3.8873963948017845`*^9}, {3.887490371644588*^9, 3.8874903765028744`*^9}, {
   3.892471757409915*^9, 3.892471769655106*^9}, {3.898328170779269*^9, 
   3.8983281787168984`*^9}, {3.8983282456170807`*^9, 
   3.8983282456749415`*^9}, {3.898328297816481*^9, 3.8983283527472267`*^9}, 
   3.8990136804460683`*^9, {3.8990137331900477`*^9, 3.899013814497735*^9}, 
   3.89930361715596*^9, 3.8993859914204035`*^9, 3.9114077661281796`*^9},
 CellLabel->
  "In[180]:=",ExpressionUUID->"16c678dc-b709-460e-80ce-29c835d90fe7"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Generated random challenge\\n  x = \
113126916120434927118052636603002490980047778302346487448691688890663263893727\
\"\>"], "Print",
 CellChangeTimes->{3.913948946481639*^9},
 CellLabel->
  "During evaluation of \
In[180]:=",ExpressionUUID->"ece0c2cc-5714-49c5-a65f-ebe0ab85e754"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Name\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Semantics\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Value\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {"\<\"x\"\>", "\<\"Random Challenge\"\>", 
     "113126916120434927118052636603002490980047778302346487448691688890663263\
893727"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left, Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.913948946489615*^9},
 CellLabel->
  "During evaluation of \
In[180]:=",ExpressionUUID->"a145f229-b4bd-449c-bec1-3da5d7d7cb7a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Total Communication Cost\"\>",
      StripOnInput->False,
      FontWeight->Bold], "\[SpanFromLeft]", "\[SpanFromLeft]", 
     "\[SpanFromLeft]"},
    {
     StyleBox["\<\"Type\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Count\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Names\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Bits\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {"\<\"group\"\>", 
     "14", "\<\"V, W, AW, SW, AL, SL, SRh, SRb, SRc, SRd, T3, T5, T1W, \
T2W\"\>", "3598"},
    {"\<\"scalar\"\>", "6", "\<\"r, u, y, z, w, x\"\>", "1536"},
    {
     StyleBox["\<\"total\"\>",
      StripOnInput->False,
      FontSlant->Italic], "20", "\<\"\"\>", "5134"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left, Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.913948946499623*^9},
 CellLabel->
  "During evaluation of \
In[180]:=",ExpressionUUID->"a5239e84-a0bc-4ffe-948c-68f198237009"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Receive P\[CloseCurlyQuote]s Combined Commitment to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "(", "X", ")"}], TraditionalForm]],ExpressionUUID->
  "8fa52095-3768-4fe4-a7ea-a1cb4f03a51c"],
 " and Perform Last Checks before Inner Product Protocol"
}], "Subsection",
 CellChangeTimes->{{3.886795444898007*^9, 3.886795457661789*^9}, {
  3.886797226039321*^9, 3.8867972530598536`*^9}, {3.8870828194276357`*^9, 
  3.8870828223603764`*^9}, {3.887082920445512*^9, 3.887082934917551*^9}, {
  3.911294209432839*^9, 
  3.9112942097414217`*^9}},ExpressionUUID->"5e2555f4-d8ce-4fc9-b0b5-\
e680a5cd3bf7"],

Cell[TextData[{
 "Receiving\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Tau]", "x"], ":=", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Sigma]", "W"], 
      SuperscriptBox["ny", 
       RowBox[{"n", "-", "1"}]], 
      OverscriptBox["k", "^"], "x"}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["\[Tau]", "3"], 
      SuperscriptBox["x", "3"]}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["\[Tau]", "5"], 
      SuperscriptBox["x", "5"]}]}]}], TraditionalForm]],ExpressionUUID->
  "f67ef55a-828d-46e7-9218-40d9cff31468"],
 ",\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Mu]", 
     RowBox[{"{", 
      RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]], ":=", 
    RowBox[{"\[Alpha]", "+", 
     SuperscriptBox["\[Beta]x", "2"], "+", 
     RowBox[{
      SubscriptBox["\[Rho]", 
       RowBox[{"{", 
        RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]], 
      SuperscriptBox["x", "3"]}]}]}], TraditionalForm]],ExpressionUUID->
  "b4dcec31-2177-48fb-89cb-ec00c8fdc98d"],
 " and\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox["t", "^"], ":=", 
     RowBox[{"<", 
      OverscriptBox["l", "\[RightVector]"]}]}], ",", 
    RowBox[{
     OverscriptBox["r", "\[RightVector]"], ">"}]}], TraditionalForm]],
  ExpressionUUID->"df161bc7-2564-460a-b9c2-da9cfae76515"],
 "\nfrom P where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "W"], TraditionalForm]],ExpressionUUID->
  "34193820-2866-488e-8701-e9dd242d9e8a"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Tau]", "3"], TraditionalForm]],ExpressionUUID->
  "0b07d35b-67d6-49e0-8d48-442a331dafdf"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Tau]", "5"], TraditionalForm]],ExpressionUUID->
  "f7cc86b3-d0f3-4482-91c9-17a715df6cee"],
 ", \[Alpha], \[Beta] and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Rho]", 
    RowBox[{"{", 
     RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]], TraditionalForm]],
  ExpressionUUID->"f1512554-5e10-4640-b0da-5e1071250b9b"],
 " are secret to P until inspection of his Pedersen Commitments. If the inner \
product protocol is not used, ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["l", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "c99a5d69-dd35-4282-ba9c-79d8246d4810"],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["r", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "bd44c9df-bf08-4192-91a4-4138c85cb621"],
 " are also received.\nAlso calculate ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["P", 
      RowBox[{"{", 
       RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}], "+"], ":=", 
     RowBox[{
      RowBox[{
       SubscriptBox["A", "L"], "+", 
       RowBox[{
        SubscriptBox["A", 
         RowBox[{"R", ",", 
          RowBox[{"{", 
           RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]}]], "x"}], "+", 
       
       RowBox[{
        SubscriptBox["S", "L"], 
        SuperscriptBox["x", "2"]}], "+", 
       RowBox[{
        SubscriptBox["S", 
         RowBox[{"R", ",", 
          RowBox[{"{", 
           RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]}]], 
        SuperscriptBox["x", "3"]}], "+", 
       SuperscriptBox["z", "3"]}], "<", 
      OverscriptBox["g", "\[RightVector]"]}]}], ",", 
    RowBox[{
     OverscriptBox[
      SuperscriptBox["y", 
       RowBox[{"-", "n"}]], "\[RightVector]"], ">", 
     RowBox[{"+", 
      RowBox[{"<", 
       OverscriptBox[
        SuperscriptBox[
         RowBox[{"{", 
          RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}], "*"], 
        "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "x"}], 
      OverscriptBox[
       SubsuperscriptBox["y", "z", 
        RowBox[{"n", "-", "1"}]], "\[RightVector]"]}], ">"}]}], 
   TraditionalForm]],ExpressionUUID->"8010a2b7-a660-461b-bac5-311c64833364"],
 ".\nPerform the following checks:\n1) In all cases:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      OverscriptBox["t", "^"], "g"}], "+", 
     RowBox[{
      SubscriptBox["\[Tau]", "x"], "h"}]}], 
    OverscriptBox["=", "?"], 
    RowBox[{
     RowBox[{
      SuperscriptBox["z", "3"], 
      OverscriptBox["k", "_"], "xV"}], "+", 
     RowBox[{
      SuperscriptBox["y", 
       RowBox[{"n", "-", "1"}]], 
      OverscriptBox["k", "^"], "xW"}], "+", 
     RowBox[{
      SubscriptBox["\[Delta]", "yz"], "xg"}], "+", 
     RowBox[{
      SuperscriptBox["x", "3"], 
      SubscriptBox["T", "3"]}], "+", 
     RowBox[{
      SuperscriptBox["x", "5"], 
      SubscriptBox["T", "5"]}]}]}], TraditionalForm]],ExpressionUUID->
  "9c7eb090-7c37-4893-a4b3-a35cb8370e1d"],
 "\n",
 StyleBox["Without the Inner Product Protocol:",
  FontWeight->"Bold"],
 "\n2) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["P", 
      RowBox[{"{", 
       RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}], "+"], 
     OverscriptBox["=", "?"], 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[Mu]", 
         RowBox[{"{", 
          RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]], "h"}], "+"}], 
      "<", 
      OverscriptBox["g", "\[RightVector]"]}]}], ",", 
    RowBox[{
     OverscriptBox["l", "\[RightVector]"], ">", 
     RowBox[{"+", 
      RowBox[{"<", 
       OverscriptBox[
        SuperscriptBox[
         RowBox[{"{", 
          RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}], "*"], 
        "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     OverscriptBox["r", "\[RightVector]"], ">"}]}], TraditionalForm]],
  ExpressionUUID->"ca504f5a-8c13-4ab1-b9db-e0a1134e1205"],
 "\n3) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox["t", "^"], 
     OverscriptBox["=", "?"], 
     RowBox[{"<", 
      OverscriptBox["l", "\[RightVector]"]}]}], ",", 
    RowBox[{
     OverscriptBox["r", "\[RightVector]"], ">"}]}], TraditionalForm]],
  ExpressionUUID->"9af85d0d-d82e-4e1b-9f3e-c9e6859f9f7f"],
 "\nWhen using the Inner Product Protocol 2) and 3) are proved indirectly."
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQvf/UNuOqr28cbbbuB9O+9qJWIJphWymYrlu9bALr
tzeOj/I3rgTRM84aXgTRdQK5V0A0V8fN2yB67a5P90H0Dg2RHyC6uoX3J4g+
9fi2PRuQfnGB3RtEb9P/58YOpD2OrwwC0b/O7o4A0cKxS9JAtNbeN06+DG8d
F82b7wei9+ndDQLRy4wdM0C04PZF+SD6UcWkIhBtEJpXAaIt7L2bQPSp6bnt
IJpLga8bRKuUvOgD0c2vW+eBaBHd/sVg9XpiS0D0u/mVK0D0RJn+lSB63nIf
tQAgzVDvYgCiL+uYWDjxvnXccdXSCkRPtK4/n6ny1jHor+ZFEM2h3O+QDaR9
ftwG0wB7H6ES
  "],ExpressionUUID->"d2263426-06ff-4c10-a0ee-a1b8daefe700"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"StateMachineRestore", "[", "\"\<x\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Prover", " ", "commits", " ", "to", " ", "t", 
     RowBox[{"(", "x", ")"}], " ", "and", " ", "sends", " ", 
     SubscriptBox["\[Tau]", "x"]}], ",", " ", 
    RowBox[{
     SubscriptBox["\[Mu]", 
      RowBox[{"{", 
       RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]], " ", "and", " ", 
     RowBox[{
      OverscriptBox["t", "^"], ":"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Tau]", "x"], " ", "=", " ", 
   RowBox[{"WaitForProversVariable", "[", "\"\<taux\>\"", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Mu]", "h"], " ", "=", " ", 
   RowBox[{"WaitForProversVariable", "[", "\"\<muh\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Mu]", "b"], " ", "=", " ", 
   RowBox[{"WaitForProversVariable", "[", "\"\<mub\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Mu]", "c"], " ", "=", " ", 
   RowBox[{"WaitForProversVariable", "[", "\"\<muc\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Mu]", "d"], " ", "=", " ", 
   RowBox[{"WaitForProversVariable", "[", "\"\<mud\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox["t", "^"], " ", "=", " ", 
   RowBox[{"WaitForProversVariable", "[", "\"\<t\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"FiatShamirAdd", "[", 
       RowBox[{"\"\<taux\>\"", ",", 
        SubscriptBox["\[Tau]", "x"], ",", 
        RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"FiatShamirAdd", "[", 
       RowBox[{"\"\<muh\>\"", ",", 
        SubscriptBox["\[Mu]", "h"], ",", 
        RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}], 
      ";", "\n", "\t", 
      RowBox[{"FiatShamirAdd", "[", 
       RowBox[{"\"\<mub\>\"", ",", 
        SubscriptBox["\[Mu]", "b"], ",", 
        RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}], 
      ";", "\n", "\t", 
      RowBox[{"FiatShamirAdd", "[", 
       RowBox[{"\"\<muc\>\"", ",", 
        SubscriptBox["\[Mu]", "c"], ",", 
        RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}], 
      ";", "\n", "\t", 
      RowBox[{"FiatShamirAdd", "[", 
       RowBox[{"\"\<mud\>\"", ",", 
        SubscriptBox["\[Mu]", "d"], ",", 
        RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"FiatShamirAdd", "[", 
       RowBox[{"\"\<t\>\"", ",", 
        OverscriptBox["t", "^"], ",", 
        RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SuperscriptBox["h", "*"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{
    OverscriptBox[
     SuperscriptBox["y", 
      RowBox[{"-", "n"}]], "\[RightVector]"], "*", 
    OverscriptBox["h", "\[RightVector]"]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SuperscriptBox["b", "*"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{
    OverscriptBox[
     SuperscriptBox["y", 
      RowBox[{"-", "n"}]], "\[RightVector]"], "*", 
    OverscriptBox["b", "\[RightVector]"]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SuperscriptBox["c", "*"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{
    OverscriptBox[
     SuperscriptBox["y", 
      RowBox[{"-", "n"}]], "\[RightVector]"], "*", 
    OverscriptBox["c", "\[RightVector]"]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    OverscriptBox[
     SuperscriptBox["d", "*"], "\[RightVector]"], " ", "=", " ", 
    RowBox[{
     OverscriptBox[
      SuperscriptBox["y", 
       RowBox[{"-", "n"}]], "\[RightVector]"], "*", 
     OverscriptBox["d", "\[RightVector]"]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   SubsuperscriptBox["P", "h", "+"], " ", "=", " ", 
   RowBox[{
    SubscriptBox["A", "L"], " ", "+", " ", 
    RowBox[{
     SubscriptBox["A", 
      RowBox[{"R", ",", "h"}]], "*", "x"}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["S", "L"], "*", 
     RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["S", 
      RowBox[{"R", ",", "h"}]], "*", 
     RowBox[{"x", "^", "3"}]}], " ", "+", " ", 
    RowBox[{
     OverscriptBox["g", "\[RightVector]"], ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"z", "^", "3"}], "*", 
       OverscriptBox[
        SuperscriptBox["y", 
         RowBox[{"-", "n"}]], "\[RightVector]"]}], ")"}]}], " ", "+", " ", 
    RowBox[{
     OverscriptBox[
      SuperscriptBox["h", "*"], "\[RightVector]"], ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "x"}], "*", 
       OverscriptBox[
        SubsuperscriptBox["y", "z", 
         RowBox[{"n", "-", "1"}]], "\[RightVector]"]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubsuperscriptBox["P", "b", "+"], " ", "=", " ", 
   RowBox[{
    SubscriptBox["A", "L"], " ", "+", " ", 
    RowBox[{
     SubscriptBox["A", 
      RowBox[{"R", ",", "b"}]], "*", "x"}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["S", "L"], "*", 
     RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["S", 
      RowBox[{"R", ",", "b"}]], "*", 
     RowBox[{"x", "^", "3"}]}], " ", "+", " ", 
    RowBox[{
     OverscriptBox["g", "\[RightVector]"], ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"z", "^", "3"}], "*", 
       OverscriptBox[
        SuperscriptBox["y", 
         RowBox[{"-", "n"}]], "\[RightVector]"]}], ")"}]}], " ", "+", " ", 
    RowBox[{
     OverscriptBox[
      SuperscriptBox["b", "*"], "\[RightVector]"], ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "x"}], "*", 
       OverscriptBox[
        SubsuperscriptBox["y", "z", 
         RowBox[{"n", "-", "1"}]], "\[RightVector]"]}], ")"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubsuperscriptBox["P", "c", "+"], " ", "=", " ", 
   RowBox[{
    SubscriptBox["A", "L"], " ", "+", " ", 
    RowBox[{
     SubscriptBox["A", 
      RowBox[{"R", ",", "c"}]], "*", "x"}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["S", "L"], "*", 
     RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["S", 
      RowBox[{"R", ",", "c"}]], "*", 
     RowBox[{"x", "^", "3"}]}], " ", "+", " ", 
    RowBox[{
     OverscriptBox["g", "\[RightVector]"], ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"z", "^", "3"}], "*", 
       OverscriptBox[
        SuperscriptBox["y", 
         RowBox[{"-", "n"}]], "\[RightVector]"]}], ")"}]}], " ", "+", " ", 
    RowBox[{
     OverscriptBox[
      SuperscriptBox["c", "*"], "\[RightVector]"], ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "x"}], "*", 
       OverscriptBox[
        SubsuperscriptBox["y", "z", 
         RowBox[{"n", "-", "1"}]], "\[RightVector]"]}], ")"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubsuperscriptBox["P", "d", "+"], " ", "=", " ", 
    RowBox[{
     SubscriptBox["A", "L"], " ", "+", " ", 
     RowBox[{
      SubscriptBox["A", 
       RowBox[{"R", ",", "d"}]], "*", "x"}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["S", "L"], "*", 
      RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["S", 
       RowBox[{"R", ",", "d"}]], "*", 
      RowBox[{"x", "^", "3"}]}], " ", "+", " ", 
     RowBox[{
      OverscriptBox["g", "\[RightVector]"], ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"z", "^", "3"}], "*", 
        OverscriptBox[
         SuperscriptBox["y", 
          RowBox[{"-", "n"}]], "\[RightVector]"]}], ")"}]}], " ", "+", " ", 
     RowBox[{
      OverscriptBox[
       SuperscriptBox["d", "*"], "\[RightVector]"], ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "x"}], "*", 
        OverscriptBox[
         SubsuperscriptBox["y", "z", 
          RowBox[{"n", "-", "1"}]], "\[RightVector]"]}], ")"}]}]}]}], ";"}], 
  "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"1", ")"}], " ", 
      OverscriptBox["t", "^"], "g"}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["\[Tau]", "x"], "h"}]}], " ", 
    OverscriptBox["=", "?"], " ", 
    RowBox[{
     RowBox[{
      SuperscriptBox["z", "3"], 
      OverscriptBox["k", "_"], "xV"}], " ", "+", " ", 
     RowBox[{
      SuperscriptBox["y", 
       RowBox[{"n", "-", "1"}]], 
      OverscriptBox["k", "^"], "xW"}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["\[Delta]", "yz"], "xg"}], " ", "+", " ", 
     RowBox[{
      SuperscriptBox["x", "3"], 
      SubscriptBox["T", "3"]}], " ", "+", " ", 
     RowBox[{
      SuperscriptBox["x", "5"], 
      SubscriptBox["T", "5"]}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"check1val1", " ", "=", " ", 
   RowBox[{
    RowBox[{"g", "*", 
     OverscriptBox["t", "^"]}], " ", "+", " ", 
    RowBox[{"h", "*", 
     SubscriptBox["\[Tau]", "x"]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"check1val2", " ", "=", " ", 
   RowBox[{
    RowBox[{"V", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"z", "^", "3"}], "*", 
       OverscriptBox["k", "_"], "*", "x"}], ")"}]}], " ", "+", " ", 
    RowBox[{"W", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"powermodq", "[", 
        RowBox[{"y", ",", 
         RowBox[{"n", "-", "1"}]}], "]"}], "*", 
       OverscriptBox["k", "^"], "*", "x"}], ")"}]}], " ", "+", " ", 
    RowBox[{"g", "*", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Delta]", "yz"], "*", "x"}], ")"}]}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["T", "3"], "*", 
     RowBox[{"x", "^", "3"}]}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["T", "5"], "*", 
     RowBox[{"x", "^", "5"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"check1", " ", "=", " ", 
    RowBox[{"(", 
     RowBox[{"check1val1", " ", "==", " ", "check1val2"}], ")"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(x\)]\)\>\"", ",", 
         "\"\<Combined Commitment\\nto Blinding Values\\nof Commitments\\nto \
Coefficiencts of t(X)\>\"", ",", 
         SubscriptBox["\[Tau]", "x"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Mu]\), \(h\)]\)\>\"", ",", 
         "\"\<Combined Commitment\\nto Blinding Values\\nof Vector \
Commitments\\nto \!\(\*OverscriptBox[SubscriptBox[\(a\), \(\[Ellipsis]\)], \(\
\[RightVector]\)]\) and \!\(\*OverscriptBox[SubscriptBox[\(s\), \(\[Ellipsis]\
\)], \(\[RightVector]\)]\)\\nBased on \!\(\*OverscriptBox[\(h\), \(\
\[RightVector]\)]\)\>\"", ",", 
         SubscriptBox["\[Mu]", "h"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Mu]\), \(b\)]\)\>\"", ",", 
         "\"\<Combined Commitment\\nto Blinding Values\\nof Vector \
Commitments\\nto \!\(\*OverscriptBox[SubscriptBox[\(a\), \(\[Ellipsis]\)], \(\
\[RightVector]\)]\) and \!\(\*OverscriptBox[SubscriptBox[\(s\), \(\[Ellipsis]\
\)], \(\[RightVector]\)]\)\\nBased on \!\(\*OverscriptBox[\(b\), \(\
\[RightVector]\)]\)\>\"", ",", 
         SubscriptBox["\[Mu]", "b"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Mu]\), \(c\)]\)\>\"", ",", 
         "\"\<Combined Commitment\\nto Blinding Values\\nof Vector \
Commitments\\nto \!\(\*OverscriptBox[SubscriptBox[\(a\), \(\[Ellipsis]\)], \(\
\[RightVector]\)]\) and \!\(\*OverscriptBox[SubscriptBox[\(s\), \(\[Ellipsis]\
\)], \(\[RightVector]\)]\)\\nBased on \!\(\*OverscriptBox[\(c\), \(\
\[RightVector]\)]\)\>\"", ",", 
         SubscriptBox["\[Mu]", "c"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Mu]\), \(d\)]\)\>\"", ",", 
         "\"\<Combined Commitment\\nto Blinding Values\\nof Vector \
Commitments\\nto \!\(\*OverscriptBox[SubscriptBox[\(a\), \(\[Ellipsis]\)], \(\
\[RightVector]\)]\) and \!\(\*OverscriptBox[SubscriptBox[\(s\), \(\[Ellipsis]\
\)], \(\[RightVector]\)]\)\\nBased on \!\(\*OverscriptBox[\(d\), \(\
\[RightVector]\)]\)\>\"", ",", 
         SubscriptBox["\[Mu]", "d"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(t\), \(^\)]\)\>\"", ",", 
         "\"\<Inner Product\>\"", ",", 
         OverscriptBox["t", "^"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(V\), \(check1  .1\)]\) := \
\!\(\*OverscriptBox[\(t\), \(^\)]\)g + \!\(\*SubscriptBox[\(\[Tau]\), \
\(x\)]\)h\>\"", ",", "\"\<\>\"", ",", "check1val1"}], "}"}], ",", "\n", "\t", 
       
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(V\), \(check1  .2\)]\) := \
\!\(\*SuperscriptBox[\(z\), \(3\)]\)\!\(\*OverscriptBox[\(k\), \(_\)]\)*V + \
\!\(\*OverscriptBox[\(k\), \(^\)]\)\!\(\*SuperscriptBox[\(y\), \(n - \
1\)]\)x*W + \!\(\*SubscriptBox[\(\[Delta]\), \(yz\)]\)x*g + \
\!\(\*SuperscriptBox[\(x\), \(3\)]\)*\!\(\*SubscriptBox[\(T\), \(3\)]\) + \
\!\(\*SuperscriptBox[\(x\), \(5\)]\)*\!\(\*SubscriptBox[\(T\), \(5\)]\)\>\"", 
         ",", "\"\<\>\"", ",", "check1val2"}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(V\), \(check1\)]\) := \
(\!\(\*SubscriptBox[\(V\), \(check1  .1\)]\) \!\(\*OverscriptBox[\(=\), \
\(?\)]\) \!\(\*SubscriptBox[\(V\), \(check1  .2\)]\))\>\"", ",", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<Check No.1 for\\nVerification of\\nShuffle Proof ok?\>\"", ",",
            "Bold"}], "]"}], ",", "check1"}], "}"}]}], "\[IndentingNewLine]", 
      "}"}], ",", " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left"}], "}"}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Prover", " ", "commits", " ", "to", " ", 
     SubscriptBox["t", "W"], 
     RowBox[{"(", "x", ")"}], " ", "and", " ", "sends", " ", 
     SubscriptBox["\[Tau]", 
      RowBox[{"x", ",", "W"}]]}], ",", " ", 
    RowBox[{
     SubscriptBox["\[Mu]", "W"], " ", "and", " ", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["t", "W"], "^"], ":"}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Tau]", 
    RowBox[{"x", ",", "W"}]], " ", "=", " ", 
   RowBox[{"WaitForProversVariable", "[", "\"\<tauxW\>\"", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Mu]", "W"], " ", "=", " ", 
   RowBox[{"WaitForProversVariable", "[", "\"\<muW\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["t", "W"], "^"], " ", "=", " ", 
   RowBox[{"WaitForProversVariable", "[", "\"\<tW\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"FiatShamirAdd", "[", 
       RowBox[{"\"\<tauxW\>\"", ",", 
        SubscriptBox["\[Tau]", 
         RowBox[{"x", ",", "W"}]], ",", 
        RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"FiatShamirAdd", "[", 
       RowBox[{"\"\<muW\>\"", ",", 
        SubscriptBox["\[Mu]", "W"], ",", 
        RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}], 
      ";", "\n", "\t", 
      RowBox[{"FiatShamirAdd", "[", 
       RowBox[{"\"\<tW\>\"", ",", 
        OverscriptBox[
         SubscriptBox["t", "W"], "^"], ",", 
        RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubsuperscriptBox["P", "W", "+"], " ", "=", " ", 
    RowBox[{
     SubscriptBox["A", "W"], " ", "+", " ", 
     RowBox[{
      SubscriptBox["S", "W"], "*", "x"}], " ", "+", " ", 
     RowBox[{
      OverscriptBox["g", "\[RightVector]"], ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"z", "*", 
         OverscriptBox[
          SuperscriptBox["y", 
           RowBox[{"-", "n"}]], "\[RightVector]"]}], " ", "+", " ", 
        OverscriptBox[
         SuperscriptBox["w", "n"], "\[RightVector]"], " ", "-", " ", 
        RowBox[{
         OverscriptBox[
          SubsuperscriptBox["w", "0", 
           RowBox[{"n", "-", "1"}]], "\[RightVector]"], "*", 
         SuperscriptBox["y", 
          RowBox[{"-", "1"}]]}]}], ")"}]}], " ", "+", " ", 
     RowBox[{
      OverscriptBox[
       SuperscriptBox["h", "*"], "\[RightVector]"], ".", 
      RowBox[{"(", 
       RowBox[{"-", 
        OverscriptBox[
         SubsuperscriptBox["y", "z", 
          RowBox[{"n", "-", "1"}]], "\[RightVector]"]}], ")"}]}]}]}], ";"}], 
  "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"1", "W"}], ")"}], " ", 
      OverscriptBox[
       SubscriptBox["t", "W"], "^"], "g"}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["\[Tau]", 
       RowBox[{"x", ",", "W"}]], "h"}]}], " ", 
    OverscriptBox["=", "?"], " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", "wy", ")"}], 
         RowBox[{"n", "-", "1"}]], "+", "nz"}], ")"}], "V"}], " ", "+", " ", 
     RowBox[{
      SuperscriptBox["y", 
       RowBox[{"n", "-", "1"}]], "W"}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["\[Delta]", "yzw"], "g"}], " ", "+", " ", 
     SubscriptBox["xT", 
      RowBox[{"1", ",", "W"}]], " ", "+", " ", 
     RowBox[{
      SuperscriptBox["x", "2"], 
      SubscriptBox["T", 
       RowBox[{"2", ",", "W"}]]}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"check1Wval1", " ", "=", " ", 
   RowBox[{
    RowBox[{"g", "*", 
     OverscriptBox[
      SubscriptBox["t", "W"], "^"]}], " ", "+", " ", 
    RowBox[{"h", "*", 
     SubscriptBox["\[Tau]", 
      RowBox[{"x", ",", "W"}]]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"check1Wval2", " ", "=", " ", 
   RowBox[{
    RowBox[{"V", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"powermodq", "[", 
        RowBox[{
         RowBox[{"w", "*", "y"}], ",", 
         RowBox[{"n", "-", "1"}]}], "]"}], "+", 
       RowBox[{"n", "*", "z"}]}], ")"}]}], " ", "+", " ", 
    RowBox[{"W", "*", 
     RowBox[{"powermodq", "[", 
      RowBox[{"y", ",", 
       RowBox[{"n", "-", "1"}]}], "]"}]}], " ", "+", " ", 
    RowBox[{"g", "*", 
     SubscriptBox["\[Delta]", "yzw"]}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["T", 
      RowBox[{"1", ",", "W"}]], "*", "x"}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["T", 
      RowBox[{"2", ",", "W"}]], "*", 
     RowBox[{"x", "^", "2"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"check1W", " ", "=", " ", 
    RowBox[{"(", 
     RowBox[{"check1Wval1", " ", "==", " ", "check1Wval2"}], ")"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(x, W\)]\)\>\"", ",", 
         "\"\<Combined Commitment\\nto Blinding Values\\nof Commitments\\nto \
Coefficiencts of \!\(\*SubscriptBox[\(t\), \(W\)]\)(X)\>\"", ",", 
         SubscriptBox["\[Tau]", 
          RowBox[{"x", ",", "W"}]]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Mu]\), \(W\)]\)\>\"", ",", 
         "\"\<Combined Commitment\\nto Blinding Values\\nof Vector \
Commitments\\nto \!\(\*OverscriptBox[SubscriptBox[\(a\), \(\[Ellipsis], W\)], \
\(\[RightVector]\)]\) and \!\(\*OverscriptBox[SubscriptBox[\(s\), \(\
\[Ellipsis], W\)], \(\[RightVector]\)]\)\>\"", ",", 
         SubscriptBox["\[Mu]", "W"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[SubscriptBox[\(t\), \(W\)], \(^\)]\)\>\"", 
         ",", "\"\<Inner Product\>\"", ",", 
         OverscriptBox[
          SubscriptBox["t", "W"], "^"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(V\), \(check1W  .1\)]\) := \
\!\(\*OverscriptBox[SubscriptBox[\(t\), \(W\)], \(^\)]\)g + \
\!\(\*SubscriptBox[\(\[Tau]\), \(x, W\)]\)h\>\"", ",", "\"\<\>\"", ",", 
         "check1Wval1"}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(V\), \(check1W  .2\)]\) := \
((wy\!\(\*SuperscriptBox[\()\), \(n - 1\)]\)+nz)V + \
\!\(\*SuperscriptBox[\(y\), \(n - 1\)]\)W + \!\(\*SubscriptBox[\(\[Delta]\), \
\(yzw\)]\)g + \!\(\*SubscriptBox[\(xT\), \(1, W\)]\) + \
\!\(\*SuperscriptBox[\(x\), \(2\)]\)\!\(\*SubscriptBox[\(T\), \(2, \
W\)]\)\>\"", ",", "\"\<\>\"", ",", "check1Wval2"}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(V\), \(check1W\)]\) := (\!\(\*SubscriptBox[\
\(V\), \(check1W  .1\)]\) \!\(\*OverscriptBox[\(=\), \(?\)]\) \
\!\(\*SubscriptBox[\(V\), \(check1W  .2\)]\))\>\"", ",", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<Check No.1W for\\nVerification of\\nShuffle Proof ok?\>\"", 
           ",", "Bold"}], "]"}], ",", "check1W"}], "}"}]}], 
      "\[IndentingNewLine]", "}"}], ",", " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left"}], "}"}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], "\n"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"CommunicationCostGrid", "[", "]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "interactive"}], ",", 
    RowBox[{"Print", "[", 
     RowBox[{"FiatShamirGrid", "[", "]"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "check1"}], ",", " ", 
    RowBox[{
    "VerificationFailed", "[", 
     "\"\<First check in multi-key shuffle argument failed\>\"", "]"}]}], 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "check1W"}], ",", " ", 
    RowBox[{
    "VerificationFailed", "[", 
     "\"\<First check (PR) in multi-key shuffle argument failed\>\"", "]"}]}],
    "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ProcessNewMessages", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "StateMachineSave", "[", "\"\<mk_shuffle_argument_check\>\"", "]"}], ";"}],
   "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "useInnerProductProtocol"}], ",", "\n", "\t", 
    RowBox[{"(*", 
     RowBox[{"Need", " ", 
      OverscriptBox["l", "\[RightVector]"], " ", "and", " ", 
      OverscriptBox["r", "\[RightVector]"]}], "*)"}], "\[IndentingNewLine]", 
    "\t", 
    RowBox[{
     RowBox[{
      OverscriptBox["l", "\[RightVector]"], " ", "=", " ", 
      RowBox[{"WaitForProversVariable", "[", "\"\<lvec\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox["r", "\[RightVector]"], " ", "=", " ", 
      RowBox[{"WaitForProversVariable", "[", "\"\<rvec\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"2", ")"}], " ", 
         SubsuperscriptBox["P", 
          RowBox[{"{", 
           RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}], "+"]}], " ", 
        OverscriptBox["=", "?"], " ", 
        RowBox[{
         RowBox[{
          SubscriptBox["h\[Mu]", 
           RowBox[{"{", 
            RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]], " ", "+"}], 
         " ", "<", 
         OverscriptBox["g", "\[RightVector]"]}]}], ",", 
       RowBox[{
        OverscriptBox["l", "\[RightVector]"], ">", " ", 
        RowBox[{"+", " ", 
         RowBox[{"<", 
          OverscriptBox[
           SuperscriptBox[
            RowBox[{"{", 
             RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}], "*"], 
           "\[RightVector]"]}]}]}], ",", 
       RowBox[{
        OverscriptBox["r", "\[RightVector]"], ">"}]}], "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"check2hval2", " ", "=", " ", 
      RowBox[{
       RowBox[{"h", "*", 
        SubscriptBox["\[Mu]", "h"]}], " ", "+", " ", 
       RowBox[{
        OverscriptBox["g", "\[RightVector]"], ".", 
        OverscriptBox["l", "\[RightVector]"]}], " ", "+", " ", 
       RowBox[{
        OverscriptBox[
         SuperscriptBox["h", "*"], "\[RightVector]"], ".", 
        OverscriptBox["r", "\[RightVector]"]}]}]}], ";", "\n", "\t", 
     RowBox[{"check2h", " ", "=", " ", 
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox["P", "h", "+"], " ", "==", " ", "check2hval2"}], 
       ")"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"check2bval2", " ", "=", " ", 
      RowBox[{
       RowBox[{"h", "*", 
        SubscriptBox["\[Mu]", "b"]}], " ", "+", " ", 
       RowBox[{
        OverscriptBox["g", "\[RightVector]"], ".", 
        OverscriptBox["l", "\[RightVector]"]}], " ", "+", " ", 
       RowBox[{
        OverscriptBox[
         SuperscriptBox["b", "*"], "\[RightVector]"], ".", 
        OverscriptBox["r", "\[RightVector]"]}]}]}], ";", "\n", "\t", 
     RowBox[{"check2b", " ", "=", " ", 
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox["P", "b", "+"], " ", "==", " ", "check2bval2"}], 
       ")"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"check2cval2", " ", "=", " ", 
      RowBox[{
       RowBox[{"h", "*", 
        SubscriptBox["\[Mu]", "c"]}], " ", "+", " ", 
       RowBox[{
        OverscriptBox["g", "\[RightVector]"], ".", 
        OverscriptBox["l", "\[RightVector]"]}], " ", "+", " ", 
       RowBox[{
        OverscriptBox[
         SuperscriptBox["c", "*"], "\[RightVector]"], ".", 
        OverscriptBox["r", "\[RightVector]"]}]}]}], ";", "\n", "\t", 
     RowBox[{"check2c", " ", "=", " ", 
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox["P", "c", "+"], " ", "==", " ", "check2cval2"}], 
       ")"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"check2dval2", " ", "=", " ", 
      RowBox[{
       RowBox[{"h", "*", 
        SubscriptBox["\[Mu]", "d"]}], " ", "+", " ", 
       RowBox[{
        OverscriptBox["g", "\[RightVector]"], ".", 
        OverscriptBox["l", "\[RightVector]"]}], " ", "+", " ", 
       RowBox[{
        OverscriptBox[
         SuperscriptBox["d", "*"], "\[RightVector]"], ".", 
        OverscriptBox["r", "\[RightVector]"]}]}]}], ";", "\n", "\t", 
     RowBox[{"check2d", " ", "=", " ", 
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox["P", "d", "+"], " ", "==", " ", "check2dval2"}], 
       ")"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"3", ")"}], " ", "t"}], " ", 
        OverscriptBox["=", "?"], " ", 
        RowBox[{"<", 
         OverscriptBox["l", "\[RightVector]"]}]}], ",", 
       RowBox[{
        OverscriptBox["r", "\[RightVector]"], ">"}]}], "*)"}], "\n", "\t", 
     RowBox[{"check3val2", " ", "=", " ", 
      RowBox[{"modq", "[", 
       RowBox[{
        OverscriptBox["l", "\[RightVector]"], ".", 
        OverscriptBox["r", "\[RightVector]"]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"check3", " ", "=", " ", 
      RowBox[{"(", 
       RowBox[{
        OverscriptBox["t", "^"], " ", "==", " ", "check3val2"}], ")"}]}], ";",
      "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{"PR", ":", " ", 
       RowBox[{"Need", " ", 
        OverscriptBox[
         SubscriptBox["l", "W"], "\[RightVector]"], " ", "and", " ", 
        OverscriptBox[
         SubscriptBox["r", "W"], "\[RightVector]"]}]}], "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["l", "W"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{"WaitForProversVariable", "[", "\"\<lWvec\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["r", "W"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{"WaitForProversVariable", "[", "\"\<rWvec\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"2", "W"}], ")"}], " ", 
         SubsuperscriptBox["P", "W", "+"]}], " ", 
        OverscriptBox["=", "?"], " ", 
        RowBox[{
         RowBox[{
          SubscriptBox["h\[Mu]", "W"], " ", "+"}], " ", "<", 
         OverscriptBox["g", "\[RightVector]"]}]}], ",", 
       RowBox[{
        OverscriptBox[
         SubscriptBox["l", "W"], "\[RightVector]"], ">", " ", 
        RowBox[{"+", " ", 
         RowBox[{"<", 
          OverscriptBox[
           SuperscriptBox["h", "*"], "\[RightVector]"]}]}]}], ",", 
       RowBox[{
        OverscriptBox[
         SubscriptBox["r", "W"], "\[RightVector]"], ">"}]}], "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"check2Wval2", " ", "=", " ", 
      RowBox[{
       RowBox[{"h", "*", 
        SubscriptBox["\[Mu]", "W"]}], " ", "+", " ", 
       RowBox[{
        OverscriptBox["g", "\[RightVector]"], ".", 
        OverscriptBox[
         SubscriptBox["l", "W"], "\[RightVector]"]}], " ", "+", " ", 
       RowBox[{
        OverscriptBox[
         SuperscriptBox["h", "*"], "\[RightVector]"], ".", 
        OverscriptBox[
         SubscriptBox["r", "W"], "\[RightVector]"]}]}]}], ";", "\n", "\t", 
     RowBox[{"check2W", " ", "=", " ", 
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox["P", "W", "+"], " ", "==", " ", "check2Wval2"}], 
       ")"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"3", "W"}], ")"}], " ", 
         OverscriptBox[
          SubscriptBox["t", "W"], "^"]}], " ", 
        OverscriptBox["=", "?"], " ", 
        RowBox[{"<", 
         OverscriptBox[
          SubscriptBox["l", "W"], "\[RightVector]"]}]}], ",", 
       RowBox[{
        OverscriptBox[
         SubscriptBox["r", "W"], "\[RightVector]"], ">"}]}], "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"check3Wval2", " ", "=", " ", 
      RowBox[{"modq", "[", 
       RowBox[{
        OverscriptBox[
         SubscriptBox["l", "W"], "\[RightVector]"], ".", 
        OverscriptBox[
         SubscriptBox["r", "W"], "\[RightVector]"]}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"check3W", " ", "=", " ", 
      RowBox[{"(", 
       RowBox[{
        OverscriptBox[
         SubscriptBox["t", "W"], "^"], " ", "==", " ", "check3Wval2"}], 
       ")"}]}], ";", "\n", "\t", 
     RowBox[{"Print", "[", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[\(l\), \(\[RightVector]\)]\)\>\"", ",", 
            "\"\<\>\"", ",", 
            OverscriptBox["l", "\[RightVector]"]}], "}"}], ",", "\n", "\t\t", 
          
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[\(r\), \(\[RightVector]\)]\)\>\"", ",", 
            "\"\<\>\"", ",", 
            OverscriptBox["r", "\[RightVector]"]}], "}"}], ",", "\n", "\t\t", 
          
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(V\), \(check2h  .2\)]\) := \
\!\(\*SubscriptBox[\(h\[Mu]\), \(h\)]\) + <\!\(\*OverscriptBox[\(g\), \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[\(l\), \(\[RightVector]\)]\)> + <\!\(\
\*OverscriptBox[SuperscriptBox[\(h\), \(*\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(r\), \(\[RightVector]\)]\)>\>\"", 
            ",", "\"\<\>\"", ",", "check2hval2"}], "}"}], ",", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(V\), \(check2h\)]\) := \
(\!\(\*SubsuperscriptBox[\(P\), \(h\), \(+\)]\) \!\(\*OverscriptBox[\(=\), \
\(?\)]\) \!\(\*SubscriptBox[\(V\), \(check2h  .2\)]\))\>\"", ",", 
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<Check No.2h for\\nVerification of\\nShuffle Proof ok?\>\"", 
              ",", "Bold"}], "]"}], ",", "check2h"}], "}"}], ",", "\n", 
          "\t\t", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(V\), \(check2b  .2\)]\) := \
\!\(\*SubscriptBox[\(h\[Mu]\), \(b\)]\) + <\!\(\*OverscriptBox[\(g\), \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[\(l\), \(\[RightVector]\)]\)> + <\!\(\
\*OverscriptBox[SuperscriptBox[\(b\), \(*\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(r\), \(\[RightVector]\)]\)>\>\"", 
            ",", "\"\<\>\"", ",", "check2bval2"}], "}"}], ",", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(V\), \(check2b\)]\) := \
(\!\(\*SubsuperscriptBox[\(P\), \(b\), \(+\)]\) \!\(\*OverscriptBox[\(=\), \
\(?\)]\) \!\(\*SubscriptBox[\(V\), \(check2b  .2\)]\))\>\"", ",", 
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<Check No.2b for\\nVerification of\\nShuffle Proof ok?\>\"", 
              ",", "Bold"}], "]"}], ",", "check2b"}], "}"}], ",", "\n", 
          "\t\t", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(V\), \(check2c  .2\)]\) := \
\!\(\*SubscriptBox[\(h\[Mu]\), \(c\)]\) + <\!\(\*OverscriptBox[\(g\), \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[\(l\), \(\[RightVector]\)]\)> + <\!\(\
\*OverscriptBox[SuperscriptBox[\(c\), \(*\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(r\), \(\[RightVector]\)]\)>\>\"", 
            ",", "\"\<\>\"", ",", "check2cval2"}], "}"}], ",", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(V\), \(check2c\)]\) := \
(\!\(\*SubsuperscriptBox[\(P\), \(c\), \(+\)]\) \!\(\*OverscriptBox[\(=\), \
\(?\)]\) \!\(\*SubscriptBox[\(V\), \(check2c  .2\)]\))\>\"", ",", 
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<Check No.2c for\\nVerification of\\nShuffle Proof ok?\>\"", 
              ",", "Bold"}], "]"}], ",", "check2c"}], "}"}], ",", "\n", 
          "\t\t", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(V\), \(check2d  .2\)]\) := \
\!\(\*SubscriptBox[\(h\[Mu]\), \(d\)]\) + <\!\(\*OverscriptBox[\(g\), \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[\(l\), \(\[RightVector]\)]\)> + <\!\(\
\*OverscriptBox[SuperscriptBox[\(d\), \(*\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(r\), \(\[RightVector]\)]\)>\>\"", 
            ",", "\"\<\>\"", ",", "check2dval2"}], "}"}], ",", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(V\), \(check2d\)]\) := \
(\!\(\*SubsuperscriptBox[\(P\), \(d\), \(+\)]\) \!\(\*OverscriptBox[\(=\), \
\(?\)]\) \!\(\*SubscriptBox[\(V\), \(check2d  .2\)]\))\>\"", ",", 
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<Check No.2d for\\nVerification of\\nShuffle Proof ok?\>\"", 
              ",", "Bold"}], "]"}], ",", "check2d"}], "}"}], ",", "\n", 
          "\t\t", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(V\), \(check3  .2\)]\) \
:\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) <\!\(\*OverscriptBox[\(l\), \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[\(r\), \(\[RightVector]\)]\)>\>\"", 
            ",", "\"\<\>\"", ",", "check3val2"}], "}"}], ",", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(V\), \(check3\)]\) := \
(\!\(\*OverscriptBox[\(t\), \(^\)]\) \!\(\*OverscriptBox[\(=\), \(?\)]\) \!\(\
\*SubscriptBox[\(V\), \(check3  .2\)]\))\>\"", ",", 
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<Check No.3 for\\nVerification of\\nShuffle Proof ok?\>\"", 
              ",", "Bold"}], "]"}], ",", "check3"}], "}"}], ",", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[SubscriptBox[\(l\), \(W\)], \(\
\[RightVector]\)]\)\>\"", ",", "\"\<\>\"", ",", 
            OverscriptBox[
             SubscriptBox["l", "W"], "\[RightVector]"]}], "}"}], ",", "\n", 
          "\t\t", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[SubscriptBox[\(r\), \(W\)], \(\
\[RightVector]\)]\)\>\"", ",", "\"\<\>\"", ",", 
            OverscriptBox[
             SubscriptBox["r", "W"], "\[RightVector]"]}], "}"}], ",", "\n", 
          "\t\t", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(V\), \(check2W  .2\)]\) := \
\!\(\*SubscriptBox[\(h\[Mu]\), \(W\)]\) + <\!\(\*OverscriptBox[\(g\), \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(l\), \(W\)], \(\
\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SuperscriptBox[\(h\), \(*\)], \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(r\), \(W\)], \(\
\[RightVector]\)]\)>\>\"", ",", "\"\<\>\"", ",", "check2Wval2"}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(V\), \(check2W\)]\) := \
(\!\(\*SubsuperscriptBox[\(P\), \(W\), \(+\)]\) \!\(\*OverscriptBox[\(=\), \
\(?\)]\) \!\(\*SubscriptBox[\(V\), \(check2W  .2\)]\))\>\"", ",", 
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<Check No.2W for\\nVerification of\\nShuffle Proof ok?\>\"", 
              ",", "Bold"}], "]"}], ",", "check2W"}], "}"}], ",", "\n", 
          "\t\t", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(V\), \(check3W  .2\)]\) \
:\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \
<\!\(\*OverscriptBox[SubscriptBox[\(l\), \(W\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(r\), \(W\)], \(\
\[RightVector]\)]\)>\>\"", ",", "\"\<\>\"", ",", "check3Wval2"}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(V\), \(check3W\)]\) := \
(\!\(\*OverscriptBox[SubscriptBox[\(t\), \(W\)], \(^\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) \!\(\*SubscriptBox[\(V\), \(check3W  \
.2\)]\))\>\"", ",", 
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<Check No.3W for\\nVerification of\\nShuffle Proof ok?\>\"", 
              ",", "Bold"}], "]"}], ",", "check3W"}], "}"}]}], 
         "\[IndentingNewLine]", "\t", "}"}], ",", " ", 
        RowBox[{"Alignment", "->", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"Left", ",", "Left", ",", "Left"}], "}"}], "}"}]}], ",", 
        RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", "check2h"}], ",", " ", 
       RowBox[{
       "VerificationFailed", "[", 
        "\"\<Check No. 2h in multi-key shuffle argument failed\>\"", "]"}]}], 
      "]"}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", "check2b"}], ",", " ", 
       RowBox[{
       "VerificationFailed", "[", 
        "\"\<Check No. 2b in multi-key shuffle argument failed\>\"", "]"}]}], 
      "]"}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", "check2c"}], ",", " ", 
       RowBox[{
       "VerificationFailed", "[", 
        "\"\<Check No. 2c in multi-key shuffle argument failed\>\"", "]"}]}], 
      "]"}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", "check2d"}], ",", " ", 
       RowBox[{
       "VerificationFailed", "[", 
        "\"\<Check No. 2d in multi-key shuffle argument failed\>\"", "]"}]}], 
      "]"}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", "check3"}], ",", " ", 
       RowBox[{
       "VerificationFailed", "[", 
        "\"\<Check No. 3 in multi-key shuffle argument failed\>\"", "]"}]}], 
      "]"}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", "check2W"}], ",", " ", 
       RowBox[{
       "VerificationFailed", "[", 
        "\"\<Check No. 2W in multi-key shuffle argument failed\>\"", "]"}]}], 
      "]"}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", "check3W"}], ",", " ", 
       RowBox[{
       "VerificationFailed", "[", 
        "\"\<Check No. 3W in multi-key shuffle argument failed\>\"", "]"}]}], 
      "]"}], ";", "\n", "\t", 
     RowBox[{"VerificationSucceeded", "[", "]"}], ";", "\n", "\t", 
     RowBox[{
     "Print", "[", 
      "\"\<Continuing to inner product protocol not required, but possible.\>\
\"", "]"}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", "interactive"}], ",", 
       RowBox[{"Print", "[", 
        RowBox[{"FiatShamirGrid", "[", "]"}], "]"}]}], "]"}], ";", "\n", "\t", 
     RowBox[{"Print", "[", 
      RowBox[{"CommunicationCostGrid", "[", "]"}], "]"}], ";", "\n", "\t", 
     RowBox[{"ProcessNewMessages", "[", "]"}], ";", "\n", "\t", 
     RowBox[{
     "StateMachineSave", "[", "\"\<inner_product_argument_linear\>\"", "]"}], 
     ";"}]}], "\n", "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.88708336662212*^9, 3.887083376225752*^9}, 
   3.887083421145381*^9, {3.8870835314072375`*^9, 3.8870835315052447`*^9}, {
   3.8870836280891933`*^9, 3.8870840118521023`*^9}, {3.887084176057658*^9, 
   3.8870843638330464`*^9}, {3.8870844295573053`*^9, 3.887084542776911*^9}, {
   3.887084575948964*^9, 3.8870847092599583`*^9}, {3.887084795778552*^9, 
   3.887084879248931*^9}, {3.8870849390253725`*^9, 3.887085002970896*^9}, 
   3.8870850513966603`*^9, {3.887085086171041*^9, 3.887085114392736*^9}, {
   3.887085181812701*^9, 3.8870853881956224`*^9}, {3.8870858304031553`*^9, 
   3.887085861090634*^9}, {3.8870859232892675`*^9, 3.887085929970984*^9}, {
   3.887085973874477*^9, 3.887086090465087*^9}, {3.887086126933149*^9, 
   3.887086129373637*^9}, {3.8870862449044623`*^9, 3.8870862646540203`*^9}, {
   3.8870864323040724`*^9, 3.8870865621770163`*^9}, 3.887086918205408*^9, {
   3.887087129531384*^9, 3.8870871326272783`*^9}, {3.887396256685476*^9, 
   3.8873963007436323`*^9}, {3.8873963983311324`*^9, 
   3.8873964103621445`*^9}, {3.8874904385387735`*^9, 3.887490443659393*^9}, {
   3.8874905044191527`*^9, 3.8874905137565985`*^9}, {3.887553070244759*^9, 
   3.887553071859029*^9}, {3.889464501021061*^9, 3.889464539001646*^9}, {
   3.8894646255325108`*^9, 3.88946463599891*^9}, {3.8922817919876204`*^9, 
   3.892281801811705*^9}, {3.8922820311226482`*^9, 3.8922820452511673`*^9}, {
   3.892282076807148*^9, 3.892282220369581*^9}, {3.892472322188858*^9, 
   3.8924723234529448`*^9}, {3.892474955621477*^9, 3.892475053268342*^9}, {
   3.892475091901929*^9, 3.892475104146113*^9}, {3.8924751446287107`*^9, 
   3.892475277002586*^9}, {3.892475310716021*^9, 3.892475375423654*^9}, {
   3.8924754465342712`*^9, 3.892475585308688*^9}, {3.892475634153688*^9, 
   3.892475669011763*^9}, {3.892475699554201*^9, 3.8924760583562603`*^9}, {
   3.892476242520932*^9, 3.892476249980047*^9}, {3.8924783679028873`*^9, 
   3.892478403781008*^9}, {3.892478813136582*^9, 3.8924788564675007`*^9}, 
   3.892479765603367*^9, {3.892694950511283*^9, 3.8926949883670692`*^9}, {
   3.8983283787459188`*^9, 3.8983283793759117`*^9}, {3.8983284593555317`*^9, 
   3.898328462782632*^9}, 3.89832851205779*^9, {3.8983286043646684`*^9, 
   3.8983286045317645`*^9}, {3.898328823659362*^9, 3.898328922626531*^9}, 
   3.8983289547063727`*^9, {3.899016051427492*^9, 3.899016051554511*^9}, {
   3.899016910648903*^9, 3.8990172020216007`*^9}, {3.8990174041283193`*^9, 
   3.899017407961514*^9}, {3.899017446948412*^9, 3.899017454358659*^9}, {
   3.8990175189885697`*^9, 3.899017802452859*^9}, {3.899017851039116*^9, 
   3.899017955067921*^9}, {3.8990225208346896`*^9, 3.8990225261634493`*^9}, 
   3.8990241730318317`*^9, {3.8990242101383553`*^9, 3.8990242161369853`*^9}, {
   3.8993860003663483`*^9, 3.899386006332574*^9}, {3.9112943813663297`*^9, 
   3.9112943894346185`*^9}, {3.911405198307995*^9, 3.911405250102458*^9}, {
   3.9114052862311783`*^9, 3.9114053637768707`*^9}, {3.9114081368169303`*^9, 
   3.9114081420318875`*^9}},
 CellLabel->
  "In[188]:=",ExpressionUUID->"c2c32a69-8895-4340-b1a1-cf3eea39177b"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Waiting to receive taux from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.9139489466150303`*^9},
 CellLabel->
  "During evaluation of \
In[188]:=",ExpressionUUID->"7ed542d9-7720-4812-b682-dbe8763a78af"],

Cell[BoxData["\<\"Waiting to receive muh from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.9139489467789283`*^9},
 CellLabel->
  "During evaluation of \
In[188]:=",ExpressionUUID->"84dab2b0-a8c6-4371-a10d-06ecd772c21a"],

Cell[BoxData["\<\"Waiting to receive mub from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.913948946831897*^9},
 CellLabel->
  "During evaluation of \
In[188]:=",ExpressionUUID->"c3a6814c-d989-4b92-bac3-3d471c9c1668"],

Cell[BoxData["\<\"Waiting to receive muc from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.913948946855883*^9},
 CellLabel->
  "During evaluation of \
In[188]:=",ExpressionUUID->"f8ba88b8-c333-48de-804e-22853ff81a7b"],

Cell[BoxData["\<\"Waiting to receive mud from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.9139489468628798`*^9},
 CellLabel->
  "During evaluation of \
In[188]:=",ExpressionUUID->"b435dbc9-0ea1-4d1f-b0de-4046cd1c1eff"],

Cell[BoxData["\<\"Waiting to receive t from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.9139489468828683`*^9},
 CellLabel->
  "During evaluation of \
In[188]:=",ExpressionUUID->"9ab077fd-0684-402b-b6a9-db3ddc422403"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Name\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Semantics\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Value\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(x\\)]\\)\"\>", "\<\"Combined \
Commitment\\nto Blinding Values\\nof Commitments\\nto Coefficiencts of t(X)\"\
\>", "906641018237734466178432956640004768245830081898547979309329331416635236\
70972"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(\[Mu]\\), \\(h\\)]\\)\"\>", "\<\"Combined \
Commitment\\nto Blinding Values\\nof Vector Commitments\\nto \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(a\\), \\(\[Ellipsis]\\)], \\(\
\[RightVector]\\)]\\) and \\!\\(\\*OverscriptBox[SubscriptBox[\\(s\\), \\(\
\[Ellipsis]\\)], \\(\[RightVector]\\)]\\)\\nBased on \
\\!\\(\\*OverscriptBox[\\(h\\), \\(\[RightVector]\\)]\\)\"\>", 
     "923854933658208737013518231870306583796888525736450790380859378030299965\
81426"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(\[Mu]\\), \\(b\\)]\\)\"\>", "\<\"Combined \
Commitment\\nto Blinding Values\\nof Vector Commitments\\nto \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(a\\), \\(\[Ellipsis]\\)], \\(\
\[RightVector]\\)]\\) and \\!\\(\\*OverscriptBox[SubscriptBox[\\(s\\), \\(\
\[Ellipsis]\\)], \\(\[RightVector]\\)]\\)\\nBased on \
\\!\\(\\*OverscriptBox[\\(b\\), \\(\[RightVector]\\)]\\)\"\>", 
     "804659032512389472469480192316341129586430857975582569133904317329246376\
11796"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(\[Mu]\\), \\(c\\)]\\)\"\>", "\<\"Combined \
Commitment\\nto Blinding Values\\nof Vector Commitments\\nto \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(a\\), \\(\[Ellipsis]\\)], \\(\
\[RightVector]\\)]\\) and \\!\\(\\*OverscriptBox[SubscriptBox[\\(s\\), \\(\
\[Ellipsis]\\)], \\(\[RightVector]\\)]\\)\\nBased on \
\\!\\(\\*OverscriptBox[\\(c\\), \\(\[RightVector]\\)]\\)\"\>", 
     "954673339883983257057708939516019892033733345650844103787517259912988864\
77561"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(\[Mu]\\), \\(d\\)]\\)\"\>", "\<\"Combined \
Commitment\\nto Blinding Values\\nof Vector Commitments\\nto \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(a\\), \\(\[Ellipsis]\\)], \\(\
\[RightVector]\\)]\\) and \\!\\(\\*OverscriptBox[SubscriptBox[\\(s\\), \\(\
\[Ellipsis]\\)], \\(\[RightVector]\\)]\\)\\nBased on \
\\!\\(\\*OverscriptBox[\\(d\\), \\(\[RightVector]\\)]\\)\"\>", 
     "207514409867327604500713157843413118448596513725025817708226952047106479\
43339"},
    {"\<\"\\!\\(\\*OverscriptBox[\\(t\\), \\(^\\)]\\)\"\>", "\<\"Inner \
Product\"\>", 
     "611294201885412238944514204841187306657551702500562457556940301720425961\
98303"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(V\\), \\(check1  .1\\)]\\) := \
\\!\\(\\*OverscriptBox[\\(t\\), \\(^\\)]\\)g + \
\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(x\\)]\\)h\"\>", "\<\"\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "84221947031621106753128767877505500063296672991606492996073553947585878\
630245", ",", 
       "5257016713722774505021725376696505613154585400598136639586806649976018\
3049215"}], "]"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(V\\), \\(check1  .2\\)]\\) := \
\\!\\(\\*SuperscriptBox[\\(z\\), \\(3\\)]\\)\\!\\(\\*OverscriptBox[\\(k\\), \
\\(_\\)]\\)*V + \\!\\(\\*OverscriptBox[\\(k\\), \
\\(^\\)]\\)\\!\\(\\*SuperscriptBox[\\(y\\), \\(n - 1\\)]\\)x*W + \
\\!\\(\\*SubscriptBox[\\(\[Delta]\\), \\(yz\\)]\\)x*g + \
\\!\\(\\*SuperscriptBox[\\(x\\), \\(3\\)]\\)*\\!\\(\\*SubscriptBox[\\(T\\), \
\\(3\\)]\\) + \\!\\(\\*SuperscriptBox[\\(x\\), \
\\(5\\)]\\)*\\!\\(\\*SubscriptBox[\\(T\\), \\(5\\)]\\)\"\>", "\<\"\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "84221947031621106753128767877505500063296672991606492996073553947585878\
630245", ",", 
       "5257016713722774505021725376696505613154585400598136639586806649976018\
3049215"}], "]"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(V\\), \\(check1\\)]\\) := \
(\\!\\(\\*SubscriptBox[\\(V\\), \\(check1  .1\\)]\\) \
\\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) \\!\\(\\*SubscriptBox[\\(V\\), \
\\(check1  .2\\)]\\))\"\>", 
     StyleBox["\<\"Check No.1 for\\nVerification of\\nShuffle Proof ok?\"\>",
      StripOnInput->False,
      FontWeight->Bold], "True"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.9139489490236435`*^9},
 CellLabel->
  "During evaluation of \
In[188]:=",ExpressionUUID->"b883854c-79d3-465f-b1aa-9b32c3662b31"],

Cell[BoxData["\<\"Waiting to receive tauxW from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.913948949037635*^9},
 CellLabel->
  "During evaluation of \
In[188]:=",ExpressionUUID->"7c167671-3361-47e4-90ea-4d882940b65c"],

Cell[BoxData["\<\"Waiting to receive muW from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.913948949069623*^9},
 CellLabel->
  "During evaluation of \
In[188]:=",ExpressionUUID->"f76283b9-626d-4efb-8324-7eb3c6b6fa78"],

Cell[BoxData["\<\"Waiting to receive tW from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.9139489490936203`*^9},
 CellLabel->
  "During evaluation of \
In[188]:=",ExpressionUUID->"8cf500d1-a2f6-44a4-b6ff-719836708776"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Name\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Semantics\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Value\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(x, W\\)]\\)\"\>", \
"\<\"Combined Commitment\\nto Blinding Values\\nof Commitments\\nto \
Coefficiencts of \\!\\(\\*SubscriptBox[\\(t\\), \\(W\\)]\\)(X)\"\>", 
     "113405409346918773496790428795432108361840287177160539700287912972625911\
562666"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(\[Mu]\\), \\(W\\)]\\)\"\>", "\<\"Combined \
Commitment\\nto Blinding Values\\nof Vector Commitments\\nto \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(a\\), \\(\[Ellipsis], W\\)], \\(\
\[RightVector]\\)]\\) and \\!\\(\\*OverscriptBox[SubscriptBox[\\(s\\), \\(\
\[Ellipsis], W\\)], \\(\[RightVector]\\)]\\)\"\>", 
     "589382744153727462599062447899913761535048602636296090612156502097579907\
35313"},
    {"\<\"\\!\\(\\*OverscriptBox[SubscriptBox[\\(t\\), \\(W\\)], \
\\(^\\)]\\)\"\>", "\<\"Inner Product\"\>", 
     "902041499901777838959063789046050189244751649960670568055083983626584623\
87712"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(V\\), \\(check1W  .1\\)]\\) := \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(t\\), \\(W\\)], \\(^\\)]\\)g + \
\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(x, W\\)]\\)h\"\>", "\<\"\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "71170761461806575056988777799149753588821351113719544888720840260093735\
125151", ",", 
       "1067989380988351525514529793299398047287459546892131029539095327593531\
50174279"}], "]"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(V\\), \\(check1W  .2\\)]\\) := \
((wy\\!\\(\\*SuperscriptBox[\\()\\), \\(n - 1\\)]\\)+nz)V + \
\\!\\(\\*SuperscriptBox[\\(y\\), \\(n - 1\\)]\\)W + \\!\\(\\*SubscriptBox[\\(\
\[Delta]\\), \\(yzw\\)]\\)g + \\!\\(\\*SubscriptBox[\\(xT\\), \\(1, W\\)]\\) \
+ \\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)\\!\\(\\*SubscriptBox[\\(T\\), \
\\(2, W\\)]\\)\"\>", "\<\"\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "71170761461806575056988777799149753588821351113719544888720840260093735\
125151", ",", 
       "1067989380988351525514529793299398047287459546892131029539095327593531\
50174279"}], "]"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(V\\), \\(check1W\\)]\\) := \
(\\!\\(\\*SubscriptBox[\\(V\\), \\(check1W  .1\\)]\\) \\!\\(\\*OverscriptBox[\
\\(=\\), \\(?\\)]\\) \\!\\(\\*SubscriptBox[\\(V\\), \\(check1W  \
.2\\)]\\))\"\>", 
     StyleBox["\<\"Check No.1W for\\nVerification of\\nShuffle Proof ok?\"\>",
      
      StripOnInput->False,
      FontWeight->Bold], "True"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.9139489494064226`*^9},
 CellLabel->
  "During evaluation of \
In[188]:=",ExpressionUUID->"64110387-111c-4f21-848a-911106e785e7"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Total Communication Cost\"\>",
      StripOnInput->False,
      FontWeight->Bold], "\[SpanFromLeft]", "\[SpanFromLeft]", 
     "\[SpanFromLeft]"},
    {
     StyleBox["\<\"Type\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Count\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Names\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Bits\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {"\<\"group\"\>", 
     "14", "\<\"V, W, AW, SW, AL, SL, SRh, SRb, SRc, SRd, T3, T5, T1W, \
T2W\"\>", "3598"},
    {"\<\"scalar\"\>", 
     "15", "\<\"r, u, y, z, w, x, taux, muh, mub, muc, mud, t, tauxW, muW, tW\
\"\>", "3840"},
    {
     StyleBox["\<\"total\"\>",
      StripOnInput->False,
      FontSlant->Italic], "29", "\<\"\"\>", "7438"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left, Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.9139489494174175`*^9},
 CellLabel->
  "During evaluation of \
In[188]:=",ExpressionUUID->"220b199a-84b7-4b0c-8ae9-b05186d8f5b6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Request Inspection of Pedersen Commitments (Multi-Key Shuffle and PR Protocol)\
\>", "Section",
 CellChangeTimes->{{3.8974959887114897`*^9, 3.897495995013777*^9}, {
   3.8979046139220057`*^9, 3.897904616054976*^9}, {3.897904681865471*^9, 
   3.89790468225427*^9}, {3.89800965497939*^9, 3.8980096659113846`*^9}, {
   3.898330794276561*^9, 3.8983307970772014`*^9}, {3.8983373072753873`*^9, 
   3.8983373275862465`*^9}, {3.89938874659342*^9, 3.8993887526344423`*^9}, {
   3.911294295592021*^9, 3.9112942976564302`*^9}, 
   3.911294392812656*^9},ExpressionUUID->"994c3208-106a-4d72-8a6c-\
f5682a60843b"],

Cell[TextData[{
 "Request inspection of Pedersen commitments ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", ",", "W", ",", 
    SubscriptBox["A", "W"], ",", 
    RowBox[{
     SubscriptBox["S", 
      RowBox[{"W", ","}]], 
     SubscriptBox["A", "L"]}], ",", 
    SubscriptBox["S", "L"], ",", 
    SubscriptBox["S", 
     RowBox[{"R", ",", "h"}]], ",", 
    SubscriptBox["S", 
     RowBox[{"R", ",", "b"}]], ",", 
    SubscriptBox["S", 
     RowBox[{"R", ",", "c"}]], ",", 
    SubscriptBox["T", "3"], ",", 
    SubscriptBox["T", "5"], ",", 
    SubscriptBox["T", 
     RowBox[{"1", ",", "W"}]], ",", 
    SubscriptBox["T", 
     RowBox[{"2", ",", "W"}]]}], TraditionalForm]],ExpressionUUID->
  "6a6412e3-ed60-4a51-870b-398b21ef13cf"],
 " (multi-key shuffle protocol) as well as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"L", "[", 
    RowBox[{
     RowBox[{"n", "..."}], "1"}], "]"}], TraditionalForm]],ExpressionUUID->
  "c0ec18d2-76a0-47ad-9632-ebf3123c39fb"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", "[", 
    RowBox[{
     RowBox[{"n", "..."}], "1"}], "]"}], TraditionalForm]],ExpressionUUID->
  "0d176d3d-f854-41f0-a933-47647ddb3bc3"],
 " (inner product protocol) from prover to verify that his commitments were \
done correctly. Additionally (but not necessary), check other variables \
exchanged during protocol execution."
}], "Text",
 CellChangeTimes->{{3.8874315380510364`*^9, 3.8874316248126335`*^9}, {
   3.8874328772288*^9, 3.8874330229853535`*^9}, {3.887433123692663*^9, 
   3.8874331256768494`*^9}, {3.887433165091633*^9, 3.887433191710307*^9}, {
   3.887433266840893*^9, 3.88743329734429*^9}, 3.8874342244729156`*^9, {
   3.8980086347028875`*^9, 3.8980086895305696`*^9}, {3.89800872195833*^9, 
   3.89800882758283*^9}, {3.8980088795119934`*^9, 3.8980089806039324`*^9}, {
   3.8980093047837253`*^9, 3.8980093248743243`*^9}, {3.898009364836938*^9, 
   3.8980093669672394`*^9}, {3.8980096765429783`*^9, 3.898009684483537*^9}, {
   3.8980097425047493`*^9, 3.8980097695341167`*^9}, {3.8983308764846115`*^9, 
   3.8983308825516644`*^9}, {3.899388757482712*^9, 
   3.8993887941068473`*^9}},ExpressionUUID->"d4755771-1c7a-445c-b446-\
2b7ba022ecfd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
   "MultiKeyShuffleArgumentInspection", "[", "inspectionReply_", "]"}], " ", ":=",
    " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "success", ",", "\n", "\t", "AWInspectionOk", ",", "SWInspectionOk", 
       ",", "\n", "\t", "hPrimePermutationOk", ",", "bPrimePermutationOk", 
       ",", "cPrimePermutationOk", ",", "dPrimePermutationOk", ",", "\n", 
       "\t", "VInspectionOk", ",", "WInspectionOk", ",", "\n", "\t", 
       "ALInspectionOk", ",", "SLInspectionOk", ",", "\n", "\t", 
       "SRhInspectionOk", ",", "SRbInspectionOk", ",", "SRcInspectionOk", ",",
        "SRdInspectionOk", ",", "\n", "\t", "T3InspectionOk", ",", 
       "t3DefinitionOk", ",", "\n", "\t", "T5InspectionOk", ",", 
       "t5DefinitionOk", ",", "\n", "\t", "T1WInspectionOk", ",", 
       "t1WDefinitionOk", ",", "\n", "\t", "T2WInspectionOk", ",", 
       "t2WDefinitionOk", ",", "\n", "\t", "lDefinitionOk", ",", 
       "rDefinitionOk", ",", "lrRow", ",", "\n", "\t", "lWDefinitionOk", ",", 
       "rWDefinitionOk", ",", "lWrWRow", ",", "\n", "\t", "muhDefinitionOk", 
       ",", "mubDefinitionOk", ",", "mucDefinitionOk", ",", "mudDefinitionOk",
        ",", "\n", "\t", "tauxDefinitionOk", ",", "\n", "\t", "tDefinitionOk",
        ",", "\n", "\t", "tauxWDefinitionOk", ",", "\n", "\t", 
       "tWDefinitionOk"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"s", " ", "=", " ", 
       RowBox[{"inspectionReply", "[", "\"\<s\>\"", "]"}]}], ";", "\n", "\t", 
      
      RowBox[{
       SubscriptBox["\[Sigma]", "W"], " ", "=", " ", 
       RowBox[{"inspectionReply", "[", "\"\<sigmaW\>\"", "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{
       SubscriptBox["\[Alpha]", "W"], " ", "=", " ", 
       RowBox[{"inspectionReply", "[", "\"\<alphaW\>\"", "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{
       SubscriptBox["\[Beta]", "W"], " ", "=", " ", 
       RowBox[{"inspectionReply", "[", "\"\<betaW\>\"", "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{
       SubscriptBox["\[Gamma]", "W"], " ", "=", " ", 
       RowBox[{"inspectionReply", "[", "\"\<gammaW\>\"", "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["a", 
         RowBox[{"R", ",", "W"}]], "\[RightVector]"], " ", "=", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"s", ",", " ", "n"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["a", 
         RowBox[{"L", ",", "W"}]], "\[RightVector]"], " ", "=", " ", 
       RowBox[{"Thread", "[", 
        RowBox[{"powermodq", "[", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["a", 
            RowBox[{"R", ",", "W"}]], "\[RightVector]"], ",", " ", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", 
            RowBox[{"n", "-", "1"}]}], "]"}]}], "]"}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["s", 
         RowBox[{"R", ",", "W"}]], "\[RightVector]"], " ", "=", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{
         SubscriptBox["\[Gamma]", "W"], ",", " ", "n"}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["s", 
         RowBox[{"L", ",", "W"}]], "\[RightVector]"], " ", "=", " ", 
       RowBox[{"Thread", "[", 
        RowBox[{"powermodq", "[", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{
            SubscriptBox["\[Gamma]", "W"], ",", "n"}], "]"}], ",", " ", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", 
            RowBox[{"n", "-", "1"}]}], "]"}]}], "]"}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"AWInspectionOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["A", "W"], " ", "==", " ", 
         RowBox[{
          RowBox[{
           OverscriptBox[
            SubscriptBox["a", 
             RowBox[{"L", ",", "W"}]], "\[RightVector]"], ".", 
           OverscriptBox["g", "\[RightVector]"]}], " ", "+", " ", 
          RowBox[{
           OverscriptBox[
            SubscriptBox["a", 
             RowBox[{"R", ",", "W"}]], "\[RightVector]"], ".", 
           OverscriptBox["h", "\[RightVector]"]}], " ", "+", " ", 
          RowBox[{
           SubscriptBox["\[Alpha]", "W"], "*", "h"}]}]}], ")"}]}], ";", "\n", 
      "\t", 
      RowBox[{"SWInspectionOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["S", "W"], " ", "==", " ", 
         RowBox[{
          RowBox[{
           OverscriptBox[
            SubscriptBox["s", 
             RowBox[{"L", ",", "W"}]], "\[RightVector]"], ".", 
           OverscriptBox["g", "\[RightVector]"]}], " ", "+", " ", 
          RowBox[{
           OverscriptBox[
            SubscriptBox["s", 
             RowBox[{"R", ",", "W"}]], "\[RightVector]"], ".", 
           OverscriptBox["h", "\[RightVector]"]}], " ", "+", " ", 
          RowBox[{
           SubscriptBox["\[Beta]", "W"], "*", "h"}]}]}], ")"}]}], ";", "\n", 
      "\t", 
      RowBox[{"Unprotect", "[", "\[Pi]", "]"}], ";", "\n", "\t", 
      RowBox[{"\[Pi]", " ", "=", " ", 
       RowBox[{"inspectionReply", "[", "\"\<pi\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{
       SuperscriptBox["\[Pi]", 
        RowBox[{"-", "1"}]], " ", "=", " ", 
       RowBox[{"InversePermutation", "[", "\[Pi]", "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"hPrimePermutationOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         OverscriptBox[
          RowBox[{"h", "'"}], "\[RightVector]"], " ", "==", " ", 
         RowBox[{"s", " ", "*", " ", 
          RowBox[{"Permute", "[", 
           RowBox[{
            OverscriptBox["h", "\[RightVector]"], ",", " ", "\[Pi]"}], 
           "]"}]}]}], ")"}]}], ";", "\n", "\t", 
      RowBox[{"bPrimePermutationOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         OverscriptBox[
          RowBox[{"b", "'"}], "\[RightVector]"], " ", "==", " ", 
         RowBox[{"s", " ", "*", " ", 
          RowBox[{"Permute", "[", 
           RowBox[{
            OverscriptBox["b", "\[RightVector]"], ",", " ", "\[Pi]"}], 
           "]"}]}]}], ")"}]}], ";", "\n", "\t", 
      RowBox[{"cPrimePermutationOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         OverscriptBox[
          RowBox[{"c", "'"}], "\[RightVector]"], " ", "==", " ", 
         RowBox[{"s", " ", "*", " ", 
          RowBox[{"Permute", "[", 
           RowBox[{
            OverscriptBox["c", "\[RightVector]"], ",", " ", "\[Pi]"}], 
           "]"}]}]}], ")"}]}], ";", "\n", "\t", 
      RowBox[{"dPrimePermutationOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         OverscriptBox[
          RowBox[{"d", "'"}], "\[RightVector]"], " ", "==", " ", 
         RowBox[{"s", " ", "*", " ", 
          RowBox[{"Permute", "[", 
           RowBox[{
            OverscriptBox["d", "\[RightVector]"], ",", " ", "\[Pi]"}], 
           "]"}]}]}], ")"}]}], ";", "\n", "\t", 
      RowBox[{"VInspectionOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{"V", " ", "==", " ", 
         RowBox[{"s", "*", "g"}]}], ")"}]}], ";", "\n", "\t", 
      RowBox[{"WInspectionOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{"W", " ", "==", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"powermodq", "[", 
            RowBox[{"s", ",", "n"}], "]"}], "*", "g"}], " ", "+", " ", 
          RowBox[{
           SubscriptBox["\[Sigma]", "W"], "*", "h"}]}]}], ")"}]}], ";", "\n", 
      "\t", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["a", "R"], "\[RightVector]"], " ", "=", " ", 
       RowBox[{"modq", "[", 
        RowBox[{"s", " ", "*", " ", 
         RowBox[{"Permute", "[", 
          RowBox[{
           OverscriptBox["k", "\[RightVector]"], ",", " ", 
           SuperscriptBox["\[Pi]", 
            RowBox[{"-", "1"}]]}], "]"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["a", "L"], "\[RightVector]"], " ", "=", " ", 
       RowBox[{"{", "1", "}"}]}], ";", " ", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
        RowBox[{"i", " ", "<=", " ", 
         RowBox[{"n", "-", "1"}]}], ",", " ", 
        RowBox[{"i", "++"}], ",", " ", 
        RowBox[{"AppendTo", "[", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["a", "L"], "\[RightVector]"], ",", " ", 
          RowBox[{"modq", "[", 
           RowBox[{
            RowBox[{
             OverscriptBox[
              SubscriptBox["a", "L"], "\[RightVector]"], "[", 
             RowBox[{"[", "i", "]"}], "]"}], " ", "*", " ", 
            RowBox[{
             OverscriptBox[
              SubscriptBox["a", "R"], "\[RightVector]"], "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "]"}]}], "]"}], ";", 
      "\n", "\t", 
      RowBox[{"\[Alpha]", " ", "=", " ", 
       RowBox[{"inspectionReply", "[", "\"\<alpha\>\"", "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"\[Beta]", " ", "=", " ", 
       RowBox[{"inspectionReply", "[", "\"\<beta\>\"", "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{
       SubscriptBox["\[Rho]", "h"], " ", "=", " ", 
       RowBox[{"inspectionReply", "[", "\"\<rhoh\>\"", "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{
       SubscriptBox["\[Rho]", "b"], " ", "=", " ", 
       RowBox[{"inspectionReply", "[", "\"\<rhob\>\"", "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{
       SubscriptBox["\[Rho]", "c"], " ", "=", " ", 
       RowBox[{"inspectionReply", "[", "\"\<rhoc\>\"", "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{
       SubscriptBox["\[Rho]", "d"], " ", "=", " ", 
       RowBox[{"inspectionReply", "[", "\"\<rhod\>\"", "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["s", "L"], "\[RightVector]"], " ", "=", " ", 
       RowBox[{"inspectionReply", "[", "\"\<sL\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["s", "R"], "\[RightVector]"], " ", "=", " ", 
       RowBox[{"inspectionReply", "[", "\"\<sR\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"ALInspectionOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["A", "L"], " ", "==", " ", 
         RowBox[{
          RowBox[{
           OverscriptBox[
            SubscriptBox["a", "L"], "\[RightVector]"], ".", 
           OverscriptBox["g", "\[RightVector]"]}], " ", "+", " ", 
          RowBox[{"\[Alpha]", "*", "h"}]}]}], ")"}]}], ";", "\n", "\t", 
      RowBox[{"SLInspectionOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["S", "L"], " ", "==", " ", 
         RowBox[{
          RowBox[{
           OverscriptBox[
            SubscriptBox["s", "L"], "\[RightVector]"], ".", 
           OverscriptBox["g", "\[RightVector]"]}], " ", "+", " ", 
          RowBox[{"\[Beta]", "*", "h"}]}]}], ")"}]}], ";", "\n", "\t", 
      RowBox[{"SRhInspectionOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["S", 
          RowBox[{"R", ",", "h"}]], " ", "==", " ", 
         RowBox[{
          RowBox[{
           OverscriptBox[
            SubscriptBox["s", "R"], "\[RightVector]"], ".", 
           OverscriptBox["h", "\[RightVector]"]}], " ", "+", " ", 
          RowBox[{
           SubscriptBox["\[Rho]", "h"], "*", "h"}]}]}], ")"}]}], ";", "\n", 
      "\t", 
      RowBox[{"SRbInspectionOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["S", 
          RowBox[{"R", ",", "b"}]], " ", "==", " ", 
         RowBox[{
          RowBox[{
           OverscriptBox[
            SubscriptBox["s", "R"], "\[RightVector]"], ".", 
           OverscriptBox["b", "\[RightVector]"]}], " ", "+", " ", 
          RowBox[{
           SubscriptBox["\[Rho]", "b"], "*", "h"}]}]}], ")"}]}], ";", "\n", 
      "\t", 
      RowBox[{"SRcInspectionOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["S", 
          RowBox[{"R", ",", "c"}]], " ", "==", " ", 
         RowBox[{
          RowBox[{
           OverscriptBox[
            SubscriptBox["s", "R"], "\[RightVector]"], ".", 
           OverscriptBox["c", "\[RightVector]"]}], " ", "+", " ", 
          RowBox[{
           SubscriptBox["\[Rho]", "c"], "*", "h"}]}]}], ")"}]}], ";", "\n", 
      "\t", 
      RowBox[{"SRdInspectionOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["S", 
          RowBox[{"R", ",", "d"}]], " ", "==", " ", 
         RowBox[{
          RowBox[{
           OverscriptBox[
            SubscriptBox["s", "R"], "\[RightVector]"], ".", 
           OverscriptBox["d", "\[RightVector]"]}], " ", "+", " ", 
          RowBox[{
           SubscriptBox["\[Rho]", "d"], "*", "h"}]}]}], ")"}]}], ";", "\n", 
      "\t", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["l", "0"], "\[RightVector]"], " ", "=", " ", 
       RowBox[{"modq", "[", 
        RowBox[{
         OverscriptBox[
          SubscriptBox["a", "L"], "\[RightVector]"], " ", "+", " ", 
         RowBox[{
          RowBox[{"powermodq", "[", 
           RowBox[{"z", ",", " ", "3"}], "]"}], " ", "*", " ", 
          OverscriptBox[
           SuperscriptBox["y", 
            RowBox[{"-", "n"}]], "\[RightVector]"]}]}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["l", "2"], "\[RightVector]"], " ", "=", " ", 
       OverscriptBox[
        SubscriptBox["s", "L"], "\[RightVector]"]}], ";", "\n", "\t", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["r", "1"], "\[RightVector]"], " ", "=", " ", 
       RowBox[{"modq", "[", 
        RowBox[{
         RowBox[{
          OverscriptBox[
           SuperscriptBox["y", "n"], "\[RightVector]"], " ", "*", " ", 
          OverscriptBox[
           SubscriptBox["a", "R"], "\[RightVector]"]}], " ", "-", " ", 
         OverscriptBox[
          SubsuperscriptBox["y", "z", 
           RowBox[{"n", "-", "1"}]], "\[RightVector]"]}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["r", "3"], "\[RightVector]"], " ", "=", " ", 
       RowBox[{"modq", "[", 
        RowBox[{
         OverscriptBox[
          SuperscriptBox["y", "n"], "\[RightVector]"], " ", "*", " ", 
         OverscriptBox[
          SubscriptBox["s", "R"], "\[RightVector]"]}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{
       SubscriptBox["t", "3"], " ", "=", " ", 
       RowBox[{"inspectionReply", "[", "\"\<t3\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{
       SubscriptBox["\[Tau]", "3"], " ", "=", " ", 
       RowBox[{"inspectionReply", "[", "\"\<tau3\>\"", "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"T3InspectionOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["T", "3"], " ", "==", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["t", "3"], "*", "g"}], " ", "+", " ", 
          RowBox[{
           SubscriptBox["\[Tau]", "3"], "*", "h"}]}]}], ")"}]}], ";", "\n", 
      "\t", 
      RowBox[{"t3DefinitionOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"modq", "[", 
          SubscriptBox["t", "3"], "]"}], " ", "==", " ", 
         RowBox[{"modq", "[", 
          RowBox[{
           RowBox[{
            OverscriptBox[
             SubscriptBox["l", "0"], "\[RightVector]"], ".", 
            OverscriptBox[
             SubscriptBox["r", "3"], "\[RightVector]"]}], " ", "+", " ", 
           RowBox[{
            OverscriptBox[
             SubscriptBox["l", "2"], "\[RightVector]"], ".", 
            OverscriptBox[
             SubscriptBox["r", "1"], "\[RightVector]"]}]}], "]"}]}], ")"}]}], 
      ";", "\[IndentingNewLine]", "\t", 
      RowBox[{
       SubscriptBox["t", "5"], " ", "=", " ", 
       RowBox[{"inspectionReply", "[", "\"\<t5\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{
       SubscriptBox["\[Tau]", "5"], " ", "=", " ", 
       RowBox[{"inspectionReply", "[", "\"\<tau5\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"T5InspectionOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["T", "5"], " ", "==", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["t", "5"], "*", "g"}], " ", "+", " ", 
          RowBox[{
           SubscriptBox["\[Tau]", "5"], "*", "h"}]}]}], ")"}]}], ";", "\n", 
      "\t", 
      RowBox[{"t5DefinitionOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"modq", "[", 
          SubscriptBox["t", "5"], "]"}], " ", "==", " ", 
         RowBox[{"modq", "[", 
          RowBox[{
           OverscriptBox[
            SubscriptBox["l", "2"], "\[RightVector]"], ".", 
           OverscriptBox[
            SubscriptBox["r", "3"], "\[RightVector]"]}], "]"}]}], ")"}]}], 
      ";", "\n", "\t", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["l", 
         RowBox[{"0", ",", "W"}]], "\[RightVector]"], " ", "=", " ", 
       RowBox[{"modq", "[", 
        RowBox[{
         OverscriptBox[
          SubscriptBox["a", 
           RowBox[{"L", ",", "W"}]], "\[RightVector]"], " ", "+", " ", 
         RowBox[{"z", "*", 
          OverscriptBox[
           SuperscriptBox["y", 
            RowBox[{"-", "n"}]], "\[RightVector]"]}], " ", "+", " ", 
         OverscriptBox[
          SuperscriptBox["w", "n"], "\[RightVector]"], " ", "-", " ", 
         RowBox[{
          OverscriptBox[
           SubsuperscriptBox["w", "0", 
            RowBox[{"n", "-", "1"}]], "\[RightVector]"], "*", 
          SuperscriptBox["y", 
           RowBox[{"-", "1"}]]}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["l", 
         RowBox[{"1", ",", "W"}]], "\[RightVector]"], " ", "=", " ", 
       OverscriptBox[
        SubscriptBox["s", 
         RowBox[{"L", ",", "W"}]], "\[RightVector]"]}], ";", "\n", "\t", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["r", 
         RowBox[{"0", ",", "W"}]], "\[RightVector]"], " ", "=", " ", 
       RowBox[{"modq", "[", 
        RowBox[{
         RowBox[{
          OverscriptBox[
           SubscriptBox["a", 
            RowBox[{"R", ",", "W"}]], "\[RightVector]"], "*", 
          OverscriptBox[
           SuperscriptBox["y", "n"], "\[RightVector]"]}], " ", "-", " ", 
         OverscriptBox[
          SubsuperscriptBox["y", "z", 
           RowBox[{"n", "-", "1"}]], "\[RightVector]"]}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["r", 
         RowBox[{"1", ",", "W"}]], "\[RightVector]"], " ", "=", " ", 
       RowBox[{"modq", "[", 
        RowBox[{
         OverscriptBox[
          SubscriptBox["s", 
           RowBox[{"R", ",", "W"}]], "\[RightVector]"], "*", 
         OverscriptBox[
          SuperscriptBox["y", "n"], "\[RightVector]"]}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{
       SubscriptBox["t", 
        RowBox[{"1", ",", "W"}]], " ", "=", " ", 
       RowBox[{"inspectionReply", "[", "\"\<t1W\>\"", "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{
       SubscriptBox["\[Tau]", 
        RowBox[{"1", ",", "W"}]], " ", "=", " ", 
       RowBox[{"inspectionReply", "[", "\"\<tau1W\>\"", "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"T1WInspectionOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["T", 
          RowBox[{"1", ",", "W"}]], " ", "==", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["t", 
            RowBox[{"1", ",", "W"}]], "*", "g"}], " ", "+", " ", 
          RowBox[{
           SubscriptBox["\[Tau]", 
            RowBox[{"1", ",", "W"}]], "*", "h"}]}]}], ")"}]}], ";", "\n", 
      "\t", 
      RowBox[{"t1WDefinitionOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"modq", "[", 
          SubscriptBox["t", 
           RowBox[{"1", ",", "W"}]], "]"}], " ", "==", " ", 
         RowBox[{"modq", "[", 
          RowBox[{
           RowBox[{
            OverscriptBox[
             SubscriptBox["l", 
              RowBox[{"0", ",", "W"}]], "\[RightVector]"], ".", 
            OverscriptBox[
             SubscriptBox["r", 
              RowBox[{"1", ",", "W"}]], "\[RightVector]"]}], " ", "+", " ", 
           RowBox[{
            OverscriptBox[
             SubscriptBox["l", 
              RowBox[{"1", ",", "W"}]], "\[RightVector]"], ".", 
            OverscriptBox[
             SubscriptBox["r", 
              RowBox[{"0", ",", "W"}]], "\[RightVector]"]}]}], "]"}]}], 
        ")"}]}], ";", "\n", "\t", 
      RowBox[{
       SubscriptBox["t", 
        RowBox[{"2", ",", "W"}]], " ", "=", " ", 
       RowBox[{"inspectionReply", "[", "\"\<t2W\>\"", "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{
       SubscriptBox["\[Tau]", 
        RowBox[{"2", ",", "W"}]], " ", "=", " ", 
       RowBox[{"inspectionReply", "[", "\"\<tau2W\>\"", "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"T2WInspectionOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["T", 
          RowBox[{"2", ",", "W"}]], " ", "==", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["t", 
            RowBox[{"2", ",", "W"}]], "*", "g"}], " ", "+", " ", 
          RowBox[{
           SubscriptBox["\[Tau]", 
            RowBox[{"2", ",", "W"}]], "*", "h"}]}]}], ")"}]}], ";", "\n", 
      "\t", 
      RowBox[{"t2WDefinitionOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"modq", "[", 
          SubscriptBox["t", 
           RowBox[{"2", ",", "W"}]], "]"}], " ", "==", " ", 
         RowBox[{"modq", "[", 
          RowBox[{
           OverscriptBox[
            SubscriptBox["l", 
             RowBox[{"1", ",", "W"}]], "\[RightVector]"], ".", 
           OverscriptBox[
            SubscriptBox["r", 
             RowBox[{"1", ",", "W"}]], "\[RightVector]"]}], "]"}]}], ")"}]}], 
      ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{"useInnerProductProtocol", ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          OverscriptBox["l", "\[RightVector]"], " ", "=", " ", 
          RowBox[{"modq", "[", 
           RowBox[{
            OverscriptBox[
             SubscriptBox["l", "0"], "\[RightVector]"], " ", "+", " ", 
            RowBox[{
             OverscriptBox[
              SubscriptBox["l", "2"], "\[RightVector]"], "*", 
             RowBox[{"x", "^", "2"}]}]}], "]"}]}], ";", "\n", "\t\t", 
         RowBox[{
          OverscriptBox["r", "\[RightVector]"], " ", "=", " ", 
          RowBox[{"modq", "[", 
           RowBox[{
            RowBox[{
             OverscriptBox[
              SubscriptBox["r", "1"], "\[RightVector]"], "*", "x"}], " ", "+",
             " ", 
            RowBox[{
             OverscriptBox[
              SubscriptBox["r", "3"], "\[RightVector]"], "*", 
             RowBox[{"x", "^", "3"}]}]}], "]"}]}], ";", "\n", "\t\t", 
         RowBox[{"lDefinitionOk", " ", "=", " ", "True"}], ";", "\n", "\t\t", 
         
         RowBox[{"rDefinitionOk", " ", "=", " ", "True"}], ";", "\n", "\t\t", 
         
         RowBox[{"lrRow", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[\(l\), \(\[RightVector]\)]\) \
:\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \
\!\(\*OverscriptBox[SubscriptBox[\(l\), \(0\)], \
\(\[RightVector]\)]\)+\!\(\*OverscriptBox[SubscriptBox[\(l\), \(2\)], \(\
\[RightVector]\)]\)\!\(\*SuperscriptBox[\(x\), \
\(2\)]\)\\n\!\(\*OverscriptBox[\(r\), \(\[RightVector]\)]\) \
:\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \
\!\(\*OverscriptBox[SubscriptBox[\(r\), \(1\)], \
\(\[RightVector]\)]\)x+\!\(\*OverscriptBox[SubscriptBox[\(r\), \(3\)], \(\
\[RightVector]\)]\)\!\(\*SuperscriptBox[\(x\), \(3\)]\)\>\"", ",", " ", 
            "SpanFromLeft", ",", " ", "SpanFromLeft"}], "}"}]}], ";", "\n", 
         "\t\t", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["l", "W"], "\[RightVector]"], " ", "=", " ", 
          RowBox[{"modq", "[", 
           RowBox[{
            OverscriptBox[
             SubscriptBox["l", 
              RowBox[{"0", ",", "W"}]], "\[RightVector]"], " ", "+", " ", 
            RowBox[{
             OverscriptBox[
              SubscriptBox["l", 
               RowBox[{"1", ",", "W"}]], "\[RightVector]"], "*", "x"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["r", "W"], "\[RightVector]"], " ", "=", " ", 
          RowBox[{"modq", "[", 
           RowBox[{
            OverscriptBox[
             SubscriptBox["r", 
              RowBox[{"0", ",", "W"}]], "\[RightVector]"], " ", "+", " ", 
            RowBox[{
             OverscriptBox[
              SubscriptBox["r", 
               RowBox[{"1", ",", "W"}]], "\[RightVector]"], "*", "x"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["t", "W"], "^"], " ", "=", " ", 
          RowBox[{"modq", "[", 
           RowBox[{
            OverscriptBox[
             SubscriptBox["l", "W"], "\[RightVector]"], ".", 
            OverscriptBox[
             SubscriptBox["r", "W"], "\[RightVector]"]}], "]"}]}], ";", "\n", 
         "\t\t", 
         RowBox[{"lWDefinitionOk", " ", "=", " ", "True"}], ";", "\n", "\t\t", 
         RowBox[{"rWDefinitionOk", " ", "=", " ", "True"}], ";", "\n", "\t\t", 
         RowBox[{"lWrWRow", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[SubscriptBox[\(l\), \(W\)], \(\
\[RightVector]\)]\) :\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \
\!\(\*OverscriptBox[SubscriptBox[\(l\), \(0, W\)], \(\[RightVector]\)]\)+\!\(\
\*OverscriptBox[SubscriptBox[\(l\), \(1, W\)], \
\(\[RightVector]\)]\)x\\n\!\(\*OverscriptBox[SubscriptBox[\(r\), \(W\)], \(\
\[RightVector]\)]\) :\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \
\!\(\*OverscriptBox[SubscriptBox[\(r\), \(0, W\)], \(\[RightVector]\)]\)+\!\(\
\*OverscriptBox[SubscriptBox[\(r\), \(1, W\)], \(\[RightVector]\)]\)x\>\"", 
            ",", " ", "SpanFromLeft", ",", " ", "SpanFromLeft"}], "}"}]}], 
         ";"}], "\n", "\t", 
        RowBox[{"(*", "Else", "*)"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"lDefinitionOk", " ", "=", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"modq", "[", 
             OverscriptBox["l", "\[RightVector]"], "]"}], " ", "==", " ", 
            RowBox[{"modq", "[", 
             RowBox[{
              OverscriptBox[
               SubscriptBox["l", "0"], "\[RightVector]"], " ", "+", " ", 
              RowBox[{
               OverscriptBox[
                SubscriptBox["l", "2"], "\[RightVector]"], "*", 
               RowBox[{"x", "^", "2"}]}]}], "]"}]}], ")"}]}], ";", "\n", 
         "\t\t", 
         RowBox[{"rDefinitionOk", " ", "=", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"modq", "[", 
             OverscriptBox["r", "\[RightVector]"], "]"}], " ", "==", " ", 
            RowBox[{"modq", "[", 
             RowBox[{
              RowBox[{
               OverscriptBox[
                SubscriptBox["r", "1"], "\[RightVector]"], "*", "x"}], " ", 
              "+", " ", 
              RowBox[{
               OverscriptBox[
                SubscriptBox["r", "3"], "\[RightVector]"], "*", 
               RowBox[{"x", "^", "3"}]}]}], "]"}]}], ")"}]}], ";", "\n", 
         "\t\t", 
         RowBox[{"lrRow", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[\(l\), \(\[RightVector]\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) \!\(\*OverscriptBox[SubscriptBox[\(l\), \
\(0\)], \(\[RightVector]\)]\)+\!\(\*OverscriptBox[SubscriptBox[\(l\), \(2\)], \
\(\[RightVector]\)]\)\!\(\*SuperscriptBox[\(x\), \
\(2\)]\)\\n\!\(\*OverscriptBox[\(r\), \(\[RightVector]\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) \!\(\*OverscriptBox[SubscriptBox[\(r\), \
\(1\)], \(\[RightVector]\)]\)x+\!\(\*OverscriptBox[SubscriptBox[\(r\), \
\(3\)], \(\[RightVector]\)]\)\!\(\*SuperscriptBox[\(x\), \(3\)]\)\>\"", ",", 
            " ", "\"\<Definition\\nDefinition\>\"", ",", " ", 
            RowBox[{
             RowBox[{"ToString", "[", "lDefinitionOk", "]"}], "<>", 
             "\"\<\\n\>\"", "<>", 
             RowBox[{"ToString", "[", "rDefinitionOk", "]"}]}]}], "}"}]}], 
         ";", "\n", "\t\t", 
         RowBox[{"lWDefinitionOk", " ", "=", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"modq", "[", 
             OverscriptBox[
              SubscriptBox["l", "W"], "\[RightVector]"], "]"}], " ", "==", 
            " ", 
            RowBox[{"modq", "[", 
             RowBox[{
              OverscriptBox[
               SubscriptBox["l", 
                RowBox[{"0", ",", "W"}]], "\[RightVector]"], " ", "+", " ", 
              RowBox[{
               OverscriptBox[
                SubscriptBox["l", 
                 RowBox[{"1", ",", "W"}]], "\[RightVector]"], "*", "x"}]}], 
             "]"}]}], ")"}]}], ";", "\[IndentingNewLine]", "\t\t", 
         RowBox[{"rWDefinitionOk", " ", "=", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"modq", "[", 
             OverscriptBox[
              SubscriptBox["r", "W"], "\[RightVector]"], "]"}], " ", "==", 
            " ", 
            RowBox[{"modq", "[", 
             RowBox[{
              OverscriptBox[
               SubscriptBox["r", 
                RowBox[{"0", ",", "W"}]], "\[RightVector]"], " ", "+", " ", 
              RowBox[{
               OverscriptBox[
                SubscriptBox["r", 
                 RowBox[{"1", ",", "W"}]], "\[RightVector]"], "*", "x"}]}], 
             "]"}]}], ")"}]}], ";", "\[IndentingNewLine]", "\t\t", 
         RowBox[{"lWrWRow", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[SubscriptBox[\(l\), \(W\)], \(\
\[RightVector]\)]\) \!\(\*OverscriptBox[\(=\), \(?\)]\) \
\!\(\*OverscriptBox[SubscriptBox[\(l\), \(0, W\)], \(\[RightVector]\)]\)+\!\(\
\*OverscriptBox[SubscriptBox[\(l\), \(1, W\)], \
\(\[RightVector]\)]\)x\\n\!\(\*OverscriptBox[SubscriptBox[\(r\), \(W\)], \(\
\[RightVector]\)]\) \!\(\*OverscriptBox[\(=\), \(?\)]\) \
\!\(\*OverscriptBox[SubscriptBox[\(r\), \(0, W\)], \(\[RightVector]\)]\)+\!\(\
\*OverscriptBox[SubscriptBox[\(r\), \(1, W\)], \(\[RightVector]\)]\)x\>\"", 
            ",", " ", "\"\<Definition\\nDefinition\>\"", ",", " ", 
            RowBox[{
             RowBox[{"ToString", "[", "lWDefinitionOk", "]"}], "<>", 
             "\"\<\\n\>\"", "<>", 
             RowBox[{"ToString", "[", "rWDefinitionOk", "]"}]}]}], "}"}]}], 
         ";"}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
      RowBox[{"muhDefinitionOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"modq", "[", 
          SubscriptBox["\[Mu]", "h"], "]"}], " ", "==", " ", 
         RowBox[{"modq", "[", 
          RowBox[{"\[Alpha]", " ", "+", " ", 
           RowBox[{"\[Beta]", "*", 
            RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
           RowBox[{
            SubscriptBox["\[Rho]", "h"], "*", 
            RowBox[{"x", "^", "3"}]}]}], "]"}]}], ")"}]}], ";", "\n", "\t", 
      RowBox[{"mubDefinitionOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"modq", "[", 
          SubscriptBox["\[Mu]", "b"], "]"}], " ", "==", " ", 
         RowBox[{"modq", "[", 
          RowBox[{"\[Alpha]", " ", "+", " ", 
           RowBox[{"\[Beta]", "*", 
            RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
           RowBox[{
            SubscriptBox["\[Rho]", "b"], "*", 
            RowBox[{"x", "^", "3"}]}]}], "]"}]}], ")"}]}], ";", "\n", "\t", 
      RowBox[{"mucDefinitionOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"modq", "[", 
          SubscriptBox["\[Mu]", "c"], "]"}], " ", "==", " ", 
         RowBox[{"modq", "[", 
          RowBox[{"\[Alpha]", " ", "+", " ", 
           RowBox[{"\[Beta]", "*", 
            RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
           RowBox[{
            SubscriptBox["\[Rho]", "c"], "*", 
            RowBox[{"x", "^", "3"}]}]}], "]"}]}], ")"}]}], ";", "\n", "\t", 
      RowBox[{"mudDefinitionOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"modq", "[", 
          SubscriptBox["\[Mu]", "d"], "]"}], " ", "==", " ", 
         RowBox[{"modq", "[", 
          RowBox[{"\[Alpha]", " ", "+", " ", 
           RowBox[{"\[Beta]", "*", 
            RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
           RowBox[{
            SubscriptBox["\[Rho]", "d"], "*", 
            RowBox[{"x", "^", "3"}]}]}], "]"}]}], ")"}]}], ";", "\n", "\t", 
      RowBox[{"tauxDefinitionOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"modq", "[", 
          SubscriptBox["\[Tau]", "x"], "]"}], " ", "==", " ", 
         RowBox[{"modq", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Sigma]", "W"], "*", 
            RowBox[{"powermodq", "[", 
             RowBox[{"y", ",", 
              RowBox[{"n", "-", "1"}]}], "]"}], "*", 
            OverscriptBox["k", "^"], "*", "x"}], " ", "+", " ", 
           RowBox[{
            SubscriptBox["\[Tau]", "3"], "*", 
            RowBox[{"x", "^", "3"}]}], " ", "+", " ", 
           RowBox[{
            SubscriptBox["\[Tau]", "5"], "*", 
            RowBox[{"x", "^", "5"}]}]}], "]"}]}], ")"}]}], ";", "\n", "\t", 
      RowBox[{"tDefinitionOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"modq", "[", 
          OverscriptBox["t", "^"], "]"}], " ", "==", " ", 
         RowBox[{"modq", "[", 
          RowBox[{
           OverscriptBox["l", "\[RightVector]"], ".", 
           OverscriptBox["r", "\[RightVector]"]}], "]"}]}], ")"}]}], ";", 
      "\n", "\t", 
      RowBox[{"tauxWDefinitionOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"modq", "[", 
          SubscriptBox["\[Tau]", 
           RowBox[{"x", ",", "W"}]], "]"}], " ", "==", " ", 
         RowBox[{"modq", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Sigma]", "W"], "*", 
            RowBox[{"powermodq", "[", 
             RowBox[{"y", ",", 
              RowBox[{"n", "-", "1"}]}], "]"}]}], " ", "+", " ", 
           RowBox[{
            SubscriptBox["\[Tau]", 
             RowBox[{"1", ",", "W"}]], "*", "x"}], " ", "+", " ", 
           RowBox[{
            SubscriptBox["\[Tau]", 
             RowBox[{"2", ",", "W"}]], "*", 
            RowBox[{"x", "^", "2"}]}]}], "]"}]}], ")"}]}], ";", "\n", "\t", 
      RowBox[{"tWDefinitionOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"modq", "[", 
          OverscriptBox[
           SubscriptBox["t", "W"], "^"], "]"}], " ", "==", " ", 
         RowBox[{"modq", "[", 
          RowBox[{
           OverscriptBox[
            SubscriptBox["l", "W"], "\[RightVector]"], ".", 
           OverscriptBox[
            SubscriptBox["r", "W"], "\[RightVector]"]}], "]"}]}], ")"}]}], 
      ";", "\n", "\t", 
      RowBox[{"Print", "[", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Expression\>\"", ",", "Bold"}], "]"}], ",", " ", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Type of Check\>\"", ",", "Bold"}], "]"}], ",", " ", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", 
           "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\[Pi]\>\"", ",", " ", "\"\<Permutation\>\"", ",", " ", 
             "\[Pi]"}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{"\"\<s\>\"", ",", " ", "\"\<Shift\>\"", ",", " ", "s"}], 
            "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(A\), \(W\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) <\!\(\*OverscriptBox[SubscriptBox[\(a\), \
\(L, W\)], \(\[RightVector]\)]\),\!\(\*OverscriptBox[\(g\), \
\(\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SubscriptBox[\(a\), \(R, W\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(h\), \(\[RightVector]\)]\)> + \
\!\(\*SubscriptBox[\(\[Alpha]\), \(W\)]\)h\>\"", ",", " ", 
             "\"\<Inspection\>\"", ",", " ", "AWInspectionOk"}], "}"}], ",", 
           "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(S\), \(W\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) <\!\(\*OverscriptBox[SubscriptBox[\(s\), \
\(L, W\)], \(\[RightVector]\)]\),\!\(\*OverscriptBox[\(g\), \
\(\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SubscriptBox[\(s\), \(R, W\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(h\), \(\[RightVector]\)]\)> + \
\!\(\*SubscriptBox[\(\[Beta]\), \(W\)]\)h\>\"", ",", " ", 
             "\"\<Inspection\>\"", ",", " ", "SWInspectionOk"}], "}"}], ",", 
           "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*OverscriptBox[\(h'\), \(\[RightVector]\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) s\[Pi](\!\(\*OverscriptBox[\(h\), \(\
\[RightVector]\)]\))\>\"", ",", " ", "\"\<Shifted permutation\>\"", ",", " ", 
             "hPrimePermutationOk"}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*OverscriptBox[\(b'\), \(\[RightVector]\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) s\[Pi](\!\(\*OverscriptBox[\(b\), \(\
\[RightVector]\)]\))\>\"", ",", " ", "\"\<Shifted permutation\>\"", ",", " ", 
             "bPrimePermutationOk"}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*OverscriptBox[\(c'\), \(\[RightVector]\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) s\[Pi](\!\(\*OverscriptBox[\(c\), \(\
\[RightVector]\)]\))\>\"", ",", " ", "\"\<Shifted permutation\>\"", ",", " ", 
             "cPrimePermutationOk"}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*OverscriptBox[\(d'\), \(\[RightVector]\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) s\[Pi](\!\(\*OverscriptBox[\(d\), \(\
\[RightVector]\)]\))\>\"", ",", " ", "\"\<Shifted permutation\>\"", ",", " ", 
             "dPrimePermutationOk"}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<V \!\(\*OverscriptBox[\(=\), \(?\)]\) sg\>\"", ",", " ", 
             "\"\<Inspection\>\"", ",", " ", "VInspectionOk"}], "}"}], ",", 
           "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<W \!\(\*OverscriptBox[\(=\), \(?\)]\) \
\!\(\*SuperscriptBox[\(s\), \(n\)]\)g + \!\(\*SubscriptBox[\(\[Sigma]\), \
\(W\)]\)h\>\"", ",", " ", "\"\<Inspection\>\"", ",", " ", "WInspectionOk"}], 
            "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*OverscriptBox[SubscriptBox[\(a\), \(R\)], \(\
\[RightVector]\)]\) :\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \
\!\(\*SuperscriptBox[\(s\[Pi]\), \(-1\)]\)(\!\(\*OverscriptBox[\(k\), \(\
\[RightVector]\)]\))\\n\!\(\*OverscriptBox[SubscriptBox[\(a\), \(L\)], \(\
\[RightVector]\)]\) :\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \
Multiplicative aggregation of \!\(\*OverscriptBox[SubscriptBox[\(a\), \(L\)], \
\(\[RightVector]\)]\) starting at 1\>\"", ",", " ", "SpanFromLeft", ",", " ", 
             "SpanFromLeft"}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\[Alpha]\>\"", ",", " ", "\"\<\>\"", ",", " ", "\[Alpha]"}], 
            "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\[Beta]\>\"", ",", " ", "\"\<\>\"", ",", " ", "\[Beta]"}], 
            "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(\[Rho]\), \(h\)]\)\>\"", ",", " ", 
             "\"\<\>\"", ",", " ", 
             SubscriptBox["\[Rho]", "h"]}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(\[Rho]\), \(b\)]\)\>\"", ",", " ", 
             "\"\<\>\"", ",", " ", 
             SubscriptBox["\[Rho]", "b"]}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(\[Rho]\), \(c\)]\)\>\"", ",", " ", 
             "\"\<\>\"", ",", " ", 
             SubscriptBox["\[Rho]", "c"]}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(\[Rho]\), \(d\)]\)\>\"", ",", " ", 
             "\"\<\>\"", ",", " ", 
             SubscriptBox["\[Rho]", "d"]}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*OverscriptBox[SubscriptBox[\(s\), \(L\)], \(\
\[RightVector]\)]\)\>\"", ",", " ", "\"\<\>\"", ",", " ", 
             OverscriptBox[
              SubscriptBox["s", "L"], "\[RightVector]"]}], "}"}], ",", "\n", 
           "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*OverscriptBox[SubscriptBox[\(s\), \(R\)], \(\
\[RightVector]\)]\)\>\"", ",", " ", "\"\<\>\"", ",", " ", 
             OverscriptBox[
              SubscriptBox["s", "R"], "\[RightVector]"]}], "}"}], ",", 
           "\[IndentingNewLine]", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(A\), \(L\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) <\!\(\*OverscriptBox[SubscriptBox[\(a\), \
\(L\)], \(\[RightVector]\)]\),\!\(\*OverscriptBox[\(g\), \
\(\[RightVector]\)]\)> + \[Alpha]h\>\"", ",", " ", "\"\<Inspection\>\"", ",", 
             " ", "ALInspectionOk"}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(S\), \(L\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) <\!\(\*OverscriptBox[SubscriptBox[\(s\), \
\(L\)], \(\[RightVector]\)]\),\!\(\*OverscriptBox[\(g\), \
\(\[RightVector]\)]\)> + \[Beta]h\>\"", ",", " ", "\"\<Inspection\>\"", ",", 
             " ", "SLInspectionOk"}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(S\), \(R, h\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) <\!\(\*OverscriptBox[SubscriptBox[\(s\), \
\(R\)], \(\[RightVector]\)]\),\!\(\*OverscriptBox[\(h\), \
\(\[RightVector]\)]\)> + \!\(\*SubscriptBox[\(\[Rho]\), \(h\)]\)h\>\"", ",", 
             " ", "\"\<Inspection\>\"", ",", " ", "SRhInspectionOk"}], "}"}], 
           ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(S\), \(R, b\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) <\!\(\*OverscriptBox[SubscriptBox[\(s\), \
\(R\)], \(\[RightVector]\)]\),\!\(\*OverscriptBox[\(b\), \
\(\[RightVector]\)]\)> + \!\(\*SubscriptBox[\(\[Rho]\), \(b\)]\)h\>\"", ",", 
             " ", "\"\<Inspection\>\"", ",", " ", "SRbInspectionOk"}], "}"}], 
           ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(S\), \(R, c\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) <\!\(\*OverscriptBox[SubscriptBox[\(s\), \
\(R\)], \(\[RightVector]\)]\),\!\(\*OverscriptBox[\(c\), \
\(\[RightVector]\)]\)> + \!\(\*SubscriptBox[\(\[Rho]\), \(c\)]\)h\>\"", ",", 
             " ", "\"\<Inspection\>\"", ",", " ", "SRcInspectionOk"}], "}"}], 
           ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(S\), \(R, d\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) <\!\(\*OverscriptBox[SubscriptBox[\(s\), \
\(R\)], \(\[RightVector]\)]\),\!\(\*OverscriptBox[\(d\), \
\(\[RightVector]\)]\)> + \!\(\*SubscriptBox[\(\[Rho]\), \(d\)]\)h\>\"", ",", 
             " ", "\"\<Inspection\>\"", ",", " ", "SRdInspectionOk"}], "}"}], 
           ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*OverscriptBox[SubscriptBox[\(l\), \(0\)], \(\
\[RightVector]\)]\) :\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \
\!\(\*OverscriptBox[SubscriptBox[\(a\), \(L\)], \(\[RightVector]\)]\) + \
\!\(\*SuperscriptBox[\(z\), \(3\)]\)\!\(\*OverscriptBox[SuperscriptBox[\(y\), \
\(-n\)], \(\[RightVector]\)]\)\\n\!\(\*OverscriptBox[SubscriptBox[\(l\), \
\(2\)], \(\[RightVector]\)]\) :\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \
\!\(\*OverscriptBox[SubscriptBox[\(s\), \(L\)], \
\(\[RightVector]\)]\)\\n\!\(\*OverscriptBox[SubscriptBox[\(r\), \(1\)], \(\
\[RightVector]\)]\) :\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \
\!\(\*OverscriptBox[SuperscriptBox[\(y\), \(n\)], \(\[RightVector]\)]\)\
\[SmallCircle]\!\(\*OverscriptBox[SubscriptBox[\(a\), \(R\)], \
\(\[RightVector]\)]\) - \!\(\*OverscriptBox[SubsuperscriptBox[\(y\), \(z\), \
\(n - 1\)], \(\[RightVector]\)]\)\\n\!\(\*OverscriptBox[SubscriptBox[\(r\), \
\(3\)], \(\[RightVector]\)]\) :\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \
\!\(\*OverscriptBox[SuperscriptBox[\(y\), \(n\)], \(\[RightVector]\)]\)\
\[SmallCircle]\!\(\*OverscriptBox[SubscriptBox[\(s\), \(R\)], \
\(\[RightVector]\)]\)\>\"", ",", " ", "SpanFromLeft", ",", " ", 
             "SpanFromLeft"}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(t\), \(3\)]\)\>\"", ",", " ", 
             "\"\<\>\"", ",", " ", 
             SubscriptBox["t", "3"]}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(3\)]\)\>\"", ",", " ", 
             "\"\<\>\"", ",", " ", 
             SubscriptBox["\[Tau]", "3"]}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(T\), \(3\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) \!\(\*SubscriptBox[\(gt\), \(3\)]\) + \
\!\(\*SubscriptBox[\(h\[Tau]\), \(3\)]\)\>\"", ",", " ", "\"\<Inspection\>\"",
              ",", " ", "T3InspectionOk"}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(t\), \(3\)]\) \
\!\(\*SubscriptBox[OverscriptBox[\(\[Congruent]\), \(?\)], \(q\)]\) \
<\!\(\*OverscriptBox[SubscriptBox[\(l\), \(0\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(r\), \(3\)], \(\
\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SubscriptBox[\(l\), \(2\)], \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(r\), \(1\)], \(\
\[RightVector]\)]\)>\>\"", ",", " ", "\"\<Definition\>\"", ",", " ", 
             "t3DefinitionOk"}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(t\), \(5\)]\)\>\"", ",", " ", 
             "\"\<\>\"", ",", " ", 
             SubscriptBox["t", "5"]}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(5\)]\)\>\"", ",", " ", 
             "\"\<\>\"", ",", " ", 
             SubscriptBox["\[Tau]", "5"]}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(T\), \(5\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) \!\(\*SubscriptBox[\(gt\), \(5\)]\) + \
\!\(\*SubscriptBox[\(h\[Tau]\), \(5\)]\)\>\"", ",", " ", "\"\<Inspection\>\"",
              ",", " ", "T5InspectionOk"}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(t\), \(5\)]\) \
\!\(\*SubscriptBox[OverscriptBox[\(\[Congruent]\), \(?\)], \(q\)]\) \
<\!\(\*OverscriptBox[SubscriptBox[\(l\), \(2\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(r\), \(3\)], \(\
\[RightVector]\)]\)>\>\"", ",", " ", "\"\<Definition\>\"", ",", " ", 
             "t5DefinitionOk"}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*OverscriptBox[SubscriptBox[\(l\), \(0, W\)], \(\
\[RightVector]\)]\) :\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \
\!\(\*OverscriptBox[SubscriptBox[\(a\), \(L, W\)], \(\[RightVector]\)]\) + \
z\!\(\*OverscriptBox[SuperscriptBox[\(y\), \(-n\)], \(\[RightVector]\)]\) + \
\!\(\*OverscriptBox[SuperscriptBox[\(w\), \(n\)], \(\[RightVector]\)]\) - \
\!\(\*OverscriptBox[SubsuperscriptBox[\(w\), \(0\), \(n - 1\)], \(\
\[RightVector]\)]\)\!\(\*SuperscriptBox[\(y\), \
\(-1\)]\)\\n\!\(\*OverscriptBox[SubscriptBox[\(l\), \(1, W\)], \(\
\[RightVector]\)]\) :\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \
\!\(\*OverscriptBox[SubscriptBox[\(s\), \(L, W\)], \(\[RightVector]\)]\)\\n\!\
\(\*OverscriptBox[SubscriptBox[\(r\), \(0, W\)], \(\[RightVector]\)]\) \
:\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \
\!\(\*OverscriptBox[SuperscriptBox[\(y\), \(n\)], \(\[RightVector]\)]\)\
\[SmallCircle]\!\(\*OverscriptBox[SubscriptBox[\(a\), \(R, W\)], \(\
\[RightVector]\)]\) - \!\(\*OverscriptBox[SubsuperscriptBox[\(y\), \(z\), \(n \
- 1\)], \(\[RightVector]\)]\)\\n\!\(\*OverscriptBox[SubscriptBox[\(r\), \(1, \
W\)], \(\[RightVector]\)]\) :\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \!\
\(\*OverscriptBox[SuperscriptBox[\(y\), \(n\)], \(\[RightVector]\)]\)\
\[SmallCircle]\!\(\*OverscriptBox[SubscriptBox[\(s\), \(R, W\)], \(\
\[RightVector]\)]\)\>\"", ",", " ", "SpanFromLeft", ",", " ", 
             "SpanFromLeft"}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(t\), \(1, W\)]\)\>\"", ",", " ", 
             "\"\<\>\"", ",", " ", 
             SubscriptBox["t", 
              RowBox[{"1", ",", "W"}]]}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(1, W\)]\)\>\"", ",", " ", 
             "\"\<\>\"", ",", " ", 
             SubscriptBox["\[Tau]", 
              RowBox[{"1", ",", "W"}]]}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(T\), \(1, W\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) \!\(\*SubscriptBox[\(gt\), \(1, W\)]\) + \
\!\(\*SubscriptBox[\(h\[Tau]\), \(1, W\)]\)\>\"", ",", " ", 
             "\"\<Inspection\>\"", ",", " ", "T1WInspectionOk"}], "}"}], ",", 
           "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(t\), \(1, W\)]\) \
\!\(\*SubscriptBox[OverscriptBox[\(\[Congruent]\), \(?\)], \(q\)]\) \
<\!\(\*OverscriptBox[SubscriptBox[\(l\), \(0, W\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(r\), \(1, W\)], \(\
\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SubscriptBox[\(l\), \(1, W\)], \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(r\), \(0, W\)], \(\
\[RightVector]\)]\)>\>\"", ",", " ", "\"\<Definition\>\"", ",", " ", 
             "t1WDefinitionOk"}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(t\), \(2, W\)]\)\>\"", ",", " ", 
             "\"\<\>\"", ",", " ", 
             SubscriptBox["t", 
              RowBox[{"2", ",", "W"}]]}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(2, W\)]\)\>\"", ",", " ", 
             "\"\<\>\"", ",", " ", 
             SubscriptBox["\[Tau]", 
              RowBox[{"2", ",", "W"}]]}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(T\), \(2, W\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) \!\(\*SubscriptBox[\(gt\), \(2, W\)]\) + \
\!\(\*SubscriptBox[\(h\[Tau]\), \(2, W\)]\)\>\"", ",", " ", 
             "\"\<Inspection\>\"", ",", " ", "T2WInspectionOk"}], "}"}], ",", 
           "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(t\), \(2, W\)]\) \
\!\(\*SubscriptBox[OverscriptBox[\(\[Congruent]\), \(?\)], \(q\)]\) \
<\!\(\*OverscriptBox[SubscriptBox[\(l\), \(1, W\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(r\), \(1, W\)], \(\
\[RightVector]\)]\)>\>\"", ",", " ", "\"\<Definition\>\"", ",", " ", 
             "t2WDefinitionOk"}], "}"}], ",", "\n", "\t\t", "lrRow", ",", 
           "\n", "\t\t", "lWrWRow", ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(\[Mu]\), \(h\)]\) \
\!\(\*SubscriptBox[OverscriptBox[\(\[Congruent]\), \(?\)], \(q\)]\) \[Alpha] \
+ \!\(\*SuperscriptBox[\(\[Beta]x\), \(2\)]\) + \
\!\(\*SubscriptBox[\(\[Rho]\), \(h\)]\)\!\(\*SuperscriptBox[\(x\), \(3\)]\)\>\
\"", ",", " ", "\"\<Definition\>\"", ",", " ", "muhDefinitionOk"}], "}"}], 
           ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(\[Mu]\), \(b\)]\) \
\!\(\*SubscriptBox[OverscriptBox[\(\[Congruent]\), \(?\)], \(q\)]\) \[Alpha] \
+ \!\(\*SuperscriptBox[\(\[Beta]x\), \(2\)]\) + \
\!\(\*SubscriptBox[\(\[Rho]\), \(b\)]\)\!\(\*SuperscriptBox[\(x\), \(3\)]\)\>\
\"", ",", " ", "\"\<Definition\>\"", ",", " ", "mubDefinitionOk"}], "}"}], 
           ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(\[Mu]\), \(c\)]\) \
\!\(\*SubscriptBox[OverscriptBox[\(\[Congruent]\), \(?\)], \(q\)]\) \[Alpha] \
+ \!\(\*SuperscriptBox[\(\[Beta]x\), \(2\)]\) + \
\!\(\*SubscriptBox[\(\[Rho]\), \(c\)]\)\!\(\*SuperscriptBox[\(x\), \(3\)]\)\>\
\"", ",", " ", "\"\<Definition\>\"", ",", " ", "mucDefinitionOk"}], "}"}], 
           ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(\[Mu]\), \(d\)]\) \
\!\(\*SubscriptBox[OverscriptBox[\(\[Congruent]\), \(?\)], \(q\)]\) \[Alpha] \
+ \!\(\*SuperscriptBox[\(\[Beta]x\), \(2\)]\) + \
\!\(\*SubscriptBox[\(\[Rho]\), \(d\)]\)\!\(\*SuperscriptBox[\(x\), \(3\)]\)\>\
\"", ",", " ", "\"\<Definition\>\"", ",", " ", "mudDefinitionOk"}], "}"}], 
           ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(x\)]\) \
\!\(\*SubscriptBox[OverscriptBox[\(\[Congruent]\), \(?\)], \(q\)]\) \
\!\(\*SubscriptBox[\(\[Sigma]\), \(W\)]\)\!\(\*SuperscriptBox[\(y\), \(n - \
1\)]\)\!\(\*OverscriptBox[\(k\), \(^\)]\)x + \!\(\*SubscriptBox[\(\[Tau]\), \
\(3\)]\)\!\(\*SuperscriptBox[\(x\), \(3\)]\) + \!\(\*SubscriptBox[\(\[Tau]\), \
\(5\)]\)\!\(\*SuperscriptBox[\(x\), \(5\)]\)\>\"", ",", " ", 
             "\"\<Definition\>\"", ",", " ", "tauxDefinitionOk"}], "}"}], ",",
            "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*OverscriptBox[\(t\), \(^\)]\) \
\!\(\*SubscriptBox[OverscriptBox[\(\[Congruent]\), \(?\)], \(q\)]\) \
<\!\(\*OverscriptBox[\(l\), \(\[RightVector]\)]\),\!\(\*OverscriptBox[\(r\), \
\(\[RightVector]\)]\)>\>\"", ",", " ", "\"\<Definition\>\"", ",", " ", 
             "tDefinitionOk"}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(x, W\)]\) \
\!\(\*SubscriptBox[OverscriptBox[\(\[Congruent]\), \(?\)], \(q\)]\) \
\!\(\*SubscriptBox[\(\[Sigma]\), \(W\)]\)\!\(\*SuperscriptBox[\(y\), \(n - \
1\)]\) + \!\(\*SubscriptBox[\(\[Tau]\), \(1, W\)]\)x + \!\(\*SubscriptBox[\(\
\[Tau]\), \(2, W\)]\)\!\(\*SuperscriptBox[\(x\), \(2\)]\)\>\"", ",", " ", 
             "\"\<Definition\>\"", ",", " ", "tauxWDefinitionOk"}], "}"}], 
           ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*OverscriptBox[SubscriptBox[\(t\), \(W\)], \(^\)]\) \
\!\(\*SubscriptBox[OverscriptBox[\(\[Congruent]\), \(?\)], \(q\)]\) \
<\!\(\*OverscriptBox[SubscriptBox[\(l\), \(W\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(r\), \(W\)], \(\
\[RightVector]\)]\)>\>\"", ",", " ", "\"\<Definition\>\"", ",", " ", 
             "tWDefinitionOk"}], "}"}]}], "\[IndentingNewLine]", "\t", "}"}], 
         ",", " ", 
         RowBox[{"Alignment", "->", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"Left", ",", "Left", ",", "Left"}], "}"}], "}"}]}], ",", 
         RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], ";", "\n", "\t", 
      "\n", "\t", 
      RowBox[{"success", " ", "=", " ", "False"}], ";", "\n", "\t", 
      RowBox[{"Which", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"!", "AWInspectionOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<AW\>\"", "]"}], ",", "\n", 
        "\t\t", 
        RowBox[{"!", "SWInspectionOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<SW\>\"", "]"}], ",", "\n", 
        "\t\t", 
        RowBox[{"!", "hPrimePermutationOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<Permutation of h'\>\"", "]"}], 
        ",", "\n", "\t\t", 
        RowBox[{"!", "bPrimePermutationOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<Permutation of b'\>\"", "]"}], 
        ",", "\n", "\t\t", 
        RowBox[{"!", "cPrimePermutationOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<Permutation of c'\>\"", "]"}], 
        ",", "\n", "\t\t", 
        RowBox[{"!", "dPrimePermutationOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<Permutation of d'\>\"", "]"}], 
        ",", "\n", "\t\t", 
        RowBox[{"!", "VInspectionOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<V\>\"", "]"}], ",", "\n", 
        "\t\t", 
        RowBox[{"!", "WInspectionOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<W\>\"", "]"}], ",", "\n", 
        "\t\t", 
        RowBox[{"!", "ALInspectionOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<AL\>\"", "]"}], ",", "\n", 
        "\t\t", 
        RowBox[{"!", "SLInspectionOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<SL\>\"", "]"}], ",", "\n", 
        "\t\t", 
        RowBox[{"!", "SRhInspectionOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<SRh\>\"", "]"}], ",", "\n", 
        "\t\t", 
        RowBox[{"!", "SRbInspectionOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<SRb\>\"", "]"}], ",", "\n", 
        "\t\t", 
        RowBox[{"!", "SRcInspectionOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<SRc\>\"", "]"}], ",", "\n", 
        "\t\t", 
        RowBox[{"!", "SRdInspectionOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<SRd\>\"", "]"}], ",", "\n", 
        "\t\t", 
        RowBox[{"!", "T3InspectionOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<T3\>\"", "]"}], ",", "\n", 
        "\t\t", 
        RowBox[{"!", "t3DefinitionOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<Definition of t3\>\"", "]"}], 
        ",", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"!", "T5InspectionOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<T5\>\"", "]"}], ",", "\n", 
        "\t\t", 
        RowBox[{"!", "t5DefinitionOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<Definition of t5\>\"", "]"}], 
        ",", "\n", "\t\t", 
        RowBox[{"!", "T1WInspectionOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<T1W\>\"", "]"}], ",", "\n", 
        "\t\t", 
        RowBox[{"!", "t1WDefinitionOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<Definition of t1W\>\"", "]"}], 
        ",", "\n", "\t\t", 
        RowBox[{"!", "T2WInspectionOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<T2W\>\"", "]"}], ",", "\n", 
        "\t\t", 
        RowBox[{"!", "t2WDefinitionOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<Definition of t2W\>\"", "]"}], 
        ",", "\n", "\t\t", 
        RowBox[{"!", "lDefinitionOk"}], ",", " ", 
        RowBox[{
        "InspectionFailed", "[", "\"\<Definition of l vector\>\"", "]"}], ",",
         "\n", "\t\t", 
        RowBox[{"!", "rDefinitionOk"}], ",", " ", 
        RowBox[{
        "InspectionFailed", "[", "\"\<Definition of r vector\>\"", "]"}], ",",
         "\n", "\t\t", 
        RowBox[{"!", "lWDefinitionOk"}], ",", " ", 
        RowBox[{
        "InspectionFailed", "[", "\"\<Definition of lW vector\>\"", "]"}], 
        ",", "\n", "\t\t", 
        RowBox[{"!", "rWDefinitionOk"}], ",", " ", 
        RowBox[{
        "InspectionFailed", "[", "\"\<Definitino of lR vector\>\"", "]"}], 
        ",", "\n", "\t\t", 
        RowBox[{"!", "muhDefinitionOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<Definition of muh\>\"", "]"}], 
        ",", "\n", "\t\t", 
        RowBox[{"!", "mubDefinitionOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<Definition of mub\>\"", "]"}], 
        ",", "\n", "\t\t", 
        RowBox[{"!", "mucDefinitionOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<Definition of muc\>\"", "]"}], 
        ",", "\n", "\t\t", 
        RowBox[{"!", "mudDefinitionOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<Definition of mud\>\"", "]"}], 
        ",", "\n", "\t\t", 
        RowBox[{"!", "tauxDefinitionOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<Definition of taux\>\"", "]"}], 
        ",", "\n", "\t\t", 
        RowBox[{"!", "tDefinitionOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<Definition of t\>\"", "]"}], 
        ",", "\n", "\t\t", 
        RowBox[{"!", "tauxWDefinitionOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<Definition of tauxW\>\"", "]"}],
         ",", "\n", "\t\t", 
        RowBox[{"!", "tWDefinitionOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<Definition of tW\>\"", "]"}], 
        ",", "\n", "\t\t", "True", ",", " ", 
        RowBox[{"success", " ", "=", " ", "True"}]}], "\n", "\t", "]"}], ";", 
      "\n", "\t", "success"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "useInnerProductProtocol"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{"fiatShamirSingleKernel", ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{
        "Print", "[", 
         "\"\<Can not send inspection requests in Single-Kernel mode. Done.\>\
\"", "]"}], ";"}], "\n", "\t", 
       RowBox[{"(*", "Else", "*)"}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{
        "StateMachineRestore", "[", "\"\<inner_product_argument_linear\>\"", 
         "]"}], ";", "\n", "\t\t", 
        RowBox[{"TellProver", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<_inspection_request_\>\"", "->", "True"}], "}"}], 
         "]"}], ";", "\n", "\t\t", 
        RowBox[{"inspectionReply", " ", "=", " ", 
         RowBox[{"WaitForVariable", "[", 
          RowBox[{"\"\<_inspection_reply\>\"", ",", "\"\<Prover\>\""}], 
          "]"}]}], ";", "\n", "\t\t", 
        RowBox[{"(*", 
         RowBox[{
         "Waiting", " ", "for", " ", "reply", " ", "until", " ", "timeout", 
          " ", "not", " ", "possible", " ", "in", " ", 
          RowBox[{"Mathematica", ":", "\n", "\t\t", 
           RowBox[{
           "Not", " ", "receiving", " ", "an", " ", "inspection", " ", 
            "reply", " ", "in", " ", "a", " ", "certain", " ", "amount", " ", 
            "of", " ", "time", "\n", "\t\t", "should", " ", "qualify", " ", 
            "as", " ", "dishonest", " ", "behaviour", " ", "of", " ", "the", 
            " ", 
            RowBox[{"prover", "."}]}]}]}], "*)"}], "\n", "\t\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
          "MultiKeyShuffleArgumentInspection", "[", "inspectionReply", "]"}], 
          ",", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"InspectionSucceeded", "[", "]"}], ";"}]}], "\n", "\t\t", 
         "]"}], ";"}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
     RowBox[{"FrontEndTokenExecute", "[", "\"\<EvaluatorAbort\>\"", "]"}], 
     ";"}]}], "\n", "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.89749605539012*^9, 3.89749612340412*^9}, {
   3.8976449892045107`*^9, 3.8976450017071247`*^9}, {3.897645037638028*^9, 
   3.897645039549782*^9}, {3.897645158453293*^9, 3.897645231364067*^9}, {
   3.8976453364856367`*^9, 3.897645344671064*^9}, {3.8976454539869432`*^9, 
   3.897645620126088*^9}, {3.897645681283065*^9, 3.897645803494607*^9}, {
   3.897645835010816*^9, 3.897645841711809*^9}, {3.897645957565742*^9, 
   3.897645964539648*^9}, {3.897646314278758*^9, 3.897646328008984*^9}, {
   3.897646548230957*^9, 3.8976465511652727`*^9}, {3.897646942104744*^9, 
   3.897647218650111*^9}, {3.897647640444747*^9, 3.897647663346694*^9}, {
   3.897647761830962*^9, 3.897647766353219*^9}, {3.8976482639791813`*^9, 
   3.897648306493622*^9}, {3.8976662907112703`*^9, 3.897666375435577*^9}, {
   3.8976664643240757`*^9, 3.8976665020244102`*^9}, {3.897666535694997*^9, 
   3.897666835802238*^9}, {3.897666913496751*^9, 3.8976669248282747`*^9}, {
   3.897666958986991*^9, 3.8976670531894293`*^9}, {3.8976746783698072`*^9, 
   3.8976746911128187`*^9}, {3.897674822635141*^9, 3.897674823085627*^9}, {
   3.8979887537889357`*^9, 3.897988761700921*^9}, {3.897988859792611*^9, 
   3.8979889436366997`*^9}, {3.898004394322976*^9, 3.8980043981355057`*^9}, {
   3.898005147200386*^9, 3.898005147752792*^9}, {3.898005215400688*^9, 
   3.898005241086994*^9}, {3.8980053640032034`*^9, 3.89800539864283*^9}, {
   3.898005457065101*^9, 3.898005464336458*^9}, {3.8980055427524214`*^9, 
   3.898005555202362*^9}, {3.898005587443965*^9, 3.898005643519696*^9}, {
   3.8980057007173176`*^9, 3.898005766804034*^9}, {3.898005818791082*^9, 
   3.8980059044890428`*^9}, {3.8980059353490267`*^9, 
   3.8980059436199856`*^9}, {3.8980060092575383`*^9, 
   3.8980062532612867`*^9}, {3.898006331675621*^9, 3.8980063724536085`*^9}, {
   3.8980064113397713`*^9, 3.8980064535734205`*^9}, {3.8980065362700367`*^9, 
   3.898006574160293*^9}, {3.8980067774443755`*^9, 3.8980069905149584`*^9}, {
   3.8980070215847435`*^9, 3.898007077981879*^9}, {3.8980071113248777`*^9, 
   3.8980071632480555`*^9}, {3.898007206805476*^9, 3.8980075192363763`*^9}, {
   3.8980075504083195`*^9, 3.8980076027749195`*^9}, {3.898007667657324*^9, 
   3.8980077315812583`*^9}, 3.898009372342673*^9, {3.8980094074280243`*^9, 
   3.8980096191943903`*^9}, {3.8980099108232255`*^9, 3.898009913821167*^9}, {
   3.8980100051192665`*^9, 3.898010008164596*^9}, {3.8980103085087285`*^9, 
   3.8980103390747185`*^9}, {3.8980103756176863`*^9, 
   3.8980104881850834`*^9}, {3.898010543180558*^9, 3.8980105815089436`*^9}, {
   3.898010872619603*^9, 3.898010973668086*^9}, {3.8980110148458276`*^9, 
   3.89801104262901*^9}, {3.898011073730933*^9, 3.8980112714160604`*^9}, {
   3.8980114499542265`*^9, 3.8980114890328197`*^9}, {3.898083265599705*^9, 
   3.8980832722800226`*^9}, {3.8980841342671423`*^9, 
   3.8980841469928718`*^9}, {3.8980842144668055`*^9, 3.898084235998457*^9}, {
   3.8980843340674505`*^9, 3.8980843451456785`*^9}, {3.898084401250619*^9, 
   3.89808440661627*^9}, {3.8982011807767982`*^9, 3.8982012101187906`*^9}, {
   3.898331220175688*^9, 3.8983313372969913`*^9}, {3.898331374784997*^9, 
   3.898331389222475*^9}, {3.898333146401273*^9, 3.898333218636733*^9}, {
   3.8983332531757145`*^9, 3.8983333086948967`*^9}, {3.8983333718265676`*^9, 
   3.8983336343655667`*^9}, {3.898333681118049*^9, 3.8983338038705463`*^9}, {
   3.8983343005581484`*^9, 3.8983343183711295`*^9}, {3.8983343514581137`*^9, 
   3.898334450318947*^9}, 3.898334485786335*^9, {3.898334578085429*^9, 
   3.898334727701545*^9}, {3.8983353905315447`*^9, 3.8983353951380644`*^9}, {
   3.898335728833754*^9, 3.8983358133641977`*^9}, {3.8983358495449257`*^9, 
   3.898335940576861*^9}, {3.898336044674441*^9, 3.8983361289786854`*^9}, {
   3.898336175947033*^9, 3.898336331512184*^9}, {3.8983364024310875`*^9, 
   3.8983366242808895`*^9}, {3.8983366702868443`*^9, 3.898336738423398*^9}, {
   3.898336858006651*^9, 3.8983370306463385`*^9}, {3.898337065632691*^9, 
   3.898337189171817*^9}, {3.8983372272178316`*^9, 3.898337227265587*^9}, {
   3.898342549158666*^9, 3.8983426604819374`*^9}, {3.898342810652993*^9, 
   3.898342844671835*^9}, {3.898342875728092*^9, 3.8983428763167734`*^9}, {
   3.8983429279319468`*^9, 3.898342928122208*^9}, {3.8983447113630333`*^9, 
   3.898344883519326*^9}, 3.8983630298121543`*^9, 3.898365744873839*^9, 
   3.8983661135444813`*^9, {3.8990248437720413`*^9, 3.8990248747805367`*^9}, {
   3.8990249522119474`*^9, 3.8990250097275515`*^9}, {3.899025101309795*^9, 
   3.8990253149712152`*^9}, {3.899025396645621*^9, 3.899025402583134*^9}, {
   3.8990254931820326`*^9, 3.8990257244969225`*^9}, {3.8990257671982737`*^9, 
   3.8990260633635845`*^9}, {3.899026108215966*^9, 3.899026325119193*^9}, {
   3.8990263930826793`*^9, 3.8990265841741576`*^9}, {3.89902662849111*^9, 
   3.8990268512481117`*^9}, {3.8990269231299553`*^9, 
   3.8990270751090193`*^9}, {3.899027111005454*^9, 3.899027281115794*^9}, 
   3.8990276362064133`*^9, {3.899265517476679*^9, 3.8992655821835594`*^9}, {
   3.899387139237425*^9, 3.899387185056945*^9}, {3.91129573737327*^9, 
   3.9112957467052*^9}, {3.911405372917204*^9, 3.911405460661081*^9}, {
   3.9114054997982616`*^9, 3.9114056209577613`*^9}},
 CellLabel->
  "In[224]:=",ExpressionUUID->"f4ed0b57-ea37-439f-bee6-0e9b0208d6e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Inner Product Protocol", "Section",
 CellChangeTimes->{{3.887086871269492*^9, 
  3.8870868743164673`*^9}},ExpressionUUID->"433c6f52-4fdf-4831-8ee0-\
ec47893173ad"],

Cell[CellGroupData[{

Cell["Set up vectors and variables for successive halving", "Subsection",
 CellChangeTimes->{{3.887357350739726*^9, 3.8873573617199326`*^9}, 
   3.8873606614829097`*^9},ExpressionUUID->"76fff703-4444-45ba-9400-\
c64e189ea46f"],

Cell[TextData[{
 "Pad ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["g", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "f9cf7a6e-93e6-4f1c-8dc3-ac5bccbca5bb"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SuperscriptBox["h", "*"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"d1738a6d-8f87-40df-bc8b-08a674167df6"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SuperscriptBox["b", "*"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"38d1e6fb-66cd-48a4-99fa-dec44d01a4d8"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SuperscriptBox["c", "*"], "\[RightVector]"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "86dc3b65-0c3f-4924-b804-3bed848e8dd1"],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SuperscriptBox["d", "*"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"eca7d888-8ed8-4a22-9667-636b2591d513"],
 " such that their lengths become a power of two, resulting in the vectors ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["G", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "5e446399-3342-453d-999d-825bdfbe3496"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["H", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "c5f4080c-b8b5-4720-9fd1-cc0ec9c85fbe"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["B", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "8ccfd8aa-91d6-4840-8579-1732d3c96fac"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["C", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "5e597072-1bf1-495e-a5a5-54162de63379"],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["D", "\[RightVector]"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "04f49baf-135d-4cdc-8fc5-9567d836536b"],
 ". Pad vectors of scalars with zeros and vectors of elliptic curve points \
with points at infinity. ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["b", "\[RightVector]"], TraditionalForm]],
  FontSlant->"Italic",ExpressionUUID->
  "161ede82-dcca-4d24-9bfd-c598ca35b240"],
 StyleBox[" has a name collission with the randomizers of the ElGamal \
ciphertexts. Thus, ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   OverscriptBox["a", "\[RightVector]"], TraditionalForm]],
  FontSlant->"Italic",ExpressionUUID->
  "92fc76d9-2b8d-490b-ab63-960331aadbf1"],
 StyleBox[" and ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   OverscriptBox["b", "\[RightVector]"], TraditionalForm]],
  InitializationCell->True,
  FontSlant->"Italic",ExpressionUUID->
  "3eb3a4f4-709b-4d83-afe5-4ba165def45c"],
 StyleBox[" are indexed with \
\[OpenCurlyDoubleQuote]IP\[CloseCurlyDoubleQuote] in the code.",
  FontSlant->"Italic"],
 "\nDefine ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["P", 
      RowBox[{"{", 
       RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}], "'"], ":=", 
     RowBox[{
      RowBox[{
       SubscriptBox["A", "L"], "+", 
       RowBox[{
        SubscriptBox["A", 
         RowBox[{"R", ",", 
          RowBox[{"{", 
           RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]}]], "x"}], "+", 
       
       RowBox[{
        SubscriptBox["S", "L"], 
        SuperscriptBox["x", "2"]}], "+", 
       RowBox[{
        SubscriptBox["S", 
         RowBox[{"R", ",", 
          RowBox[{"{", 
           RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]}]], 
        SuperscriptBox["x", "3"]}], "+"}], "<", 
      OverscriptBox["g", "\[RightVector]"]}]}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["z", "3"], 
      OverscriptBox[
       SuperscriptBox["y", 
        RowBox[{"-", "n"}]], "\[RightVector]"]}], ">", 
     RowBox[{"+", 
      RowBox[{"<", 
       OverscriptBox[
        SuperscriptBox[
         RowBox[{"{", 
          RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}], "*"], 
        "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "x"}], 
      OverscriptBox[
       SubsuperscriptBox["y", "z", 
        RowBox[{"n", "-", "1"}]], "\[RightVector]"]}], ">", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["\[Mu]", 
         RowBox[{"{", 
          RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]]}], "h"}], "+", 
      RowBox[{
       OverscriptBox["t", "^"], 
       SuperscriptBox["g", "'"]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "86edcde3-1f16-4062-ba72-2c0d3e6f4727"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["P", "W", "'"], ":=", 
     RowBox[{
      RowBox[{
       SubscriptBox["A", "W"], "+", 
       RowBox[{
        SubscriptBox["S", "W"], "x"}], "+"}], "<", 
      OverscriptBox["g", "\[RightVector]"]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"z", 
       OverscriptBox[
        SuperscriptBox["y", 
         RowBox[{"-", "n"}]], "\[RightVector]"]}], "+", 
      OverscriptBox[
       SuperscriptBox["w", "n"], "\[RightVector]"], "-", 
      RowBox[{
       OverscriptBox[
        SubsuperscriptBox["w", "0", 
         RowBox[{"n", "-", "1"}]], "\[RightVector]"], 
       SuperscriptBox["y", 
        RowBox[{"-", "1"}]]}]}], ">", 
     RowBox[{"+", 
      RowBox[{"<", 
       OverscriptBox[
        SuperscriptBox["h", "*"], "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     RowBox[{"-", 
      OverscriptBox[
       SubsuperscriptBox["y", "z", 
        RowBox[{"n", "-", "1"}]], "\[RightVector]"]}], ">", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["\[Mu]", "W"]}], "h"}], "+", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["t", "W"], "^"], 
       SuperscriptBox["g", "'"]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "5a4644d6-af02-45a8-b4d5-7a38b06e1db5"],
 ".\n",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["P", 
    RowBox[{"{", 
     RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}], "'"], 
   TraditionalForm]],ExpressionUUID->"c27b79ad-6700-484c-85eb-913e16a2d7a4"],
 " is equivalent to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"<", 
     OverscriptBox["a", "\[RightVector]"]}], ",", 
    RowBox[{
     OverscriptBox["G", "\[RightVector]"], ">", 
     RowBox[{"+", 
      RowBox[{"<", 
       OverscriptBox["b", "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     OverscriptBox[
      RowBox[{"{", 
       RowBox[{"H", ",", "B", ",", "C", ",", "D"}], "}"}], "\[RightVector]"], 
     ">", 
     RowBox[{"+", 
      RowBox[{"<", 
       OverscriptBox["a", "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     RowBox[{
      OverscriptBox["b", "\[RightVector]"], ">", 
      SuperscriptBox["g", "'"]}], "=", 
     RowBox[{"<", 
      OverscriptBox["l", "\[RightVector]"]}]}], ",", 
    RowBox[{
     OverscriptBox["g", "\[RightVector]"], ">", 
     RowBox[{"+", 
      RowBox[{"<", 
       OverscriptBox["r", "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     OverscriptBox[
      SuperscriptBox[
       RowBox[{"{", 
        RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}], "*"], 
      "\[RightVector]"], ">", 
     RowBox[{"+", 
      RowBox[{"<", 
       OverscriptBox["l", "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     OverscriptBox["r", "\[RightVector]"], ">", 
     SuperscriptBox["g", "'"]}]}], TraditionalForm]],ExpressionUUID->
  "4fb4755c-d002-4291-928b-e31c2f32e878"],
 "\nand ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["P", "W", "'"], TraditionalForm]],ExpressionUUID->
  "82c42d56-fc55-4f5c-b0d8-9e8a613adcbb"],
 " is equivalent to",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"<", 
     OverscriptBox[
      SubscriptBox["a", "W"], "\[RightVector]"]}], ",", 
    RowBox[{
     OverscriptBox["G", "\[RightVector]"], ">", 
     RowBox[{"+", 
      RowBox[{"<", 
       OverscriptBox[
        SubscriptBox["b", "W"], "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     OverscriptBox["H", "\[RightVector]"], ">", 
     RowBox[{"+", 
      RowBox[{"<", 
       OverscriptBox[
        SubscriptBox["a", "W"], "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     RowBox[{
      OverscriptBox[
       SubscriptBox["b", "W"], "\[RightVector]"], ">", 
      SuperscriptBox["g", "'"]}], "=", 
     RowBox[{"<", 
      OverscriptBox[
       SubscriptBox["l", "W"], "\[RightVector]"]}]}], ",", 
    RowBox[{
     OverscriptBox["g", "\[RightVector]"], ">", 
     RowBox[{"+", 
      RowBox[{"<", 
       OverscriptBox[
        SubscriptBox["r", "W"], "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     OverscriptBox[
      SuperscriptBox["h", "*"], "\[RightVector]"], ">", 
     RowBox[{"+", 
      RowBox[{"<", 
       OverscriptBox[
        SubscriptBox["l", "W"], "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["r", "W"], "\[RightVector]"], ">", 
     SuperscriptBox["g", "'"]}]}], TraditionalForm]],ExpressionUUID->
  "1b945cd0-6711-43ad-b052-87c02e86e56c"],
 " but only the prover can calculate ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["P", 
    RowBox[{"{", 
     RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}], "'"], 
   TraditionalForm]],ExpressionUUID->"14df8181-9491-4104-9643-896b530c6558"],
 " this way. Iteratively adding up those and all \
\[OpenCurlyDoubleQuote]halved\[CloseCurlyDoubleQuote] versions of ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["P", 
    RowBox[{"{", 
     RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}], "'"], 
   TraditionalForm]],ExpressionUUID->"62fccb6a-fea1-4503-996e-3bb0fc7508e2"],
 " (which are yet to be calculated) is the central part of the inner product \
protocol which ensures the correctness of the inner product after \
verification."
}], "Text",
 CellChangeTimes->{{3.887357379459354*^9, 3.8873574567262087`*^9}, {
   3.88735749941459*^9, 3.887357499415588*^9}, {3.8873575627007065`*^9, 
   3.887357563588726*^9}, {3.8873578406319375`*^9, 3.8873579148041835`*^9}, {
   3.8873580084901733`*^9, 3.8873580240218954`*^9}, {3.887358078704522*^9, 
   3.8873581957115545`*^9}, 3.8873582640605116`*^9, {3.8873583097713585`*^9, 
   3.887358378996872*^9}, {3.887358431523488*^9, 3.8873584424674854`*^9}, {
   3.8873589223127584`*^9, 3.8873589440557127`*^9}, {3.8873589893827915`*^9, 
   3.88735901942185*^9}, {3.887359060917059*^9, 3.8873591239763355`*^9}, {
   3.8873591763591595`*^9, 3.887359177135214*^9}, {3.8873592320533123`*^9, 
   3.887359431236473*^9}, {3.887359483588916*^9, 3.887359625808216*^9}, 
   3.887360545284938*^9, 3.8873606184359303`*^9, 3.8873617684496675`*^9, {
   3.8983373545922165`*^9, 3.8983373628550615`*^9}, {3.8992924105335636`*^9, 
   3.8992924860713277`*^9}, {3.899292628204753*^9, 3.8992927440582094`*^9}, {
   3.8992927850484624`*^9, 3.8992929149664693`*^9}, {3.9114056313118553`*^9, 
   3.9114056942867785`*^9}},ExpressionUUID->"c6ed4282-f2ec-428c-b406-\
6726c4c72a61"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
   "StateMachineRestore", "[", "\"\<mk_shuffle_argument_check\>\"", "]"}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["n", "pow2"], " ", "=", " ", 
    RowBox[{"2", "^", 
     RowBox[{"Ceiling", "[", 
      RowBox[{"Log2", "[", "n", "]"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"pad", " ", "vectors"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox["G", "\[RightVector]"], " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      OverscriptBox["g", "\[RightVector]"], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", 
        RowBox[{"Min", "[", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["n", "pow2"], ",", "n"}], "}"}], "]"}]}], "]"}], 
      "]"}], ",", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{"\[Infinity]", ",", "\[Infinity]"}], "]"}], ",", 
       RowBox[{"Max", "[", 
        RowBox[{"0", ",", 
         RowBox[{
          SubscriptBox["n", "pow2"], "-", "n"}]}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox["H", "\[RightVector]"], " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      OverscriptBox[
       SuperscriptBox["h", "*"], "\[RightVector]"], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", 
        RowBox[{"Min", "[", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["n", "pow2"], ",", "n"}], "}"}], "]"}]}], "]"}], 
      "]"}], ",", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{"\[Infinity]", ",", "\[Infinity]"}], "]"}], ",", 
       RowBox[{"Max", "[", 
        RowBox[{"0", ",", 
         RowBox[{
          SubscriptBox["n", "pow2"], "-", "n"}]}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox["B", "\[RightVector]"], " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      OverscriptBox[
       SuperscriptBox["b", "*"], "\[RightVector]"], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", 
        RowBox[{"Min", "[", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["n", "pow2"], ",", "n"}], "}"}], "]"}]}], "]"}], 
      "]"}], ",", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{"\[Infinity]", ",", "\[Infinity]"}], "]"}], ",", 
       RowBox[{"Max", "[", 
        RowBox[{"0", ",", 
         RowBox[{
          SubscriptBox["n", "pow2"], "-", "n"}]}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox["C", "\[RightVector]"], " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      OverscriptBox[
       SuperscriptBox["c", "*"], "\[RightVector]"], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", 
        RowBox[{"Min", "[", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["n", "pow2"], ",", "n"}], "}"}], "]"}]}], "]"}], 
      "]"}], ",", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{"\[Infinity]", ",", "\[Infinity]"}], "]"}], ",", 
       RowBox[{"Max", "[", 
        RowBox[{"0", ",", 
         RowBox[{
          SubscriptBox["n", "pow2"], "-", "n"}]}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    OverscriptBox["D", "\[RightVector]"], " ", "=", " ", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{
       OverscriptBox[
        SuperscriptBox["d", "*"], "\[RightVector]"], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", 
         RowBox[{"Min", "[", 
          RowBox[{"{", 
           RowBox[{
            SubscriptBox["n", "pow2"], ",", "n"}], "}"}], "]"}]}], "]"}], 
       "]"}], ",", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{
        RowBox[{"ecPnt", "[", 
         RowBox[{"\[Infinity]", ",", "\[Infinity]"}], "]"}], ",", 
        RowBox[{"Max", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           SubscriptBox["n", "pow2"], "-", "n"}]}], "]"}]}], "]"}]}], "]"}]}],
    ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   SubsuperscriptBox["P", "h", "'"], " ", "=", " ", 
   RowBox[{
    SubsuperscriptBox["P", "h", "+"], " ", "-", " ", 
    RowBox[{
     SubscriptBox["\[Mu]", "h"], "*", "h"}], " ", "+", " ", 
    RowBox[{
     OverscriptBox["t", "^"], "*", 
     SuperscriptBox["g", "'"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubsuperscriptBox["P", "b", "'"], " ", "=", " ", 
   RowBox[{
    SubsuperscriptBox["P", "b", "+"], " ", "-", " ", 
    RowBox[{
     SubscriptBox["\[Mu]", "b"], "*", "h"}], " ", "+", " ", 
    RowBox[{
     OverscriptBox["t", "^"], "*", 
     SuperscriptBox["g", "'"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubsuperscriptBox["P", "c", "'"], " ", "=", " ", 
   RowBox[{
    SubsuperscriptBox["P", "c", "+"], " ", "-", " ", 
    RowBox[{
     SubscriptBox["\[Mu]", "c"], "*", "h"}], " ", "+", " ", 
    RowBox[{
     OverscriptBox["t", "^"], "*", 
     SuperscriptBox["g", "'"]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubsuperscriptBox["P", "d", "'"], " ", "=", " ", 
   RowBox[{
    SubsuperscriptBox["P", "d", "+"], " ", "-", " ", 
    RowBox[{
     SubscriptBox["\[Mu]", "d"], "*", "h"}], " ", "+", " ", 
    RowBox[{
     OverscriptBox["t", "^"], "*", 
     SuperscriptBox["g", "'"]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubsuperscriptBox["P", "W", "'"], " ", "=", " ", 
    RowBox[{
     SubsuperscriptBox["P", "W", "+"], " ", "-", " ", 
     RowBox[{
      SubscriptBox["\[Mu]", "W"], "*", "h"}], " ", "+", " ", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["t", "W"], "^"], "*", 
      SuperscriptBox["g", "'"]}]}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Keep", " ", "track", " ", "of", " ", "different", " ", "versions", " ", 
     "of", " ", 
     OverscriptBox["G", "\[RightVector]"]}], ",", " ", 
    OverscriptBox["H", "\[RightVector]"], ",", " ", 
    OverscriptBox["B", "\[RightVector]"], ",", " ", 
    OverscriptBox["C", "\[RightVector]"], ",", " ", 
    OverscriptBox["D", "\[RightVector]"], ",", " ", 
    RowBox[{"and", " ", 
     SubsuperscriptBox["P", 
      RowBox[{"{", 
       RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}], "'"], 
     " ", "throughout", " ", "halving", " ", "steps"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["G", "2"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"{", 
    OverscriptBox["G", "\[RightVector]"], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["H", "2"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"{", 
    OverscriptBox["H", "\[RightVector]"], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["B", "2"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"{", 
    OverscriptBox["B", "\[RightVector]"], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["C", "2"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"{", 
    OverscriptBox["C", "\[RightVector]"], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["D", "2"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"{", 
    OverscriptBox["D", "\[RightVector]"], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"2", ",", "h"}]], " ", "=", " ", 
   RowBox[{"{", 
    SubsuperscriptBox["P", "h", "'"], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"2", ",", "b"}]], " ", "=", " ", 
   RowBox[{"{", 
    SubsuperscriptBox["P", "b", "'"], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"2", ",", "c"}]], " ", "=", " ", 
   RowBox[{"{", 
    SubsuperscriptBox["P", "c", "'"], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"2", ",", "d"}]], " ", "=", " ", 
   RowBox[{"{", 
    SubsuperscriptBox["P", "d", "'"], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"2", ",", "W"}]], " ", "=", " ", 
    RowBox[{"{", 
     SubsuperscriptBox["P", "W", "'"], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(n\), \(pow2\)]\) := \
\!\(\*SuperscriptBox[\(2\), \(\[LeftCeiling]\*SubscriptBox[\(log\), \(2\)] n\
\[RightCeiling]\)]\)\>\"", ",", 
         "\"\<Smallest power of 2\\ngreater than\\nor equal to n\>\"", ",", 
         SubscriptBox["n", "pow2"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(G\), \(\[RightVector]\)]\) := padded \
\!\(\*OverscriptBox[\(g\), \(\[RightVector]\)]\)\>\"", ",", "\"\<\>\"", ",", 
         OverscriptBox["G", "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(H\), \(\[RightVector]\)]\) := padded \
\!\(\*OverscriptBox[SuperscriptBox[\(h\), \(*\)], \(\[RightVector]\)]\)\>\"", 
         ",", "\"\<\>\"", ",", 
         OverscriptBox["H", "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(B\), \(\[RightVector]\)]\) := padded \
\!\(\*OverscriptBox[SuperscriptBox[\(b\), \(*\)], \(\[RightVector]\)]\)\>\"", 
         ",", "\"\<\>\"", ",", 
         OverscriptBox["B", "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(C\), \(\[RightVector]\)]\) := padded \
\!\(\*OverscriptBox[SuperscriptBox[\(c\), \(*\)], \(\[RightVector]\)]\)\>\"", 
         ",", "\"\<\>\"", ",", 
         OverscriptBox["C", "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(D\), \(\[RightVector]\)]\) := padded \
\!\(\*OverscriptBox[SuperscriptBox[\(d\), \(*\)], \(\[RightVector]\)]\)\>\"", 
         ",", "\"\<\>\"", ",", 
         OverscriptBox["D", "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubsuperscriptBox[\(P\), \({h, b, c, d}\), \('\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) \!\(\*SubsuperscriptBox[\(P\), \({h, b, \
c, d}\), \(+\)]\) - \!\(\*SubscriptBox[\(\[Mu]\), \({h, b, c, d}\)]\)h + \!\(\
\*OverscriptBox[\(t\), \(^\)]\)\!\(\*SuperscriptBox[\(g\), \('\)]\)\>\"", 
         ",", "\"\<Combination of\\nShuffle Proof\\nConditions Based\\non \
\!\(\*OverscriptBox[\(h\), \(\[RightVector]\)]\), \!\(\*OverscriptBox[\(b\), \
\(\[RightVector]\)]\), \!\(\*OverscriptBox[\(c\), \(\[RightVector]\)]\) resp. \
\!\(\*OverscriptBox[\(d\), \(\[RightVector]\)]\)\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           SubsuperscriptBox["P", "h", "'"], ",", 
           SubsuperscriptBox["P", "b", "'"], ",", 
           SubsuperscriptBox["P", "c", "'"], ",", 
           SubsuperscriptBox["P", "d", "'"]}], "}"}]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubsuperscriptBox[\(P\), \(W\), \('\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) \!\(\*SubsuperscriptBox[\(P\), \(W\), \(+\
\)]\) - \!\(\*SubscriptBox[\(\[Mu]\), \(W\)]\)h + \
\!\(\*OverscriptBox[SubscriptBox[\(t\), \(W\)], \(^\)]\)\!\(\*SuperscriptBox[\
\(g\), \('\)]\)\>\"", ",", "\"\<Combination of\\nPR Proof Conditions\>\"", 
         ",", 
         SubsuperscriptBox["P", "W", "'"]}], "}"}]}], "\[IndentingNewLine]", 
      "}"}], ",", " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left"}], "}"}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "interactive"}], ",", 
    RowBox[{"Print", "[", 
     RowBox[{"FiatShamirGrid", "[", "]"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"CommunicationCostGrid", "[", "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ProcessNewMessages", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"StateMachineSave", "[", "\"\<inner_product_setup\>\"", "]"}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"!", "interactive"}], " ", "&&", " ", 
     RowBox[{"!", "fiatShamirCheckOk"}]}], ",", " ", 
    RowBox[{
    "VerificationFailed", "[", "\"\<Fiat-Shamir check on u'\>\"", "]"}]}], 
   "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.880176997903616*^9, 3.880177006815494*^9}, {
   3.88017896451156*^9, 3.88017897379574*^9}, 3.8801812255268908`*^9, {
   3.880181398353156*^9, 3.880181409762622*^9}, {3.8801814426434183`*^9, 
   3.8801814448432198`*^9}, {3.8801814990585814`*^9, 3.88018152758603*^9}, {
   3.8801815636756353`*^9, 3.8801816216774073`*^9}, {3.880181656820722*^9, 
   3.88018170762073*^9}, {3.880181759815432*^9, 3.8801819014837627`*^9}, {
   3.880181996944119*^9, 3.880182167698957*^9}, {3.880182274996242*^9, 
   3.8801823269121304`*^9}, {3.880182706176051*^9, 3.8801827740634737`*^9}, {
   3.880182990078308*^9, 3.880182991308283*^9}, {3.880183036037154*^9, 
   3.880183071447262*^9}, {3.880183104699847*^9, 3.880183120359179*^9}, {
   3.8801834476002283`*^9, 3.880183513678368*^9}, {3.880183745679297*^9, 
   3.88018377881312*^9}, {3.880183841040388*^9, 3.8801841825449057`*^9}, {
   3.8801842250955544`*^9, 3.8801843055090647`*^9}, {3.8801843828594303`*^9, 
   3.880184824547505*^9}, {3.880184862608967*^9, 3.880184863164784*^9}, {
   3.8801850466377897`*^9, 3.880185051128821*^9}, {3.880314158182897*^9, 
   3.880314170219771*^9}, {3.880316282721386*^9, 3.880316335401243*^9}, {
   3.8803172732900963`*^9, 3.8803172934544353`*^9}, {3.8803175748219748`*^9, 
   3.880317577639402*^9}, {3.88031865613377*^9, 3.880318656810638*^9}, {
   3.880444837210267*^9, 3.880444837705865*^9}, {3.881422219123683*^9, 
   3.8814222521848583`*^9}, {3.8814225422954884`*^9, 3.881422619926873*^9}, {
   3.881422652701913*^9, 3.881423007151497*^9}, {3.881423047558651*^9, 
   3.881423144880308*^9}, {3.881423293831607*^9, 3.881423304960064*^9}, {
   3.8826207770940037`*^9, 3.882620777834773*^9}, {3.882620824405415*^9, 
   3.8826208248545856`*^9}, {3.882621101812855*^9, 3.882621108134468*^9}, {
   3.8826213333224487`*^9, 3.882621454705687*^9}, {3.8826215250924883`*^9, 
   3.882621612177423*^9}, {3.882623153225078*^9, 3.882623156897641*^9}, {
   3.8826234746352863`*^9, 3.882623572637047*^9}, {3.882623606437666*^9, 
   3.882623612843706*^9}, 3.882623700627502*^9, {3.882623731404642*^9, 
   3.8826237659053392`*^9}, {3.882623897776725*^9, 3.882623932913796*^9}, {
   3.882624075106051*^9, 3.8826240874212503`*^9}, {3.8826241186495256`*^9, 
   3.882624133425355*^9}, {3.882624174196127*^9, 3.8826242777086163`*^9}, 
   3.882624474736305*^9, {3.882624517758301*^9, 3.882624650784144*^9}, {
   3.882624697211668*^9, 3.882624697562608*^9}, {3.8826247379087276`*^9, 
   3.882624783764133*^9}, {3.882624871989564*^9, 3.882625251659041*^9}, {
   3.882625286258099*^9, 3.882625399601571*^9}, {3.88262542975965*^9, 
   3.8826254672898407`*^9}, {3.8826254980364237`*^9, 
   3.8826256446287537`*^9}, {3.88262568391854*^9, 3.8826258936206007`*^9}, {
   3.882625992130237*^9, 3.882626320924451*^9}, {3.882626417780987*^9, 
   3.8826264637620287`*^9}, {3.8826265265597563`*^9, 3.882626853849914*^9}, {
   3.882627265815353*^9, 3.882627268118409*^9}, {3.8826273201629*^9, 
   3.882627380204967*^9}, {3.882627431934901*^9, 3.882627505730157*^9}, {
   3.882627536180019*^9, 3.882627545048173*^9}, {3.882627599716195*^9, 
   3.882627647455503*^9}, {3.8826285400115557`*^9, 3.882628567383662*^9}, {
   3.882628623655027*^9, 3.882628637252529*^9}, {3.8826286752984743`*^9, 
   3.882628698642397*^9}, {3.882629152393485*^9, 3.88262920406627*^9}, {
   3.882629234301022*^9, 3.882629300017096*^9}, {3.882629414055821*^9, 
   3.882629419977401*^9}, {3.88262983800565*^9, 3.882629936935417*^9}, {
   3.882629987084567*^9, 3.8826299945983667`*^9}, {3.882630042267148*^9, 
   3.8826300800210457`*^9}, {3.882630122010371*^9, 3.882630310459004*^9}, {
   3.8826305298039207`*^9, 3.882630605854007*^9}, {3.8826308911700172`*^9, 
   3.882630895863329*^9}, {3.882630968383841*^9, 3.882630970249279*^9}, {
   3.882631102614801*^9, 3.882631122451066*^9}, {3.882631172217104*^9, 
   3.882631188358602*^9}, {3.88268279226572*^9, 3.882682793358436*^9}, {
   3.882682825128171*^9, 3.882682905649119*^9}, {3.882682941456689*^9, 
   3.882683035340578*^9}, {3.882683097616954*^9, 3.8826831243599997`*^9}, {
   3.8826832079267187`*^9, 3.88268322636056*^9}, {3.8826832720524406`*^9, 
   3.882683272563937*^9}, {3.88268393033654*^9, 3.882683970774704*^9}, {
   3.882684453729652*^9, 3.882684457833633*^9}, {3.88287169323452*^9, 
   3.88287169526972*^9}, {3.882872155689251*^9, 3.8828721840974483`*^9}, {
   3.882872240113267*^9, 3.88287230451122*^9}, {3.882872401594884*^9, 
   3.882872445630475*^9}, {3.8828725706559477`*^9, 3.88287257218093*^9}, {
   3.882874647868102*^9, 3.882874657894518*^9}, {3.882874692505217*^9, 
   3.882874712980083*^9}, {3.882957314026783*^9, 3.882957533481948*^9}, {
   3.882957567868734*^9, 3.8829575681627483`*^9}, {3.882957672113538*^9, 
   3.882957673785791*^9}, {3.882957763712819*^9, 3.882957804003586*^9}, {
   3.882957893548173*^9, 3.8829579323723497`*^9}, {3.882960106165965*^9, 
   3.882960192343328*^9}, {3.8829602592247763`*^9, 3.882960291846583*^9}, {
   3.882960335970583*^9, 3.882960420755427*^9}, 3.882960502424*^9, {
   3.883206480256772*^9, 3.883206489565454*^9}, {3.883210810363336*^9, 
   3.883210812828437*^9}, 3.88322112557452*^9, {3.883508682526389*^9, 
   3.883508702816136*^9}, {3.8835135766809597`*^9, 3.8835135769216537`*^9}, 
   3.883602571694124*^9, {3.883602616525132*^9, 3.8836026167869263`*^9}, {
   3.8837124630188723`*^9, 3.883712473054093*^9}, {3.883712511982172*^9, 
   3.88371259536935*^9}, {3.8837128126125183`*^9, 3.883712814681986*^9}, {
   3.883712976916746*^9, 3.883712998069605*^9}, {3.883713029389509*^9, 
   3.883713031132704*^9}, {3.8837130734839077`*^9, 3.883713123289879*^9}, {
   3.88371317586099*^9, 3.883713388007255*^9}, {3.883713432297943*^9, 
   3.883713432513618*^9}, {3.8837145776615973`*^9, 3.883714614857036*^9}, {
   3.883714709867775*^9, 3.8837147405582447`*^9}, {3.8837636995036173`*^9, 
   3.8837637649881973`*^9}, {3.8837638104440737`*^9, 3.883764047575631*^9}, {
   3.883764188996993*^9, 3.88376422221626*^9}, {3.883764314751278*^9, 
   3.88376493206699*^9}, {3.883765007230612*^9, 3.883765058424532*^9}, {
   3.883765094451473*^9, 3.8837652612181387`*^9}, {3.883765529856217*^9, 
   3.883765712071003*^9}, {3.883765751219596*^9, 3.883765859834412*^9}, {
   3.883766209628482*^9, 3.883766272746628*^9}, {3.8837671254076023`*^9, 
   3.8837672303000717`*^9}, {3.8837673075418377`*^9, 3.883767350418331*^9}, 
   3.883767495001931*^9, {3.883767583116589*^9, 3.883767590897065*^9}, {
   3.884350217102419*^9, 3.88435022450307*^9}, {3.884784835136011*^9, 
   3.884784835419868*^9}, {3.887357598516282*^9, 3.887357681971054*^9}, {
   3.887357730625854*^9, 3.8873577345856323`*^9}, 3.8873580008275995`*^9, {
   3.8873580390215783`*^9, 3.8873580444734273`*^9}, {3.8873596450781765`*^9, 
   3.8873596857281804`*^9}, {3.8873597403951454`*^9, 
   3.8873597909381623`*^9}, {3.8873598393578634`*^9, 
   3.8873598684411173`*^9}, {3.887360107729466*^9, 3.8873601089769573`*^9}, 
   3.88736016445709*^9, {3.8873963065790167`*^9, 3.887396307669919*^9}, {
   3.8873964150606036`*^9, 3.887396416800517*^9}, {3.887490871088408*^9, 
   3.887490871247427*^9}, {3.892279435738782*^9, 3.892279545429048*^9}, {
   3.8922795966303*^9, 3.8922795996101503`*^9}, {3.892280017607725*^9, 
   3.892280018479031*^9}, {3.892280397901767*^9, 3.8922804205376987`*^9}, 
   3.89228045824366*^9, {3.892280553991699*^9, 3.892280566315411*^9}, {
   3.8924808561054497`*^9, 3.8924808570405903`*^9}, {3.892482183763034*^9, 
   3.892482188217301*^9}, {3.8924822514978228`*^9, 3.892482252564434*^9}, {
   3.892482375313641*^9, 3.892482629030116*^9}, {3.8983300440885987`*^9, 
   3.8983300686162233`*^9}, {3.898334801703702*^9, 3.8983348316734085`*^9}, {
   3.89833493069729*^9, 3.898334943514527*^9}, {3.898334996028477*^9, 
   3.8983349960796766`*^9}, {3.8983351647523856`*^9, 
   3.8983351714397836`*^9}, {3.8983373754498663`*^9, 3.898337406531125*^9}, 
   3.8983374515541124`*^9, {3.8983375465477705`*^9, 3.8983375744162245`*^9}, {
   3.8983376232623587`*^9, 3.8983376234889326`*^9}, {3.8983377196062374`*^9, 
   3.898337720447038*^9}, {3.8983377541712*^9, 3.8983377635271544`*^9}, 
   3.89834456426019*^9, {3.8990284896193924`*^9, 3.899028623449976*^9}, 
   3.8993036213591003`*^9, 3.8993860082119427`*^9, 3.9112943314979076`*^9, {
   3.911399171041452*^9, 3.911399196720728*^9}, {3.911399238196409*^9, 
   3.911399269875369*^9}, {3.911400449819947*^9, 3.9114004532469187`*^9}, {
   3.911405712733654*^9, 3.9114057978777227`*^9}, {3.9114058529607563`*^9, 
   3.9114058624371915`*^9}, {3.9122556748662577`*^9, 3.912255676951082*^9}},
 CellLabel->
  "In[226]:=",ExpressionUUID->"26e914ac-a14a-4788-87e5-df4b23a3f9f7"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Name\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Semantics\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Value\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(n\\), \\(pow2\\)]\\) := \
\\!\\(\\*SuperscriptBox[\\(2\\), \\(\[LeftCeiling]\\*SubscriptBox[\\(log\\), \
\\(2\\)] n\[RightCeiling]\\)]\\)\"\>", "\<\"Smallest power of 2\\ngreater \
than\\nor equal to n\"\>", "4"},
    {"\<\"\\!\\(\\*OverscriptBox[\\(G\\), \\(\[RightVector]\\)]\\) := padded \
\\!\\(\\*OverscriptBox[\\(g\\), \\(\[RightVector]\\)]\\)\"\>", "\<\"\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "101548470124358210188072679181678188450387789916654718462374321277161\
805765354", ",", 
         "70108350633035199759065376354370719210357510544392766796027711414587\
086150112"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "818812811918823551608811408199264118592235792161617862192470207890848\
41886435", ",", 
         "40551526063420644421580965386725729859544147053123598525382531556934\
666119757"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "274279571687672225109216506200775707987097537975573362402331376184758\
33226690", ",", 
         "42650441509520284448005737515710331630163209846762957134645512392724\
356208176"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{"\[Infinity]", ",", "\[Infinity]"}], "]"}]}], "}"}]},
    {"\<\"\\!\\(\\*OverscriptBox[\\(H\\), \\(\[RightVector]\\)]\\) := padded \
\\!\\(\\*OverscriptBox[SuperscriptBox[\\(h\\), \\(*\\)], \
\\(\[RightVector]\\)]\\)\"\>", "\<\"\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "785674097981298148661500560603078103996738496710942114275537926180097\
91659223", ",", 
         "50464327830870926983164620566499054037449550745776160850919973618220\
747519859"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "162303258739445677706511811303033249121212244908024072820227896499932\
84143768", ",", 
         "13743595330208364632961058787086372972527668621267658729713274917516\
765878025"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "739558631559335359828590745098369955658146822271181152229700620948717\
22157004", ",", 
         "12661142626516128143965107877524977948748772063737046982621034957911\
954836350"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{"\[Infinity]", ",", "\[Infinity]"}], "]"}]}], "}"}]},
    {"\<\"\\!\\(\\*OverscriptBox[\\(B\\), \\(\[RightVector]\\)]\\) := padded \
\\!\\(\\*OverscriptBox[SuperscriptBox[\\(b\\), \\(*\\)], \
\\(\[RightVector]\\)]\\)\"\>", "\<\"\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "590437198390560930604556477730311104265134154459595929062830225361099\
82690406", ",", 
         "15581121562794375473593189690062526490521359132176103829752471918632\
370295336"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "112521091029611710525094888851919040284401236803289858290779025976942\
166966892", ",", 
         "71802849234922876881679460540584158214170652826348764564492847489002\
175595813"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "351742354823919065765505904333578332403550468072452553819644948944760\
83182660", ",", 
         "55925870782800122155770079253820122879523420329479534761202990107031\
888939945"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{"\[Infinity]", ",", "\[Infinity]"}], "]"}]}], "}"}]},
    {"\<\"\\!\\(\\*OverscriptBox[\\(C\\), \\(\[RightVector]\\)]\\) := padded \
\\!\\(\\*OverscriptBox[SuperscriptBox[\\(c\\), \\(*\\)], \
\\(\[RightVector]\\)]\\)\"\>", "\<\"\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "826779931946659024745411227286282391069746337307219163154487996543807\
24509062", ",", 
         "82899414855368741404724030068539514612899114324925700999638050403382\
505421116"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "454220983855275201057292421553859122393963522751876918699155106209919\
34660246", ",", 
         "42981417682506542040834084511832054752082115267275737379170623738544\
398871700"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "797315916863813987517928154161254482588443778451991359384727300722633\
16128928", ",", 
         "14986293206980309680514267840081157662963426467477088209824552014914\
871589040"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{"\[Infinity]", ",", "\[Infinity]"}], "]"}]}], "}"}]},
    {"\<\"\\!\\(\\*OverscriptBox[\\(D\\), \\(\[RightVector]\\)]\\) := padded \
\\!\\(\\*OverscriptBox[SuperscriptBox[\\(d\\), \\(*\\)], \
\\(\[RightVector]\\)]\\)\"\>", "\<\"\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "970388739976675561648906271591438165840367376014120471817861153251375\
86601893", ",", 
         "28632182194222295567409644033114434203763962660717808858714880991421\
895676479"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "114943785603625565834113287895479632817105457530959156178552924525977\
788156149", ",", 
         "75005268061152234748488293094956398629562793675286378681571354303324\
894122899"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "342830138940726677212758316537937979811179130685633313242820320739349\
83384369", ",", 
         "16444072431226081049726942532624576021955849773018079843576838182070\
874161038"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{"\[Infinity]", ",", "\[Infinity]"}], "]"}]}], "}"}]},
    {"\<\"\\!\\(\\*SubsuperscriptBox[\\(P\\), \\({h, b, c, d}\\), \\('\\)]\\) \
\\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) \
\\!\\(\\*SubsuperscriptBox[\\(P\\), \\({h, b, c, d}\\), \\(+\\)]\\) - \
\\!\\(\\*SubscriptBox[\\(\[Mu]\\), \\({h, b, c, d}\\)]\\)h + \
\\!\\(\\*OverscriptBox[\\(t\\), \\(^\\)]\\)\\!\\(\\*SuperscriptBox[\\(g\\), \
\\('\\)]\\)\"\>", "\<\"Combination of\\nShuffle Proof\\nConditions Based\\non \
\\!\\(\\*OverscriptBox[\\(h\\), \\(\[RightVector]\\)]\\), \
\\!\\(\\*OverscriptBox[\\(b\\), \\(\[RightVector]\\)]\\), \
\\!\\(\\*OverscriptBox[\\(c\\), \\(\[RightVector]\\)]\\) resp. \
\\!\\(\\*OverscriptBox[\\(d\\), \\(\[RightVector]\\)]\\)\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "424273732157937816594089248437682272258827702253757571263975035270688\
91674844", ",", 
         "25721469407782422059186990187869888211409564752656079140365100434148\
494723328"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "530931559711983503751340754415107725691937096295780949311418131546022\
40565106", ",", 
         "55938320630024527613951665036283624008160716735992177830942127603092\
847901156"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "876232783633840135016162992875481324762501779026500416484639531403364\
03353190", ",", 
         "41060481386143080378375521196934627853309131610093864338133773149938\
053272351"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "818489199760033701144735637712572376924488084306261669454315680465548\
18008682", ",", 
         "26438262705961076267123100491277956086507763515987268018988433016310\
70212794"}], "]"}]}], "}"}]},
    {"\<\"\\!\\(\\*SubsuperscriptBox[\\(P\\), \\(W\\), \\('\\)]\\) \
\\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) \
\\!\\(\\*SubsuperscriptBox[\\(P\\), \\(W\\), \\(+\\)]\\) - \
\\!\\(\\*SubscriptBox[\\(\[Mu]\\), \\(W\\)]\\)h + \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(t\\), \\(W\\)], \
\\(^\\)]\\)\\!\\(\\*SuperscriptBox[\\(g\\), \\('\\)]\\)\"\>", \
"\<\"Combination of\\nPR Proof Conditions\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "98991610698448567601040979656886525408488940163120548218252896669433046\
079564", ",", 
       "5223122484385660726620539772557967075266264868823722684663904980147930\
4835028"}], "]"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.91394894986716*^9},
 CellLabel->
  "During evaluation of \
In[226]:=",ExpressionUUID->"a4325ca0-32d1-49b6-85c1-aca1950a544e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Total Communication Cost\"\>",
      StripOnInput->False,
      FontWeight->Bold], "\[SpanFromLeft]", "\[SpanFromLeft]", 
     "\[SpanFromLeft]"},
    {
     StyleBox["\<\"Type\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Count\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Names\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Bits\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {"\<\"group\"\>", 
     "14", "\<\"V, W, AW, SW, AL, SL, SRh, SRb, SRc, SRd, T3, T5, T1W, \
T2W\"\>", "3598"},
    {"\<\"scalar\"\>", 
     "15", "\<\"r, u, y, z, w, x, taux, muh, mub, muc, mud, t, tauxW, muW, tW\
\"\>", "3840"},
    {
     StyleBox["\<\"total\"\>",
      StripOnInput->False,
      FontSlant->Italic], "29", "\<\"\"\>", "7438"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left, Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.9139489498811507`*^9},
 CellLabel->
  "During evaluation of \
In[226]:=",ExpressionUUID->"9b05c6af-3fdd-45ba-8fdf-650c0f99b5a5"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Halving Iterations", "Subsection",
 CellChangeTimes->{{3.887360148490834*^9, 
  3.887360155487077*^9}},ExpressionUUID->"e6691cbe-e981-4c7d-bbe2-\
6d56dff4dc17"],

Cell[TextData[{
 "Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"{", 
      RowBox[{"h", ",", "b", ",", "c", ",", "W"}], "}"}]], ":=", 
    SubsuperscriptBox["P", 
     RowBox[{"{", 
      RowBox[{"h", ",", "b", ",", "c", ",", "W"}], "}"}], "'"]}], 
   TraditionalForm]],ExpressionUUID->"52a12c57-98b7-46b6-888a-1fc5f0895527"],
 "\nContinue to:\n- Split and halve ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["G", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "1f310cc6-ae9f-4f0f-98b6-1856b844b207"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["H", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "c04f65ab-d65e-4239-bbe4-fcfd64d751b3"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["B", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "e240d2d8-ebb9-42aa-89ff-3459e8db95f9"],
 ", and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["C", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "fe0002b8-b2f1-4d34-ad7a-12b96102ee9a"],
 " based on challenge which is sent to prover,\n- Receive commitments ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["L", 
    RowBox[{"{", 
     RowBox[{"h", ",", "b", ",", "c", ",", "W"}], "}"}]], TraditionalForm]],
  ExpressionUUID->"ee3e34ad-76c2-40bf-9bff-168c138188b5"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["R", 
    RowBox[{"{", 
     RowBox[{"h", ",", "b", ",", "c", ",", "W"}], "}"}]], TraditionalForm]],
  ExpressionUUID->"28616204-0700-47d4-8019-13380eb06d3a"],
 " to P\[CloseCurlyQuote]s ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["a", "IP"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"a33e33a5-1347-4e9b-be2a-64859fca34d0"],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["b", "IP"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"79327ffa-6e12-4e1b-810d-7bcf24ef039b"],
 " resp. ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["a", "W"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"85a06dac-675e-4e7f-82ec-54e056cb65fc"],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["b", "W"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"9c9d6fd9-5493-420c-9c35-322a7f3ab8ff"],
 ",\n- Calculate halved versions of ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["P", 
    RowBox[{"{", 
     RowBox[{"h", ",", "b", ",", "c", ",", "W"}], "}"}], "'"], 
   TraditionalForm]],ExpressionUUID->"ce519943-34f2-44f4-920d-963f6731cde0"],
 ":\nSplit into lower and higher parts:\n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["G", "lo"], "\[RightVector]"], "<>", 
     OverscriptBox[
      SubscriptBox["G", "hi"], "\[RightVector]"]}], ":=", 
    OverscriptBox["G", "\[RightVector]"]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["H", "lo"], "\[RightVector]"], "<>", 
     OverscriptBox[
      SubscriptBox["H", "hi"], "\[RightVector]"]}], ":=", 
    OverscriptBox["H", "\[RightVector]"]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["B", "lo"], "\[RightVector]"], "<>", 
     OverscriptBox[
      SubscriptBox["B", "hi"], "\[RightVector]"]}], ":=", 
    OverscriptBox["B", "\[RightVector]"]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["C", "lo"], "\[RightVector]"], "<>", 
     OverscriptBox[
      SubscriptBox["C", "hi"], "\[RightVector]"]}], ":=", 
    OverscriptBox["C", "\[RightVector]"]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["D", "lo"], "\[RightVector]"], "<>", 
     OverscriptBox[
      SubscriptBox["D", "hi"], "\[RightVector]"]}], ":=", 
    OverscriptBox["D", "\[RightVector]"]}], TraditionalForm]}],ExpressionUUID->
  "da0eab93-5809-4ff7-b197-0fd55fb7cac9"],
 "\nReceive commitments ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["L", 
    RowBox[{"{", 
     RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}]], 
   TraditionalForm]],ExpressionUUID->"2e782a0e-6dd1-4eb5-9d66-f9c18eceed53"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["R", 
    RowBox[{"{", 
     RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}]], 
   TraditionalForm]],ExpressionUUID->"38b1adfa-b00a-4366-808f-b57d51a8689b"],
 " from the prover.\nGenerate random challenge ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["u", "IP"], TraditionalForm]],ExpressionUUID->
  "a6c7472a-5139-43f3-812d-2125899b3072"],
 " (called ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "afb6be8e-93cf-42fe-808d-449b536ebb73"],
 " in the Bulletproof paper) and send it to the prover. ",
 StyleBox["To avoid name collission with previous challenge u index with \
\[OpenCurlyDoubleQuote]IP\[CloseCurlyDoubleQuote].",
  FontSlant->"Italic"],
 "\nCalculate halves:\n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    OverscriptBox[
     SubscriptBox["G", "next"], "\[RightVector]"], ":=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["u", 
       RowBox[{"-", "1"}]], 
      OverscriptBox[
       SubscriptBox["G", "lo"], "\[RightVector]"]}], "+", 
     RowBox[{"u", 
      OverscriptBox[
       SubscriptBox["G", "hi"], "\[RightVector]"]}]}]}], 
   TraditionalForm], "\n", 
  FormBox[
   RowBox[{
    OverscriptBox[
     SubscriptBox[
      RowBox[{"{", 
       RowBox[{"H", ",", "B", ",", "C", ",", "D"}], "}"}], "next"], 
     "\[RightVector]"], ":=", 
    RowBox[{
     RowBox[{"u", 
      OverscriptBox[
       SubscriptBox[
        RowBox[{"{", 
         RowBox[{"H", ",", "B", ",", "C", ",", "D"}], "}"}], "lo"], 
       "\[RightVector]"]}], "+", 
     RowBox[{
      SuperscriptBox["u", 
       RowBox[{"-", "1"}]], 
      OverscriptBox[
       SubscriptBox[
        RowBox[{"{", 
         RowBox[{"H", ",", "B", ",", "C", ",", "D"}], "}"}], "hi"], 
       "\[RightVector]"]}]}]}], TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"next", ",", 
      RowBox[{"{", 
       RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}]}]], ":=", 
    
    RowBox[{
     SubscriptBox["P", 
      RowBox[{"{", 
       RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}]], "+", 
     RowBox[{
      SuperscriptBox["u", "2"], 
      SubscriptBox["L", 
       RowBox[{"{", 
        RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}]]}], "+", 
     
     RowBox[{
      SuperscriptBox["u", 
       RowBox[{"-", "2"}]], 
      SubscriptBox["R", 
       RowBox[{"{", 
        RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}]]}]}]}], 
   TraditionalForm]}],ExpressionUUID->
  "a99dcf1f-663d-491b-a4e5-dfeb03184314"],
 "\nSet ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"{", 
      RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}]], ":=", 
    SubscriptBox["P", 
     RowBox[{"next", ",", 
      RowBox[{"{", 
       RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}]}]]}], 
   TraditionalForm]],ExpressionUUID->"877790e1-3551-4ecf-bb68-f1c5423ea671"],
 " and go to next iteration until the size of the halved vectors has reached \
1.\nLast single-valued step:\n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    SubscriptBox["G", "0"], ":=", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["G", "next"], "\[RightVector]"], "[", "1", "]"}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    SubscriptBox["H", "0"], ":=", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["H", "next"], "\[RightVector]"], "[", "1", "]"}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    SubscriptBox["B", "0"], ":=", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["B", "next"], "\[RightVector]"], "[", "1", "]"}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    SubscriptBox["C", "0"], ":=", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["C", "next"], "\[RightVector]"], "[", "1", "]"}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    SubscriptBox["D", "0"], ":=", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["D", "next"], "\[RightVector]"], "[", "1", "]"}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}]}]], ":=", 
    
    SubscriptBox["P", 
     RowBox[{"{", 
      RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}]]}], 
   TraditionalForm]}],ExpressionUUID->
  "8914e88f-93c0-45b2-adc1-eb67529c12ab"],
 "\nReceive ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "0"], TraditionalForm]],ExpressionUUID->
  "5e7e61be-c01e-458f-aadd-b4797a3bb155"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["b", "0"], TraditionalForm]],ExpressionUUID->
  "5d8fcca4-e8cb-40e8-9a2e-dd0892525dd8"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", 
    RowBox[{"0", ",", "W"}]], TraditionalForm]],ExpressionUUID->
  "35e23e67-60e5-4651-931e-9215e42d165a"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["b", 
    RowBox[{"0", ",", "W"}]], TraditionalForm]],ExpressionUUID->
  "917bbc45-40fc-4b1e-95c6-8e6330cb7250"],
 " from the prover.\nThe \[OpenCurlyDoubleQuote]anatomy\
\[CloseCurlyDoubleQuote] of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}]}]], 
   TraditionalForm]],ExpressionUUID->"ae9438a0-bc34-4af0-870d-79791737d37f"],
 " is: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["P", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}]}]], "=", 
     
     RowBox[{
      RowBox[{
       SubsuperscriptBox["P", 
        RowBox[{"{", 
         RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}], "'"], 
       "+"}], "<", 
      SubsuperscriptBox["u", "2", "2"]}]}], ",", 
    RowBox[{
     SubscriptBox["L", 
      RowBox[{"2", ",", 
       RowBox[{"{", 
        RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}]}]], ">", 
     
     RowBox[{"+", 
      RowBox[{"<", 
       SubsuperscriptBox["u", "2", 
        RowBox[{"-", "2"}]]}]}]}], ",", 
    RowBox[{
     SubscriptBox["R", 
      RowBox[{"2", ",", 
       RowBox[{"{", 
        RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}]}]], 
     ">"}]}], TraditionalForm]],ExpressionUUID->
  "141ef14b-40e1-4747-8bf2-888339ac5954"],
 ". This can be calculated as a sanity check at the end.\nCalculate ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["c", "0"], ":=", 
    RowBox[{
     SubscriptBox["a", "0"], 
     SubscriptBox["b", "0"]}]}], TraditionalForm]],ExpressionUUID->
  "f9693506-503d-41c9-957a-79e9587df6b0"],
 " and check if ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]}]], 
   TraditionalForm]],ExpressionUUID->"96fc3272-49e6-4f2f-934e-45c85f2c3668"],
 " equals ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["a", "0"], 
     SubscriptBox["G", "0"]}], "+", 
    RowBox[{
     SubscriptBox["b", "0"], 
     SubscriptBox[
      RowBox[{"{", 
       RowBox[{"H", ",", "B", ",", "C", ",", "D"}], "}"}], "0"]}], "+", 
    RowBox[{
     SubscriptBox["c", "0"], 
     SuperscriptBox["g", "'"]}]}], TraditionalForm]],ExpressionUUID->
  "72edce5e-a768-48c6-bec2-631101527eec"],
 ". Also check if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["c", 
     RowBox[{"0", ",", "W"}]], ":=", 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"0", ",", "W"}]], 
     SubscriptBox["b", 
      RowBox[{"0", ",", "W"}]]}]}], TraditionalForm]],ExpressionUUID->
  "df973b21-edce-4856-8bec-fc873cde857f"],
 " and if ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", 
    RowBox[{"0", ",", "W"}]], TraditionalForm]],ExpressionUUID->
  "a3d266f4-2742-4aae-bb61-76ce912ed190"],
 " equals ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"0", ",", "W"}]], 
     SubscriptBox["G", "0"]}], "+", 
    RowBox[{
     SubscriptBox["b", 
      RowBox[{"0", ",", "W"}]], 
     SubscriptBox["H", "0"]}], "+", 
    RowBox[{
     SubscriptBox["c", 
      RowBox[{"0", ",", "W"}]], 
     SuperscriptBox["g", "'"]}]}], TraditionalForm]],ExpressionUUID->
  "38b34c43-54da-417c-b6ff-f51e7c4dbfc1"],
 ".\nThese final verification steps mark the end of the inner product \
protocol.\n",
 StyleBox["Note on implementation:",
  FontWeight->"Bold"],
 " Indices of vectors count up from 1 to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["log", "2"], 
     SubscriptBox["n", "pow2"]}], "+", "1"}], TraditionalForm]],
  ExpressionUUID->"1f765619-4c9b-44e0-bca6-c03224510bbc"],
 " (",
 Cell[BoxData[
 "currentIteration"], "InlineCode",ExpressionUUID->
  "70ba2a9b-6d9c-4ab8-a8ba-4dabe81d5483"],
 ") and numbers for names of elements of vectors count down from ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["log", "2"], 
    SubscriptBox["n", "pow2"]}], TraditionalForm]],ExpressionUUID->
  "081fd7ee-03d4-4130-bba8-88378e6aa0ab"],
 " to 0 (",
 Cell[BoxData[
  RowBox[{"k", ",", " ", "ciStr"}]], "InlineCode",ExpressionUUID->
  "3b836024-c528-4c2e-94ec-f900b5c4cb92"],
 "), i.e. for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["n", "pow2"], "=", 
    RowBox[{"16", ":"}]}], TraditionalForm]],ExpressionUUID->
  "32052a22-8001-48cc-94ad-cb5e74b41d0e"],
 " w[1]=w.4, w[2]=w.3, ... w[5]=w.0"
}], "Text",
 CellChangeTimes->CompressedData["
1:eJwdz1tIUwEAxvGDirA1Q2ZSG7acDEswHLQUU8mzhxGWOCfzRbzl9rD2sFQs
oVEEwtjQlZBi24yYtxq6WrqhInibSjpCa9QMUbyQdnQ0RDeOD83z7eHj9/r9
hQ91CnUcQRAiZtDu+s3rCB+RzzspPvzkXRVAc6UjAy5eSM2CYwpdPsycG6iF
7/nKOihWr6ihr4rWwubRiUY4tES1wrv5SiNUpvDN8GeBpQu+0XMH4LLKMwy3
5WIXfFHAdsOqd4Yl2DBzfyf2jxMIwXXWxVOYNn89DE8sBylmxrrvxYWQffva
5VeMprIkHkxwOqVwcE0og+XtxP5bxvTdjwdQsjn3w8Ko24344Qa1bLUy3jjU
fIZEyX6lDd2beS9hVJn1oJfx1k1jKfSOhhqgfSGsgjX3djTwSn96E5T3ND6D
rL+X2qDA/98A2Y7Zdvg4fuoUduQlRGDfOj3+L3pE5k7HT0CKMhkqiCCpSp4c
hGdFFvc3TpB00bxFKNvr9pQlBUmfaGQefmBlf4WygCRmS/XKKnzy5eka9Pfd
+QXFnd1bMJD2eg8S+qvH0NTMO4MKrzwml6YzH4mCZO1MfQ78E5co1TJKT2wx
zwE8N0Mo
  "],ExpressionUUID->"91ab60f3-763b-411f-8f61-0f869ceb0822"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"StateMachineRestore", "[", "\"\<inner_product_setup\>\"", "]"}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["n", "2"], " ", "=", " ", 
   RowBox[{"{", 
    SubscriptBox["n", "pow2"], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["k", "2"], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"Log2", "[", 
      SubscriptBox["n", "pow2"], "]"}], "}"}]}], ";"}], "\[IndentingNewLine]",
   "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Re", "-", 
     RowBox[{"initialize", " ", "G"}]}], ",", " ", "H", ",", " ", "a", ",", 
    " ", 
    RowBox[{
    "b", " ", "and", " ", "P", " ", "in", " ", "case", " ", "of", " ", 
     "multiple", " ", "cell", " ", "evaluations"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["G", "2"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["G", "2"], "\[RightVector]"], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["H", "2"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["H", "2"], "\[RightVector]"], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["B", "2"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["B", "2"], "\[RightVector]"], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["C", "2"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["C", "2"], "\[RightVector]"], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["D", "2"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["D", "2"], "\[RightVector]"], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"2", ",", "h"}]], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["P", 
      RowBox[{"2", ",", "h"}]], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"2", ",", "b"}]], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["P", 
      RowBox[{"2", ",", "b"}]], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"2", ",", "c"}]], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["P", 
      RowBox[{"2", ",", "c"}]], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"2", ",", "d"}]], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["P", 
      RowBox[{"2", ",", "d"}]], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"2", ",", "W"}]], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"2", ",", "W"}]], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["L", 
    RowBox[{"2", ",", "h"}]], " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["L", 
    RowBox[{"2", ",", "b"}]], " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["L", 
    RowBox[{"2", ",", "c"}]], " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["L", 
    RowBox[{"2", ",", "d"}]], " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["L", 
    RowBox[{"2", ",", "W"}]], " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", 
    RowBox[{"2", ",", "h"}]], " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", 
    RowBox[{"2", ",", "b"}]], " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", 
    RowBox[{"2", ",", "c"}]], " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", 
    RowBox[{"2", ",", "d"}]], " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", 
    RowBox[{"2", ",", "W"}]], " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["u", "2"], " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"currentIteration", " ", "=", " ", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["n", "2"], "[", 
      RowBox[{"[", "currentIteration", "]"}], "]"}], " ", "!=", " ", "1"}], 
    ",", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"ciStr", " ", "=", " ", 
      RowBox[{"IntegerString", "[", 
       RowBox[{
        SubscriptBox["k", "2"], "[", 
        RowBox[{"[", "currentIteration", "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"Print", "[", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<Iteration \>\"", "<>", "ciStr", "<>", 
              "\"\< (Counting from \>\"", "<>", 
              RowBox[{"IntegerString", "[", 
               RowBox[{
                SubscriptBox["k", "2"], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
              "\"\< to 0)\>\""}], "]"}], ",", " ", "SpanFromLeft", ",", " ", 
            "SpanFromLeft", ",", " ", "SpanFromLeft"}], "}"}], ",", "\n", 
          "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<k := \!\(\*SubscriptBox[\(k\), \(2\)]\).\>\"", "<>", 
             "ciStr"}], ",", "\"\<Current Iteration\\n(counting down)\>\"", 
            ",", 
            RowBox[{
             SubscriptBox["k", "2"], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(n\), \(2\)]\).\>\"", "<>", "ciStr", 
             "<>", "\"\< = \!\(\*SuperscriptBox[\(2\), \(k\)]\)\>\""}], ",", 
            "\"\<Current Length\\nof Vectors\>\"", ",", 
            RowBox[{
             SubscriptBox["n", "2"], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<\!\(\*OverscriptBox[\(G\), \(\[RightVector]\)]\) := \
\!\(\*OverscriptBox[SubscriptBox[\(G\), \(2\)], \(\[RightVector]\)]\).\>\"", "<>",
              "ciStr"}], ",", "\"\<\>\"", ",", 
            RowBox[{
             OverscriptBox[
              SubscriptBox["G", "2"], "\[RightVector]"], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<\!\(\*OverscriptBox[\(H\), \(\[RightVector]\)]\) := \
\!\(\*OverscriptBox[SubscriptBox[\(H\), \(2\)], \(\[RightVector]\)]\).\>\"", "<>",
              "ciStr"}], ",", "\"\<\>\"", ",", 
            RowBox[{
             OverscriptBox[
              SubscriptBox["H", "2"], "\[RightVector]"], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<\!\(\*OverscriptBox[\(B\), \(\[RightVector]\)]\) := \
\!\(\*OverscriptBox[SubscriptBox[\(B\), \(2\)], \(\[RightVector]\)]\).\>\"", "<>",
              "ciStr"}], ",", "\"\<\>\"", ",", 
            RowBox[{
             OverscriptBox[
              SubscriptBox["B", "2"], "\[RightVector]"], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<\!\(\*OverscriptBox[\(C\), \(\[RightVector]\)]\) := \
\!\(\*OverscriptBox[SubscriptBox[\(C\), \(2\)], \(\[RightVector]\)]\).\>\"", "<>",
              "ciStr"}], ",", "\"\<\>\"", ",", 
            RowBox[{
             OverscriptBox[
              SubscriptBox["C", "2"], "\[RightVector]"], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<\!\(\*OverscriptBox[\(D\), \(\[RightVector]\)]\) := \
\!\(\*OverscriptBox[SubscriptBox[\(D\), \(2\)], \(\[RightVector]\)]\).\>\"", "<>",
              "ciStr"}], ",", "\"\<\>\"", ",", 
            RowBox[{
             OverscriptBox[
              SubscriptBox["D", "2"], "\[RightVector]"], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(P\), \({h, b, c, d, W}\)]\) := \
\!\(\*SubscriptBox[\(P\), \(2, {h, b, c, d, W}\)]\).\>\"", "<>", "ciStr"}], 
            ",", "\"\<\>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               SubscriptBox["P", 
                RowBox[{"2", ",", "h"}]], "[", 
               RowBox[{"[", "currentIteration", "]"}], "]"}], ",", " ", 
              RowBox[{
               SubscriptBox["P", 
                RowBox[{"2", ",", "b"}]], "[", 
               RowBox[{"[", "currentIteration", "]"}], "]"}], ",", " ", 
              RowBox[{
               SubscriptBox["P", 
                RowBox[{"2", ",", "c"}]], "[", 
               RowBox[{"[", "currentIteration", "]"}], "]"}], ",", " ", 
              RowBox[{
               SubscriptBox["P", 
                RowBox[{"2", ",", "d"}]], "[", 
               RowBox[{"[", "currentIteration", "]"}], "]"}], ",", " ", 
              RowBox[{
               SubscriptBox["P", 
                RowBox[{"2", ",", "W"}]], "[", 
               RowBox[{"[", "currentIteration", "]"}], "]"}]}], "}"}]}], 
           "}"}]}], "\[IndentingNewLine]", "\t", "}"}], ",", " ", 
        RowBox[{"Alignment", "->", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"Left", ",", "Left", ",", "Left"}], "}"}], "}"}]}], ",", 
        RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"currentN", " ", "=", " ", 
      RowBox[{
       SubscriptBox["n", "2"], "[", 
       RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"halfN", " ", "=", " ", 
      RowBox[{"currentN", "/", "2"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"k", " ", "=", " ", 
      RowBox[{
       SubscriptBox["k", "2"], "[", 
       RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox["G", "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["G", "2"], "\[RightVector]"], "[", 
       RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox["H", "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["H", "2"], "\[RightVector]"], "[", 
       RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{
      OverscriptBox["B", "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["B", "2"], "\[RightVector]"], "[", 
       RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{
      OverscriptBox["C", "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["C", "2"], "\[RightVector]"], "[", 
       RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{
      OverscriptBox["D", "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["D", "2"], "\[RightVector]"], "[", 
       RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      SubscriptBox["P", "h"], " ", "=", " ", 
      RowBox[{
       SubscriptBox["P", 
        RowBox[{"2", ",", "h"}]], "[", 
       RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{
      SubscriptBox["P", "b"], " ", "=", " ", 
      RowBox[{
       SubscriptBox["P", 
        RowBox[{"2", ",", "b"}]], "[", 
       RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{
      SubscriptBox["P", "c"], " ", "=", " ", 
      RowBox[{
       SubscriptBox["P", 
        RowBox[{"2", ",", "c"}]], "[", 
       RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{
      SubscriptBox["P", "d"], " ", "=", " ", 
      RowBox[{
       SubscriptBox["P", 
        RowBox[{"2", ",", "d"}]], "[", 
       RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{
      SubscriptBox["P", "W"], " ", "=", " ", 
      RowBox[{
       SubscriptBox["P", 
        RowBox[{"2", ",", "W"}]], "[", 
       RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", 
      RowBox[{
      "Split", " ", "into", " ", "lower", " ", "and", " ", "higher", " ", 
       "parts"}], "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["G", "lo"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox["G", "\[RightVector]"], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "halfN"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["G", "hi"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox["G", "\[RightVector]"], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"halfN", "+", "1"}], ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["H", "lo"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox["H", "\[RightVector]"], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "halfN"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["H", "hi"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox["H", "\[RightVector]"], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"halfN", "+", "1"}], ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["B", "lo"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox["B", "\[RightVector]"], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "halfN"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["B", "hi"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox["B", "\[RightVector]"], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"halfN", "+", "1"}], ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["C", "lo"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox["C", "\[RightVector]"], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "halfN"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["C", "hi"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox["C", "\[RightVector]"], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"halfN", "+", "1"}], ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["D", "lo"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox["D", "\[RightVector]"], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "halfN"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["D", "hi"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox["D", "\[RightVector]"], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"halfN", "+", "1"}], ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"(*", 
      RowBox[{
      "Receive", " ", "L", " ", "and", " ", "R", " ", "from", " ", "prover"}],
       "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{
      SubscriptBox["L", "h"], " ", "=", " ", 
      RowBox[{"WaitForProversVariable", "[", 
       RowBox[{"\"\<Lh.\>\"", "<>", "ciStr"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{
      SubscriptBox["R", "h"], " ", "=", " ", 
      RowBox[{"WaitForProversVariable", "[", 
       RowBox[{"\"\<Rh.\>\"", "<>", "ciStr"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      SubscriptBox["L", "b"], " ", "=", " ", 
      RowBox[{"WaitForProversVariable", "[", 
       RowBox[{"\"\<Lb.\>\"", "<>", "ciStr"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{
      SubscriptBox["R", "b"], " ", "=", " ", 
      RowBox[{"WaitForProversVariable", "[", 
       RowBox[{"\"\<Rb.\>\"", "<>", "ciStr"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      SubscriptBox["L", "c"], " ", "=", " ", 
      RowBox[{"WaitForProversVariable", "[", 
       RowBox[{"\"\<Lc.\>\"", "<>", "ciStr"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{
      SubscriptBox["R", "c"], " ", "=", " ", 
      RowBox[{"WaitForProversVariable", "[", 
       RowBox[{"\"\<Rc.\>\"", "<>", "ciStr"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      SubscriptBox["L", "d"], " ", "=", " ", 
      RowBox[{"WaitForProversVariable", "[", 
       RowBox[{"\"\<Ld.\>\"", "<>", "ciStr"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{
      SubscriptBox["R", "d"], " ", "=", " ", 
      RowBox[{"WaitForProversVariable", "[", 
       RowBox[{"\"\<Rd.\>\"", "<>", "ciStr"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      SubscriptBox["L", "W"], " ", "=", " ", 
      RowBox[{"WaitForProversVariable", "[", 
       RowBox[{"\"\<LW.\>\"", "<>", "ciStr"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{
      SubscriptBox["R", "W"], " ", "=", " ", 
      RowBox[{"WaitForProversVariable", "[", 
       RowBox[{"\"\<RW.\>\"", "<>", "ciStr"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["L", 
        RowBox[{"2", ",", "h"}]], ",", 
       SubscriptBox["L", "h"]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["R", 
        RowBox[{"2", ",", "h"}]], ",", 
       SubscriptBox["R", "h"]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["L", 
        RowBox[{"2", ",", "b"}]], ",", 
       SubscriptBox["L", "b"]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["R", 
        RowBox[{"2", ",", "b"}]], ",", 
       SubscriptBox["R", "b"]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["L", 
        RowBox[{"2", ",", "c"}]], ",", 
       SubscriptBox["L", "c"]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["R", 
        RowBox[{"2", ",", "c"}]], ",", 
       SubscriptBox["R", "c"]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["L", 
        RowBox[{"2", ",", "d"}]], ",", 
       SubscriptBox["L", "d"]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["R", 
        RowBox[{"2", ",", "d"}]], ",", 
       SubscriptBox["R", "d"]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["L", 
        RowBox[{"2", ",", "W"}]], ",", 
       SubscriptBox["L", "W"]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["R", 
        RowBox[{"2", ",", "W"}]], ",", 
       SubscriptBox["R", "W"]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", "interactive"}], ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{"FiatShamirAdd", "[", 
         RowBox[{
          RowBox[{"\"\<Lh.\>\"", "<>", "ciStr"}], ",", 
          RowBox[{"compressPoint", "[", 
           SubscriptBox["L", "h"], "]"}], ",", 
          RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"FiatShamirAdd", "[", 
         RowBox[{
          RowBox[{"\"\<Rh.\>\"", "<>", "ciStr"}], ",", 
          RowBox[{"compressPoint", "[", 
           SubscriptBox["R", "h"], "]"}], ",", 
          RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"FiatShamirAdd", "[", 
         RowBox[{
          RowBox[{"\"\<Lb.\>\"", "<>", "ciStr"}], ",", 
          RowBox[{"compressPoint", "[", 
           SubscriptBox["L", "b"], "]"}], ",", 
          RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"FiatShamirAdd", "[", 
         RowBox[{
          RowBox[{"\"\<Rb.\>\"", "<>", "ciStr"}], ",", 
          RowBox[{"compressPoint", "[", 
           SubscriptBox["R", "b"], "]"}], ",", 
          RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"FiatShamirAdd", "[", 
         RowBox[{
          RowBox[{"\"\<Lc.\>\"", "<>", "ciStr"}], ",", 
          RowBox[{"compressPoint", "[", 
           SubscriptBox["L", "c"], "]"}], ",", 
          RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"FiatShamirAdd", "[", 
         RowBox[{
          RowBox[{"\"\<Rc.\>\"", "<>", "ciStr"}], ",", 
          RowBox[{"compressPoint", "[", 
           SubscriptBox["R", "c"], "]"}], ",", 
          RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"FiatShamirAdd", "[", 
         RowBox[{
          RowBox[{"\"\<Ld.\>\"", "<>", "ciStr"}], ",", 
          RowBox[{"compressPoint", "[", 
           SubscriptBox["L", "d"], "]"}], ",", 
          RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"FiatShamirAdd", "[", 
         RowBox[{
          RowBox[{"\"\<Rd.\>\"", "<>", "ciStr"}], ",", 
          RowBox[{"compressPoint", "[", 
           SubscriptBox["R", "d"], "]"}], ",", 
          RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"FiatShamirAdd", "[", 
         RowBox[{
          RowBox[{"\"\<LW.\>\"", "<>", "ciStr"}], ",", 
          RowBox[{"compressPoint", "[", 
           SubscriptBox["L", "W"], "]"}], ",", 
          RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"FiatShamirAdd", "[", 
         RowBox[{
          RowBox[{"\"\<RW.\>\"", "<>", "ciStr"}], ",", 
          RowBox[{"compressPoint", "[", 
           SubscriptBox["R", "W"], "]"}], ",", 
          RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "\t", "]"}], ";", "\n", "\t", 
     RowBox[{"Print", "[", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(L\), \({h, b, c, d}\)]\) := \
\!\(\*SubscriptBox[\(L\), \(2, {h, b, c, d}\)]\).\>\"", "<>", "ciStr"}], ",", 
            "\"\<Commitments to\\n halves of \!\(\*OverscriptBox[\(a\), \(\
\[RightVector]\)]\) and \!\(\*OverscriptBox[\(b\), \
\(\[RightVector]\)]\)\\nbased on \\n{\!\(\*OverscriptBox[\(h\), \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[\(b\), \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(c\), \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(d\), \(\[RightVector]\)]\)} from \
P\>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               SubscriptBox["L", 
                RowBox[{"2", ",", "h"}]], "[", 
               RowBox[{"[", "currentIteration", "]"}], "]"}], ",", " ", 
              RowBox[{
               SubscriptBox["L", 
                RowBox[{"2", ",", "b"}]], "[", 
               RowBox[{"[", "currentIteration", "]"}], "]"}], ",", " ", 
              RowBox[{
               SubscriptBox["L", 
                RowBox[{"2", ",", "c"}]], "[", 
               RowBox[{"[", "currentIteration", "]"}], "]"}], ",", " ", 
              RowBox[{
               SubscriptBox["L", 
                RowBox[{"2", ",", "d"}]], "[", 
               RowBox[{"[", "currentIteration", "]"}], "]"}]}], "}"}]}], 
           "}"}], ",", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(R\), \({h, b, c, d}\)]\) := \
\!\(\*SubscriptBox[\(R\), \(2, {h, b, c, d}\)]\).\>\"", "<>", "ciStr"}], ",", 
            "\"\<Commitments to\\n other halves of \!\(\*OverscriptBox[\(a\), \
\(\[RightVector]\)]\) and \!\(\*OverscriptBox[\(b\), \
\(\[RightVector]\)]\)\\nbased on \\n{\!\(\*OverscriptBox[\(h\), \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[\(b\), \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(c\), \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(d\), \(\[RightVector]\)]\)} from \
P\>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               SubscriptBox["R", 
                RowBox[{"2", ",", "h"}]], "[", 
               RowBox[{"[", "currentIteration", "]"}], "]"}], ",", " ", 
              RowBox[{
               SubscriptBox["R", 
                RowBox[{"2", ",", "b"}]], "[", 
               RowBox[{"[", "currentIteration", "]"}], "]"}], ",", " ", 
              RowBox[{
               SubscriptBox["R", 
                RowBox[{"2", ",", "c"}]], "[", 
               RowBox[{"[", "currentIteration", "]"}], "]"}], ",", " ", 
              RowBox[{
               SubscriptBox["R", 
                RowBox[{"2", ",", "d"}]], "[", 
               RowBox[{"[", "currentIteration", "]"}], "]"}]}], "}"}]}], 
           "}"}], ",", "\[IndentingNewLine]", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(L\), \(W\)]\) := \!\(\*SubscriptBox[\(L\
\), \(2, W\)]\).\>\"", "<>", "ciStr"}], ",", 
            RowBox[{
            "\"\<Commitment to\\nhalves \
of\\n\!\(\*OverscriptBox[SubscriptBox[\(a\), \(2, W\)], \(\[RightVector]\)]\) \
and \!\(\*OverscriptBox[SubscriptBox[\(b\), \(2, W\)], \
\(\[RightVector]\)]\)\\nfrom P\>\"", "<>", "ciStr"}], ",", 
            RowBox[{
             SubscriptBox["L", 
              RowBox[{"2", ",", "W"}]], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(R\), \(W\)]\) := \!\(\*SubscriptBox[\(R\
\), \(2, W\)]\).\>\"", "<>", "ciStr"}], ",", 
            RowBox[{
            "\"\<Commitment to\\nother halves \
of\\n\!\(\*OverscriptBox[SubscriptBox[\(a\), \(2, W\)], \(\[RightVector]\)]\) \
and \!\(\*OverscriptBox[SubscriptBox[\(b\), \(2, W\)], \
\(\[RightVector]\)]\)\\nfrom P\>\"", "<>", "ciStr"}], ",", 
            RowBox[{
             SubscriptBox["R", 
              RowBox[{"2", ",", "W"}]], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "\t", "}"}], ",", " ", 
        RowBox[{"Alignment", "->", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"Left", ",", "Left", ",", "Left"}], "}"}], "}"}]}], ",", 
        RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{"interactive", ",", "\[IndentingNewLine]", "\t", 
       RowBox[{"(*", 
        RowBox[{"Random", " ", "challenge"}], "*)"}], "\[IndentingNewLine]", 
       "\t\t", 
       RowBox[{
        RowBox[{
         SubscriptBox["u", "IP"], " ", "=", " ", 
         RowBox[{"SendRandomChallenge", "[", 
          RowBox[{
           RowBox[{"\"\<u.\>\"", "<>", "ciStr"}], ",", "1", ",", 
           RowBox[{"q", "-", "1"}]}], "]"}]}], ";", "\n", "\t\t", 
        RowBox[{"fiatShamirCheck", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";"}], "\n", "\t", 
       RowBox[{"(*", "Else", "*)"}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{"(*", 
        RowBox[{"Fiat", "-", "Shamir"}], "*)"}], "\[IndentingNewLine]", 
       "\t\t", 
       RowBox[{
        RowBox[{
         SubscriptBox["u", "IP"], " ", "=", " ", 
         RowBox[{"FiatShamirGet", "[", 
          RowBox[{
           RowBox[{"\"\<u.\>\"", "<>", "ciStr"}], ",", "q", ",", 
           RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], 
          "]"}]}], ";", "\n", "\t\t", 
        RowBox[{"uProver", " ", "=", " ", 
         RowBox[{"WaitForProversVariable", "[", 
          RowBox[{"\"\<u.\>\"", "<>", "ciStr"}], "]"}]}], ";", "\n", "\t\t", 
        RowBox[{"fiatShamirCheckOk", " ", "=", " ", 
         RowBox[{"(", 
          RowBox[{"uProver", " ", "==", " ", 
           SubscriptBox["u", "IP"]}], ")"}]}], ";", "\n", "\t\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", "fiatShamirCheckOk"}], ",", " ", 
          RowBox[{"GiveInsight", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<u.\>\"", "<>", "ciStr"}], "->", 
             SubscriptBox["u", "IP"]}], "}"}], "]"}]}], "]"}], ";", "\n", 
        "\t\t", 
        RowBox[{"fiatShamirCheck", " ", "=", " ", 
         RowBox[{"{", "\n", "\t\t\t", 
          RowBox[{"{", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{
            "\"\<Fiat-Shamir check on u.\>\"", "<>", "ciStr", "<>", 
             
             "\"\<:\\n\!\(\*SubscriptBox[\(c\), \(Prover\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) FiatShamir(\>\"", "<>", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"currentIteration", "==", "1"}], ",", "\"\<u'\>\"", 
               ",", 
               RowBox[{"\"\<u.\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"currentIteration", "-", "1"}], "]"}]}]}], "]"}], "<>",
              "\n", "\t\t\t\t\t", "\"\<,Lh.\>\"", "<>", "ciStr", "<>", 
             "\"\<,Rh.\>\"", "<>", "ciStr", "<>", "\n", "\t\t\t\t\t", 
             "\"\<,Lb.\>\"", "<>", "ciStr", "<>", "\"\<,Rb.\>\"", "<>", 
             "ciStr", "<>", "\n", "\t\t\t\t\t", "\"\<,Lc.\>\"", "<>", "ciStr",
              "<>", "\"\<,Rc.\>\"", "<>", "ciStr", "<>", "\n", "\t\t\t\t\t", 
             "\"\<,Ld.\>\"", "<>", "ciStr", "<>", "\"\<,Rd.\>\"", "<>", 
             "ciStr", "<>", "\n", "\t\t\t\t\t", "\"\<,LW.\>\"", "<>", "ciStr",
              "<>", "\"\<,RW.\>\"", "<>", "ciStr", "<>", "\"\<)\>\""}], ",", 
            "\n", "\t\t\t\t", "\"\<\>\"", ",", "\n", "\t\t\t\t", 
            "fiatShamirCheckOk"}], "\n", "\t\t\t", "}"}], "\n", "\t\t", 
          "}"}]}], ";"}]}], "\[IndentingNewLine]", "\t", "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["u", "2"], ",", 
       SubscriptBox["u", "IP"]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{
      SuperscriptBox["u", 
       RowBox[{"-", "1"}]], " ", "=", " ", 
      RowBox[{"modinvq", "[", 
       SubscriptBox["u", "IP"], "]"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["G", "next"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       RowBox[{
        SuperscriptBox["u", 
         RowBox[{"-", "1"}]], "*", 
        OverscriptBox[
         SubscriptBox["G", "lo"], "\[RightVector]"]}], "+", 
       RowBox[{
        SubscriptBox["u", "IP"], "*", 
        OverscriptBox[
         SubscriptBox["G", "hi"], "\[RightVector]"]}]}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["G", "2"], "\[RightVector]"], ",", 
       OverscriptBox[
        SubscriptBox["G", "next"], "\[RightVector]"]}], "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["H", "next"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       RowBox[{
        SubscriptBox["u", "IP"], "*", 
        OverscriptBox[
         SubscriptBox["H", "lo"], "\[RightVector]"]}], "+", 
       RowBox[{
        SuperscriptBox["u", 
         RowBox[{"-", "1"}]], "*", 
        OverscriptBox[
         SubscriptBox["H", "hi"], "\[RightVector]"]}]}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["H", "2"], "\[RightVector]"], ",", 
       OverscriptBox[
        SubscriptBox["H", "next"], "\[RightVector]"]}], "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["B", "next"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       RowBox[{
        SubscriptBox["u", "IP"], "*", 
        OverscriptBox[
         SubscriptBox["B", "lo"], "\[RightVector]"]}], "+", 
       RowBox[{
        SuperscriptBox["u", 
         RowBox[{"-", "1"}]], "*", 
        OverscriptBox[
         SubscriptBox["B", "hi"], "\[RightVector]"]}]}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["B", "2"], "\[RightVector]"], ",", 
       OverscriptBox[
        SubscriptBox["B", "next"], "\[RightVector]"]}], "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["C", "next"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       RowBox[{
        SubscriptBox["u", "IP"], "*", 
        OverscriptBox[
         SubscriptBox["C", "lo"], "\[RightVector]"]}], "+", 
       RowBox[{
        SuperscriptBox["u", 
         RowBox[{"-", "1"}]], "*", 
        OverscriptBox[
         SubscriptBox["C", "hi"], "\[RightVector]"]}]}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["C", "2"], "\[RightVector]"], ",", 
       OverscriptBox[
        SubscriptBox["C", "next"], "\[RightVector]"]}], "]"}], ";", "\n", 
     "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["D", "next"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       RowBox[{
        SubscriptBox["u", "IP"], "*", 
        OverscriptBox[
         SubscriptBox["D", "lo"], "\[RightVector]"]}], "+", 
       RowBox[{
        SuperscriptBox["u", 
         RowBox[{"-", "1"}]], "*", 
        OverscriptBox[
         SubscriptBox["D", "hi"], "\[RightVector]"]}]}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["D", "2"], "\[RightVector]"], ",", 
       OverscriptBox[
        SubscriptBox["D", "next"], "\[RightVector]"]}], "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"next", ",", "h"}]], " ", "=", " ", 
      RowBox[{
       SubscriptBox["P", "h"], " ", "+", " ", 
       RowBox[{
        RowBox[{
         SubscriptBox["u", "IP"], "^", "2"}], "*", 
        SubscriptBox["L", "h"]}], " ", "+", " ", 
       RowBox[{
        RowBox[{
         SuperscriptBox["u", 
          RowBox[{"-", "1"}]], "^", "2"}], "*", 
        SubscriptBox["R", "h"]}]}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["P", 
        RowBox[{"2", ",", "h"}]], ",", 
       SubscriptBox["P", 
        RowBox[{"next", ",", "h"}]]}], "]"}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"next", ",", "b"}]], " ", "=", " ", 
      RowBox[{
       SubscriptBox["P", "b"], " ", "+", " ", 
       RowBox[{
        RowBox[{
         SubscriptBox["u", "IP"], "^", "2"}], "*", 
        SubscriptBox["L", "b"]}], " ", "+", " ", 
       RowBox[{
        RowBox[{
         SuperscriptBox["u", 
          RowBox[{"-", "1"}]], "^", "2"}], "*", 
        SubscriptBox["R", "b"]}]}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["P", 
        RowBox[{"2", ",", "b"}]], ",", 
       SubscriptBox["P", 
        RowBox[{"next", ",", "b"}]]}], "]"}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"next", ",", "c"}]], " ", "=", " ", 
      RowBox[{
       SubscriptBox["P", "c"], " ", "+", " ", 
       RowBox[{
        RowBox[{
         SubscriptBox["u", "IP"], "^", "2"}], "*", 
        SubscriptBox["L", "c"]}], " ", "+", " ", 
       RowBox[{
        RowBox[{
         SuperscriptBox["u", 
          RowBox[{"-", "1"}]], "^", "2"}], "*", 
        SubscriptBox["R", "c"]}]}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["P", 
        RowBox[{"2", ",", "c"}]], ",", 
       SubscriptBox["P", 
        RowBox[{"next", ",", "c"}]]}], "]"}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"next", ",", "d"}]], " ", "=", " ", 
      RowBox[{
       SubscriptBox["P", "d"], " ", "+", " ", 
       RowBox[{
        RowBox[{
         SubscriptBox["u", "IP"], "^", "2"}], "*", 
        SubscriptBox["L", "d"]}], " ", "+", " ", 
       RowBox[{
        RowBox[{
         SuperscriptBox["u", 
          RowBox[{"-", "1"}]], "^", "2"}], "*", 
        SubscriptBox["R", "d"]}]}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["P", 
        RowBox[{"2", ",", "d"}]], ",", 
       SubscriptBox["P", 
        RowBox[{"next", ",", "d"}]]}], "]"}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"next", ",", "W"}]], " ", "=", " ", 
      RowBox[{
       SubscriptBox["P", "W"], " ", "+", " ", 
       RowBox[{
        RowBox[{
         SubscriptBox["u", "IP"], "^", "2"}], "*", 
        SubscriptBox["L", "W"]}], " ", "+", " ", 
       RowBox[{
        RowBox[{
         SuperscriptBox["u", 
          RowBox[{"-", "1"}]], "^", "2"}], "*", 
        SubscriptBox["R", "W"]}]}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["P", 
        RowBox[{"2", ",", "W"}]], ",", 
       SubscriptBox["P", 
        RowBox[{"next", ",", "W"}]]}], "]"}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"Print", "[", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"Join", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{"{", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "Style", "[", 
               "\"\<Fold \!\(\*OverscriptBox[\(G\), \(\[RightVector]\)]\), \!\
\(\*OverscriptBox[\(H\), \(\[RightVector]\)]\), \!\(\*OverscriptBox[\(B\), \(\
\[RightVector]\)]\), \!\(\*OverscriptBox[\(C\), \(\[RightVector]\)]\), \
\!\(\*OverscriptBox[\(D\), \(\[RightVector]\)]\) and \
\!\(\*OverscriptBox[\(P\), \(\[RightVector]\)]\) based on challenge \
\!\(\*SubscriptBox[\(u\), \(IP\)]\)\>\"", "]"}], ",", " ", "SpanFromLeft"}], 
             "}"}], ",", "\n", "\t\t\t", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", 
            "\n", "\t\t\t", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(u\), \(IP\)]\) := \!\(\*SubscriptBox[\
\(u\), \(2\)]\).\>\"", "<>", "ciStr"}], ",", 
              SubscriptBox["u", "IP"]}], "}"}]}], "\n", "\t\t", "}"}], ",", 
          "\n", "\t\t", "fiatShamirCheck", ",", "\n", "\t\t", 
          RowBox[{"{", "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<\!\(\*OverscriptBox[SubscriptBox[\(G\), \(next\)], \(\
\[RightVector]\)]\) := \!\(\*SubsuperscriptBox[\(u\), \(IP\), \
\(-1\)]\)\!\(\*OverscriptBox[SubscriptBox[\(G\), \(lo\)], \(\[RightVector]\)]\
\) + \!\(\*SubscriptBox[\(u\), \
\(IP\)]\)\!\(\*OverscriptBox[SubscriptBox[\(G\), \(hi\)], \(\[RightVector]\)]\
\)\>\"", ",", 
              OverscriptBox[
               SubscriptBox["G", "next"], "\[RightVector]"]}], "}"}], ",", 
            "\n", "\t\t\t", 
            RowBox[{"{", 
             RowBox[{
             "\"\<\!\(\*OverscriptBox[SubscriptBox[\(H\), \(next\)], \(\
\[RightVector]\)]\) := \!\(\*SubscriptBox[\(u\), \
\(IP\)]\)\!\(\*OverscriptBox[SubscriptBox[\(H\), \(lo\)], \(\[RightVector]\)]\
\) + \!\(\*SubsuperscriptBox[\(u\), \(IP\), \
\(-1\)]\)\!\(\*OverscriptBox[SubscriptBox[\(H\), \(hi\)], \(\[RightVector]\)]\
\)\>\"", ",", 
              OverscriptBox[
               SubscriptBox["H", "next"], "\[RightVector]"]}], "}"}], ",", 
            "\n", "\t\t\t", 
            RowBox[{"{", 
             RowBox[{
             "\"\<\!\(\*OverscriptBox[SubscriptBox[\(B\), \(next\)], \(\
\[RightVector]\)]\) := \!\(\*SubscriptBox[\(u\), \
\(IP\)]\)\!\(\*OverscriptBox[SubscriptBox[\(B\), \(lo\)], \(\[RightVector]\)]\
\) + \!\(\*SubsuperscriptBox[\(u\), \(IP\), \
\(-1\)]\)\!\(\*OverscriptBox[SubscriptBox[\(B\), \(hi\)], \(\[RightVector]\)]\
\)\>\"", ",", 
              OverscriptBox[
               SubscriptBox["B", "next"], "\[RightVector]"]}], "}"}], ",", 
            "\n", "\t\t\t", 
            RowBox[{"{", 
             RowBox[{
             "\"\<\!\(\*OverscriptBox[SubscriptBox[\(C\), \(next\)], \(\
\[RightVector]\)]\) := \!\(\*SubscriptBox[\(u\), \
\(IP\)]\)\!\(\*OverscriptBox[SubscriptBox[\(C\), \(lo\)], \(\[RightVector]\)]\
\) + \!\(\*SubsuperscriptBox[\(u\), \(IP\), \
\(-1\)]\)\!\(\*OverscriptBox[SubscriptBox[\(C\), \(hi\)], \(\[RightVector]\)]\
\)\>\"", ",", 
              OverscriptBox[
               SubscriptBox["C", "next"], "\[RightVector]"]}], "}"}], ",", 
            "\n", "\t\t\t", 
            RowBox[{"{", 
             RowBox[{
             "\"\<\!\(\*OverscriptBox[SubscriptBox[\(D\), \(next\)], \(\
\[RightVector]\)]\) := \!\(\*SubscriptBox[\(u\), \
\(IP\)]\)\!\(\*OverscriptBox[SubscriptBox[\(D\), \(lo\)], \(\[RightVector]\)]\
\) + \!\(\*SubsuperscriptBox[\(u\), \(IP\), \
\(-1\)]\)\!\(\*OverscriptBox[SubscriptBox[\(D\), \(hi\)], \(\[RightVector]\)]\
\)\>\"", ",", 
              OverscriptBox[
               SubscriptBox["D", "next"], "\[RightVector]"]}], "}"}], ",", 
            "\n", "\t\t\t", 
            RowBox[{"{", 
             RowBox[{
             "\"\<\!\(\*SubscriptBox[\(P\), \(next, {h, b, c, d, W}\)]\) := \
\!\(\*SubscriptBox[\(P\), \({h, b, c, d, W}\)]\) + \
\!\(\*SubsuperscriptBox[\(u\), \(IP\), \(2\)]\)\!\(\*SubscriptBox[\(L\), \
\({h, b, c, d, W}\)]\) + \!\(\*SubsuperscriptBox[\(u\), \(IP\), \(-2\)]\)\!\(\
\*SubscriptBox[\(R\), \({h, b, c, d, W}\)]\)\>\"", ",", 
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["P", 
                 RowBox[{"next", ",", "h"}]], ",", 
                SubscriptBox["P", 
                 RowBox[{"next", ",", "b"}]], ",", 
                SubscriptBox["P", 
                 RowBox[{"next", ",", "c"}]], ",", 
                SubscriptBox["P", 
                 RowBox[{"next", ",", "d"}]], ",", 
                SubscriptBox["P", 
                 RowBox[{"next", ",", "W"}]]}], "}"}]}], "}"}]}], 
           "\[IndentingNewLine]", "\t\t", "}"}]}], "\n", "\t", "]"}], ",", 
        " ", 
        RowBox[{"Alignment", "->", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"Left", ",", "Left"}], "}"}], "}"}]}], ",", 
        RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", 
      RowBox[{
      "Update", " ", "variables", " ", "for", " ", "next", " ", "iteration"}],
       "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["n", "2"], ",", "halfN"}], "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"k", " ", "=", " ", 
      RowBox[{"k", " ", "-", " ", "1"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["k", "2"], ",", "k"}], "]"}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"currentIteration", " ", "+=", " ", "1"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Last", ",", " ", 
    RowBox[{"single", "-", 
     RowBox[{"valued", " ", "iteration"}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"ciStr", " ", "=", " ", 
   RowBox[{"IntegerString", "[", 
    RowBox[{
     SubscriptBox["k", "2"], "[", 
     RowBox[{"[", "currentIteration", "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["n", "0"], " ", "=", " ", 
   RowBox[{
    SubscriptBox["n", "2"], "[", 
    RowBox[{"[", "currentIteration", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["k", "0"], " ", "=", " ", 
   RowBox[{
    SubscriptBox["k", "2"], "[", 
    RowBox[{"[", "currentIteration", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox["G", "\[RightVector]"], " ", "=", " ", 
   RowBox[{
    OverscriptBox[
     SubscriptBox["G", "2"], "\[RightVector]"], "[", 
    RowBox[{"[", "currentIteration", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox["H", "\[RightVector]"], " ", "=", " ", 
   RowBox[{
    OverscriptBox[
     SubscriptBox["H", "2"], "\[RightVector]"], "[", 
    RowBox[{"[", "currentIteration", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox["B", "\[RightVector]"], " ", "=", " ", 
   RowBox[{
    OverscriptBox[
     SubscriptBox["B", "2"], "\[RightVector]"], "[", 
    RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox["C", "\[RightVector]"], " ", "=", " ", 
   RowBox[{
    OverscriptBox[
     SubscriptBox["C", "2"], "\[RightVector]"], "[", 
    RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox["D", "\[RightVector]"], " ", "=", " ", 
   RowBox[{
    OverscriptBox[
     SubscriptBox["D", "2"], "\[RightVector]"], "[", 
    RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", "h"], " ", "=", " ", 
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"2", ",", "h"}]], "[", 
    RowBox[{"[", "currentIteration", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", "b"], " ", "=", " ", 
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"2", ",", "b"}]], "[", 
    RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", "c"], " ", "=", " ", 
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"2", ",", "c"}]], "[", 
    RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", "d"], " ", "=", " ", 
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"2", ",", "d"}]], "[", 
    RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", "W"], " ", "=", " ", 
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"2", ",", "W"}]], "[", 
    RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["G", "0"], " ", "=", " ", 
   RowBox[{
    OverscriptBox["G", "\[RightVector]"], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["H", "0"], " ", "=", " ", 
   RowBox[{
    OverscriptBox["H", "\[RightVector]"], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["B", "0"], " ", "=", " ", 
   RowBox[{
    OverscriptBox["B", "\[RightVector]"], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["C", "0"], " ", "=", " ", 
   RowBox[{
    OverscriptBox["C", "\[RightVector]"], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["D", "0"], " ", "=", " ", 
   RowBox[{
    OverscriptBox["D", "\[RightVector]"], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"0", ",", "h"}]], " ", "=", " ", 
   SubscriptBox["P", "h"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"0", ",", "b"}]], " ", "=", " ", 
   SubscriptBox["P", "b"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"0", ",", "c"}]], " ", "=", " ", 
   SubscriptBox["P", "c"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"0", ",", "d"}]], " ", "=", " ", 
   SubscriptBox["P", "d"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"0", ",", "W"}]], " ", "=", " ", 
    SubscriptBox["P", "W"]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["a", "0"], " ", "=", " ", 
   RowBox[{"WaitForProversVariable", "[", "\"\<a0\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["b", "0"], " ", "=", " ", 
   RowBox[{"WaitForProversVariable", "[", "\"\<b0\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "interactive"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<a0\>\"", ",", 
       SubscriptBox["a", "0"], ",", 
       RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}], 
     ";", "\n", "\t", 
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<b0\>\"", ",", 
       SubscriptBox["b", "0"], ",", 
       RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}], 
     ";"}]}], "\n", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["c", "0"], " ", "=", " ", 
    RowBox[{"modq", "[", 
     RowBox[{
      SubscriptBox["a", "0"], "*", 
      SubscriptBox["b", "0"]}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["a", 
    RowBox[{"0", ",", "W"}]], " ", "=", " ", 
   RowBox[{"WaitForProversVariable", "[", "\"\<a0W\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["b", 
    RowBox[{"0", ",", "W"}]], " ", "=", " ", 
   RowBox[{"WaitForProversVariable", "[", "\"\<b0W\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "interactive"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<a0W\>\"", ",", 
       SubscriptBox["a", 
        RowBox[{"0", ",", "W"}]], ",", 
       RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}], 
     ";", "\n", "\t", 
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<b0W\>\"", ",", 
       SubscriptBox["b", 
        RowBox[{"0", ",", "W"}]], ",", 
       RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}], 
     ";"}]}], "\n", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["c", 
     RowBox[{"0", ",", "W"}]], " ", "=", " ", 
    RowBox[{"modq", "[", 
     RowBox[{
      SubscriptBox["a", 
       RowBox[{"0", ",", "W"}]], "*", 
      SubscriptBox["b", 
       RowBox[{"0", ",", "W"}]]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"P0hcheck", " ", "=", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["a", "0"], "*", 
     SubscriptBox["G", "0"]}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["b", "0"], "*", 
     SubscriptBox["H", "0"]}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["c", "0"], "*", 
     SuperscriptBox["g", "'"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P0bcheck", " ", "=", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["a", "0"], "*", 
     SubscriptBox["G", "0"]}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["b", "0"], "*", 
     SubscriptBox["B", "0"]}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["c", "0"], "*", 
     SuperscriptBox["g", "'"]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"P0ccheck", " ", "=", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["a", "0"], "*", 
     SubscriptBox["G", "0"]}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["b", "0"], "*", 
     SubscriptBox["C", "0"]}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["c", "0"], "*", 
     SuperscriptBox["g", "'"]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"P0dcheck", " ", "=", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["a", "0"], "*", 
     SubscriptBox["G", "0"]}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["b", "0"], "*", 
     SubscriptBox["D", "0"]}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["c", "0"], "*", 
     SuperscriptBox["g", "'"]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"P0Wcheck", " ", "=", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["a", 
       RowBox[{"0", ",", "W"}]], "*", 
      SubscriptBox["G", "0"]}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["b", 
       RowBox[{"0", ",", "W"}]], "*", 
      SubscriptBox["H", "0"]}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["c", 
       RowBox[{"0", ",", "W"}]], "*", 
      SuperscriptBox["g", "'"]}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<Iteration \>\"", "<>", "ciStr", "<>", 
           "\"\< (Counting from \>\"", "<>", 
           RowBox[{"IntegerString", "[", 
            RowBox[{
             SubscriptBox["k", "2"], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\< to 0)\>\""}], 
          "]"}], ",", " ", "SpanFromLeft", ",", " ", "SpanFromLeft", ",", " ",
          "SpanFromLeft"}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", "\"\<Semantics\>\"", "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(n\), \(0\)]\) := \!\(\*SubscriptBox[\(n\), \
\(2\)]\).\>\"", "<>", "ciStr", "<>", 
          "\"\<[1] \!\(\*OverscriptBox[\(=\), \(?\)]\) 1\>\""}], ",", 
         "\"\<Halving Complete?\>\"", ",", 
         RowBox[{
          SubscriptBox["n", "0"], "==", "1"}]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(k\), \(0\)]\) := \!\(\*SubscriptBox[\(k\), \
\(2\)]\).\>\"", "<>", "ciStr", "<>", 
          "\"\<[1] \!\(\*OverscriptBox[\(=\), \(?\)]\) 0\>\""}], ",", 
         "\"\<Halving Complete?\>\"", ",", "\"\<P,V\>\"", ",", 
         RowBox[{
          SubscriptBox["k", "0"], "==", "0"}]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(G\), \(0\)]\) := \
\!\(\*OverscriptBox[SubscriptBox[\(G\), \(2\)], \(\[RightVector]\)]\).\>\"", "<>",
           "ciStr", "<>", "\"\<[1]\>\""}], ",", "\"\<\>\"", ",", 
         SubscriptBox["G", "0"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(H\), \(0\)]\) := \
\!\(\*OverscriptBox[SubscriptBox[\(H\), \(2\)], \(\[RightVector]\)]\).\>\"", "<>",
           "ciStr", "<>", "\"\<[1]\>\""}], ",", "\"\<\>\"", ",", 
         SubscriptBox["H", "0"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(B\), \(0\)]\) := \
\!\(\*OverscriptBox[SubscriptBox[\(B\), \(2\)], \(\[RightVector]\)]\).\>\"", "<>",
           "ciStr", "<>", "\"\<[1]\>\""}], ",", "\"\<\>\"", ",", 
         SubscriptBox["B", "0"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(C\), \(0\)]\) := \
\!\(\*OverscriptBox[SubscriptBox[\(C\), \(2\)], \(\[RightVector]\)]\).\>\"", "<>",
           "ciStr", "<>", "\"\<[1]\>\""}], ",", "\"\<\>\"", ",", 
         SubscriptBox["C", "0"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(D\), \(0\)]\) := \
\!\(\*OverscriptBox[SubscriptBox[\(D\), \(2\)], \(\[RightVector]\)]\).\>\"", "<>",
           "ciStr", "<>", "\"\<[1]\>\""}], ",", "\"\<\>\"", ",", 
         SubscriptBox["D", "0"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(a\), \(0\)]\)\>\"", ",", "\"\<\>\"", ",", 
         SubscriptBox["a", "0"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(b\), \(0\)]\)\>\"", ",", "\"\<\>\"", ",", 
         SubscriptBox["b", "0"]}], "}"}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(a\), \(0, W\)]\)\>\"", ",", "\"\<\>\"", ",", 
         SubscriptBox["a", 
          RowBox[{"0", ",", "W"}]]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(b\), \(0, W\)]\)\>\"", ",", "\"\<\>\"", ",", 
         SubscriptBox["b", 
          RowBox[{"0", ",", "W"}]]}], "}"}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(P\), \(0, {h, b, c, d, W}\)]\) := \
\!\(\*SubscriptBox[\(P\), \(2, {h, b, c, d, W}\)]\).\>\"", "<>", "ciStr"}], 
         ",", "\"\<\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["P", 
            RowBox[{"0", ",", "h"}]], ",", " ", 
           SubscriptBox["P", 
            RowBox[{"0", ",", "b"}]], ",", " ", 
           SubscriptBox["P", 
            RowBox[{"0", ",", "c"}]], ",", " ", 
           SubscriptBox["P", 
            RowBox[{"0", ",", "d"}]], ",", " ", 
           SubscriptBox["P", 
            RowBox[{"0", ",", "W"}]]}], "}"}]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(c\), \(0\)]\) := \!\(\*SubscriptBox[\(a\), \
\(0\)]\)\!\(\*SubscriptBox[\(b\), \(0\)]\)\>\"", ",", "\"\<\>\"", ",", 
         SubscriptBox["c", "0"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(c\), \(0, W\)]\) := \
\!\(\*SubscriptBox[\(a\), \(0, W\)]\)\!\(\*SubscriptBox[\(b\), \(0, \
W\)]\)\>\"", ",", "\"\<\>\"", ",", 
         SubscriptBox["c", 
          RowBox[{"0", ",", "W"}]]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(P\), \(0, {h, b, c, d, W}\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) \!\(\*SubsuperscriptBox[\(P\), \({h, b, \
c, d, W}\), \('\)]\) + <\!\(\*SubsuperscriptBox[\(u\), \(2\), \
\(2\)]\),\!\(\*SubscriptBox[\(L\), \(2, {h, b, c, d, W}\)]\)> + \
<\!\(\*SubsuperscriptBox[\(u\), \(2\), \(-2\)]\),\!\(\*SubscriptBox[\(R\), \
\(2, {h, b, c, d, W}\)]\)>\>\"", ",", 
         "\"\<Sanity Check\\nfor \!\(\*SubscriptBox[\(P\), \(0\)]\)\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SubscriptBox["P", 
             RowBox[{"0", ",", "h"}]], "==", 
            RowBox[{
             SubsuperscriptBox["P", "h", "'"], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["u", "2"], "^", "2"}], ")"}], ".", 
              SubscriptBox["L", 
               RowBox[{"2", ",", "h"}]]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{"modinvq", ",", 
                  SubscriptBox["u", "2"]}], "]"}], "^", "2"}], ")"}], ".", 
              SubscriptBox["R", 
               RowBox[{"2", ",", "h"}]]}]}]}], ",", " ", 
           RowBox[{
            SubscriptBox["P", 
             RowBox[{"0", ",", "b"}]], "==", 
            RowBox[{
             SubsuperscriptBox["P", "b", "'"], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["u", "2"], "^", "2"}], ")"}], ".", 
              SubscriptBox["L", 
               RowBox[{"2", ",", "b"}]]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{"modinvq", ",", 
                  SubscriptBox["u", "2"]}], "]"}], "^", "2"}], ")"}], ".", 
              SubscriptBox["R", 
               RowBox[{"2", ",", "b"}]]}]}]}], ",", " ", 
           RowBox[{
            SubscriptBox["P", 
             RowBox[{"0", ",", "d"}]], "==", 
            RowBox[{
             SubsuperscriptBox["P", "d", "'"], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["u", "2"], "^", "2"}], ")"}], ".", 
              SubscriptBox["L", 
               RowBox[{"2", ",", "d"}]]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{"modinvq", ",", 
                  SubscriptBox["u", "2"]}], "]"}], "^", "2"}], ")"}], ".", 
              SubscriptBox["R", 
               RowBox[{"2", ",", "d"}]]}]}]}], ",", " ", 
           RowBox[{
            SubscriptBox["P", 
             RowBox[{"0", ",", "W"}]], "==", 
            RowBox[{
             SubsuperscriptBox["P", "W", "'"], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["u", "2"], "^", "2"}], ")"}], ".", 
              SubscriptBox["L", 
               RowBox[{"2", ",", "W"}]]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{"modinvq", ",", 
                  SubscriptBox["u", "2"]}], "]"}], "^", "2"}], ")"}], ".", 
              SubscriptBox["R", 
               RowBox[{"2", ",", "W"}]]}]}]}]}], "}"}]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(P\), \(0, {h, b, c, d}\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) \!\(\*SubscriptBox[\(G\), \
\(0\)]\)\!\(\*SubscriptBox[\(a\), \(0\)]\) + \
{H,B,C,D\!\(\*SubscriptBox[\(}\), \(0\)]\)\!\(\*SubscriptBox[\(b\), \(0\)]\) \
+ \!\(\*SubscriptBox[\(c\), \(0\)]\)\!\(\*SuperscriptBox[\(g\), \('\)]\)\>\"",
          ",", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<Check No.2{h,b,c,d} for\\nVerification of\\nShuffle \
Proof\\n(with Inner Product Protocol) ok?\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SubscriptBox["P", 
             RowBox[{"0", ",", "h"}]], "==", "P0hcheck"}], ",", " ", 
           RowBox[{
            SubscriptBox["P", 
             RowBox[{"0", ",", "b"}]], "==", "P0bcheck"}], ",", " ", 
           RowBox[{
            SubscriptBox["P", 
             RowBox[{"0", ",", "c"}]], "==", "P0ccheck"}], ",", " ", 
           RowBox[{
            SubscriptBox["P", 
             RowBox[{"0", ",", "d"}]], "==", "P0dcheck"}]}], "}"}]}], "}"}], 
       ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(P\), \(0, W\)]\) \!\(\*OverscriptBox[\(=\), \
\(?\)]\) \!\(\*SubscriptBox[\(G\), \(0\)]\)\!\(\*SubscriptBox[\(a\), \(0, \
W\)]\) + \!\(\*SubscriptBox[\(H\), \(0\)]\)\!\(\*SubscriptBox[\(b\), \(0, \
W\)]\) + \!\(\*SubscriptBox[\(c\), \(0, W\)]\)\!\(\*SuperscriptBox[\(g\), \('\
\)]\)\>\"", ",", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<Check No.2W for\\nVerification of\\nPR Proof\\n(with Inner \
Product Protocol) ok?\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"0", ",", "W"}]], "==", "P0Wcheck"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}], ",", " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left"}], "}"}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<Inner product protocol finished.\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"CommunicationCostGrid", "[", "]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "interactive"}], ",", 
    RowBox[{"Print", "[", 
     RowBox[{"FiatShamirGrid", "[", "]"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ProcessNewMessages", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"StateMachineSave", "[", "\"\<inner_product_halving\>\"", "]"}], 
   ";"}], "\n"}], "\n", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"0", ",", "h"}]], "!=", "P0hcheck"}], ",", "\n", "\t", 
   RowBox[{
    RowBox[{
    "VerificationFailed", "[", 
     "\"\<Check No.2h for Verification of Range Proof (with Inner Product \
Protocol) on P0h\>\"", "]"}], ";"}], "\n", 
   RowBox[{"(*", "Else", "*)"}], ",", "\n", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"0", ",", "b"}]], "!=", "P0bcheck"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
      "VerificationFailed", "[", 
       "\"\<Check No.2b for Verification of Range Proof (with Inner Product \
Protocol) on P0b\>\"", "]"}], ";"}], "\n", 
     RowBox[{"(*", "Else", "*)"}], ",", "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["P", 
         RowBox[{"0", ",", "c"}]], "!=", "P0ccheck"}], ",", "\n", "\t", 
       RowBox[{
        RowBox[{
        "VerificationFailed", "[", 
         "\"\<Check No.2c for Verification of Range Proof (with Inner Product \
Protocol) on P0c\>\"", "]"}], ";"}], "\n", 
       RowBox[{"(*", "Else", "*)"}], ",", "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"0", ",", "d"}]], "!=", "P0dcheck"}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{
          "VerificationFailed", "[", 
           "\"\<Check No.2d for Verification of Range Proof (with Inner \
Product Protocol) on P0d\>\"", "]"}], ";"}], "\n", 
         RowBox[{"(*", "Else", "*)"}], ",", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["P", 
             RowBox[{"0", ",", "W"}]], "!=", "P0Wcheck"}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{
            "VerificationFailed", "[", 
             "\"\<Check No.2W for Verification of Range Proof (with Inner \
Product Protocol) on P0W\>\"", "]"}], ";"}], "\n", 
           RowBox[{"(*", "Else", "*)"}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{"VerificationSucceeded", "[", "]"}], ";"}]}], "\n", 
          "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.8803168453415823`*^9, 3.8803169920451317`*^9}, 
   3.880317060252612*^9, {3.8803171039468*^9, 3.880317244407495*^9}, {
   3.880317308510992*^9, 3.880317512446159*^9}, {3.8803175789777193`*^9, 
   3.8803176022758512`*^9}, {3.880317643252432*^9, 3.880317927157445*^9}, {
   3.88031795727234*^9, 3.880318204585939*^9}, {3.8803183992709084`*^9, 
   3.880318521172461*^9}, {3.88031856344676*^9, 3.880318570892774*^9}, {
   3.880318626698491*^9, 3.880318631170116*^9}, {3.880318662440543*^9, 
   3.880318666944921*^9}, {3.8803187185541487`*^9, 3.8803187231877604`*^9}, {
   3.880318757155273*^9, 3.880318765613302*^9}, {3.880445178282158*^9, 
   3.8804451809543056`*^9}, {3.880445633703148*^9, 3.8804456786709843`*^9}, {
   3.880445933452429*^9, 3.88044595961534*^9}, {3.881423198305366*^9, 
   3.881423282346714*^9}, {3.8814233304042187`*^9, 3.881423330716618*^9}, {
   3.881423372948728*^9, 3.881423562162627*^9}, {3.8814236059467573`*^9, 
   3.881423610332779*^9}, {3.881423666346949*^9, 3.8814237587171593`*^9}, {
   3.881423792199399*^9, 3.881423998340012*^9}, {3.88142402856146*^9, 
   3.8814240924217253`*^9}, {3.881424125234042*^9, 3.881424175884844*^9}, {
   3.881424238659995*^9, 3.881424265344554*^9}, {3.8814243156294203`*^9, 
   3.881424348884769*^9}, {3.881424387485833*^9, 3.881424596349701*^9}, {
   3.881424644253933*^9, 3.8814248411201153`*^9}, {3.881424901299919*^9, 
   3.881425203823534*^9}, {3.8814253468178377`*^9, 3.881425383650836*^9}, {
   3.881425480370874*^9, 3.881425635300887*^9}, {3.881425694492247*^9, 
   3.8814256952765493`*^9}, {3.8814257819248877`*^9, 3.881425811487357*^9}, {
   3.881425858009715*^9, 3.881425923215163*^9}, {3.8814260559243298`*^9, 
   3.881426076701185*^9}, {3.8814264888951073`*^9, 3.8814270012804203`*^9}, {
   3.881427042702829*^9, 3.881427052214493*^9}, {3.881427090935712*^9, 
   3.881427091391966*^9}, {3.8826272777854567`*^9, 3.882627280427527*^9}, 
   3.882627910710759*^9, {3.882627971497342*^9, 3.882627980697941*^9}, {
   3.882628063621964*^9, 3.882628078491207*^9}, {3.8826281216824636`*^9, 
   3.882628122465724*^9}, {3.88262852550388*^9, 3.882628535493206*^9}, {
   3.8826287625284967`*^9, 3.882628791532867*^9}, {3.882628841830415*^9, 
   3.882628842052259*^9}, {3.882628876216084*^9, 3.882629012194557*^9}, {
   3.8826291028234463`*^9, 3.882629131969844*^9}, {3.882629363381969*^9, 
   3.8826296888124037`*^9}, {3.882629719040361*^9, 3.882629786270879*^9}, {
   3.882631253376346*^9, 3.882631338437698*^9}, {3.882631395937258*^9, 
   3.882631567272575*^9}, {3.882631618187317*^9, 3.882631802141088*^9}, {
   3.8826318339792767`*^9, 3.88263184710804*^9}, {3.8826318844695177`*^9, 
   3.882632040041728*^9}, {3.882632133741102*^9, 3.882632264474086*^9}, {
   3.882632297200739*^9, 3.8826323977429667`*^9}, {3.882681773404204*^9, 
   3.882681863411594*^9}, {3.882681893802516*^9, 3.882681973389339*^9}, {
   3.882682037361861*^9, 3.882682157530059*^9}, {3.882682250664585*^9, 
   3.882682251357604*^9}, {3.882682299610368*^9, 3.882682590300316*^9}, {
   3.8826826263627787`*^9, 3.882682634662668*^9}, {3.882682690683834*^9, 
   3.882682695950554*^9}, {3.882682743713673*^9, 3.8826827637552958`*^9}, {
   3.882682798412777*^9, 3.882682799003285*^9}, {3.882683135602159*^9, 
   3.882683136091189*^9}, {3.882683217678976*^9, 3.8826832457130747`*^9}, {
   3.88268328455964*^9, 3.882683437858819*^9}, {3.882683480353362*^9, 
   3.8826834849448423`*^9}, {3.882683522396207*^9, 3.882683524668419*^9}, {
   3.8826836442921124`*^9, 3.88268366440292*^9}, {3.882683777318771*^9, 
   3.882683783899785*^9}, {3.882683860529763*^9, 3.882683893701631*^9}, {
   3.882684054138159*^9, 3.882684075031803*^9}, {3.882684105320694*^9, 
   3.8826841057987947`*^9}, {3.882684154949242*^9, 3.882684196900304*^9}, {
   3.8826842429232397`*^9, 3.882684419213359*^9}, {3.882684465553197*^9, 
   3.882684480563698*^9}, {3.882684531377277*^9, 3.882684703465274*^9}, {
   3.882684741810522*^9, 3.8826848352949753`*^9}, {3.882684887017418*^9, 
   3.882684916151682*^9}, {3.882684967196713*^9, 3.882685066206952*^9}, {
   3.882685117099575*^9, 3.8826852966832237`*^9}, {3.882685360810267*^9, 
   3.882685439439254*^9}, {3.882685476849839*^9, 3.882685664366293*^9}, {
   3.882685726033647*^9, 3.882685726665656*^9}, {3.882685766020412*^9, 
   3.882685941521679*^9}, {3.882685983390483*^9, 3.882685994588582*^9}, {
   3.882686038497983*^9, 3.882686070049348*^9}, {3.882686104359715*^9, 
   3.882686117392288*^9}, {3.882686149435135*^9, 3.882686178834569*^9}, {
   3.882686228061923*^9, 3.882686500192298*^9}, {3.882686532190242*^9, 
   3.882686583598545*^9}, {3.882686636288343*^9, 3.882687027837552*^9}, {
   3.882687074990663*^9, 3.882687114130794*^9}, {3.8826871564193563`*^9, 
   3.8826877454072857`*^9}, {3.8826877944613123`*^9, 3.882687808462734*^9}, {
   3.882687854187539*^9, 3.882688299280439*^9}, {3.882688336271636*^9, 
   3.8826887166184673`*^9}, {3.882688758950399*^9, 3.882688827252493*^9}, {
   3.882688871878743*^9, 3.882689070142447*^9}, {3.882689132462967*^9, 
   3.882689133393162*^9}, {3.882689191539826*^9, 3.882689198954117*^9}, {
   3.882871703618696*^9, 3.882871706015877*^9}, {3.882872471648245*^9, 
   3.8828724983043127`*^9}, {3.882872639812869*^9, 3.882872760775691*^9}, {
   3.8828728445859413`*^9, 3.882872851450096*^9}, {3.882872960785018*^9, 
   3.882872970646934*^9}, {3.8828730009463787`*^9, 3.882873007456025*^9}, {
   3.882874767641994*^9, 3.882874808966669*^9}, {3.882874874090487*^9, 
   3.882874906425905*^9}, {3.882957683034195*^9, 3.882957683979917*^9}, {
   3.8829605180113993`*^9, 3.882960807069467*^9}, {3.882960865187303*^9, 
   3.882960909932467*^9}, {3.882960942823245*^9, 3.8829609674862537`*^9}, {
   3.8829609977096453`*^9, 3.882961059005056*^9}, {3.882961103530452*^9, 
   3.8829611310028048`*^9}, {3.882961208572749*^9, 3.8829612369993277`*^9}, {
   3.8829612922930927`*^9, 3.882961305388537*^9}, {3.882961356440729*^9, 
   3.8829613770094843`*^9}, {3.882961510483657*^9, 3.882961687578369*^9}, {
   3.882961768215683*^9, 3.8829618709619827`*^9}, {3.882961956951597*^9, 
   3.8829619579368258`*^9}, {3.883206493537277*^9, 3.883206505669094*^9}, {
   3.883210462066413*^9, 3.8832104778172398`*^9}, {3.8832108215889378`*^9, 
   3.883210823890897*^9}, {3.883210889473254*^9, 3.883210889849287*^9}, {
   3.883221156950964*^9, 3.88322117930448*^9}, {3.883508707254506*^9, 
   3.883508730186901*^9}, {3.883513599375894*^9, 3.883513618548256*^9}, {
   3.883513662360074*^9, 3.883513761944086*^9}, {3.8835165274617977`*^9, 
   3.883516528380986*^9}, 3.883602613070549*^9, {3.8836027053219748`*^9, 
   3.883602705699849*^9}, {3.883714927531294*^9, 3.883714927627656*^9}, {
   3.883714967334708*^9, 3.883714967526979*^9}, {3.883763571105795*^9, 
   3.883763573851284*^9}, {3.883763656582615*^9, 3.8837636850476027`*^9}, {
   3.884752116275693*^9, 3.88475211652713*^9}, {3.8847848544332943`*^9, 
   3.884784875057222*^9}, {3.8847862303686247`*^9, 3.8847862306972647`*^9}, {
   3.8873904160061555`*^9, 3.8873904204512987`*^9}, {3.8873939223537183`*^9, 
   3.8873941457366858`*^9}, {3.887394180465366*^9, 3.8873942370640535`*^9}, {
   3.887394267918202*^9, 3.887394424220129*^9}, {3.887394457387715*^9, 
   3.887394496400894*^9}, {3.8873945298675528`*^9, 3.8873945647625494`*^9}, {
   3.8873948201814957`*^9, 3.887394919147462*^9}, {3.8873949582098403`*^9, 
   3.887394974374786*^9}, {3.8873950369255595`*^9, 3.887395072556863*^9}, 
   3.887395102947466*^9, {3.887395147031458*^9, 3.887395184690429*^9}, {
   3.8873952179454064`*^9, 3.8873952740499983`*^9}, {3.8873953131056833`*^9, 
   3.8873953528764143`*^9}, {3.887395418951373*^9, 3.8873954202755346`*^9}, {
   3.887395513497699*^9, 3.8873955874469604`*^9}, {3.8874830269415393`*^9, 
   3.8874830322746058`*^9}, {3.8874832165744767`*^9, 
   3.8874832166340027`*^9}, {3.8874909150331235`*^9, 3.887490939938093*^9}, {
   3.8874910099711494`*^9, 3.8874910102717266`*^9}, {3.887649169139391*^9, 
   3.8876491692712617`*^9}, 3.889464792074789*^9, {3.889631940766906*^9, 
   3.889631949381219*^9}, {3.892280193961033*^9, 3.892280215325301*^9}, {
   3.892280823803872*^9, 3.892280834623528*^9}, {3.8922814307572002`*^9, 
   3.892281509292561*^9}, {3.8922815600207767`*^9, 3.8922815649701357`*^9}, {
   3.892281650070352*^9, 3.892281706268689*^9}, {3.892483160926795*^9, 
   3.8924831679916077`*^9}, {3.892485468980348*^9, 3.892485482421975*^9}, {
   3.8924855666873083`*^9, 3.892485815182085*^9}, {3.892485886837204*^9, 
   3.892486133450164*^9}, {3.892486187885151*^9, 3.892486317989564*^9}, {
   3.8924863489445868`*^9, 3.892486360002459*^9}, {3.892486402361924*^9, 
   3.8924867277522583`*^9}, {3.8983350069244404`*^9, 3.898335006967409*^9}, 
   3.8983350588154097`*^9, {3.8983381167474065`*^9, 3.8983381199634285`*^9}, {
   3.898338292945256*^9, 3.898338420597661*^9}, {3.8983384719290915`*^9, 
   3.898338501905304*^9}, {3.89833864773493*^9, 3.8983386597476616`*^9}, {
   3.8983388123312464`*^9, 3.898338899725708*^9}, {3.8983389953683205`*^9, 
   3.8983391152447257`*^9}, 3.8983392770092993`*^9, {3.8983397174401517`*^9, 
   3.898339717533546*^9}, {3.8983443985226393`*^9, 3.89834440944831*^9}, {
   3.899030391033938*^9, 3.8990306031530447`*^9}, {3.899030656249524*^9, 
   3.899030681645104*^9}, {3.899030712834798*^9, 3.8990308466684732`*^9}, {
   3.899030901138794*^9, 3.899030951629242*^9}, {3.8990309899523845`*^9, 
   3.8990310648226385`*^9}, {3.899031107533107*^9, 3.8990311715133533`*^9}, {
   3.8990312111643057`*^9, 3.899031518930483*^9}, 3.8992631530704794`*^9, {
   3.899295964745034*^9, 3.899295965035081*^9}, 3.899303624215009*^9, {
   3.8993860314729176`*^9, 3.899386040333558*^9}, 3.9112943407918205`*^9, {
   3.911405959275115*^9, 3.9114063896625085`*^9}},
 CellLabel->
  "In[254]:=",ExpressionUUID->"7cbfb4eb-9a57-4566-bb8a-353be8f5688f"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Iteration 2 (Counting from 2 to 0)\"\>", "\[SpanFromLeft]", 
     "\[SpanFromLeft]", "\[SpanFromLeft]"},
    {
     StyleBox["\<\"Name\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Semantics\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Value\"\>",
      StripOnInput->False,
      FontWeight->Bold], ""},
    {"\<\"k := \\!\\(\\*SubscriptBox[\\(k\\), \\(2\\)]\\).2\"\>", \
"\<\"Current Iteration\\n(counting down)\"\>", "2", ""},
    {"\<\"\\!\\(\\*SubscriptBox[\\(n\\), \\(2\\)]\\).2 = \
\\!\\(\\*SuperscriptBox[\\(2\\), \\(k\\)]\\)\"\>", "\<\"Current Length\\nof \
Vectors\"\>", "4", ""},
    {"\<\"\\!\\(\\*OverscriptBox[\\(G\\), \\(\[RightVector]\\)]\\) := \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(G\\), \\(2\\)], \
\\(\[RightVector]\\)]\\).2\"\>", "\<\"\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "101548470124358210188072679181678188450387789916654718462374321277161\
805765354", ",", 
         "70108350633035199759065376354370719210357510544392766796027711414587\
086150112"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "818812811918823551608811408199264118592235792161617862192470207890848\
41886435", ",", 
         "40551526063420644421580965386725729859544147053123598525382531556934\
666119757"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "274279571687672225109216506200775707987097537975573362402331376184758\
33226690", ",", 
         "42650441509520284448005737515710331630163209846762957134645512392724\
356208176"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{"\[Infinity]", ",", "\[Infinity]"}], "]"}]}], "}"}], ""},
    {"\<\"\\!\\(\\*OverscriptBox[\\(H\\), \\(\[RightVector]\\)]\\) := \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(H\\), \\(2\\)], \
\\(\[RightVector]\\)]\\).2\"\>", "\<\"\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "785674097981298148661500560603078103996738496710942114275537926180097\
91659223", ",", 
         "50464327830870926983164620566499054037449550745776160850919973618220\
747519859"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "162303258739445677706511811303033249121212244908024072820227896499932\
84143768", ",", 
         "13743595330208364632961058787086372972527668621267658729713274917516\
765878025"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "739558631559335359828590745098369955658146822271181152229700620948717\
22157004", ",", 
         "12661142626516128143965107877524977948748772063737046982621034957911\
954836350"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{"\[Infinity]", ",", "\[Infinity]"}], "]"}]}], "}"}], ""},
    {"\<\"\\!\\(\\*OverscriptBox[\\(B\\), \\(\[RightVector]\\)]\\) := \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(B\\), \\(2\\)], \
\\(\[RightVector]\\)]\\).2\"\>", "\<\"\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "590437198390560930604556477730311104265134154459595929062830225361099\
82690406", ",", 
         "15581121562794375473593189690062526490521359132176103829752471918632\
370295336"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "112521091029611710525094888851919040284401236803289858290779025976942\
166966892", ",", 
         "71802849234922876881679460540584158214170652826348764564492847489002\
175595813"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "351742354823919065765505904333578332403550468072452553819644948944760\
83182660", ",", 
         "55925870782800122155770079253820122879523420329479534761202990107031\
888939945"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{"\[Infinity]", ",", "\[Infinity]"}], "]"}]}], "}"}], ""},
    {"\<\"\\!\\(\\*OverscriptBox[\\(C\\), \\(\[RightVector]\\)]\\) := \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(C\\), \\(2\\)], \
\\(\[RightVector]\\)]\\).2\"\>", "\<\"\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "826779931946659024745411227286282391069746337307219163154487996543807\
24509062", ",", 
         "82899414855368741404724030068539514612899114324925700999638050403382\
505421116"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "454220983855275201057292421553859122393963522751876918699155106209919\
34660246", ",", 
         "42981417682506542040834084511832054752082115267275737379170623738544\
398871700"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "797315916863813987517928154161254482588443778451991359384727300722633\
16128928", ",", 
         "14986293206980309680514267840081157662963426467477088209824552014914\
871589040"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{"\[Infinity]", ",", "\[Infinity]"}], "]"}]}], "}"}], ""},
    {"\<\"\\!\\(\\*OverscriptBox[\\(D\\), \\(\[RightVector]\\)]\\) := \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(D\\), \\(2\\)], \
\\(\[RightVector]\\)]\\).2\"\>", "\<\"\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "970388739976675561648906271591438165840367376014120471817861153251375\
86601893", ",", 
         "28632182194222295567409644033114434203763962660717808858714880991421\
895676479"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "114943785603625565834113287895479632817105457530959156178552924525977\
788156149", ",", 
         "75005268061152234748488293094956398629562793675286378681571354303324\
894122899"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "342830138940726677212758316537937979811179130685633313242820320739349\
83384369", ",", 
         "16444072431226081049726942532624576021955849773018079843576838182070\
874161038"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{"\[Infinity]", ",", "\[Infinity]"}], "]"}]}], "}"}], ""},
    {"\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\({h, b, c, d, W}\\)]\\) := \
\\!\\(\\*SubscriptBox[\\(P\\), \\(2, {h, b, c, d, W}\\)]\\).2\"\>", \
"\<\"\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "424273732157937816594089248437682272258827702253757571263975035270688\
91674844", ",", 
         "25721469407782422059186990187869888211409564752656079140365100434148\
494723328"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "530931559711983503751340754415107725691937096295780949311418131546022\
40565106", ",", 
         "55938320630024527613951665036283624008160716735992177830942127603092\
847901156"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "876232783633840135016162992875481324762501779026500416484639531403364\
03353190", ",", 
         "41060481386143080378375521196934627853309131610093864338133773149938\
053272351"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "818489199760033701144735637712572376924488084306261669454315680465548\
18008682", ",", 
         "26438262705961076267123100491277956086507763515987268018988433016310\
70212794"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "989916106984485676010409796568865254084889401631205482182528966694330\
46079564", ",", 
         "52231224843856607266205397725579670752662648688237226846639049801479\
304835028"}], "]"}]}], "}"}], ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.9139489500900316`*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"0e1bc6aa-a421-4af5-85ac-a2fcfc95a782"],

Cell[BoxData["\<\"Waiting to receive Lh.2 from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.913948950101025*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"1447af3e-118a-4f6e-bde6-a78cf9722c6a"],

Cell[BoxData["\<\"Waiting to receive Rh.2 from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.913948953764426*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"52d985fa-cc44-4c4d-87a3-d1db8c4e08ca"],

Cell[BoxData["\<\"Waiting to receive Lb.2 from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.9139489537714157`*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"9ab669b6-45c0-413e-a39a-1e945d26485a"],

Cell[BoxData["\<\"Waiting to receive Rb.2 from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.913948953793891*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"38b46d7b-ec81-495c-b758-fe275e291925"],

Cell[BoxData["\<\"Waiting to receive Lc.2 from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.913948953826537*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"feb46920-bdc0-495a-8898-545fc628bd23"],

Cell[BoxData["\<\"Waiting to receive Rc.2 from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.9139489538560896`*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"66254b54-a1c5-4479-8a34-b256ea7ba5bb"],

Cell[BoxData["\<\"Waiting to receive Ld.2 from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.913948953879345*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"027b85c3-a74f-44b5-9a9e-4e87bd41d76b"],

Cell[BoxData["\<\"Waiting to receive Rd.2 from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.9139489539006033`*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"76017dc7-ad57-48e9-8133-7bd9a819df08"],

Cell[BoxData["\<\"Waiting to receive LW.2 from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.9139489539066114`*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"792f8110-7a9c-49ab-9d3b-24dbaae1207b"],

Cell[BoxData["\<\"Waiting to receive RW.2 from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.913948953927781*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"a426384b-4acb-481a-8e6b-199bc52f956a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Name\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Semantics\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Value\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(L\\), \\({h, b, c, d}\\)]\\) := \
\\!\\(\\*SubscriptBox[\\(L\\), \\(2, {h, b, c, d}\\)]\\).2\"\>", \
"\<\"Commitments to\\n halves of \\!\\(\\*OverscriptBox[\\(a\\), \\(\
\[RightVector]\\)]\\) and \\!\\(\\*OverscriptBox[\\(b\\), \
\\(\[RightVector]\\)]\\)\\nbased on \\n{\\!\\(\\*OverscriptBox[\\(h\\), \\(\
\[RightVector]\\)]\\),\\!\\(\\*OverscriptBox[\\(b\\), \
\\(\[RightVector]\\)]\\),\\!\\(\\*OverscriptBox[\\(c\\), \
\\(\[RightVector]\\)]\\),\\!\\(\\*OverscriptBox[\\(d\\), \
\\(\[RightVector]\\)]\\)} from P\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "519378483230617226104751819808305919146609584064284337895582401071982\
47801268", ",", 
         "10656015593838002920193035458004016755143214177576008514876494314617\
8634187408"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "798636229497714752437793604744525906393283258964573380876591963414072\
41191284", ",", 
         "10585378123669566621541148844736314563756196249605698889436713459902\
3782061088"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "637359172098787548994232027168286211032735041279961166739523530527751\
58151114", ",", 
         "10334879205748287384400001314632313757504626454658986357082214129134\
5337897709"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "641442919524705584571084268948588873817062063544216181272229647694061\
83073866", ",", 
         "22976399845655856110533247256745291708577099142828485890448033233661\
884359996"}], "]"}]}], "}"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(R\\), \\({h, b, c, d}\\)]\\) := \
\\!\\(\\*SubscriptBox[\\(R\\), \\(2, {h, b, c, d}\\)]\\).2\"\>", \
"\<\"Commitments to\\n other halves of \\!\\(\\*OverscriptBox[\\(a\\), \\(\
\[RightVector]\\)]\\) and \\!\\(\\*OverscriptBox[\\(b\\), \
\\(\[RightVector]\\)]\\)\\nbased on \\n{\\!\\(\\*OverscriptBox[\\(h\\), \\(\
\[RightVector]\\)]\\),\\!\\(\\*OverscriptBox[\\(b\\), \
\\(\[RightVector]\\)]\\),\\!\\(\\*OverscriptBox[\\(c\\), \
\\(\[RightVector]\\)]\\),\\!\\(\\*OverscriptBox[\\(d\\), \
\\(\[RightVector]\\)]\\)} from P\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "135734838334461950393861918231264702005572580274564456882823447843361\
03649212", ",", 
         "92052865363241580056892319302489258396224827868501036283611297590954\
929380563"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "871573282387848763681705852051458641495179175466406760118285059262293\
37545559", ",", 
         "49329002166834480429318163327266459724785883670773200913837835518032\
372564965"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "715203437676739365170248018603883666355117192715462260547947190938021\
83956346", ",", 
         "95538733641451563272363064525451229606213911118991592717141224642631\
82680439"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "460356129307529396289479620401071605543588131798865321335428623334599\
24699781", ",", 
         "45447377390389063397803533683113774914322866417884852592242983262329\
077405730"}], "]"}]}], "}"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(L\\), \\(W\\)]\\) := \
\\!\\(\\*SubscriptBox[\\(L\\), \\(2, W\\)]\\).2\"\>", "\<\"Commitment \
to\\nhalves of\\n\\!\\(\\*OverscriptBox[SubscriptBox[\\(a\\), \\(2, W\\)], \
\\(\[RightVector]\\)]\\) and \\!\\(\\*OverscriptBox[SubscriptBox[\\(b\\), \
\\(2, W\\)], \\(\[RightVector]\\)]\\)\\nfrom P2\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "72556481017632433693661511017633298756512321178079509482506125039316340\
588923", ",", 
       "5862812383406476657508173364740227620493748793967444200153355908339911\
8278801"}], "]"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(R\\), \\(W\\)]\\) := \
\\!\\(\\*SubscriptBox[\\(R\\), \\(2, W\\)]\\).2\"\>", "\<\"Commitment \
to\\nother halves of\\n\\!\\(\\*OverscriptBox[SubscriptBox[\\(a\\), \\(2, \
W\\)], \\(\[RightVector]\\)]\\) and \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(b\\), \\(2, W\\)], \
\\(\[RightVector]\\)]\\)\\nfrom P2\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "78477488904028436481347412600613206616914628278154149166226514663489162\
792819", ",", 
       "6247703021684575120229172459504646297671321951456904911106626166428084\
591726"}], "]"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.913948953952767*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"3f85f9a9-85cb-4125-a342-508d3c6a4460"],

Cell[BoxData["\<\"Generated random challenge\\n  u.2 = \
49778263016596358861024029034781411586030758570633068967576917901438334298455\
\"\>"], "Print",
 CellChangeTimes->{3.9139489539637747`*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"8bff1ee9-24d1-4012-9392-1d539a861834"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Fold \\!\\(\\*OverscriptBox[\\(G\\), \\(\[RightVector]\\)]\\), \
\\!\\(\\*OverscriptBox[\\(H\\), \\(\[RightVector]\\)]\\), \
\\!\\(\\*OverscriptBox[\\(B\\), \\(\[RightVector]\\)]\\), \
\\!\\(\\*OverscriptBox[\\(C\\), \\(\[RightVector]\\)]\\), \
\\!\\(\\*OverscriptBox[\\(D\\), \\(\[RightVector]\\)]\\) and \
\\!\\(\\*OverscriptBox[\\(P\\), \\(\[RightVector]\\)]\\) based on challenge \
\\!\\(\\*SubscriptBox[\\(u\\), \\(IP\\)]\\)\"\>", "\[SpanFromLeft]"},
    {
     StyleBox["\<\"Name\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Value\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(u\\), \\(IP\\)]\\) := \
\\!\\(\\*SubscriptBox[\\(u\\), \\(2\\)]\\).2\"\>", 
     "497782630165963588610240290347814115860307585706330689675769179014383342\
98455"},
    {"\<\"\\!\\(\\*OverscriptBox[SubscriptBox[\\(G\\), \\(next\\)], \\(\
\[RightVector]\\)]\\) := \\!\\(\\*SubsuperscriptBox[\\(u\\), \\(IP\\), \
\\(-1\\)]\\)\\!\\(\\*OverscriptBox[SubscriptBox[\\(G\\), \\(lo\\)], \\(\
\[RightVector]\\)]\\) + \\!\\(\\*SubscriptBox[\\(u\\), \
\\(IP\\)]\\)\\!\\(\\*OverscriptBox[SubscriptBox[\\(G\\), \\(hi\\)], \\(\
\[RightVector]\\)]\\)\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "719711417619375298030364340369582853299012099751248513657809201186618\
4268691", ",", 
         "60730773379641461649895581236702273487306200766726745877010587530816\
841971454"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "257403096521302947920142746238229062337786983856320877971795907565866\
11447326", ",", 
         "75592885573528415048394534469747966898542396791455668946720722552360\
25649192"}], "]"}]}], "}"}]},
    {"\<\"\\!\\(\\*OverscriptBox[SubscriptBox[\\(H\\), \\(next\\)], \\(\
\[RightVector]\\)]\\) := \\!\\(\\*SubscriptBox[\\(u\\), \
\\(IP\\)]\\)\\!\\(\\*OverscriptBox[SubscriptBox[\\(H\\), \\(lo\\)], \\(\
\[RightVector]\\)]\\) + \\!\\(\\*SubsuperscriptBox[\\(u\\), \\(IP\\), \
\\(-1\\)]\\)\\!\\(\\*OverscriptBox[SubscriptBox[\\(H\\), \\(hi\\)], \\(\
\[RightVector]\\)]\\)\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "992366931558972423617580258042659237985728143516961981758166478480630\
5050600", ",", 
         "69301315300106900630344329105588533710615432967412701440587206110103\
239979056"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "699585542806724697336432754196801164573750503303913483006381926076976\
74499972", ",", 
         "70322526074710939661538785781005409111808935480016459677331324303468\
832670948"}], "]"}]}], "}"}]},
    {"\<\"\\!\\(\\*OverscriptBox[SubscriptBox[\\(B\\), \\(next\\)], \\(\
\[RightVector]\\)]\\) := \\!\\(\\*SubscriptBox[\\(u\\), \
\\(IP\\)]\\)\\!\\(\\*OverscriptBox[SubscriptBox[\\(B\\), \\(lo\\)], \\(\
\[RightVector]\\)]\\) + \\!\\(\\*SubsuperscriptBox[\\(u\\), \\(IP\\), \
\\(-1\\)]\\)\\!\\(\\*OverscriptBox[SubscriptBox[\\(B\\), \\(hi\\)], \\(\
\[RightVector]\\)]\\)\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "103181688540283550900115377074572906022092269214954726718790501569337\
390653136", ",", 
         "88587317905811582887852333128737362967001668115722517496378551323743\
472873003"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "780439508499396849054948862801076552035687052989396631959604274648707\
94481036", ",", 
         "63028727487347507861088825955612637572326719118902670929364859450357\
002591244"}], "]"}]}], "}"}]},
    {"\<\"\\!\\(\\*OverscriptBox[SubscriptBox[\\(C\\), \\(next\\)], \\(\
\[RightVector]\\)]\\) := \\!\\(\\*SubscriptBox[\\(u\\), \
\\(IP\\)]\\)\\!\\(\\*OverscriptBox[SubscriptBox[\\(C\\), \\(lo\\)], \\(\
\[RightVector]\\)]\\) + \\!\\(\\*SubsuperscriptBox[\\(u\\), \\(IP\\), \
\\(-1\\)]\\)\\!\\(\\*OverscriptBox[SubscriptBox[\\(C\\), \\(hi\\)], \\(\
\[RightVector]\\)]\\)\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "776483988349559814349152251713726700339201107983829729955574965360721\
60616152", ",", 
         "11499320661719488458225246717887055903502167439291993289992213408589\
0650235761"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "401647755305398063459286894293551398829765224972037433291131978705996\
9395864", ",", 
         "10778035507305424654727455075771094349051135251124662491455707708727\
8354014724"}], "]"}]}], "}"}]},
    {"\<\"\\!\\(\\*OverscriptBox[SubscriptBox[\\(D\\), \\(next\\)], \\(\
\[RightVector]\\)]\\) := \\!\\(\\*SubscriptBox[\\(u\\), \
\\(IP\\)]\\)\\!\\(\\*OverscriptBox[SubscriptBox[\\(D\\), \\(lo\\)], \\(\
\[RightVector]\\)]\\) + \\!\\(\\*SubsuperscriptBox[\\(u\\), \\(IP\\), \
\\(-1\\)]\\)\\!\\(\\*OverscriptBox[SubscriptBox[\\(D\\), \\(hi\\)], \\(\
\[RightVector]\\)]\\)\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "920456486878227041287013449696153121154529861967683156516253150998047\
1661504", ",", 
         "11065673093678615894827904053773180671919487634874096064849250889370\
6752655534"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "573183994605796513828557441600549651443490452807545417963390581337514\
50351507", ",", 
         "97524310910611411569542934206004314153687639236214032834759760226652\
95425015"}], "]"}]}], "}"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\(next, {h, b, c, d, W}\\)]\\) := \
\\!\\(\\*SubscriptBox[\\(P\\), \\({h, b, c, d, W}\\)]\\) + \
\\!\\(\\*SubsuperscriptBox[\\(u\\), \\(IP\\), \
\\(2\\)]\\)\\!\\(\\*SubscriptBox[\\(L\\), \\({h, b, c, d, W}\\)]\\) + \
\\!\\(\\*SubsuperscriptBox[\\(u\\), \\(IP\\), \
\\(-2\\)]\\)\\!\\(\\*SubscriptBox[\\(R\\), \\({h, b, c, d, W}\\)]\\)\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "865492937007055763106707787845978363337415410839967551119594802346969\
72978414", ",", 
         "20933742971864474163704352952168549433873232361691192046047306574101\
250855678"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "532923728108006155708738654151209498921676536121965175472749407565106\
9853882", ",", 
         "25505779482843203644899024985738424791777493582803862991865292667174\
203131274"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "101669631185013308541174320487441264026981613007202453793298531133729\
240553633", ",", 
         "82960685798015610060110994730438408801163464994126881961038986643726\
868054985"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "809301212401661025055415823359097690994185507459214709893273390288704\
73478673", ",", 
         "73213433432881882608741265907352624933247540024738086475996367177305\
424525869"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "776554192947024146465211525770064515045704310196148163805328709489649\
23887672", ",", 
         "68497091790293927373067739936022331983241210497850650557960541940114\
992397821"}], "]"}]}], "}"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.9139489546483684`*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"60da5958-1719-4dc3-99de-0e155a163521"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Iteration 1 (Counting from 2 to 0)\"\>", "\[SpanFromLeft]", 
     "\[SpanFromLeft]", "\[SpanFromLeft]"},
    {
     StyleBox["\<\"Name\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Semantics\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Value\"\>",
      StripOnInput->False,
      FontWeight->Bold], ""},
    {"\<\"k := \\!\\(\\*SubscriptBox[\\(k\\), \\(2\\)]\\).1\"\>", \
"\<\"Current Iteration\\n(counting down)\"\>", "1", ""},
    {"\<\"\\!\\(\\*SubscriptBox[\\(n\\), \\(2\\)]\\).1 = \
\\!\\(\\*SuperscriptBox[\\(2\\), \\(k\\)]\\)\"\>", "\<\"Current Length\\nof \
Vectors\"\>", "2", ""},
    {"\<\"\\!\\(\\*OverscriptBox[\\(G\\), \\(\[RightVector]\\)]\\) := \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(G\\), \\(2\\)], \
\\(\[RightVector]\\)]\\).1\"\>", "\<\"\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "719711417619375298030364340369582853299012099751248513657809201186618\
4268691", ",", 
         "60730773379641461649895581236702273487306200766726745877010587530816\
841971454"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "257403096521302947920142746238229062337786983856320877971795907565866\
11447326", ",", 
         "75592885573528415048394534469747966898542396791455668946720722552360\
25649192"}], "]"}]}], "}"}], ""},
    {"\<\"\\!\\(\\*OverscriptBox[\\(H\\), \\(\[RightVector]\\)]\\) := \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(H\\), \\(2\\)], \
\\(\[RightVector]\\)]\\).1\"\>", "\<\"\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "992366931558972423617580258042659237985728143516961981758166478480630\
5050600", ",", 
         "69301315300106900630344329105588533710615432967412701440587206110103\
239979056"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "699585542806724697336432754196801164573750503303913483006381926076976\
74499972", ",", 
         "70322526074710939661538785781005409111808935480016459677331324303468\
832670948"}], "]"}]}], "}"}], ""},
    {"\<\"\\!\\(\\*OverscriptBox[\\(B\\), \\(\[RightVector]\\)]\\) := \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(B\\), \\(2\\)], \
\\(\[RightVector]\\)]\\).1\"\>", "\<\"\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "103181688540283550900115377074572906022092269214954726718790501569337\
390653136", ",", 
         "88587317905811582887852333128737362967001668115722517496378551323743\
472873003"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "780439508499396849054948862801076552035687052989396631959604274648707\
94481036", ",", 
         "63028727487347507861088825955612637572326719118902670929364859450357\
002591244"}], "]"}]}], "}"}], ""},
    {"\<\"\\!\\(\\*OverscriptBox[\\(C\\), \\(\[RightVector]\\)]\\) := \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(C\\), \\(2\\)], \
\\(\[RightVector]\\)]\\).1\"\>", "\<\"\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "776483988349559814349152251713726700339201107983829729955574965360721\
60616152", ",", 
         "11499320661719488458225246717887055903502167439291993289992213408589\
0650235761"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "401647755305398063459286894293551398829765224972037433291131978705996\
9395864", ",", 
         "10778035507305424654727455075771094349051135251124662491455707708727\
8354014724"}], "]"}]}], "}"}], ""},
    {"\<\"\\!\\(\\*OverscriptBox[\\(D\\), \\(\[RightVector]\\)]\\) := \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(D\\), \\(2\\)], \
\\(\[RightVector]\\)]\\).1\"\>", "\<\"\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "920456486878227041287013449696153121154529861967683156516253150998047\
1661504", ",", 
         "11065673093678615894827904053773180671919487634874096064849250889370\
6752655534"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "573183994605796513828557441600549651443490452807545417963390581337514\
50351507", ",", 
         "97524310910611411569542934206004314153687639236214032834759760226652\
95425015"}], "]"}]}], "}"}], ""},
    {"\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\({h, b, c, d, W}\\)]\\) := \
\\!\\(\\*SubscriptBox[\\(P\\), \\(2, {h, b, c, d, W}\\)]\\).1\"\>", \
"\<\"\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "865492937007055763106707787845978363337415410839967551119594802346969\
72978414", ",", 
         "20933742971864474163704352952168549433873232361691192046047306574101\
250855678"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "532923728108006155708738654151209498921676536121965175472749407565106\
9853882", ",", 
         "25505779482843203644899024985738424791777493582803862991865292667174\
203131274"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "101669631185013308541174320487441264026981613007202453793298531133729\
240553633", ",", 
         "82960685798015610060110994730438408801163464994126881961038986643726\
868054985"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "809301212401661025055415823359097690994185507459214709893273390288704\
73478673", ",", 
         "73213433432881882608741265907352624933247540024738086475996367177305\
424525869"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "776554192947024146465211525770064515045704310196148163805328709489649\
23887672", ",", 
         "68497091790293927373067739936022331983241210497850650557960541940114\
992397821"}], "]"}]}], "}"}], ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.913948954666376*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"d3b3878d-556c-4a1a-ba4e-cb11e6702e01"],

Cell[BoxData["\<\"Waiting to receive Lh.1 from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.913948954675353*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"22deb4e9-7db8-4480-b4a7-c719cb3bf7ad"],

Cell[BoxData["\<\"Waiting to receive Rh.1 from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.9139489559903407`*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"0647248c-b0b1-4c96-ae29-e34467490609"],

Cell[BoxData["\<\"Waiting to receive Lb.1 from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.9139489560093117`*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"de29d5ea-f1b9-4532-99ce-f16730becf47"],

Cell[BoxData["\<\"Waiting to receive Rb.1 from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.9139489560285344`*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"445a937e-5e73-4705-a57f-df2db3eda444"],

Cell[BoxData["\<\"Waiting to receive Lc.1 from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.913948956049899*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"a502b6b0-4785-46d3-962b-66744d7b93e1"],

Cell[BoxData["\<\"Waiting to receive Rc.1 from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.913948956056895*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"88bf2e1f-7f63-4444-8ecb-af00735d0abb"],

Cell[BoxData["\<\"Waiting to receive Ld.1 from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.913948956075613*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"4facdc1d-1c87-4aa9-80a5-ce906a9d61d4"],

Cell[BoxData["\<\"Waiting to receive Rd.1 from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.9139489560956106`*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"ae8366ea-b4ad-445e-9de2-049e7a1a8066"],

Cell[BoxData["\<\"Waiting to receive LW.1 from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.9139489561026073`*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"279bc8ba-6e5b-4a81-a6f1-080009cef96b"],

Cell[BoxData["\<\"Waiting to receive RW.1 from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.913948956122599*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"88efd781-fe82-4e1d-898b-6882316d222a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Name\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Semantics\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Value\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(L\\), \\({h, b, c, d}\\)]\\) := \
\\!\\(\\*SubscriptBox[\\(L\\), \\(2, {h, b, c, d}\\)]\\).1\"\>", \
"\<\"Commitments to\\n halves of \\!\\(\\*OverscriptBox[\\(a\\), \\(\
\[RightVector]\\)]\\) and \\!\\(\\*OverscriptBox[\\(b\\), \
\\(\[RightVector]\\)]\\)\\nbased on \\n{\\!\\(\\*OverscriptBox[\\(h\\), \\(\
\[RightVector]\\)]\\),\\!\\(\\*OverscriptBox[\\(b\\), \
\\(\[RightVector]\\)]\\),\\!\\(\\*OverscriptBox[\\(c\\), \
\\(\[RightVector]\\)]\\),\\!\\(\\*OverscriptBox[\\(d\\), \
\\(\[RightVector]\\)]\\)} from P\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "756750595262755040689187771116048587884716299151344201712658128966261\
19066391", ",", 
         "18197204939082113188285923802867554462472120668263296596875421190375\
977857454"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "124163770225459227449399824682899965209340720560237444310175016561843\
89730319", ",", 
         "81051326905139913890607962198725137410169439643088588490840272138742\
545929540"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "988532911292516356800532124065821807895526008289135075232505680842179\
54820657", ",", 
         "87281355932318972300122755145147993995828597934957482135707810979826\
096889712"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "898510198058651178347874787023138404670992468478288629887948684933852\
34963271", ",", 
         "10261371339460202553165527510378999864989933882249962958151606189754\
134106417"}], "]"}]}], "}"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(R\\), \\({h, b, c, d}\\)]\\) := \
\\!\\(\\*SubscriptBox[\\(R\\), \\(2, {h, b, c, d}\\)]\\).1\"\>", \
"\<\"Commitments to\\n other halves of \\!\\(\\*OverscriptBox[\\(a\\), \\(\
\[RightVector]\\)]\\) and \\!\\(\\*OverscriptBox[\\(b\\), \
\\(\[RightVector]\\)]\\)\\nbased on \\n{\\!\\(\\*OverscriptBox[\\(h\\), \\(\
\[RightVector]\\)]\\),\\!\\(\\*OverscriptBox[\\(b\\), \
\\(\[RightVector]\\)]\\),\\!\\(\\*OverscriptBox[\\(c\\), \
\\(\[RightVector]\\)]\\),\\!\\(\\*OverscriptBox[\\(d\\), \
\\(\[RightVector]\\)]\\)} from P\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "305496682478773151685863541894540400469053524685016121330789912629374\
58834121", ",", 
         "80640412575205724957425259836442704905583972277543858109417734354465\
89877912"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "172710822371146616627821395283339541350609366981816971070197925391319\
82397059", ",", 
         "10048511388286741311322657622425846794563285504029743866940455763018\
7333726261"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "770395398253549128296215074321280990802271164878993225744052357294211\
93756314", ",", 
         "19810300289411477639048480556880870950820614431045845021683132249865\
903583930"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "932681381651825463848182857024181879459286660908178656432114345445622\
42435789", ",", 
         "11127959722728629327737613414432374337431122096386162627801017573681\
5569060927"}], "]"}]}], "}"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(L\\), \\(W\\)]\\) := \
\\!\\(\\*SubscriptBox[\\(L\\), \\(2, W\\)]\\).1\"\>", "\<\"Commitment \
to\\nhalves of\\n\\!\\(\\*OverscriptBox[SubscriptBox[\\(a\\), \\(2, W\\)], \
\\(\[RightVector]\\)]\\) and \\!\\(\\*OverscriptBox[SubscriptBox[\\(b\\), \
\\(2, W\\)], \\(\[RightVector]\\)]\\)\\nfrom P1\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "14388906438534551094002496836880047677016190339915135357923304609889922\
238095", ",", 
       "2535007702111827699430258744456373593331559130091221938340443446216030\
7924273"}], "]"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(R\\), \\(W\\)]\\) := \
\\!\\(\\*SubscriptBox[\\(R\\), \\(2, W\\)]\\).1\"\>", "\<\"Commitment \
to\\nother halves of\\n\\!\\(\\*OverscriptBox[SubscriptBox[\\(a\\), \\(2, \
W\\)], \\(\[RightVector]\\)]\\) and \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(b\\), \\(2, W\\)], \
\\(\[RightVector]\\)]\\)\\nfrom P1\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "10117195653173257174644021006267201311290551099530377666501693100297774\
2739679", ",", 
       "9546526480510401099828245045133912784046751718236390267487544190294942\
0100229"}], "]"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.9139489561475716`*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"d59b6fc4-bd96-41e4-8316-cb38871ebaa6"],

Cell[BoxData["\<\"Generated random challenge\\n  u.1 = \
60107283168128902360549399981388134586079393627328093194820115310250308340078\
\"\>"], "Print",
 CellChangeTimes->{3.9139489561645803`*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"a059e471-cdb7-4736-bc90-63dd19684560"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Fold \\!\\(\\*OverscriptBox[\\(G\\), \\(\[RightVector]\\)]\\), \
\\!\\(\\*OverscriptBox[\\(H\\), \\(\[RightVector]\\)]\\), \
\\!\\(\\*OverscriptBox[\\(B\\), \\(\[RightVector]\\)]\\), \
\\!\\(\\*OverscriptBox[\\(C\\), \\(\[RightVector]\\)]\\), \
\\!\\(\\*OverscriptBox[\\(D\\), \\(\[RightVector]\\)]\\) and \
\\!\\(\\*OverscriptBox[\\(P\\), \\(\[RightVector]\\)]\\) based on challenge \
\\!\\(\\*SubscriptBox[\\(u\\), \\(IP\\)]\\)\"\>", "\[SpanFromLeft]"},
    {
     StyleBox["\<\"Name\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Value\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(u\\), \\(IP\\)]\\) := \
\\!\\(\\*SubscriptBox[\\(u\\), \\(2\\)]\\).1\"\>", 
     "601072831681289023605493999813881345860793936273280931948201153102503083\
40078"},
    {"\<\"\\!\\(\\*OverscriptBox[SubscriptBox[\\(G\\), \\(next\\)], \\(\
\[RightVector]\\)]\\) := \\!\\(\\*SubsuperscriptBox[\\(u\\), \\(IP\\), \
\\(-1\\)]\\)\\!\\(\\*OverscriptBox[SubscriptBox[\\(G\\), \\(lo\\)], \\(\
\[RightVector]\\)]\\) + \\!\\(\\*SubscriptBox[\\(u\\), \
\\(IP\\)]\\)\\!\\(\\*OverscriptBox[SubscriptBox[\\(G\\), \\(hi\\)], \\(\
\[RightVector]\\)]\\)\"\>", 
     RowBox[{"{", 
      RowBox[{"ecPnt", "[", 
       RowBox[{
       "1060479283823992986063072705536591995657715666435629417799951993514546\
40836231", ",", 
        "937203237959884786773944138630930591652267321962548554698328990397488\
27794813"}], "]"}], "}"}]},
    {"\<\"\\!\\(\\*OverscriptBox[SubscriptBox[\\(H\\), \\(next\\)], \\(\
\[RightVector]\\)]\\) := \\!\\(\\*SubscriptBox[\\(u\\), \
\\(IP\\)]\\)\\!\\(\\*OverscriptBox[SubscriptBox[\\(H\\), \\(lo\\)], \\(\
\[RightVector]\\)]\\) + \\!\\(\\*SubsuperscriptBox[\\(u\\), \\(IP\\), \
\\(-1\\)]\\)\\!\\(\\*OverscriptBox[SubscriptBox[\\(H\\), \\(hi\\)], \\(\
\[RightVector]\\)]\\)\"\>", 
     RowBox[{"{", 
      RowBox[{"ecPnt", "[", 
       RowBox[{
       "6579870269688076421375908020588555982391973655509219631545895641404352\
8990417", ",", 
        "113060727953871578706455950897122407255435350435014258540357290902460\
111718764"}], "]"}], "}"}]},
    {"\<\"\\!\\(\\*OverscriptBox[SubscriptBox[\\(B\\), \\(next\\)], \\(\
\[RightVector]\\)]\\) := \\!\\(\\*SubscriptBox[\\(u\\), \
\\(IP\\)]\\)\\!\\(\\*OverscriptBox[SubscriptBox[\\(B\\), \\(lo\\)], \\(\
\[RightVector]\\)]\\) + \\!\\(\\*SubsuperscriptBox[\\(u\\), \\(IP\\), \
\\(-1\\)]\\)\\!\\(\\*OverscriptBox[SubscriptBox[\\(B\\), \\(hi\\)], \\(\
\[RightVector]\\)]\\)\"\>", 
     RowBox[{"{", 
      RowBox[{"ecPnt", "[", 
       RowBox[{
       "5126396207520026208997752799148915409025687649523926385367396866226986\
7159880", ",", 
        "593043543541253702578888997700357097317939906533147742776898158451083\
36596654"}], "]"}], "}"}]},
    {"\<\"\\!\\(\\*OverscriptBox[SubscriptBox[\\(C\\), \\(next\\)], \\(\
\[RightVector]\\)]\\) := \\!\\(\\*SubscriptBox[\\(u\\), \
\\(IP\\)]\\)\\!\\(\\*OverscriptBox[SubscriptBox[\\(C\\), \\(lo\\)], \\(\
\[RightVector]\\)]\\) + \\!\\(\\*SubsuperscriptBox[\\(u\\), \\(IP\\), \
\\(-1\\)]\\)\\!\\(\\*OverscriptBox[SubscriptBox[\\(C\\), \\(hi\\)], \\(\
\[RightVector]\\)]\\)\"\>", 
     RowBox[{"{", 
      RowBox[{"ecPnt", "[", 
       RowBox[{
       "3063446378215682504529818388742295906691774205907395646281960170478485\
277782", ",", 
        "417113403724282527155921845753705112215248870649788185728943414767734\
83215453"}], "]"}], "}"}]},
    {"\<\"\\!\\(\\*OverscriptBox[SubscriptBox[\\(D\\), \\(next\\)], \\(\
\[RightVector]\\)]\\) := \\!\\(\\*SubscriptBox[\\(u\\), \
\\(IP\\)]\\)\\!\\(\\*OverscriptBox[SubscriptBox[\\(D\\), \\(lo\\)], \\(\
\[RightVector]\\)]\\) + \\!\\(\\*SubsuperscriptBox[\\(u\\), \\(IP\\), \
\\(-1\\)]\\)\\!\\(\\*OverscriptBox[SubscriptBox[\\(D\\), \\(hi\\)], \\(\
\[RightVector]\\)]\\)\"\>", 
     RowBox[{"{", 
      RowBox[{"ecPnt", "[", 
       RowBox[{
       "2481605291534406172339454616891317457784371094896922560268736526505163\
7040815", ",", 
        "674014553712777816512609166711003312948822589336588610194597350373850\
44630090"}], "]"}], "}"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\(next, {h, b, c, d, W}\\)]\\) := \
\\!\\(\\*SubscriptBox[\\(P\\), \\({h, b, c, d, W}\\)]\\) + \
\\!\\(\\*SubsuperscriptBox[\\(u\\), \\(IP\\), \
\\(2\\)]\\)\\!\\(\\*SubscriptBox[\\(L\\), \\({h, b, c, d, W}\\)]\\) + \
\\!\\(\\*SubsuperscriptBox[\\(u\\), \\(IP\\), \
\\(-2\\)]\\)\\!\\(\\*SubscriptBox[\\(R\\), \\({h, b, c, d, W}\\)]\\)\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "895589326884921777222720181134942383142422836585496908672678077754285\
11718321", ",", 
         "82308534977355512322370152675903609108741121212616595116137887645130\
578579276"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "253510656330632963421746036059066039453266031833359860131380524625381\
1670167", ",", 
         "37905362638224769609916560569773911176947719296274603389536502708617\
675361051"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "112719119487721161889159211082551290789635633197790401234517080402764\
506322042", ",", 
         "59038507861533321775922462484860668668411724675754721170660930498202\
940497565"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "105479895284880952363906946754971019937646107950192208454804756816712\
996878277", ",", 
         "88367073377840609503965989028276026025955631419100797652975414156539\
639740891"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "665765175669973098767763728768361990191854759357614067445255052289967\
57486023", ",", 
         "90324928969768165511842292293833554044922227263120569797649525696262\
179099046"}], "]"}]}], "}"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.913948956701274*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"17560d98-d0d7-4b1f-b6ca-bb205b0b9aeb"],

Cell[BoxData["\<\"Waiting to receive a0 from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.913948956713249*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"dc62c0cc-deac-419f-8373-926893fd854f"],

Cell[BoxData["\<\"Waiting to receive b0 from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.913948957134026*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"41c97555-f8a5-4cbb-8f7a-8bbc872b7302"],

Cell[BoxData["\<\"Waiting to receive a0W from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.9139489571550136`*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"26ccce9d-1fc1-46b8-b00c-5c30f1bedf34"],

Cell[BoxData["\<\"Waiting to receive b0W from Prover ...\"\>"], "Print",
 CellChangeTimes->{3.913948957197981*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"5f8620dd-fee2-4f53-bd94-293bac7e0006"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Iteration 0 (Counting from 2 to 0)\"\>", "\[SpanFromLeft]", 
     "\[SpanFromLeft]", "\[SpanFromLeft]"},
    {
     StyleBox["\<\"Name\"\>",
      StripOnInput->False,
      FontWeight->Bold], "\<\"Semantics\"\>", 
     StyleBox["\<\"Value\"\>",
      StripOnInput->False,
      FontWeight->Bold], ""},
    {"\<\"\\!\\(\\*SubscriptBox[\\(n\\), \\(0\\)]\\) := \
\\!\\(\\*SubscriptBox[\\(n\\), \\(2\\)]\\).0[1] \
\\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) 1\"\>", "\<\"Halving \
Complete?\"\>", "True", ""},
    {"\<\"\\!\\(\\*SubscriptBox[\\(k\\), \\(0\\)]\\) := \
\\!\\(\\*SubscriptBox[\\(k\\), \\(2\\)]\\).0[1] \
\\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) 0\"\>", "\<\"Halving \
Complete?\"\>", "\<\"P,V\"\>", "True"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(G\\), \\(0\\)]\\) := \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(G\\), \\(2\\)], \
\\(\[RightVector]\\)]\\).0[1]\"\>", "\<\"\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "10604792838239929860630727055365919956577156664356294177999519935145464\
0836231", ",", 
       "9372032379598847867739441386309305916522673219625485546983289903974882\
7794813"}], "]"}], ""},
    {"\<\"\\!\\(\\*SubscriptBox[\\(H\\), \\(0\\)]\\) := \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(H\\), \\(2\\)], \
\\(\[RightVector]\\)]\\).0[1]\"\>", "\<\"\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "65798702696880764213759080205885559823919736555092196315458956414043528\
990417", ",", 
       "1130607279538715787064559508971224072554353504350142585403572909024601\
11718764"}], "]"}], ""},
    {"\<\"\\!\\(\\*SubscriptBox[\\(B\\), \\(0\\)]\\) := \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(B\\), \\(2\\)], \
\\(\[RightVector]\\)]\\).0[1]\"\>", "\<\"\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "51263962075200262089977527991489154090256876495239263853673968662269867\
159880", ",", 
       "5930435435412537025788889977003570973179399065331477427768981584510833\
6596654"}], "]"}], ""},
    {"\<\"\\!\\(\\*SubscriptBox[\\(C\\), \\(0\\)]\\) := \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(C\\), \\(2\\)], \
\\(\[RightVector]\\)]\\).0[1]\"\>", "\<\"\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "30634463782156825045298183887422959066917742059073956462819601704784852\
77782", ",", 
       "4171134037242825271559218457537051122152488706497881857289434147677348\
3215453"}], "]"}], ""},
    {"\<\"\\!\\(\\*SubscriptBox[\\(D\\), \\(0\\)]\\) := \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(D\\), \\(2\\)], \
\\(\[RightVector]\\)]\\).0[1]\"\>", "\<\"\"\>", 
     RowBox[{"ecPnt", "[", 
      RowBox[{
      "24816052915344061723394546168913174577843710948969225602687365265051637\
040815", ",", 
       "6740145537127778165126091667110033129488225893365886101945973503738504\
4630090"}], "]"}], ""},
    {"\<\"\\!\\(\\*SubscriptBox[\\(a\\), \\(0\\)]\\)\"\>", "\<\"\"\>", 
     "108423123045658025157618639588976361816248958028757952488070957825485293\
867099", ""},
    {"\<\"\\!\\(\\*SubscriptBox[\\(b\\), \\(0\\)]\\)\"\>", "\<\"\"\>", 
     "428987936504884549987918512689010236937811359816258553292856859783841897\
44313", ""},
    {"\<\"\\!\\(\\*SubscriptBox[\\(a\\), \\(0, W\\)]\\)\"\>", "\<\"\"\>", 
     "137556025728068852261238985836218228093006257634097765713770399968734546\
8197", ""},
    {"\<\"\\!\\(\\*SubscriptBox[\\(b\\), \\(0, W\\)]\\)\"\>", "\<\"\"\>", 
     "777521420496991301749291943385352973014489867842132371651851396437416640\
12763", ""},
    {"\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\(0, {h, b, c, d, W}\\)]\\) := \
\\!\\(\\*SubscriptBox[\\(P\\), \\(2, {h, b, c, d, W}\\)]\\).0\"\>", \
"\<\"\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "895589326884921777222720181134942383142422836585496908672678077754285\
11718321", ",", 
         "82308534977355512322370152675903609108741121212616595116137887645130\
578579276"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "253510656330632963421746036059066039453266031833359860131380524625381\
1670167", ",", 
         "37905362638224769609916560569773911176947719296274603389536502708617\
675361051"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "112719119487721161889159211082551290789635633197790401234517080402764\
506322042", ",", 
         "59038507861533321775922462484860668668411724675754721170660930498202\
940497565"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "105479895284880952363906946754971019937646107950192208454804756816712\
996878277", ",", 
         "88367073377840609503965989028276026025955631419100797652975414156539\
639740891"}], "]"}], ",", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
        "665765175669973098767763728768361990191854759357614067445255052289967\
57486023", ",", 
         "90324928969768165511842292293833554044922227263120569797649525696262\
179099046"}], "]"}]}], "}"}], ""},
    {"\<\"\\!\\(\\*SubscriptBox[\\(c\\), \\(0\\)]\\) := \
\\!\\(\\*SubscriptBox[\\(a\\), \\(0\\)]\\)\\!\\(\\*SubscriptBox[\\(b\\), \\(0\
\\)]\\)\"\>", "\<\"\"\>", 
     "508022721338731891887784631559732517166837682056800825836008570927672700\
65867", ""},
    {"\<\"\\!\\(\\*SubscriptBox[\\(c\\), \\(0, W\\)]\\) := \
\\!\\(\\*SubscriptBox[\\(a\\), \\(0, W\\)]\\)\\!\\(\\*SubscriptBox[\\(b\\), \
\\(0, W\\)]\\)\"\>", "\<\"\"\>", 
     "704174949056877231085908336883126087614222056295419192036570176872297483\
18131", ""},
    {"\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\(0, {h, b, c, d, W}\\)]\\) \
\\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) \
\\!\\(\\*SubsuperscriptBox[\\(P\\), \\({h, b, c, d, W}\\), \\('\\)]\\) + <\\!\
\\(\\*SubsuperscriptBox[\\(u\\), \\(2\\), \
\\(2\\)]\\),\\!\\(\\*SubscriptBox[\\(L\\), \\(2, {h, b, c, d, W}\\)]\\)> + \
<\\!\\(\\*SubsuperscriptBox[\\(u\\), \\(2\\), \
\\(-2\\)]\\),\\!\\(\\*SubscriptBox[\\(R\\), \\(2, {h, b, c, d, \
W}\\)]\\)>\"\>", "\<\"Sanity Check\\nfor \\!\\(\\*SubscriptBox[\\(P\\), \
\\(0\\)]\\)\"\>", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "True", ",", "True"}], "}"}], ""},
    {"\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\(0, {h, b, c, d}\\)]\\) \
\\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) \\!\\(\\*SubscriptBox[\\(G\\), \
\\(0\\)]\\)\\!\\(\\*SubscriptBox[\\(a\\), \\(0\\)]\\) + \
{H,B,C,D\\!\\(\\*SubscriptBox[\\(}\\), \
\\(0\\)]\\)\\!\\(\\*SubscriptBox[\\(b\\), \\(0\\)]\\) + \
\\!\\(\\*SubscriptBox[\\(c\\), \\(0\\)]\\)\\!\\(\\*SuperscriptBox[\\(g\\), \
\\('\\)]\\)\"\>", 
     StyleBox["\<\"Check No.2{h,b,c,d} for\\nVerification of\\nShuffle \
Proof\\n(with Inner Product Protocol) ok?\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "True", ",", "True"}], "}"}], ""},
    {"\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\(0, W\\)]\\) \
\\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) \\!\\(\\*SubscriptBox[\\(G\\), \
\\(0\\)]\\)\\!\\(\\*SubscriptBox[\\(a\\), \\(0, W\\)]\\) + \
\\!\\(\\*SubscriptBox[\\(H\\), \\(0\\)]\\)\\!\\(\\*SubscriptBox[\\(b\\), \
\\(0, W\\)]\\) + \\!\\(\\*SubscriptBox[\\(c\\), \\(0, \
W\\)]\\)\\!\\(\\*SuperscriptBox[\\(g\\), \\('\\)]\\)\"\>", 
     StyleBox["\<\"Check No.2W for\\nVerification of\\nPR Proof\\n(with Inner \
Product Protocol) ok?\"\>",
      StripOnInput->False,
      FontWeight->Bold], "True", ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.913948958096458*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"06f4c27f-516f-47e8-9cc7-62aaf99863b7"],

Cell[BoxData["\<\"Inner product protocol finished.\"\>"], "Print",
 CellChangeTimes->{3.9139489581134644`*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"50d99893-02ea-4ed1-8052-c3b99aa9618a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Total Communication Cost\"\>",
      StripOnInput->False,
      FontWeight->Bold], "\[SpanFromLeft]", "\[SpanFromLeft]", 
     "\[SpanFromLeft]"},
    {
     StyleBox["\<\"Type\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Count\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Names\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Bits\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {"\<\"group\"\>", 
     "34", "\<\"V, W, AW, SW, AL, SL, SRh, SRb, SRc, SRd, T3, T5, T1W, T2W, \
Lh.2, Rh.2, Lb.2, Rb.2, Lc.2, Rc.2, Ld.2, Rd.2, LW.2, RW.2, Lh.1, Rh.1, Lb.1, \
Rb.1, Lc.1, Rc.1, Ld.1, Rd.1, LW.1, RW.1\"\>", "8738"},
    {"\<\"scalar\"\>", 
     "21", "\<\"r, u, y, z, w, x, taux, muh, mub, muc, mud, t, tauxW, muW, \
tW, u.2, u.1, a0, b0, a0W, b0W\"\>", "5376"},
    {
     StyleBox["\<\"total\"\>",
      StripOnInput->False,
      FontSlant->Italic], "55", "\<\"\"\>", "14114"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left, Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.913948958118462*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"76730d09-f3f0-4216-8758-5439331b30e9"],

Cell[BoxData["\<\"Verification succeeded.\"\>"], "Print",
 CellChangeTimes->{3.9139489581254573`*^9},
 CellLabel->
  "During evaluation of \
In[254]:=",ExpressionUUID->"ce154c69-d555-4023-8af6-1aea27db7803"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Inspection of Pedersen Commitments (Multi-Key Shuffle with Inner Product \
Protocol)\
\>", "Section",
 CellChangeTimes->{{3.8974959887114897`*^9, 3.897495995013777*^9}, {
  3.8979046139220057`*^9, 3.897904616054976*^9}, {3.897904681865471*^9, 
  3.89790468225427*^9}, {3.89800965497939*^9, 3.8980096659113846`*^9}, {
  3.898009791509469*^9, 3.89800979565307*^9}, {3.898339838095803*^9, 
  3.8983398522207317`*^9}},ExpressionUUID->"8c534095-bd61-4699-b4f2-\
50606beedc90"],

Cell[TextData[{
 "Request inspection of Pedersen commitments ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]],ExpressionUUID->
  "ae4e7699-7c46-49d0-b6c3-ff2b4a4dcd55"],
 ", ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "2c76f05c-5495-49fc-b732-af63f5388d20"],
 ", ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]],ExpressionUUID->
  "7c23da55-6d1c-4382-a9cd-7c380aa58bd7"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "1"], TraditionalForm]],ExpressionUUID->
  "d89a2bd7-bcc0-404d-baee-b1ea1f498b7b"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "2"], TraditionalForm]],ExpressionUUID->
  "fa32ae6e-a6c1-4b0c-bc73-9669133d7fdb"],
 " (range protocol) as well as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"L", "[", 
    RowBox[{
     RowBox[{"n", "..."}], "1"}], "]"}], TraditionalForm]],ExpressionUUID->
  "5b18a0ec-6614-4009-a5bd-ba170395f467"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", "[", 
    RowBox[{
     RowBox[{"n", "..."}], "1"}], "]"}], TraditionalForm]],ExpressionUUID->
  "96d62990-649d-40a9-95d8-8b40fb23e2af"],
 " (inner product protocol) from prover to verify that his commitments were \
done correctly. Additionally (but not necessary), check other variables \
exchanged during protocol execution."
}], "Text",
 CellChangeTimes->{{3.8874315380510364`*^9, 3.8874316248126335`*^9}, {
   3.8874328772288*^9, 3.8874330229853535`*^9}, {3.887433123692663*^9, 
   3.8874331256768494`*^9}, {3.887433165091633*^9, 3.887433191710307*^9}, {
   3.887433266840893*^9, 3.88743329734429*^9}, 3.8874342244729156`*^9, {
   3.8980086347028875`*^9, 3.8980086895305696`*^9}, {3.89800872195833*^9, 
   3.89800882758283*^9}, {3.8980088795119934`*^9, 3.8980089806039324`*^9}, {
   3.8980093047837253`*^9, 3.8980093248743243`*^9}, {3.898009364836938*^9, 
   3.8980093669672394`*^9}, {3.8980096765429783`*^9, 3.898009684483537*^9}, {
   3.8980097425047493`*^9, 3.8980097695341167`*^9}, {3.8981494847822695`*^9, 
   3.8981494887941647`*^9}},ExpressionUUID->"489f6672-192b-4f5b-8528-\
ce22c1f98ab7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"InnerProductArgumentInspection", "[", "inspectionReply_", "]"}], 
   " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "success", ",", "\n", "\t", "LhInspectionFailures", ",", 
       "RhInspectionFailures", ",", "\n", "\t", "LbInspectionFailures", ",", 
       "RbInspectionFailures", ",", "\n", "\t", "LcInspectionFailures", ",", 
       "RcInspectionFailures", ",", "\n", "\t", "LdInspectionFailures", ",", 
       "RdInspectionFailures", ",", "\n", "\t", "LWInspectionFailures", ",", 
       "RWInspectionFailures", ",", "\n", "\t", "a0WDefinitionOk", ",", 
       "b0WDefinitionOk", ",", "\n", "\t", "a0DefinitionOk", ",", 
       "b0DefinitionOk"}], "}"}], ",", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "Check", " ", "commitments", " ", "L", " ", "and", " ", "R", " ", "of",
         " ", "every", " ", "iteration", " ", "of", " ", "the", " ", "inner", 
        " ", "product", " ", "protocol", "\n", "\t", "and", " ", "the", " ", 
        "fully", " ", "halved", " ", "version", " ", "of", " ", 
        OverscriptBox["a", "\[RightVector]"], " ", "and", " ", 
        OverscriptBox["b", "\[RightVector]"]}], ",", " ", 
       RowBox[{
        SubscriptBox["a", "0"], " ", "and", " ", 
        RowBox[{
         SubscriptBox["b", "0"], "."}]}]}], "*)"}], "\n", "\t", "\n", "\t", 
     RowBox[{
      RowBox[{
       OverscriptBox[
        SubscriptBox["a", "IP"], "\[RightVector]"], " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{
          OverscriptBox["l", "\[RightVector]"], "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", 
            RowBox[{"Min", "[", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["n", "pow2"], ",", "n"}], "}"}], "]"}]}], "]"}], 
          "]"}], ",", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", 
           RowBox[{"Max", "[", 
            RowBox[{"0", ",", 
             RowBox[{
              SubscriptBox["n", "pow2"], "-", "n"}]}], "]"}]}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\t", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["b", "IP"], "\[RightVector]"], " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{
          OverscriptBox["r", "\[RightVector]"], "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", 
            RowBox[{"Min", "[", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["n", "pow2"], ",", "n"}], "}"}], "]"}]}], "]"}], 
          "]"}], ",", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", 
           RowBox[{"Max", "[", 
            RowBox[{"0", ",", 
             RowBox[{
              SubscriptBox["n", "pow2"], "-", "n"}]}], "]"}]}], "]"}]}], 
        "]"}]}], ";", "\n", "\t", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["a", "W"], "\[RightVector]"], " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{
          OverscriptBox[
           SubscriptBox["l", "W"], "\[RightVector]"], "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", 
            RowBox[{"Min", "[", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["n", "pow2"], ",", "n"}], "}"}], "]"}]}], "]"}], 
          "]"}], ",", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", 
           RowBox[{"Max", "[", 
            RowBox[{"0", ",", 
             RowBox[{
              SubscriptBox["n", "pow2"], "-", "n"}]}], "]"}]}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\t", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["b", "W"], "\[RightVector]"], " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{
          OverscriptBox[
           SubscriptBox["r", "W"], "\[RightVector]"], "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", 
            RowBox[{"Min", "[", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["n", "pow2"], ",", "n"}], "}"}], "]"}]}], "]"}], 
          "]"}], ",", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", 
           RowBox[{"Max", "[", 
            RowBox[{"0", ",", 
             RowBox[{
              SubscriptBox["n", "pow2"], "-", "n"}]}], "]"}]}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\t", "\n", "\t", 
      RowBox[{"currentIteration", " ", "=", " ", "1"}], ";", "\n", "\t", 
      RowBox[{"LhInspectionFailures", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\n", "\t", 
      RowBox[{"RhInspectionFailures", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"LbInspectionFailures", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\n", "\t", 
      RowBox[{"RbInspectionFailures", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"LcInspectionFailures", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\n", "\t", 
      RowBox[{"RcInspectionFailures", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"LdInspectionFailures", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\n", "\t", 
      RowBox[{"RdInspectionFailures", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"LWInspectionFailures", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\n", "\t", 
      RowBox[{"RWInspectionFailures", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", "\n", "\t", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          SubscriptBox["n", "2"], "[", 
          RowBox[{"[", "currentIteration", "]"}], "]"}], " ", "!=", " ", 
         "1"}], ",", "\[IndentingNewLine]", "\t\t", 
        RowBox[{
         RowBox[{"ciStr", " ", "=", " ", 
          RowBox[{"IntegerString", "[", 
           RowBox[{
            SubscriptBox["k", "2"], "[", 
            RowBox[{"[", "currentIteration", "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{"currentN", " ", "=", " ", 
          RowBox[{
           SubscriptBox["n", "2"], "[", 
           RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{"halfN", " ", "=", " ", 
          RowBox[{"currentN", "/", "2"}]}], ";", "\[IndentingNewLine]", 
         "\t\t", 
         RowBox[{"k", " ", "=", " ", 
          RowBox[{
           SubscriptBox["k", "2"], "[", 
           RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          OverscriptBox["G", "\[RightVector]"], " ", "=", " ", 
          RowBox[{
           OverscriptBox[
            SubscriptBox["G", "2"], "\[RightVector]"], "[", 
           RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          OverscriptBox["H", "\[RightVector]"], " ", "=", " ", 
          RowBox[{
           OverscriptBox[
            SubscriptBox["H", "2"], "\[RightVector]"], "[", 
           RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", "\n", "\t\t", 
         RowBox[{
          OverscriptBox["B", "\[RightVector]"], " ", "=", " ", 
          RowBox[{
           OverscriptBox[
            SubscriptBox["B", "2"], "\[RightVector]"], "[", 
           RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", "\n", "\t\t", 
         RowBox[{
          OverscriptBox["C", "\[RightVector]"], " ", "=", " ", 
          RowBox[{
           OverscriptBox[
            SubscriptBox["C", "2"], "\[RightVector]"], "[", 
           RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", "\n", "\t\t", 
         RowBox[{
          OverscriptBox["D", "\[RightVector]"], " ", "=", " ", 
          RowBox[{
           OverscriptBox[
            SubscriptBox["D", "2"], "\[RightVector]"], "[", 
           RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          SubscriptBox["P", "h"], " ", "=", " ", 
          RowBox[{
           SubscriptBox["P", 
            RowBox[{"2", ",", "h"}]], "[", 
           RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", "\n", "\t\t", 
         RowBox[{
          SubscriptBox["P", "b"], " ", "=", " ", 
          RowBox[{
           SubscriptBox["P", 
            RowBox[{"2", ",", "b"}]], "[", 
           RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", "\n", "\t\t", 
         RowBox[{
          SubscriptBox["P", "c"], " ", "=", " ", 
          RowBox[{
           SubscriptBox["P", 
            RowBox[{"2", ",", "c"}]], "[", 
           RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", "\n", "\t\t", 
         RowBox[{
          SubscriptBox["P", "d"], " ", "=", " ", 
          RowBox[{
           SubscriptBox["P", 
            RowBox[{"2", ",", "d"}]], "[", 
           RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", "\n", "\t\t", 
         RowBox[{
          SubscriptBox["P", "W"], " ", "=", " ", 
          RowBox[{
           SubscriptBox["P", 
            RowBox[{"2", ",", "W"}]], "[", 
           RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{"(*", 
          RowBox[{
          "Split", " ", "into", " ", "lower", " ", "and", " ", "higher", " ", 
           "parts"}], "*)"}], "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["G", "lo"], "\[RightVector]"], " ", "=", " ", 
          RowBox[{
           OverscriptBox["G", "\[RightVector]"], "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "halfN"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["G", "hi"], "\[RightVector]"], " ", "=", " ", 
          RowBox[{
           OverscriptBox["G", "\[RightVector]"], "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"halfN", "+", "1"}], ";;", 
             RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]",
          "\t\t", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["H", "lo"], "\[RightVector]"], " ", "=", " ", 
          RowBox[{
           OverscriptBox["H", "\[RightVector]"], "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "halfN"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["H", "hi"], "\[RightVector]"], " ", "=", " ", 
          RowBox[{
           OverscriptBox["H", "\[RightVector]"], "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"halfN", "+", "1"}], ";;", 
             RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]",
          "\t\t", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["B", "lo"], "\[RightVector]"], " ", "=", " ", 
          RowBox[{
           OverscriptBox["B", "\[RightVector]"], "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "halfN"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["B", "hi"], "\[RightVector]"], " ", "=", " ", 
          RowBox[{
           OverscriptBox["B", "\[RightVector]"], "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"halfN", "+", "1"}], ";;", 
             RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]",
          "\t\t", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["C", "lo"], "\[RightVector]"], " ", "=", " ", 
          RowBox[{
           OverscriptBox["C", "\[RightVector]"], "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "halfN"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["C", "hi"], "\[RightVector]"], " ", "=", " ", 
          RowBox[{
           OverscriptBox["C", "\[RightVector]"], "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"halfN", "+", "1"}], ";;", 
             RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]",
          "\t\t", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["D", "lo"], "\[RightVector]"], " ", "=", " ", 
          RowBox[{
           OverscriptBox["D", "\[RightVector]"], "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "halfN"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["D", "hi"], "\[RightVector]"], " ", "=", " ", 
          RowBox[{
           OverscriptBox["D", "\[RightVector]"], "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"halfN", "+", "1"}], ";;", 
             RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]",
          "\t", "\t", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["a", "lo"], "\[RightVector]"], " ", "=", " ", 
          RowBox[{
           OverscriptBox[
            SubscriptBox["a", "IP"], "\[RightVector]"], "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "halfN"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["a", "hi"], "\[RightVector]"], " ", "=", " ", 
          RowBox[{
           OverscriptBox[
            SubscriptBox["a", "IP"], "\[RightVector]"], "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"halfN", "+", "1"}], ";;", 
             RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]",
          "\t\t", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["b", "lo"], "\[RightVector]"], " ", "=", " ", 
          RowBox[{
           OverscriptBox[
            SubscriptBox["b", "IP"], "\[RightVector]"], "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "halfN"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["b", "hi"], "\[RightVector]"], " ", "=", " ", 
          RowBox[{
           OverscriptBox[
            SubscriptBox["b", "IP"], "\[RightVector]"], "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"halfN", "+", "1"}], ";;", 
             RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]",
          "\t\t", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["a", 
            RowBox[{"lo", ",", "W"}]], "\[RightVector]"], " ", "=", " ", 
          RowBox[{
           OverscriptBox[
            SubscriptBox["a", "W"], "\[RightVector]"], "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "halfN"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["a", 
            RowBox[{"hi", ",", "W"}]], "\[RightVector]"], " ", "=", " ", 
          RowBox[{
           OverscriptBox[
            SubscriptBox["a", "W"], "\[RightVector]"], "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"halfN", "+", "1"}], ";;", 
             RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]",
          "\t\t", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["b", 
            RowBox[{"lo", ",", "W"}]], "\[RightVector]"], " ", "=", " ", 
          RowBox[{
           OverscriptBox[
            SubscriptBox["b", "W"], "\[RightVector]"], "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "halfN"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["b", 
            RowBox[{"hi", ",", "W"}]], "\[RightVector]"], " ", "=", " ", 
          RowBox[{
           OverscriptBox[
            SubscriptBox["b", "W"], "\[RightVector]"], "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"halfN", "+", "1"}], ";;", 
             RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]",
          "\t\t", 
         RowBox[{"(*", 
          RowBox[{"Digest", " ", "into", " ", "L", " ", "and", " ", "R"}], 
          "*)"}], "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          SubscriptBox["L", "h"], " ", "=", " ", 
          RowBox[{
           RowBox[{
            OverscriptBox[
             SubscriptBox["a", "lo"], "\[RightVector]"], ".", 
            OverscriptBox[
             SubscriptBox["G", "hi"], "\[RightVector]"]}], " ", "+", " ", 
           RowBox[{
            OverscriptBox[
             SubscriptBox["b", "hi"], "\[RightVector]"], ".", 
            OverscriptBox[
             SubscriptBox["H", "lo"], "\[RightVector]"]}], " ", "+", " ", 
           RowBox[{
            RowBox[{
             OverscriptBox[
              SubscriptBox["a", "lo"], "\[RightVector]"], ".", 
             OverscriptBox[
              SubscriptBox["b", "hi"], "\[RightVector]"]}], "*", 
            SuperscriptBox["g", "'"]}]}]}], ";", "\[IndentingNewLine]", 
         "\t\t", 
         RowBox[{
          SubscriptBox["R", "h"], " ", "=", " ", 
          RowBox[{
           RowBox[{
            OverscriptBox[
             SubscriptBox["a", "hi"], "\[RightVector]"], ".", 
            OverscriptBox[
             SubscriptBox["G", "lo"], "\[RightVector]"]}], " ", "+", " ", 
           RowBox[{
            OverscriptBox[
             SubscriptBox["b", "lo"], "\[RightVector]"], ".", 
            OverscriptBox[
             SubscriptBox["H", "hi"], "\[RightVector]"]}], " ", "+", " ", 
           RowBox[{
            RowBox[{
             OverscriptBox[
              SubscriptBox["a", "hi"], "\[RightVector]"], ".", 
             OverscriptBox[
              SubscriptBox["b", "lo"], "\[RightVector]"]}], "*", 
            SuperscriptBox["g", "'"]}]}]}], ";", "\[IndentingNewLine]", 
         "\t\t", 
         RowBox[{
          SubscriptBox["L", "b"], " ", "=", " ", 
          RowBox[{
           RowBox[{
            OverscriptBox[
             SubscriptBox["a", "lo"], "\[RightVector]"], ".", 
            OverscriptBox[
             SubscriptBox["G", "hi"], "\[RightVector]"]}], " ", "+", " ", 
           RowBox[{
            OverscriptBox[
             SubscriptBox["b", "hi"], "\[RightVector]"], ".", 
            OverscriptBox[
             SubscriptBox["B", "lo"], "\[RightVector]"]}], " ", "+", " ", 
           RowBox[{
            RowBox[{
             OverscriptBox[
              SubscriptBox["a", "lo"], "\[RightVector]"], ".", 
             OverscriptBox[
              SubscriptBox["b", "hi"], "\[RightVector]"]}], "*", 
            SuperscriptBox["g", "'"]}]}]}], ";", "\[IndentingNewLine]", 
         "\t\t", 
         RowBox[{
          SubscriptBox["R", "b"], " ", "=", " ", 
          RowBox[{
           RowBox[{
            OverscriptBox[
             SubscriptBox["a", "hi"], "\[RightVector]"], ".", 
            OverscriptBox[
             SubscriptBox["G", "lo"], "\[RightVector]"]}], " ", "+", " ", 
           RowBox[{
            OverscriptBox[
             SubscriptBox["b", "lo"], "\[RightVector]"], ".", 
            OverscriptBox[
             SubscriptBox["B", "hi"], "\[RightVector]"]}], " ", "+", " ", 
           RowBox[{
            RowBox[{
             OverscriptBox[
              SubscriptBox["a", "hi"], "\[RightVector]"], ".", 
             OverscriptBox[
              SubscriptBox["b", "lo"], "\[RightVector]"]}], "*", 
            SuperscriptBox["g", "'"]}]}]}], ";", "\[IndentingNewLine]", 
         "\t\t", 
         RowBox[{
          SubscriptBox["L", "c"], " ", "=", " ", 
          RowBox[{
           RowBox[{
            OverscriptBox[
             SubscriptBox["a", "lo"], "\[RightVector]"], ".", 
            OverscriptBox[
             SubscriptBox["G", "hi"], "\[RightVector]"]}], " ", "+", " ", 
           RowBox[{
            OverscriptBox[
             SubscriptBox["b", "hi"], "\[RightVector]"], ".", 
            OverscriptBox[
             SubscriptBox["C", "lo"], "\[RightVector]"]}], " ", "+", " ", 
           RowBox[{
            RowBox[{
             OverscriptBox[
              SubscriptBox["a", "lo"], "\[RightVector]"], ".", 
             OverscriptBox[
              SubscriptBox["b", "hi"], "\[RightVector]"]}], "*", 
            SuperscriptBox["g", "'"]}]}]}], ";", "\[IndentingNewLine]", 
         "\t\t", 
         RowBox[{
          SubscriptBox["R", "c"], " ", "=", " ", 
          RowBox[{
           RowBox[{
            OverscriptBox[
             SubscriptBox["a", "hi"], "\[RightVector]"], ".", 
            OverscriptBox[
             SubscriptBox["G", "lo"], "\[RightVector]"]}], " ", "+", " ", 
           RowBox[{
            OverscriptBox[
             SubscriptBox["b", "lo"], "\[RightVector]"], ".", 
            OverscriptBox[
             SubscriptBox["C", "hi"], "\[RightVector]"]}], " ", "+", " ", 
           RowBox[{
            RowBox[{
             OverscriptBox[
              SubscriptBox["a", "hi"], "\[RightVector]"], ".", 
             OverscriptBox[
              SubscriptBox["b", "lo"], "\[RightVector]"]}], "*", 
            SuperscriptBox["g", "'"]}]}]}], ";", "\n", "\t\t", 
         RowBox[{
          SubscriptBox["L", "d"], " ", "=", " ", 
          RowBox[{
           RowBox[{
            OverscriptBox[
             SubscriptBox["a", "lo"], "\[RightVector]"], ".", 
            OverscriptBox[
             SubscriptBox["G", "hi"], "\[RightVector]"]}], " ", "+", " ", 
           RowBox[{
            OverscriptBox[
             SubscriptBox["b", "hi"], "\[RightVector]"], ".", 
            OverscriptBox[
             SubscriptBox["D", "lo"], "\[RightVector]"]}], " ", "+", " ", 
           RowBox[{
            RowBox[{
             OverscriptBox[
              SubscriptBox["a", "lo"], "\[RightVector]"], ".", 
             OverscriptBox[
              SubscriptBox["b", "hi"], "\[RightVector]"]}], "*", 
            SuperscriptBox["g", "'"]}]}]}], ";", "\[IndentingNewLine]", 
         "\t\t", 
         RowBox[{
          SubscriptBox["R", "d"], " ", "=", " ", 
          RowBox[{
           RowBox[{
            OverscriptBox[
             SubscriptBox["a", "hi"], "\[RightVector]"], ".", 
            OverscriptBox[
             SubscriptBox["G", "lo"], "\[RightVector]"]}], " ", "+", " ", 
           RowBox[{
            OverscriptBox[
             SubscriptBox["b", "lo"], "\[RightVector]"], ".", 
            OverscriptBox[
             SubscriptBox["D", "hi"], "\[RightVector]"]}], " ", "+", " ", 
           RowBox[{
            RowBox[{
             OverscriptBox[
              SubscriptBox["a", "hi"], "\[RightVector]"], ".", 
             OverscriptBox[
              SubscriptBox["b", "lo"], "\[RightVector]"]}], "*", 
            SuperscriptBox["g", "'"]}]}]}], ";", "\n", "\t\t", 
         RowBox[{
          SubscriptBox["L", "W"], " ", "=", " ", 
          RowBox[{
           RowBox[{
            OverscriptBox[
             SubscriptBox["a", 
              RowBox[{"lo", ",", "W"}]], "\[RightVector]"], ".", 
            OverscriptBox[
             SubscriptBox["G", 
              RowBox[{"hi", ",", "W"}]], "\[RightVector]"]}], " ", "+", " ", 
           RowBox[{
            OverscriptBox[
             SubscriptBox["b", 
              RowBox[{"hi", ",", "W"}]], "\[RightVector]"], ".", 
            OverscriptBox[
             SubscriptBox["C", 
              RowBox[{"lo", ",", "W"}]], "\[RightVector]"]}], " ", "+", " ", 
           RowBox[{
            RowBox[{
             OverscriptBox[
              SubscriptBox["a", 
               RowBox[{"lo", ",", "W"}]], "\[RightVector]"], ".", 
             OverscriptBox[
              SubscriptBox["b", 
               RowBox[{"hi", ",", "W"}]], "\[RightVector]"]}], "*", 
            SuperscriptBox["g", "'"]}]}]}], ";", "\[IndentingNewLine]", 
         "\t\t", 
         RowBox[{
          SubscriptBox["R", "W"], " ", "=", " ", 
          RowBox[{
           RowBox[{
            OverscriptBox[
             SubscriptBox["a", 
              RowBox[{"hi", ",", "W"}]], "\[RightVector]"], ".", 
            OverscriptBox[
             SubscriptBox["G", 
              RowBox[{"lo", ",", "W"}]], "\[RightVector]"]}], " ", "+", " ", 
           RowBox[{
            OverscriptBox[
             SubscriptBox["b", 
              RowBox[{"lo", ",", "W"}]], "\[RightVector]"], ".", 
            OverscriptBox[
             SubscriptBox["C", 
              RowBox[{"hi", ",", "W"}]], "\[RightVector]"]}], " ", "+", " ", 
           RowBox[{
            RowBox[{
             OverscriptBox[
              SubscriptBox["a", 
               RowBox[{"hi", ",", "W"}]], "\[RightVector]"], ".", 
             OverscriptBox[
              SubscriptBox["b", 
               RowBox[{"lo", ",", "W"}]], "\[RightVector]"]}], "*", 
            SuperscriptBox["g", "'"]}]}]}], ";", "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{"Check", " ", "L", " ", "and", " ", "R"}], "*)"}], "\n", 
         "\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["L", "h"], " ", "!=", " ", 
            RowBox[{
             SubscriptBox["L", 
              RowBox[{"2", ",", "h"}]], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], ",", " ", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"LhInspectionFailures", ",", " ", 
             RowBox[{"Lh", "<>", "\"\<.\>\"", "<>", "ciStr"}]}], "]"}]}], 
          "]"}], ";", "\n", "\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["R", "h"], " ", "!=", " ", 
            RowBox[{
             SubscriptBox["R", 
              RowBox[{"2", ",", "h"}]], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], ",", " ", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"RhInspectionFailures", ",", " ", 
             RowBox[{"Rh", "<>", "\"\<.\>\"", "<>", "ciStr"}]}], "]"}]}], 
          "]"}], ";", "\n", "\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["L", "b"], " ", "!=", " ", 
            RowBox[{
             SubscriptBox["L", 
              RowBox[{"2", ",", "b"}]], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], ",", " ", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"LbInspectionFailures", ",", " ", 
             RowBox[{"Lb", "<>", "\"\<.\>\"", "<>", "ciStr"}]}], "]"}]}], 
          "]"}], ";", "\n", "\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["R", "b"], " ", "!=", " ", 
            RowBox[{
             SubscriptBox["R", 
              RowBox[{"2", ",", "b"}]], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], ",", " ", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"RbInspectionFailures", ",", " ", 
             RowBox[{"Rb", "<>", "\"\<.\>\"", "<>", "ciStr"}]}], "]"}]}], 
          "]"}], ";", "\n", "\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["L", "c"], " ", "!=", " ", 
            RowBox[{
             SubscriptBox["L", 
              RowBox[{"2", ",", "c"}]], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], ",", " ", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"LcInspectionFailures", ",", " ", 
             RowBox[{"Lc", "<>", "\"\<.\>\"", "<>", "ciStr"}]}], "]"}]}], 
          "]"}], ";", "\n", "\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["R", "c"], " ", "!=", " ", 
            RowBox[{
             SubscriptBox["R", 
              RowBox[{"2", ",", "c"}]], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], ",", " ", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"RcInspectionFailures", ",", " ", 
             RowBox[{"Rc", "<>", "\"\<.\>\"", "<>", "ciStr"}]}], "]"}]}], 
          "]"}], ";", "\n", "\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["L", "d"], " ", "!=", " ", 
            RowBox[{
             SubscriptBox["L", 
              RowBox[{"2", ",", "d"}]], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], ",", " ", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"LdInspectionFailures", ",", " ", 
             RowBox[{"Ld", "<>", "\"\<.\>\"", "<>", "ciStr"}]}], "]"}]}], 
          "]"}], ";", "\n", "\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["R", "d"], " ", "!=", " ", 
            RowBox[{
             SubscriptBox["R", 
              RowBox[{"2", ",", "d"}]], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], ",", " ", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"RdInspectionFailures", ",", " ", 
             RowBox[{"Rd", "<>", "\"\<.\>\"", "<>", "ciStr"}]}], "]"}]}], 
          "]"}], ";", "\n", "\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["L", "W"], " ", "!=", " ", 
            RowBox[{
             SubscriptBox["L", 
              RowBox[{"2", ",", "W"}]], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], ",", " ", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"LWInspectionFailures", ",", " ", 
             RowBox[{"LW", "<>", "\"\<.\>\"", "<>", "ciStr"}]}], "]"}]}], 
          "]"}], ";", "\n", "\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["R", "W"], " ", "!=", " ", 
            RowBox[{
             SubscriptBox["R", 
              RowBox[{"2", ",", "W"}]], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], ",", " ", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"RWInspectionFailures", ",", " ", 
             RowBox[{"RW", "<>", "\"\<.\>\"", "<>", "ciStr"}]}], "]"}]}], 
          "]"}], ";", "\n", "\t\t", 
         RowBox[{
          SubscriptBox["u", "IP"], " ", "=", " ", 
          RowBox[{
           SubscriptBox["u", "2"], "[", 
           RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          SuperscriptBox["u", 
           RowBox[{"-", "1"}]], " ", "=", " ", 
          RowBox[{"modinvq", "[", 
           SubscriptBox["u", "IP"], "]"}]}], ";", "\[IndentingNewLine]", 
         "\t\t", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["a", "IP"], "\[RightVector]"], " ", "=", " ", 
          RowBox[{"modq", "[", 
           RowBox[{
            RowBox[{
             SubscriptBox["u", "IP"], "*", 
             OverscriptBox[
              SubscriptBox["a", "lo"], "\[RightVector]"]}], " ", "+", " ", 
            RowBox[{
             SuperscriptBox["u", 
              RowBox[{"-", "1"}]], "*", 
             OverscriptBox[
              SubscriptBox["a", "hi"], "\[RightVector]"]}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["b", "IP"], "\[RightVector]"], " ", "=", " ", 
          RowBox[{"modq", "[", 
           RowBox[{
            RowBox[{
             SuperscriptBox["u", 
              RowBox[{"-", "1"}]], "*", 
             OverscriptBox[
              SubscriptBox["b", "lo"], "\[RightVector]"]}], " ", "+", " ", 
            RowBox[{
             SubscriptBox["u", "IP"], "*", 
             OverscriptBox[
              SubscriptBox["b", "hi"], "\[RightVector]"]}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["a", "W"], "\[RightVector]"], " ", "=", " ", 
          RowBox[{"modq", "[", 
           RowBox[{
            RowBox[{
             SubscriptBox["u", "IP"], "*", 
             OverscriptBox[
              SubscriptBox["a", 
               RowBox[{"lo", ",", "W"}]], "\[RightVector]"]}], " ", "+", " ", 
            
            RowBox[{
             SuperscriptBox["u", 
              RowBox[{"-", "1"}]], "*", 
             OverscriptBox[
              SubscriptBox["a", 
               RowBox[{"hi", ",", "W"}]], "\[RightVector]"]}]}], "]"}]}], ";",
          "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["b", "W"], "\[RightVector]"], " ", "=", " ", 
          RowBox[{"modq", "[", 
           RowBox[{
            RowBox[{
             SuperscriptBox["u", 
              RowBox[{"-", "1"}]], "*", 
             OverscriptBox[
              SubscriptBox["b", 
               RowBox[{"lo", ",", "W"}]], "\[RightVector]"]}], " ", "+", " ", 
            
            RowBox[{
             SubscriptBox["u", "IP"], "*", 
             OverscriptBox[
              SubscriptBox["b", 
               RowBox[{"hi", ",", "W"}]], "\[RightVector]"]}]}], "]"}]}], ";",
          "\n", "\t\t", 
         RowBox[{"currentIteration", " ", "+=", " ", "1"}], ";"}]}], 
       "\[IndentingNewLine]", "\t", "]"}], ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"(*", 
       RowBox[{"Last", ",", " ", 
        RowBox[{"single", "-", 
         RowBox[{"valued", " ", "iteration"}]}]}], "*)"}], 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"a0DefinitionOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["a", "0"], " ", "==", " ", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["a", "IP"], "\[RightVector]"], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"b0DefinitionOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["b", "0"], " ", "==", " ", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["b", "IP"], "\[RightVector]"], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"a0WDefinitionOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"0", ",", "W"}]], " ", "==", " ", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["a", "W"], "\[RightVector]"], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"b0WDefinitionOk", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["b", 
          RowBox[{"0", ",", "W"}]], " ", "==", " ", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["b", "W"], "\[RightVector]"], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], ";", "\n", "\t", 
      RowBox[{"Print", "[", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Expression\>\"", ",", "Bold"}], "]"}], ",", " ", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Type of Check\>\"", ",", "Bold"}], "]"}], ",", " ", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", 
           "\n", "\t\t", 
           RowBox[{"{", "\n", "\t\t\t", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(L\), \({h, b, c, d, W}, i\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) <\!\(\*OverscriptBox[SubscriptBox[\(a\), \
SubscriptBox[\(i\), \(lo {\(,\)\(W\)}\)]], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(G\), \
SubscriptBox[\(i\), \(hi\)]], \(\[RightVector]\)]\)> + \
<\!\(\*OverscriptBox[SubscriptBox[\(b\), SubscriptBox[\(i\), \(hi \
{\(,\)\(W\)}\)]], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\({H, B, C, D, H}\), \
SubscriptBox[\(i\), \(lo\)]], \(\[RightVector]\)]\)> + \
<\!\(\*OverscriptBox[SubscriptBox[\(a\), SubscriptBox[\(i\), \(lo \
{\(,\)\(W\)}\)]], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(b\), \
SubscriptBox[\(i\), \(hi {\(,\)\(W\)}\)]], \(\[RightVector]\)]\)>g'\\ni\
\[Element][\[LeftCeiling]\!\(\*SubscriptBox[\(log\), \(2\)]\)(n)\
\[RightCeiling]...1]\>\"", ",", "\n", "\t\t\t", "\"\<Commitment\>\"", ",", 
             "\n", "\t\t\t", 
             RowBox[{"{", "\n", "\t\t\t\t", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "LhInspectionFailures", "]"}], "==", 
                  "0"}], ",", "True", ",", 
                 RowBox[{"\"\<Failures: \>\"", "<>", 
                  RowBox[{"StringRiffle", "[", 
                   RowBox[{"LhInspectionFailures", ",", " ", "\"\<, \>\""}], 
                   "]"}]}]}], "]"}], ",", "\n", "\t\t\t\t", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "LbInspectionFailures", "]"}], "==", 
                  "0"}], ",", "True", ",", 
                 RowBox[{"\"\<Failures: \>\"", "<>", 
                  RowBox[{"StringRiffle", "[", 
                   RowBox[{"LbInspectionFailures", ",", " ", "\"\<, \>\""}], 
                   "]"}]}]}], "]"}], ",", "\n", "\t\t\t\t", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "LcInspectionFailures", "]"}], "==", 
                  "0"}], ",", "True", ",", 
                 RowBox[{"\"\<Failures: \>\"", "<>", 
                  RowBox[{"StringRiffle", "[", 
                   RowBox[{"LcInspectionFailures", ",", " ", "\"\<, \>\""}], 
                   "]"}]}]}], "]"}], ",", "\n", "\t\t\t\t", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "LdInspectionFailures", "]"}], "==", 
                  "0"}], ",", "True", ",", 
                 RowBox[{"\"\<Failures: \>\"", "<>", 
                  RowBox[{"StringRiffle", "[", 
                   RowBox[{"LdInspectionFailures", ",", " ", "\"\<, \>\""}], 
                   "]"}]}]}], "]"}], ",", "\n", "\t\t\t\t", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "LWInspectionFailures", "]"}], "==", 
                  "0"}], ",", "True", ",", 
                 RowBox[{"\"\<Failures: \>\"", "<>", 
                  RowBox[{"StringRiffle", "[", 
                   RowBox[{"LWInspectionFailures", ",", " ", "\"\<, \>\""}], 
                   "]"}]}]}], "]"}]}], "\n", "\t\t\t", "}"}]}], "\n", "\t\t", 
            "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", "\n", "\t\t\t", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(R\), \({h, b, d, c, W}, i\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) <\!\(\*OverscriptBox[SubscriptBox[\(a\), \
SubscriptBox[\(i\), \(hi {\(,\)\(W\)}\)]], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(G\), \
SubscriptBox[\(i\), \(lo\)]], \(\[RightVector]\)]\)> + \
<\!\(\*OverscriptBox[SubscriptBox[\(b\), SubscriptBox[\(i\), \(lo \
{\(,\)\(W\)}\)]], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\({H, B, D, C, H}\), \
SubscriptBox[\(i\), \(hi\)]], \(\[RightVector]\)]\)> + \
<\!\(\*OverscriptBox[SubscriptBox[\(a\), SubscriptBox[\(i\), \(hi \
{\(,\)\(W\)}\)]], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(b\), \
SubscriptBox[\(i\), \(lo {\(,\)\(W\)}\)]], \(\[RightVector]\)]\)>g'\\ni\
\[Element][\[LeftCeiling]\!\(\*SubscriptBox[\(log\), \(2\)]\)(n)\
\[RightCeiling]...1]\>\"", ",", "\n", "\t\t\t", "\"\<Commitment\>\"", ",", 
             "\n", "\t\t\t", 
             RowBox[{"{", "\n", "\t\t\t\t", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "RhInspectionFailures", "]"}], "==", 
                  "0"}], ",", "True", ",", 
                 RowBox[{"\"\<Failures: \>\"", "<>", 
                  RowBox[{"StringRiffle", "[", 
                   RowBox[{"RhInspectionFailures", ",", " ", "\"\<, \>\""}], 
                   "]"}]}]}], "]"}], ",", "\n", "\t\t\t\t", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "RbInspectionFailures", "]"}], "==", 
                  "0"}], ",", "True", ",", 
                 RowBox[{"\"\<Failures: \>\"", "<>", 
                  RowBox[{"StringRiffle", "[", 
                   RowBox[{"RbInspectionFailures", ",", " ", "\"\<, \>\""}], 
                   "]"}]}]}], "]"}], ",", "\n", "\t\t\t\t", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "RcInspectionFailures", "]"}], "==", 
                  "0"}], ",", "True", ",", 
                 RowBox[{"\"\<Failures: \>\"", "<>", 
                  RowBox[{"StringRiffle", "[", 
                   RowBox[{"RcInspectionFailures", ",", " ", "\"\<, \>\""}], 
                   "]"}]}]}], "]"}], ",", "\n", "\t\t\t\t", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "RdInspectionFailures", "]"}], "==", 
                  "0"}], ",", "True", ",", 
                 RowBox[{"\"\<Failures: \>\"", "<>", 
                  RowBox[{"StringRiffle", "[", 
                   RowBox[{"RdInspectionFailures", ",", " ", "\"\<, \>\""}], 
                   "]"}]}]}], "]"}], ",", "\n", "\t\t\t\t", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "RWInspectionFailures", "]"}], "==", 
                  "0"}], ",", "True", ",", 
                 RowBox[{"\"\<Failures: \>\"", "<>", 
                  RowBox[{"StringRiffle", "[", 
                   RowBox[{"RWInspectionFailures", ",", " ", "\"\<, \>\""}], 
                   "]"}]}]}], "]"}]}], "\n", "\t\t\t", "}"}]}], "\n", "\t\t", 
            "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(a\), \(0\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) successively halved \
\!\(\*OverscriptBox[SubscriptBox[\(a\), \
\(\[LeftCeiling]\*SubscriptBox[\(log\), \(2\)] \((n)\)\[RightCeiling]\)], \(\
\[RightVector]\)]\)\>\"", ",", " ", "\"\<Definition\>\"", ",", " ", 
             "a0DefinitionOk"}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(b\), \(0\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) successively halved \
\!\(\*OverscriptBox[SubscriptBox[\(b\), \
\(\[LeftCeiling]\*SubscriptBox[\(log\), \(2\)] \((n)\)\[RightCeiling]\)], \(\
\[RightVector]\)]\)\>\"", ",", " ", "\"\<Definition\>\"", ",", " ", 
             "b0DefinitionOk"}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(a\), \(0, W\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) successively halved \
\!\(\*OverscriptBox[SubscriptBox[\(a\), \
\(\[LeftCeiling]\*SubscriptBox[\(log\), \(2\)] \((n)\)\[RightCeiling], W\)], \
\(\[RightVector]\)]\)\>\"", ",", " ", "\"\<Definition\>\"", ",", " ", 
             "a0WDefinitionOk"}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(b\), \(0, W\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) successively halved \
\!\(\*OverscriptBox[SubscriptBox[\(b\), \
\(\[LeftCeiling]\*SubscriptBox[\(log\), \(2\)] \((n)\)\[RightCeiling], W\)], \
\(\[RightVector]\)]\)\>\"", ",", " ", "\"\<Definition\>\"", ",", " ", 
             "b0WDefinitionOk"}], "}"}]}], "\n", "\t", "}"}], ",", " ", 
         RowBox[{"Alignment", "->", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"Left", ",", "Left", ",", "Left"}], "}"}], "}"}]}], ",", 
         RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], ";", "\n", "\n", 
      "\t", 
      RowBox[{"success", " ", "=", " ", "False"}], ";", "\n", "\t", 
      RowBox[{"Which", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "LhInspectionFailures", "]"}], " ", ">", " ", 
         "0"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", 
         RowBox[{"StringRiffle", "[", 
          RowBox[{"LhInspectionFailures", ",", " ", "\"\<, \>\""}], "]"}], 
         "]"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Length", "[", "RhInspectionFailures", "]"}], " ", ">", " ", 
         "0"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", 
         RowBox[{"StringRiffle", "[", 
          RowBox[{"RhInspectionFailures", ",", " ", "\"\<, \>\""}], "]"}], 
         "]"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Length", "[", "LbInspectionFailures", "]"}], " ", ">", " ", 
         "0"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", 
         RowBox[{"StringRiffle", "[", 
          RowBox[{"LbInspectionFailures", ",", " ", "\"\<, \>\""}], "]"}], 
         "]"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Length", "[", "RbInspectionFailures", "]"}], " ", ">", " ", 
         "0"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", 
         RowBox[{"StringRiffle", "[", 
          RowBox[{"RbInspectionFailures", ",", " ", "\"\<, \>\""}], "]"}], 
         "]"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Length", "[", "LcInspectionFailures", "]"}], " ", ">", " ", 
         "0"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", 
         RowBox[{"StringRiffle", "[", 
          RowBox[{"LcInspectionFailures", ",", " ", "\"\<, \>\""}], "]"}], 
         "]"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Length", "[", "RcInspectionFailures", "]"}], " ", ">", " ", 
         "0"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", 
         RowBox[{"StringRiffle", "[", 
          RowBox[{"RcInspectionFailures", ",", " ", "\"\<, \>\""}], "]"}], 
         "]"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Length", "[", "LdInspectionFailures", "]"}], " ", ">", " ", 
         "0"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", 
         RowBox[{"StringRiffle", "[", 
          RowBox[{"LdInspectionFailures", ",", " ", "\"\<, \>\""}], "]"}], 
         "]"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Length", "[", "RdInspectionFailures", "]"}], " ", ">", " ", 
         "0"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", 
         RowBox[{"StringRiffle", "[", 
          RowBox[{"RdInspectionFailures", ",", " ", "\"\<, \>\""}], "]"}], 
         "]"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Length", "[", "LWInspectionFailures", "]"}], " ", ">", " ", 
         "0"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", 
         RowBox[{"StringRiffle", "[", 
          RowBox[{"LWInspectionFailures", ",", " ", "\"\<, \>\""}], "]"}], 
         "]"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Length", "[", "RWInspectionFailures", "]"}], " ", ">", " ", 
         "0"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", 
         RowBox[{"StringRiffle", "[", 
          RowBox[{"RWInspectionFailures", ",", " ", "\"\<, \>\""}], "]"}], 
         "]"}], ",", "\n", "\t\t", 
        RowBox[{"!", "a0DefinitionOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<Definition of a0\>\"", "]"}], 
        ",", "\n", "\t\t", 
        RowBox[{"!", "b0DefinitionOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<Definition of b0\>\"", "]"}], 
        ",", "\n", "\t\t", 
        RowBox[{"!", "a0WDefinitionOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<Definition of a0W\>\"", "]"}], 
        ",", "\n", "\t\t", 
        RowBox[{"!", "b0WDefinitionOk"}], ",", " ", 
        RowBox[{"InspectionFailed", "[", "\"\<Definition of b0W\>\"", "]"}], 
        ",", "\n", "\t\t", "True", ",", " ", 
        RowBox[{"success", " ", "=", " ", "True"}]}], "\n", "\t", "]"}], ";", 
      "\n", "\t", "success"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{"fiatShamirSingleKernel", ",", "\n", "\t", 
    RowBox[{
     RowBox[{
     "Print", "[", 
      "\"\<Can not send inspection requests in Single-Kernel mode. Done.\>\"",
       "]"}], ";"}], "\n", 
    RowBox[{"(*", "Else", "*)"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"TellProver", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<_inspection_request_\>\"", "->", "True"}], "}"}], "]"}], 
     ";", "\n", "\t", 
     RowBox[{"inspectionReply", " ", "=", " ", 
      RowBox[{"WaitForVariable", "[", 
       RowBox[{"\"\<_inspection_reply\>\"", ",", "\"\<Prover\>\""}], "]"}]}], 
     ";", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{
      "Implementing", " ", "timeout", " ", "on", " ", "wait", " ", "not", " ",
        "possible", " ", "in", " ", "Mathematica", " ", "but", " ", "needed", 
       " ", "in", " ", "practice"}], "*)"}], "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
       "MultiKeyShuffleArgumentInspection", "[", "inspectionReply", "]"}], 
       ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
          "InnerProductArgumentInspection", "[", "inspectionReply", "]"}], 
          ",", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"InspectionSucceeded", "[", "]"}], ";"}]}], "\n", "\t\t", 
         "]"}], ";"}]}], "\n", "\t", "]"}], ";"}]}], "\n", "]"}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.89749605539012*^9, 3.89749612340412*^9}, {
   3.8976449892045107`*^9, 3.8976450017071247`*^9}, {3.897645037638028*^9, 
   3.897645039549782*^9}, {3.897645158453293*^9, 3.897645231364067*^9}, {
   3.8976453364856367`*^9, 3.897645344671064*^9}, {3.8976454539869432`*^9, 
   3.897645620126088*^9}, {3.897645681283065*^9, 3.897645803494607*^9}, {
   3.897645835010816*^9, 3.897645841711809*^9}, {3.897645957565742*^9, 
   3.897645964539648*^9}, {3.897646314278758*^9, 3.897646328008984*^9}, {
   3.897646548230957*^9, 3.8976465511652727`*^9}, {3.897646942104744*^9, 
   3.897647218650111*^9}, {3.897647640444747*^9, 3.897647663346694*^9}, {
   3.897647761830962*^9, 3.897647766353219*^9}, {3.8976482639791813`*^9, 
   3.897648306493622*^9}, {3.8976662907112703`*^9, 3.897666375435577*^9}, {
   3.8976664643240757`*^9, 3.8976665020244102`*^9}, {3.897666535694997*^9, 
   3.897666835802238*^9}, {3.897666913496751*^9, 3.8976669248282747`*^9}, {
   3.897666958986991*^9, 3.8976670531894293`*^9}, {3.8976746783698072`*^9, 
   3.8976746911128187`*^9}, {3.897674822635141*^9, 3.897674823085627*^9}, {
   3.8979887537889357`*^9, 3.897988761700921*^9}, {3.897988859792611*^9, 
   3.8979889436366997`*^9}, {3.898004394322976*^9, 3.8980043981355057`*^9}, {
   3.898005147200386*^9, 3.898005147752792*^9}, {3.898005215400688*^9, 
   3.898005241086994*^9}, {3.8980053640032034`*^9, 3.89800539864283*^9}, {
   3.898005457065101*^9, 3.898005464336458*^9}, {3.8980055427524214`*^9, 
   3.898005555202362*^9}, {3.898005587443965*^9, 3.898005643519696*^9}, {
   3.8980057007173176`*^9, 3.898005766804034*^9}, {3.898005818791082*^9, 
   3.8980059044890428`*^9}, {3.8980059353490267`*^9, 
   3.8980059436199856`*^9}, {3.8980060092575383`*^9, 
   3.8980062532612867`*^9}, {3.898006331675621*^9, 3.8980063724536085`*^9}, {
   3.8980064113397713`*^9, 3.8980064535734205`*^9}, {3.8980065362700367`*^9, 
   3.898006574160293*^9}, {3.8980067774443755`*^9, 3.8980069905149584`*^9}, {
   3.8980070215847435`*^9, 3.898007077981879*^9}, {3.8980071113248777`*^9, 
   3.8980071632480555`*^9}, {3.898007206805476*^9, 3.8980075192363763`*^9}, {
   3.8980075504083195`*^9, 3.8980076027749195`*^9}, {3.898007667657324*^9, 
   3.8980077315812583`*^9}, 3.898009372342673*^9, {3.8980094074280243`*^9, 
   3.8980096191943903`*^9}, {3.89800981206703*^9, 3.8980098870921583`*^9}, {
   3.898009926538185*^9, 3.898009931932149*^9}, 3.898009974399046*^9, {
   3.898010022594247*^9, 3.89801002350696*^9}, {3.8980106858114157`*^9, 
   3.8980106945293612`*^9}, {3.898010822732836*^9, 3.898010843071269*^9}, {
   3.8980831538188148`*^9, 3.898083163018689*^9}, {3.8980832839967337`*^9, 
   3.8980833334124856`*^9}, {3.898084052036496*^9, 3.8980840562129326`*^9}, {
   3.8980841072283564`*^9, 3.898084111925202*^9}, {3.8980844235290923`*^9, 
   3.8980844258485675`*^9}, {3.8980857128312254`*^9, 
   3.8980857933102927`*^9}, {3.8981445614733768`*^9, 
   3.8981445784690976`*^9}, {3.898144740300144*^9, 3.8981447439197493`*^9}, {
   3.8981448152191515`*^9, 3.898144901919635*^9}, {3.8981459932845354`*^9, 
   3.898146068804435*^9}, {3.8981461230949907`*^9, 3.898146275389659*^9}, {
   3.898146324349397*^9, 3.8981463832455597`*^9}, {3.8981464790520763`*^9, 
   3.8981468035577483`*^9}, {3.898146869986644*^9, 3.898147000562995*^9}, {
   3.898147041804514*^9, 3.8981470754379587`*^9}, {3.898147109843965*^9, 
   3.8981472252998047`*^9}, {3.898149263597349*^9, 3.8981495695850463`*^9}, {
   3.8981496048270216`*^9, 3.898149607364814*^9}, {3.898149642788363*^9, 
   3.8981499208756604`*^9}, {3.8981499518671103`*^9, 
   3.8981499801930647`*^9}, {3.8981500254784927`*^9, 
   3.8981500432605944`*^9}, {3.89815009174339*^9, 3.898150292225841*^9}, {
   3.8981503542226076`*^9, 3.8981504076992536`*^9}, {3.8981505887807255`*^9, 
   3.898150591575425*^9}, {3.8983400234777946`*^9, 3.8983400328865576`*^9}, {
   3.898340161968458*^9, 3.8983402493976684`*^9}, {3.8983402799830666`*^9, 
   3.898340353377883*^9}, {3.898340524809513*^9, 3.8983405480349874`*^9}, {
   3.8983407046593933`*^9, 3.8983407150068474`*^9}, {3.8983407475609436`*^9, 
   3.8983408041886234`*^9}, {3.8983408724154315`*^9, 3.898341038320597*^9}, {
   3.8983410753361406`*^9, 3.8983410885905066`*^9}, {3.898341347531082*^9, 
   3.898341358407234*^9}, {3.8983414346612196`*^9, 3.898341438605054*^9}, {
   3.8983414746089892`*^9, 3.898341506216488*^9}, {3.8983415975296164`*^9, 
   3.89834165852633*^9}, {3.898342183015913*^9, 3.898342200301916*^9}, {
   3.8983422712796936`*^9, 3.898342297287981*^9}, {3.898342462157198*^9, 
   3.8983424895967517`*^9}, {3.8983426756950026`*^9, 3.8983426920493*^9}, {
   3.898342723307972*^9, 3.898342739736642*^9}, {3.8983427926878133`*^9, 
   3.8983427967751923`*^9}, {3.8983428999756947`*^9, 3.898343058620299*^9}, {
   3.898344605494871*^9, 3.898344636694064*^9}, {3.8983446844228935`*^9, 
   3.898344686438525*^9}, {3.8990315820256176`*^9, 3.899031585878666*^9}, {
   3.8990316316741257`*^9, 3.899031767044758*^9}, {3.899031855668888*^9, 
   3.899032088538022*^9}, {3.8993028505209565`*^9, 3.8993028649411287`*^9}, {
   3.8993029353272724`*^9, 3.899302964790736*^9}, {3.899309908539483*^9, 
   3.8993099112095137`*^9}, {3.8993870111146736`*^9, 3.899387095257866*^9}, {
   3.899387208393241*^9, 3.8993872106209006`*^9}, {3.9114064095667353`*^9, 
   3.911406585761363*^9}},
 CellLabel->
  "In[323]:=",ExpressionUUID->"3ec9dbe3-d994-4e69-b41c-2c82b13125e7"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Waiting to receive _inspection_reply from Prover ...\"\>"], \
"Print",
 CellChangeTimes->{3.913948958339317*^9},
 CellLabel->
  "During evaluation of \
In[323]:=",ExpressionUUID->"d3513958-a072-4922-ad4b-8df8f97370d6"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Expression\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Type of Check\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Value\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {"\<\"\[Pi]\"\>", "\<\"Permutation\"\>", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", "2"}], "}"}]},
    {"\<\"s\"\>", "\<\"Shift\"\>", 
     "770554162194964772974587180295867234396613668718940904780021901670679680\
31603"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(A\\), \\(W\\)]\\) \
\\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) \
<\\!\\(\\*OverscriptBox[SubscriptBox[\\(a\\), \\(L, W\\)], \
\\(\[RightVector]\\)]\\),\\!\\(\\*OverscriptBox[\\(g\\), \
\\(\[RightVector]\\)]\\)> + <\\!\\(\\*OverscriptBox[SubscriptBox[\\(a\\), \
\\(R, W\\)], \\(\[RightVector]\\)]\\),\\!\\(\\*OverscriptBox[\\(h\\), \\(\
\[RightVector]\\)]\\)> + \\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(W\\)]\\)h\"\
\>", "\<\"Inspection\"\>", "True"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(S\\), \\(W\\)]\\) \
\\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) \
<\\!\\(\\*OverscriptBox[SubscriptBox[\\(s\\), \\(L, W\\)], \
\\(\[RightVector]\\)]\\),\\!\\(\\*OverscriptBox[\\(g\\), \
\\(\[RightVector]\\)]\\)> + <\\!\\(\\*OverscriptBox[SubscriptBox[\\(s\\), \
\\(R, W\\)], \\(\[RightVector]\\)]\\),\\!\\(\\*OverscriptBox[\\(h\\), \\(\
\[RightVector]\\)]\\)> + \\!\\(\\*SubscriptBox[\\(\[Beta]\\), \
\\(W\\)]\\)h\"\>", "\<\"Inspection\"\>", "True"},
    {"\<\"\\!\\(\\*OverscriptBox[\\(h'\\), \\(\[RightVector]\\)]\\) \
\\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) \
s\[Pi](\\!\\(\\*OverscriptBox[\\(h\\), \\(\[RightVector]\\)]\\))\"\>", \
"\<\"Shifted permutation\"\>", "True"},
    {"\<\"\\!\\(\\*OverscriptBox[\\(b'\\), \\(\[RightVector]\\)]\\) \
\\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) \
s\[Pi](\\!\\(\\*OverscriptBox[\\(b\\), \\(\[RightVector]\\)]\\))\"\>", \
"\<\"Shifted permutation\"\>", "True"},
    {"\<\"\\!\\(\\*OverscriptBox[\\(c'\\), \\(\[RightVector]\\)]\\) \
\\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) \
s\[Pi](\\!\\(\\*OverscriptBox[\\(c\\), \\(\[RightVector]\\)]\\))\"\>", \
"\<\"Shifted permutation\"\>", "True"},
    {"\<\"\\!\\(\\*OverscriptBox[\\(d'\\), \\(\[RightVector]\\)]\\) \
\\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) \
s\[Pi](\\!\\(\\*OverscriptBox[\\(d\\), \\(\[RightVector]\\)]\\))\"\>", \
"\<\"Shifted permutation\"\>", "True"},
    {"\<\"V \\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) sg\"\>", \
"\<\"Inspection\"\>", "True"},
    {"\<\"W \\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(s\\), \\(n\\)]\\)g + \\!\\(\\*SubscriptBox[\\(\
\[Sigma]\\), \\(W\\)]\\)h\"\>", "\<\"Inspection\"\>", "True"},
    {"\<\"\\!\\(\\*OverscriptBox[SubscriptBox[\\(a\\), \\(R\\)], \\(\
\[RightVector]\\)]\\) :\\!\\(\\*SubscriptBox[\\(\[Congruent]\\), \\(q\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(s\[Pi]\\), \
\\(-1\\)]\\)(\\!\\(\\*OverscriptBox[\\(k\\), \
\\(\[RightVector]\\)]\\))\\n\\!\\(\\*OverscriptBox[SubscriptBox[\\(a\\), \\(L\
\\)], \\(\[RightVector]\\)]\\) :\\!\\(\\*SubscriptBox[\\(\[Congruent]\\), \
\\(q\\)]\\) Multiplicative aggregation of \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(a\\), \\(L\\)], \
\\(\[RightVector]\\)]\\) starting at 1\"\>", "\[SpanFromLeft]", 
     "\[SpanFromLeft]"},
    {"\<\"\[Alpha]\"\>", "\<\"\"\>", 
     "173981762024816377518601142481760477605311566978503216161279922790493282\
52413"},
    {"\<\"\[Beta]\"\>", "\<\"\"\>", 
     "272195529204182781546220083783853207853968690301597800240131630249743960\
33246"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(h\\)]\\)\"\>", "\<\"\"\>", 
     "102986942228350997637870447182702336728859860977331651452906247885964411\
195770"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(b\\)]\\)\"\>", "\<\"\"\>", 
     "677503945904517781582049401676182406462170089697751546085411508120220723\
15973"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(c\\)]\\)\"\>", "\<\"\"\>", 
     "747137490571886902379214432549672978869155776955151836813949760263969397\
78234"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(d\\)]\\)\"\>", "\<\"\"\>", 
     "557392598238769497891256547391867636201648399119025399748300651637335280\
27333"},
    {"\<\"\\!\\(\\*OverscriptBox[SubscriptBox[\\(s\\), \\(L\\)], \\(\
\[RightVector]\\)]\\)\"\>", "\<\"\"\>", 
     RowBox[{"{", 
      RowBox[{
      "34900439514733429578632696128888253709660989597322026684613663962017736\
08447", ",", 
       "8102687004343831075978973809056575297134872642270546959155508303582777\
8970747", ",", 
       "1094130171808865444879216836784135345667954998395189130160040767083822\
33891835"}], "}"}]},
    {"\<\"\\!\\(\\*OverscriptBox[SubscriptBox[\\(s\\), \\(R\\)], \\(\
\[RightVector]\\)]\\)\"\>", "\<\"\"\>", 
     RowBox[{"{", 
      RowBox[{
      "12507601888368634928041736808448324961591369924503374677351026235158490\
466997", ",", 
       "6331390930378374520482787531659277992139873175127426928281743301452614\
1649354", ",", 
       "2747221745873668611332556607520987485492234526425523459293038151074612\
1210239"}], "}"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(A\\), \\(L\\)]\\) \
\\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) \
<\\!\\(\\*OverscriptBox[SubscriptBox[\\(a\\), \\(L\\)], \\(\[RightVector]\\)]\
\\),\\!\\(\\*OverscriptBox[\\(g\\), \\(\[RightVector]\\)]\\)> + \
\[Alpha]h\"\>", "\<\"Inspection\"\>", "True"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(S\\), \\(L\\)]\\) \
\\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) \
<\\!\\(\\*OverscriptBox[SubscriptBox[\\(s\\), \\(L\\)], \\(\[RightVector]\\)]\
\\),\\!\\(\\*OverscriptBox[\\(g\\), \\(\[RightVector]\\)]\\)> + \
\[Beta]h\"\>", "\<\"Inspection\"\>", "True"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(S\\), \\(R, h\\)]\\) \
\\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) \
<\\!\\(\\*OverscriptBox[SubscriptBox[\\(s\\), \\(R\\)], \\(\[RightVector]\\)]\
\\),\\!\\(\\*OverscriptBox[\\(h\\), \\(\[RightVector]\\)]\\)> + \
\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(h\\)]\\)h\"\>", "\<\"Inspection\"\>", 
     "True"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(S\\), \\(R, b\\)]\\) \
\\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) \
<\\!\\(\\*OverscriptBox[SubscriptBox[\\(s\\), \\(R\\)], \\(\[RightVector]\\)]\
\\),\\!\\(\\*OverscriptBox[\\(b\\), \\(\[RightVector]\\)]\\)> + \
\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(b\\)]\\)h\"\>", "\<\"Inspection\"\>", 
     "True"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(S\\), \\(R, c\\)]\\) \
\\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) \
<\\!\\(\\*OverscriptBox[SubscriptBox[\\(s\\), \\(R\\)], \\(\[RightVector]\\)]\
\\),\\!\\(\\*OverscriptBox[\\(c\\), \\(\[RightVector]\\)]\\)> + \
\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(c\\)]\\)h\"\>", "\<\"Inspection\"\>", 
     "True"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(S\\), \\(R, d\\)]\\) \
\\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) \
<\\!\\(\\*OverscriptBox[SubscriptBox[\\(s\\), \\(R\\)], \\(\[RightVector]\\)]\
\\),\\!\\(\\*OverscriptBox[\\(d\\), \\(\[RightVector]\\)]\\)> + \
\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(d\\)]\\)h\"\>", "\<\"Inspection\"\>", 
     "True"},
    {"\<\"\\!\\(\\*OverscriptBox[SubscriptBox[\\(l\\), \\(0\\)], \\(\
\[RightVector]\\)]\\) :\\!\\(\\*SubscriptBox[\\(\[Congruent]\\), \\(q\\)]\\) \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(a\\), \\(L\\)], \
\\(\[RightVector]\\)]\\) + \\!\\(\\*SuperscriptBox[\\(z\\), \\(3\\)]\\)\\!\\(\
\\*OverscriptBox[SuperscriptBox[\\(y\\), \\(-n\\)], \
\\(\[RightVector]\\)]\\)\\n\\!\\(\\*OverscriptBox[SubscriptBox[\\(l\\), \
\\(2\\)], \\(\[RightVector]\\)]\\) :\\!\\(\\*SubscriptBox[\\(\[Congruent]\\), \
\\(q\\)]\\) \\!\\(\\*OverscriptBox[SubscriptBox[\\(s\\), \\(L\\)], \\(\
\[RightVector]\\)]\\)\\n\\!\\(\\*OverscriptBox[SubscriptBox[\\(r\\), \
\\(1\\)], \\(\[RightVector]\\)]\\) :\\!\\(\\*SubscriptBox[\\(\[Congruent]\\), \
\\(q\\)]\\) \\!\\(\\*OverscriptBox[SuperscriptBox[\\(y\\), \\(n\\)], \\(\
\[RightVector]\\)]\\)\[SmallCircle]\\!\\(\\*OverscriptBox[SubscriptBox[\\(a\\)\
, \\(R\\)], \\(\[RightVector]\\)]\\) - \
\\!\\(\\*OverscriptBox[SubsuperscriptBox[\\(y\\), \\(z\\), \\(n - 1\\)], \\(\
\[RightVector]\\)]\\)\\n\\!\\(\\*OverscriptBox[SubscriptBox[\\(r\\), \
\\(3\\)], \\(\[RightVector]\\)]\\) :\\!\\(\\*SubscriptBox[\\(\[Congruent]\\), \
\\(q\\)]\\) \\!\\(\\*OverscriptBox[SuperscriptBox[\\(y\\), \\(n\\)], \\(\
\[RightVector]\\)]\\)\[SmallCircle]\\!\\(\\*OverscriptBox[SubscriptBox[\\(s\\)\
, \\(R\\)], \\(\[RightVector]\\)]\\)\"\>", "\[SpanFromLeft]", 
     "\[SpanFromLeft]"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(t\\), \\(3\\)]\\)\"\>", "\<\"\"\>", 
     "173107331618370135928163101491570178104655422618432184314523239691157777\
52129"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(3\\)]\\)\"\>", "\<\"\"\>", 
     "103025787400053846491173493263859547421436948279868469816606692097792288\
570268"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(T\\), \\(3\\)]\\) \
\\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) \\!\\(\\*SubscriptBox[\\(gt\\), \
\\(3\\)]\\) + \\!\\(\\*SubscriptBox[\\(h\[Tau]\\), \\(3\\)]\\)\"\>", \
"\<\"Inspection\"\>", "True"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(t\\), \\(3\\)]\\) \
\\!\\(\\*SubscriptBox[OverscriptBox[\\(\[Congruent]\\), \\(?\\)], \\(q\\)]\\) \
<\\!\\(\\*OverscriptBox[SubscriptBox[\\(l\\), \\(0\\)], \\(\[RightVector]\\)]\
\\),\\!\\(\\*OverscriptBox[SubscriptBox[\\(r\\), \\(3\\)], \
\\(\[RightVector]\\)]\\)> + <\\!\\(\\*OverscriptBox[SubscriptBox[\\(l\\), \
\\(2\\)], \
\\(\[RightVector]\\)]\\),\\!\\(\\*OverscriptBox[SubscriptBox[\\(r\\), \
\\(1\\)], \\(\[RightVector]\\)]\\)>\"\>", "\<\"Definition\"\>", "True"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(t\\), \\(5\\)]\\)\"\>", "\<\"\"\>", 
     "793508399460515787137752312710348625620401221482547900443386609461670573\
33318"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(5\\)]\\)\"\>", "\<\"\"\>", 
     "955384483978854895659251962029093229845692757662707812220632972809023315\
26819"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(T\\), \\(5\\)]\\) \
\\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) \\!\\(\\*SubscriptBox[\\(gt\\), \
\\(5\\)]\\) + \\!\\(\\*SubscriptBox[\\(h\[Tau]\\), \\(5\\)]\\)\"\>", \
"\<\"Inspection\"\>", "True"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(t\\), \\(5\\)]\\) \
\\!\\(\\*SubscriptBox[OverscriptBox[\\(\[Congruent]\\), \\(?\\)], \\(q\\)]\\) \
<\\!\\(\\*OverscriptBox[SubscriptBox[\\(l\\), \\(2\\)], \\(\[RightVector]\\)]\
\\),\\!\\(\\*OverscriptBox[SubscriptBox[\\(r\\), \\(3\\)], \
\\(\[RightVector]\\)]\\)>\"\>", "\<\"Definition\"\>", "True"},
    {"\<\"\\!\\(\\*OverscriptBox[SubscriptBox[\\(l\\), \\(0, W\\)], \\(\
\[RightVector]\\)]\\) :\\!\\(\\*SubscriptBox[\\(\[Congruent]\\), \\(q\\)]\\) \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(a\\), \\(L, W\\)], \
\\(\[RightVector]\\)]\\) + z\\!\\(\\*OverscriptBox[SuperscriptBox[\\(y\\), \
\\(-n\\)], \\(\[RightVector]\\)]\\) + \
\\!\\(\\*OverscriptBox[SuperscriptBox[\\(w\\), \\(n\\)], \
\\(\[RightVector]\\)]\\) - \\!\\(\\*OverscriptBox[SubsuperscriptBox[\\(w\\), \
\\(0\\), \\(n - 1\\)], \
\\(\[RightVector]\\)]\\)\\!\\(\\*SuperscriptBox[\\(y\\), \
\\(-1\\)]\\)\\n\\!\\(\\*OverscriptBox[SubscriptBox[\\(l\\), \\(1, W\\)], \\(\
\[RightVector]\\)]\\) :\\!\\(\\*SubscriptBox[\\(\[Congruent]\\), \\(q\\)]\\) \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(s\\), \\(L, W\\)], \
\\(\[RightVector]\\)]\\)\\n\\!\\(\\*OverscriptBox[SubscriptBox[\\(r\\), \\(0, \
W\\)], \\(\[RightVector]\\)]\\) :\\!\\(\\*SubscriptBox[\\(\[Congruent]\\), \
\\(q\\)]\\) \\!\\(\\*OverscriptBox[SuperscriptBox[\\(y\\), \\(n\\)], \\(\
\[RightVector]\\)]\\)\[SmallCircle]\\!\\(\\*OverscriptBox[SubscriptBox[\\(a\\)\
, \\(R, W\\)], \\(\[RightVector]\\)]\\) - \
\\!\\(\\*OverscriptBox[SubsuperscriptBox[\\(y\\), \\(z\\), \\(n - 1\\)], \\(\
\[RightVector]\\)]\\)\\n\\!\\(\\*OverscriptBox[SubscriptBox[\\(r\\), \\(1, \
W\\)], \\(\[RightVector]\\)]\\) :\\!\\(\\*SubscriptBox[\\(\[Congruent]\\), \
\\(q\\)]\\) \\!\\(\\*OverscriptBox[SuperscriptBox[\\(y\\), \\(n\\)], \\(\
\[RightVector]\\)]\\)\[SmallCircle]\\!\\(\\*OverscriptBox[SubscriptBox[\\(s\\)\
, \\(R, W\\)], \\(\[RightVector]\\)]\\)\"\>", "\[SpanFromLeft]", 
     "\[SpanFromLeft]"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(t\\), \\(1, W\\)]\\)\"\>", "\<\"\"\>", 
     "429342284827042771715899132155415058065999001580997040595866707179786944\
00618"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(1, W\\)]\\)\"\>", "\<\"\"\>",
      "91690863698252499759127603862000154779781812325324670430965064128712168\
545446"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(T\\), \\(1, W\\)]\\) \
\\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) \\!\\(\\*SubscriptBox[\\(gt\\), \
\\(1, W\\)]\\) + \\!\\(\\*SubscriptBox[\\(h\[Tau]\\), \\(1, W\\)]\\)\"\>", \
"\<\"Inspection\"\>", "True"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(t\\), \\(1, W\\)]\\) \
\\!\\(\\*SubscriptBox[OverscriptBox[\\(\[Congruent]\\), \\(?\\)], \\(q\\)]\\) \
<\\!\\(\\*OverscriptBox[SubscriptBox[\\(l\\), \\(0, W\\)], \
\\(\[RightVector]\\)]\\),\\!\\(\\*OverscriptBox[SubscriptBox[\\(r\\), \\(1, W\
\\)], \\(\[RightVector]\\)]\\)> + \
<\\!\\(\\*OverscriptBox[SubscriptBox[\\(l\\), \\(1, W\\)], \
\\(\[RightVector]\\)]\\),\\!\\(\\*OverscriptBox[SubscriptBox[\\(r\\), \\(0, W\
\\)], \\(\[RightVector]\\)]\\)>\"\>", "\<\"Definition\"\>", "True"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(t\\), \\(2, W\\)]\\)\"\>", "\<\"\"\>", 
     "317973581386048430348247474339756833284713145730823739288161576819870414\
67600"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(2, W\\)]\\)\"\>", "\<\"\"\>",
      "40108148314656642355482654761159741390013608167369861038828510103751428\
31463"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(T\\), \\(2, W\\)]\\) \
\\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) \\!\\(\\*SubscriptBox[\\(gt\\), \
\\(2, W\\)]\\) + \\!\\(\\*SubscriptBox[\\(h\[Tau]\\), \\(2, W\\)]\\)\"\>", \
"\<\"Inspection\"\>", "True"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(t\\), \\(2, W\\)]\\) \
\\!\\(\\*SubscriptBox[OverscriptBox[\\(\[Congruent]\\), \\(?\\)], \\(q\\)]\\) \
<\\!\\(\\*OverscriptBox[SubscriptBox[\\(l\\), \\(1, W\\)], \
\\(\[RightVector]\\)]\\),\\!\\(\\*OverscriptBox[SubscriptBox[\\(r\\), \\(1, W\
\\)], \\(\[RightVector]\\)]\\)>\"\>", "\<\"Definition\"\>", "True"},
    {"\<\"\\!\\(\\*OverscriptBox[\\(l\\), \\(\[RightVector]\\)]\\) \
:\\!\\(\\*SubscriptBox[\\(\[Congruent]\\), \\(q\\)]\\) \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(l\\), \\(0\\)], \
\\(\[RightVector]\\)]\\)+\\!\\(\\*OverscriptBox[SubscriptBox[\\(l\\), \
\\(2\\)], \\(\[RightVector]\\)]\\)\\!\\(\\*SuperscriptBox[\\(x\\), \
\\(2\\)]\\)\\n\\!\\(\\*OverscriptBox[\\(r\\), \\(\[RightVector]\\)]\\) \
:\\!\\(\\*SubscriptBox[\\(\[Congruent]\\), \\(q\\)]\\) \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(r\\), \\(1\\)], \
\\(\[RightVector]\\)]\\)x+\\!\\(\\*OverscriptBox[SubscriptBox[\\(r\\), \
\\(3\\)], \\(\[RightVector]\\)]\\)\\!\\(\\*SuperscriptBox[\\(x\\), \
\\(3\\)]\\)\"\>", "\[SpanFromLeft]", "\[SpanFromLeft]"},
    {"\<\"\\!\\(\\*OverscriptBox[SubscriptBox[\\(l\\), \\(W\\)], \\(\
\[RightVector]\\)]\\) :\\!\\(\\*SubscriptBox[\\(\[Congruent]\\), \\(q\\)]\\) \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(l\\), \\(0, W\\)], \
\\(\[RightVector]\\)]\\)+\\!\\(\\*OverscriptBox[SubscriptBox[\\(l\\), \\(1, W\
\\)], \\(\[RightVector]\\)]\\)x\\n\\!\\(\\*OverscriptBox[SubscriptBox[\\(r\\),\
 \\(W\\)], \\(\[RightVector]\\)]\\) \
:\\!\\(\\*SubscriptBox[\\(\[Congruent]\\), \\(q\\)]\\) \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(r\\), \\(0, W\\)], \
\\(\[RightVector]\\)]\\)+\\!\\(\\*OverscriptBox[SubscriptBox[\\(r\\), \\(1, W\
\\)], \\(\[RightVector]\\)]\\)x\"\>", "\[SpanFromLeft]", "\[SpanFromLeft]"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(\[Mu]\\), \\(h\\)]\\) \
\\!\\(\\*SubscriptBox[OverscriptBox[\\(\[Congruent]\\), \\(?\\)], \\(q\\)]\\) \
\[Alpha] + \\!\\(\\*SuperscriptBox[\\(\[Beta]x\\), \\(2\\)]\\) + \
\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \
\\(h\\)]\\)\\!\\(\\*SuperscriptBox[\\(x\\), \\(3\\)]\\)\"\>", "\<\"Definition\
\"\>", "True"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(\[Mu]\\), \\(b\\)]\\) \
\\!\\(\\*SubscriptBox[OverscriptBox[\\(\[Congruent]\\), \\(?\\)], \\(q\\)]\\) \
\[Alpha] + \\!\\(\\*SuperscriptBox[\\(\[Beta]x\\), \\(2\\)]\\) + \
\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \
\\(b\\)]\\)\\!\\(\\*SuperscriptBox[\\(x\\), \\(3\\)]\\)\"\>", "\<\"Definition\
\"\>", "True"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(\[Mu]\\), \\(c\\)]\\) \
\\!\\(\\*SubscriptBox[OverscriptBox[\\(\[Congruent]\\), \\(?\\)], \\(q\\)]\\) \
\[Alpha] + \\!\\(\\*SuperscriptBox[\\(\[Beta]x\\), \\(2\\)]\\) + \
\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \
\\(c\\)]\\)\\!\\(\\*SuperscriptBox[\\(x\\), \\(3\\)]\\)\"\>", "\<\"Definition\
\"\>", "True"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(\[Mu]\\), \\(d\\)]\\) \
\\!\\(\\*SubscriptBox[OverscriptBox[\\(\[Congruent]\\), \\(?\\)], \\(q\\)]\\) \
\[Alpha] + \\!\\(\\*SuperscriptBox[\\(\[Beta]x\\), \\(2\\)]\\) + \
\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \
\\(d\\)]\\)\\!\\(\\*SuperscriptBox[\\(x\\), \\(3\\)]\\)\"\>", "\<\"Definition\
\"\>", "True"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(x\\)]\\) \
\\!\\(\\*SubscriptBox[OverscriptBox[\\(\[Congruent]\\), \\(?\\)], \\(q\\)]\\) \
\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(W\\)]\\)\\!\\(\\*SuperscriptBox[\\(y\
\\), \\(n - 1\\)]\\)\\!\\(\\*OverscriptBox[\\(k\\), \\(^\\)]\\)x + \
\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \
\\(3\\)]\\)\\!\\(\\*SuperscriptBox[\\(x\\), \\(3\\)]\\) + \
\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \
\\(5\\)]\\)\\!\\(\\*SuperscriptBox[\\(x\\), \\(5\\)]\\)\"\>", "\<\"Definition\
\"\>", "True"},
    {"\<\"\\!\\(\\*OverscriptBox[\\(t\\), \\(^\\)]\\) \
\\!\\(\\*SubscriptBox[OverscriptBox[\\(\[Congruent]\\), \\(?\\)], \\(q\\)]\\) \
<\\!\\(\\*OverscriptBox[\\(l\\), \
\\(\[RightVector]\\)]\\),\\!\\(\\*OverscriptBox[\\(r\\), \
\\(\[RightVector]\\)]\\)>\"\>", "\<\"Definition\"\>", "True"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(x, W\\)]\\) \
\\!\\(\\*SubscriptBox[OverscriptBox[\\(\[Congruent]\\), \\(?\\)], \\(q\\)]\\) \
\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(W\\)]\\)\\!\\(\\*SuperscriptBox[\\(y\
\\), \\(n - 1\\)]\\) + \\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(1, W\\)]\\)x + \
\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(2, \
W\\)]\\)\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)\"\>", \
"\<\"Definition\"\>", "True"},
    {"\<\"\\!\\(\\*OverscriptBox[SubscriptBox[\\(t\\), \\(W\\)], \\(^\\)]\\) \
\\!\\(\\*SubscriptBox[OverscriptBox[\\(\[Congruent]\\), \\(?\\)], \\(q\\)]\\) \
<\\!\\(\\*OverscriptBox[SubscriptBox[\\(l\\), \\(W\\)], \\(\[RightVector]\\)]\
\\),\\!\\(\\*OverscriptBox[SubscriptBox[\\(r\\), \\(W\\)], \
\\(\[RightVector]\\)]\\)>\"\>", "\<\"Definition\"\>", "True"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.913948959453181*^9},
 CellLabel->
  "During evaluation of \
In[323]:=",ExpressionUUID->"90dd7ff6-06ba-432a-a734-0184729eec98"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Expression\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Type of Check\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Value\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(L\\), \\({h, b, c, d, W}, i\\)]\\) \
\\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) \
<\\!\\(\\*OverscriptBox[SubscriptBox[\\(a\\), SubscriptBox[\\(i\\), \\(lo \
{\\(,\\)\\(W\\)}\\)]], \
\\(\[RightVector]\\)]\\),\\!\\(\\*OverscriptBox[SubscriptBox[\\(G\\), \
SubscriptBox[\\(i\\), \\(hi\\)]], \\(\[RightVector]\\)]\\)> + \
<\\!\\(\\*OverscriptBox[SubscriptBox[\\(b\\), SubscriptBox[\\(i\\), \\(hi \
{\\(,\\)\\(W\\)}\\)]], \
\\(\[RightVector]\\)]\\),\\!\\(\\*OverscriptBox[SubscriptBox[\\({H, B, C, D, \
H}\\), SubscriptBox[\\(i\\), \\(lo\\)]], \\(\[RightVector]\\)]\\)> + \
<\\!\\(\\*OverscriptBox[SubscriptBox[\\(a\\), SubscriptBox[\\(i\\), \\(lo \
{\\(,\\)\\(W\\)}\\)]], \
\\(\[RightVector]\\)]\\),\\!\\(\\*OverscriptBox[SubscriptBox[\\(b\\), \
SubscriptBox[\\(i\\), \\(hi {\\(,\\)\\(W\\)}\\)]], \
\\(\[RightVector]\\)]\\)>g'\\ni\[Element][\[LeftCeiling]\\!\\(\\*SubscriptBox[\
\\(log\\), \\(2\\)]\\)(n)\[RightCeiling]...1]\"\>", "\<\"Commitment\"\>", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "True", ",", "True", ",", "True"}], 
      "}"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(R\\), \\({h, b, d, c, W}, i\\)]\\) \
\\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) \
<\\!\\(\\*OverscriptBox[SubscriptBox[\\(a\\), SubscriptBox[\\(i\\), \\(hi \
{\\(,\\)\\(W\\)}\\)]], \
\\(\[RightVector]\\)]\\),\\!\\(\\*OverscriptBox[SubscriptBox[\\(G\\), \
SubscriptBox[\\(i\\), \\(lo\\)]], \\(\[RightVector]\\)]\\)> + \
<\\!\\(\\*OverscriptBox[SubscriptBox[\\(b\\), SubscriptBox[\\(i\\), \\(lo \
{\\(,\\)\\(W\\)}\\)]], \
\\(\[RightVector]\\)]\\),\\!\\(\\*OverscriptBox[SubscriptBox[\\({H, B, D, C, \
H}\\), SubscriptBox[\\(i\\), \\(hi\\)]], \\(\[RightVector]\\)]\\)> + \
<\\!\\(\\*OverscriptBox[SubscriptBox[\\(a\\), SubscriptBox[\\(i\\), \\(hi \
{\\(,\\)\\(W\\)}\\)]], \
\\(\[RightVector]\\)]\\),\\!\\(\\*OverscriptBox[SubscriptBox[\\(b\\), \
SubscriptBox[\\(i\\), \\(lo {\\(,\\)\\(W\\)}\\)]], \
\\(\[RightVector]\\)]\\)>g'\\ni\[Element][\[LeftCeiling]\\!\\(\\*SubscriptBox[\
\\(log\\), \\(2\\)]\\)(n)\[RightCeiling]...1]\"\>", "\<\"Commitment\"\>", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "True", ",", "True", ",", "True"}], 
      "}"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(a\\), \\(0\\)]\\) \
\\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) successively halved \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(a\\), \
\\(\[LeftCeiling]\\*SubscriptBox[\\(log\\), \\(2\\)] \\((n)\\)\[RightCeiling]\
\\)], \\(\[RightVector]\\)]\\)\"\>", "\<\"Definition\"\>", "True"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(b\\), \\(0\\)]\\) \
\\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) successively halved \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(b\\), \
\\(\[LeftCeiling]\\*SubscriptBox[\\(log\\), \\(2\\)] \\((n)\\)\[RightCeiling]\
\\)], \\(\[RightVector]\\)]\\)\"\>", "\<\"Definition\"\>", "True"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(a\\), \\(0, W\\)]\\) \
\\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) successively halved \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(a\\), \
\\(\[LeftCeiling]\\*SubscriptBox[\\(log\\), \\(2\\)] \
\\((n)\\)\[RightCeiling], W\\)], \\(\[RightVector]\\)]\\)\"\>", \
"\<\"Definition\"\>", "True"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(b\\), \\(0, W\\)]\\) \
\\!\\(\\*OverscriptBox[\\(=\\), \\(?\\)]\\) successively halved \
\\!\\(\\*OverscriptBox[SubscriptBox[\\(b\\), \
\\(\[LeftCeiling]\\*SubscriptBox[\\(log\\), \\(2\\)] \
\\((n)\\)\[RightCeiling], W\\)], \\(\[RightVector]\\)]\\)\"\>", \
"\<\"Definition\"\>", "True"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left, Left}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.913948960682477*^9},
 CellLabel->
  "During evaluation of \
In[323]:=",ExpressionUUID->"aff23896-0791-4532-8ca8-78890f8eb2b7"],

Cell[BoxData["\<\"Inspection succeeded.\"\>"], "Print",
 CellChangeTimes->{3.9139489606974697`*^9},
 CellLabel->
  "During evaluation of \
In[323]:=",ExpressionUUID->"bae833b0-9af5-451d-9225-8c2e08475c6b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Verifier",
WindowSize->{718.5, 536.25},
WindowMargins->{{Automatic, -5.25}, {Automatic, 0}},
TaggingRules-><|
 "TryRealOnly" -> False, "StatusMessage" -> "", "AutoUpdate" -> True|>,
CellContext->Notebook,
Magnification:>1. Inherited,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (January 30, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"8580392f-3de3-46e3-8218-0e6e351fde1d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 500, 7, 158, "Title",ExpressionUUID->"0e3b5f9f-4604-4069-813d-65d91e4e7550"],
Cell[1083, 31, 11065, 222, 1385, "Text",ExpressionUUID->"3441f26f-9488-4511-92ea-3513834b6daa"],
Cell[CellGroupData[{
Cell[12173, 257, 321, 5, 69, "Section",ExpressionUUID->"4885ccce-33c9-4dca-83a9-87bec28a0c67"],
Cell[12497, 264, 660, 11, 57, "Text",ExpressionUUID->"4f3b0512-9492-4ba1-96d4-91857b9eb28c"],
Cell[13160, 277, 397, 11, 57, "Text",ExpressionUUID->"d0df20c0-4d8c-4a29-a4ba-148487f5ee91"],
Cell[13560, 290, 354, 6, 57, "Text",ExpressionUUID->"c13d32e1-49ae-4363-91ac-888d003a0636"],
Cell[13917, 298, 243, 5, 34, "Text",ExpressionUUID->"efe05422-07d9-4de0-b90a-656acd91e5cb"],
Cell[CellGroupData[{
Cell[14185, 307, 666, 16, 160, "Input",ExpressionUUID->"35220a3e-1b98-4c7c-92a7-cd0883fb8020"],
Cell[CellGroupData[{
Cell[14876, 327, 216, 4, 22, "Print",ExpressionUUID->"ba3159d6-bceb-4c46-88e4-9b31abab32d1"],
Cell[15095, 333, 193, 4, 22, "Print",ExpressionUUID->"9c0db829-48aa-45f2-a0a8-ef4251e643a6"]
}, Open  ]]
}, Open  ]],
Cell[15315, 341, 250, 7, 34, "Text",ExpressionUUID->"8d188f83-423a-460d-bebf-7ec11d0ea4c3"],
Cell[15568, 350, 525, 12, 75, "Input",ExpressionUUID->"f2d28adb-ca39-49b3-8175-3d8582c24dd5"],
Cell[16096, 364, 520, 11, 34, "Text",ExpressionUUID->"e697eb38-a531-48b2-a4ee-5be84c43ac42"],
Cell[16619, 377, 529, 12, 73, "Input",ExpressionUUID->"d4546b39-d50c-4d93-a1f3-0e3a3f07d7b3"],
Cell[17151, 391, 601, 12, 34, "Text",ExpressionUUID->"a4b4ee67-42fc-45c2-80fb-6d704e15b8a7"],
Cell[17755, 405, 429, 8, 39, "Input",ExpressionUUID->"988f914c-7639-4fc3-b199-d3a7ef19ec2f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18221, 418, 263, 4, 69, "Section",ExpressionUUID->"05f9900d-a1b0-4013-9146-463daad65f67"],
Cell[CellGroupData[{
Cell[18509, 426, 178, 3, 34, "Subsection",ExpressionUUID->"32ef07c3-3a65-4862-871f-2d63479d5057"],
Cell[18690, 431, 1405, 24, 356, "Text",ExpressionUUID->"949ed0aa-79ea-42f2-b729-42b26d3d2816"],
Cell[CellGroupData[{
Cell[20120, 459, 4267, 103, 397, "Code",ExpressionUUID->"0e45852e-9a7b-443b-b3e3-4e6ca0ba6090"],
Cell[CellGroupData[{
Cell[24412, 566, 245, 4, 22, "Print",ExpressionUUID->"ef9debbb-1fda-4a2c-b684-f1c2fb82410d"],
Cell[24660, 572, 251, 4, 22, "Print",ExpressionUUID->"683e536a-b053-4bdd-bc9b-f449934a43fd"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24972, 583, 216, 4, 34, "Subsection",ExpressionUUID->"b35966c4-afb4-4a72-8fb7-77c866e2b3ea"],
Cell[25191, 589, 6526, 151, 608, "Code",ExpressionUUID->"f6a7d77d-e85e-48ec-99e3-a66a2a6109f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31754, 745, 188, 3, 34, "Subsection",ExpressionUUID->"995adf86-1483-4b00-83ec-04abb0a2525b"],
Cell[31945, 750, 4691, 96, 379, "Code",ExpressionUUID->"bd5be895-f812-40b8-b914-6c2a1ce29960"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36685, 852, 327, 5, 69, "Section",ExpressionUUID->"c74e8a86-9c7d-4fe0-8a21-5b2b4393b1c9"],
Cell[CellGroupData[{
Cell[37037, 861, 344, 5, 34, "Subsection",ExpressionUUID->"25cd3095-56fb-4bac-b7de-d67205534a7d"],
Cell[CellGroupData[{
Cell[37406, 870, 40986, 1036, 6595, "Code",ExpressionUUID->"63be34d3-b7cc-49c1-a912-08703a578daf"],
Cell[78395, 1908, 218, 4, 22, "Print",ExpressionUUID->"83af8319-0061-4a4c-997f-5b4f730f3f05"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[78662, 1918, 229, 5, 34, "Subsection",ExpressionUUID->"506f9cdd-398a-4d3d-9cf4-ee49ef563eb4"],
Cell[78894, 1925, 239, 4, 34, "Text",ExpressionUUID->"3e611f6f-d9aa-4550-b53b-67945263bf60"],
Cell[CellGroupData[{
Cell[79158, 1933, 32213, 568, 1626, "Code",ExpressionUUID->"57563dad-e424-45be-a527-b71718fddf77"],
Cell[CellGroupData[{
Cell[111396, 2505, 315, 6, 40, "Print",ExpressionUUID->"26a6cb33-42d3-4915-9cb8-e5107657fd73"],
Cell[111714, 2513, 366, 7, 40, "Print",ExpressionUUID->"19996cec-07dc-46c4-8a57-eb1906b594a1"],
Cell[112083, 2522, 330, 6, 40, "Print",ExpressionUUID->"6ee7543f-3c06-4185-8315-b5f5762ef9a5"],
Cell[112416, 2530, 271, 5, 22, "Print",ExpressionUUID->"19c4f050-b0aa-4ddc-9be6-3ccd21974426"],
Cell[112690, 2537, 212, 4, 22, "Print",ExpressionUUID->"94d04716-4ad9-4300-829f-5f7ccb2ce55d"],
Cell[112905, 2543, 11340, 234, 54, "Print",ExpressionUUID->"3f1435b9-cd47-4866-b6fe-d03123ee1556"],
Cell[124248, 2779, 224, 4, 22, "Print",ExpressionUUID->"b53fca4c-4bcb-4d14-8775-e0c8d5f0a666"],
Cell[124475, 2785, 219, 4, 22, "Print",ExpressionUUID->"039d096f-9c88-4a8a-a64f-3a2aa40d15e8"],
Cell[124697, 2791, 256, 5, 22, "Print",ExpressionUUID->"b13e9423-3fd1-4dc3-a69f-07b8a9eac1bc"],
Cell[124956, 2798, 780, 12, 128, "Print",ExpressionUUID->"050726ce-dbfd-45af-a984-d01f58e78035"],
Cell[125739, 2812, 285, 5, 40, "Print",ExpressionUUID->"5575ddbc-9a11-4e67-b8ac-25c37bac372d"],
Cell[126027, 2819, 240, 5, 22, "Print",ExpressionUUID->"0365a9b7-b41b-419a-b6b5-207ddaddf646"],
Cell[126270, 2826, 262, 5, 22, "Print",ExpressionUUID->"977a7db3-52ba-4d5a-8af0-fbc122ad262e"],
Cell[126535, 2833, 481, 8, 93, "Print",ExpressionUUID->"b4511a03-eb7d-43b6-953a-74b1564fda90"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[127077, 2848, 320, 5, 34, "Subsection",ExpressionUUID->"b0db06b7-50f4-48d6-b322-9449ba7a601b"],
Cell[127400, 2855, 321, 5, 34, "Text",ExpressionUUID->"887b9114-6d7a-4eb9-95aa-4901b284dd79"],
Cell[CellGroupData[{
Cell[127746, 2864, 43864, 972, 3326, "Code",ExpressionUUID->"f5335562-f277-4e1d-a91f-fa70910e4fdb"],
Cell[CellGroupData[{
Cell[171635, 3840, 223, 4, 22, "Print",ExpressionUUID->"178970b7-bdab-4c0a-a805-95b338a33795"],
Cell[171861, 3846, 1078, 24, 197, "Print",ExpressionUUID->"f142a907-0417-4ac7-a6bc-bbe20ea8e15e"],
Cell[172942, 3872, 770, 22, 66, "Print",ExpressionUUID->"9271ce5d-c323-46e9-ad7b-a1a9779a3d1d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[173773, 3901, 190, 3, 34, "Subsection",ExpressionUUID->"c492a59f-41fe-4f70-93f0-b8f335ca46fa"],
Cell[173966, 3906, 623, 12, 51, "Text",ExpressionUUID->"f6848030-2bba-44b8-9885-fb0a5e44d11f"],
Cell[CellGroupData[{
Cell[174614, 3922, 10540, 218, 910, "Code",ExpressionUUID->"382b5246-672b-4169-81b0-1275686c70c9"],
Cell[185157, 4142, 2545, 66, 573, "Print",ExpressionUUID->"fb69958c-ab39-43d8-8a4a-4b5e5757aedc"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[187763, 4215, 210, 4, 69, "Section",ExpressionUUID->"16b1050f-9bcc-4fa9-91af-fcf02bdf842e"],
Cell[CellGroupData[{
Cell[187998, 4223, 1660, 51, 36, "Subsection",ExpressionUUID->"5c5a834f-7f3f-4468-a9e2-0cd8bcef3769"],
Cell[189661, 4276, 5122, 155, 327, "Text",ExpressionUUID->"ca09bbbe-0f43-4e0d-87df-fde4cb3250b5"],
Cell[CellGroupData[{
Cell[194808, 4435, 15388, 391, 1307, "Code",ExpressionUUID->"6fec45b3-9a64-454e-ac8c-fdacb9fb6916"],
Cell[CellGroupData[{
Cell[210221, 4830, 219, 4, 22, "Print",ExpressionUUID->"d81ee03e-735b-4e01-99ed-d7d8faaf645b"],
Cell[210443, 4836, 217, 4, 22, "Print",ExpressionUUID->"80d743ae-167a-4111-ac7a-600c2ad2ab8a"],
Cell[210663, 4842, 232, 5, 22, "Print",ExpressionUUID->"fc41aa4f-cccd-44f7-b674-bca1048f7351"],
Cell[210898, 4849, 506, 8, 93, "Print",ExpressionUUID->"8b61ceba-2e9b-46be-bfdb-9cdf7b5d5948"],
Cell[211407, 4859, 9077, 218, 4808, "Print",ExpressionUUID->"a7db3a75-21f4-46c2-b440-244b5886b069"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[220545, 5084, 553, 17, 34, "Subsection",ExpressionUUID->"fe3ce019-e551-4f29-86d6-5f659825e2d8"],
Cell[221101, 5103, 1630, 36, 149, "Text",ExpressionUUID->"aeabe293-281f-4145-9995-841431c80ae1"],
Cell[CellGroupData[{
Cell[222756, 5143, 2981, 81, 379, "Code",ExpressionUUID->"89863500-83e0-4274-8b98-14245c171d7f"],
Cell[CellGroupData[{
Cell[225762, 5228, 221, 4, 22, "Print",ExpressionUUID->"ee138fb2-f09c-4bfc-9323-f1d79c194163"],
Cell[225986, 5234, 219, 4, 22, "Print",ExpressionUUID->"46b54822-451e-4752-9b22-ee1b34afdd99"],
Cell[226208, 5240, 1404, 37, 210, "Print",ExpressionUUID->"268d5636-0681-445b-bbee-e5719afbcd26"],
Cell[227615, 5279, 1115, 34, 82, "Print",ExpressionUUID->"c21b4e28-79bc-444b-a00d-838d69982d0b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[228791, 5320, 877, 21, 37, "Subsection",ExpressionUUID->"0d40bcce-9bef-467a-96dd-fef292e536b7"],
Cell[229671, 5343, 2598, 72, 116, "Text",ExpressionUUID->"dcc57f28-42fb-42f3-86e4-c54880b324a3"],
Cell[CellGroupData[{
Cell[232294, 5419, 16191, 338, 1187, "Code",ExpressionUUID->"38f9c8f7-5101-4df9-a427-f299ea6cb5b6"],
Cell[CellGroupData[{
Cell[248510, 5761, 298, 6, 40, "Print",ExpressionUUID->"3913d98a-6341-42ae-9d4d-b72cad415a38"],
Cell[248811, 5769, 301, 6, 40, "Print",ExpressionUUID->"28e8a504-3f56-44c7-a4ca-af16ca1c7aa8"],
Cell[249115, 5777, 3977, 92, 693, "Print",ExpressionUUID->"8d60570d-957f-47c0-b927-f7edc138e3a4"],
Cell[253095, 5871, 1167, 35, 100, "Print",ExpressionUUID->"574f76aa-6c4a-4165-83d5-22c324afcc04"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[254323, 5913, 1014, 26, 35, "Subsection",ExpressionUUID->"913b13e7-627a-44e6-a1fa-4b2b19eafd49"],
Cell[255340, 5941, 2260, 58, 38, "Text",ExpressionUUID->"ded9ef62-555f-4017-a51b-8df1e310c9e2"],
Cell[CellGroupData[{
Cell[257625, 6003, 7648, 197, 644, "Code",ExpressionUUID->"d9e8701c-bd10-4709-a2d0-f2064d4914f8"],
Cell[CellGroupData[{
Cell[265298, 6204, 219, 4, 22, "Print",ExpressionUUID->"1ed95636-eb45-492e-855d-fbb62b4f0358"],
Cell[265520, 6210, 221, 4, 22, "Print",ExpressionUUID->"2c946a42-fb2d-489f-9abc-3a42a61aec66"],
Cell[265744, 6216, 222, 4, 22, "Print",ExpressionUUID->"c4489971-0950-4784-886b-795a350ba379"],
Cell[265969, 6222, 220, 4, 22, "Print",ExpressionUUID->"00a8e81b-e104-4ff1-a576-b1229651c7ad"],
Cell[266192, 6228, 222, 4, 22, "Print",ExpressionUUID->"8305f753-e983-4b62-abb6-c7789143460b"],
Cell[266417, 6234, 220, 4, 22, "Print",ExpressionUUID->"8587aab3-9570-4ae2-a320-0533edc87846"],
Cell[266640, 6240, 2752, 69, 573, "Print",ExpressionUUID->"19a62a1b-0825-4cbf-9e5e-9a0234729fac"],
Cell[269395, 6311, 1205, 36, 100, "Print",ExpressionUUID->"326b54bd-d099-46e0-9130-c061438efb64"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[270661, 6354, 421, 9, 61, "Subsection",ExpressionUUID->"9ecbcdb3-a8a2-41fc-b783-fa7f18c01a10"],
Cell[271085, 6365, 379, 7, 57, "Text",ExpressionUUID->"e1e3cd47-4160-4dd9-aeb1-e375a5e41ab3"],
Cell[CellGroupData[{
Cell[271489, 6376, 21133, 440, 1267, "Code",ExpressionUUID->"777f6ea7-b113-48bf-9ef2-cee3439f8f53"],
Cell[CellGroupData[{
Cell[292647, 6820, 300, 6, 40, "Print",ExpressionUUID->"11220b60-04f6-4e51-9f59-42875cbb8ca2"],
Cell[292950, 6828, 300, 6, 40, "Print",ExpressionUUID->"f3830423-bfe5-4120-bdaa-a40b223b8681"],
Cell[293253, 6836, 298, 6, 40, "Print",ExpressionUUID->"b1e5a358-09d3-493f-9389-0a0216e3af9e"],
Cell[293554, 6844, 1909, 45, 307, "Print",ExpressionUUID->"f13e15c7-1f73-4183-8533-34f5a70e7169"],
Cell[295466, 6891, 1213, 36, 100, "Print",ExpressionUUID->"1aea79c0-2076-4306-9f22-457725eb2df0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[296740, 6934, 1073, 31, 35, "Subsection",ExpressionUUID->"6bce2a2f-3161-4d95-b0a7-b4c4f4992aac"],
Cell[CellGroupData[{
Cell[297838, 6969, 8197, 213, 637, "Code",ExpressionUUID->"c6abacf1-0060-4e25-be38-81d88c38711c"],
Cell[CellGroupData[{
Cell[306060, 7186, 221, 4, 22, "Print",ExpressionUUID->"37b31e90-d1b6-4762-8a8d-0f87a809f673"],
Cell[306284, 7192, 219, 4, 22, "Print",ExpressionUUID->"071cb842-0269-4146-b420-f0888cbd73b3"],
Cell[306506, 7198, 1368, 37, 210, "Print",ExpressionUUID->"6bf065bf-e5f7-4b47-bc19-eb360e6624d7"],
Cell[307877, 7237, 222, 4, 22, "Print",ExpressionUUID->"7e47e060-94eb-491d-a86e-dcba1bd0f2d6"],
Cell[308102, 7243, 222, 4, 22, "Print",ExpressionUUID->"5dad41a7-a4fd-4191-b7c1-451a8ec6c410"],
Cell[308327, 7249, 1375, 37, 210, "Print",ExpressionUUID->"94d1b70c-b2fe-49f4-aa41-f23431fc044f"],
Cell[309705, 7288, 1233, 37, 100, "Print",ExpressionUUID->"d65afe71-21bf-4e6a-abc7-987d265f88ec"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[310999, 7332, 217, 6, 61, "Subsection",ExpressionUUID->"35fc9252-ecd2-47f6-8476-c0d5b6a196ad"],
Cell[CellGroupData[{
Cell[311241, 7342, 4997, 120, 685, "Code",ExpressionUUID->"16c678dc-b709-460e-80ce-29c835d90fe7"],
Cell[CellGroupData[{
Cell[316263, 7466, 299, 6, 40, "Print",ExpressionUUID->"ece0c2cc-5714-49c5-a65f-ebe0ab85e754"],
Cell[316565, 7474, 825, 24, 66, "Print",ExpressionUUID->"a145f229-b4bd-449c-bec1-3da5d7d7cb7a"],
Cell[317393, 7500, 1236, 37, 100, "Print",ExpressionUUID->"a5239e84-a0bc-4ffe-948c-68f198237009"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[318690, 7544, 612, 13, 61, "Subsection",ExpressionUUID->"5e2555f4-d8ce-4fc9-b0b5-e680a5cd3bf7"],
Cell[319305, 7559, 6519, 205, 391, "Text",ExpressionUUID->"d2263426-06ff-4c10-a0ee-a1b8daefe700"],
Cell[CellGroupData[{
Cell[325849, 7768, 45344, 1150, 3032, "Code",ExpressionUUID->"c2c32a69-8895-4340-b1a1-cf3eea39177b"],
Cell[CellGroupData[{
Cell[371218, 8922, 223, 4, 22, "Print",ExpressionUUID->"7ed542d9-7720-4812-b682-dbe8763a78af"],
Cell[371444, 8928, 222, 4, 22, "Print",ExpressionUUID->"84dab2b0-a8c6-4371-a10d-06ecd772c21a"],
Cell[371669, 8934, 220, 4, 22, "Print",ExpressionUUID->"c3a6814c-d989-4b92-bac3-3d471c9c1668"],
Cell[371892, 8940, 220, 4, 22, "Print",ExpressionUUID->"f8ba88b8-c333-48de-804e-22853ff81a7b"],
Cell[372115, 8946, 222, 4, 22, "Print",ExpressionUUID->"b435dbc9-0ea1-4d1f-b0de-4046cd1c1eff"],
Cell[372340, 8952, 220, 4, 22, "Print",ExpressionUUID->"9ab077fd-0684-402b-b6a9-db3ddc422403"],
Cell[372563, 8958, 4637, 91, 927, "Print",ExpressionUUID->"b883854c-79d3-465f-b1aa-9b32c3662b31"],
Cell[377203, 9051, 222, 4, 22, "Print",ExpressionUUID->"7c167671-3361-47e4-90ea-4d882940b65c"],
Cell[377428, 9057, 220, 4, 22, "Print",ExpressionUUID->"f76283b9-626d-4efb-8324-7eb3c6b6fa78"],
Cell[377651, 9063, 221, 4, 22, "Print",ExpressionUUID->"8cf500d1-a2f6-44a4-b6ff-719836708776"],
Cell[377875, 9069, 3079, 66, 631, "Print",ExpressionUUID->"64110387-111c-4f21-848a-911106e785e7"],
Cell[380957, 9137, 1292, 39, 100, "Print",ExpressionUUID->"220b199a-84b7-4b0c-8ae9-b05186d8f5b6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[382322, 9184, 609, 10, 107, "Section",ExpressionUUID->"994c3208-106a-4d72-8a6c-f5682a60843b"],
Cell[382934, 9196, 2165, 53, 103, "Text",ExpressionUUID->"d4755771-1c7a-445c-b446-2b7ba022ecfd"],
Cell[385102, 9251, 68886, 1507, 4677, "Code",ExpressionUUID->"f4ed0b57-ea37-439f-bee6-0e9b0208d6e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[454025, 10763, 169, 3, 69, "Section",ExpressionUUID->"433c6f52-4fdf-4831-8ee0-ec47893173ad"],
Cell[CellGroupData[{
Cell[454219, 10770, 226, 3, 34, "Subsection",ExpressionUUID->"76fff703-4444-45ba-9400-c64e189ea46f"],
Cell[454448, 10775, 10679, 317, 347, "Text",ExpressionUUID->"c6ed4282-f2ec-428c-b406-6726c4c72a61"],
Cell[CellGroupData[{
Cell[465152, 11096, 21633, 491, 1003, "Code",ExpressionUUID->"26e914ac-a14a-4788-87e5-df4b23a3f9f7"],
Cell[CellGroupData[{
Cell[486810, 11591, 8596, 198, 2664, "Print",ExpressionUUID->"a4325ca0-32d1-49b6-85c1-aca1950a544e"],
Cell[495409, 11791, 1292, 39, 100, "Print",ExpressionUUID->"9b05c6af-3fdd-45ba-8fdf-650c0f99b5a5"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[496762, 11837, 166, 3, 34, "Subsection",ExpressionUUID->"e6691cbe-e981-4c7d-bbe2-6d56dff4dc17"],
Cell[496931, 11842, 14462, 457, 879, "Text",ExpressionUUID->"91ab60f3-763b-411f-8f61-0f869ceb0822"],
Cell[CellGroupData[{
Cell[511418, 12303, 78815, 1967, 5424, "Code",ExpressionUUID->"7cbfb4eb-9a57-4566-bb8a-353be8f5688f"],
Cell[CellGroupData[{
Cell[590258, 14274, 7873, 188, 2359, "Print",ExpressionUUID->"0e1bc6aa-a421-4af5-85ac-a2fcfc95a782"],
Cell[598134, 14464, 221, 4, 22, "Print",ExpressionUUID->"1447af3e-118a-4f6e-bde6-a78cf9722c6a"],
Cell[598358, 14470, 221, 4, 22, "Print",ExpressionUUID->"52d985fa-cc44-4c4d-87a3-d1db8c4e08ca"],
Cell[598582, 14476, 223, 4, 22, "Print",ExpressionUUID->"9ab669b6-45c0-413e-a39a-1e945d26485a"],
Cell[598808, 14482, 221, 4, 22, "Print",ExpressionUUID->"38b46d7b-ec81-495c-b758-fe275e291925"],
Cell[599032, 14488, 221, 4, 22, "Print",ExpressionUUID->"feb46920-bdc0-495a-8898-545fc628bd23"],
Cell[599256, 14494, 223, 4, 22, "Print",ExpressionUUID->"66254b54-a1c5-4479-8a34-b256ea7ba5bb"],
Cell[599482, 14500, 221, 4, 22, "Print",ExpressionUUID->"027b85c3-a74f-44b5-9a9e-4e87bd41d76b"],
Cell[599706, 14506, 223, 4, 22, "Print",ExpressionUUID->"76017dc7-ad57-48e9-8133-7bd9a819df08"],
Cell[599932, 14512, 223, 4, 22, "Print",ExpressionUUID->"792f8110-7a9c-49ab-9d3b-24dbaae1207b"],
Cell[600158, 14518, 221, 4, 22, "Print",ExpressionUUID->"a426384b-4acb-481a-8e6b-199bc52f956a"],
Cell[600382, 14524, 5047, 114, 1164, "Print",ExpressionUUID->"3f85f9a9-85cb-4125-a342-508d3c6a4460"],
Cell[605432, 14640, 302, 6, 40, "Print",ExpressionUUID->"8bff1ee9-24d1-4012-9392-1d539a861834"],
Cell[605737, 14648, 7520, 167, 1811, "Print",ExpressionUUID->"60da5958-1719-4dc3-99de-0e155a163521"],
Cell[613260, 14817, 6132, 148, 1829, "Print",ExpressionUUID->"d3b3878d-556c-4a1a-ba4e-cb11e6702e01"],
Cell[619395, 14967, 221, 4, 22, "Print",ExpressionUUID->"22deb4e9-7db8-4480-b4a7-c719cb3bf7ad"],
Cell[619619, 14973, 223, 4, 22, "Print",ExpressionUUID->"0647248c-b0b1-4c96-ae29-e34467490609"],
Cell[619845, 14979, 223, 4, 22, "Print",ExpressionUUID->"de29d5ea-f1b9-4532-99ce-f16730becf47"],
Cell[620071, 14985, 223, 4, 22, "Print",ExpressionUUID->"445a937e-5e73-4705-a57f-df2db3eda444"],
Cell[620297, 14991, 221, 4, 22, "Print",ExpressionUUID->"a502b6b0-4785-46d3-962b-66744d7b93e1"],
Cell[620521, 14997, 221, 4, 22, "Print",ExpressionUUID->"88bf2e1f-7f63-4444-8ecb-af00735d0abb"],
Cell[620745, 15003, 221, 4, 22, "Print",ExpressionUUID->"4facdc1d-1c87-4aa9-80a5-ce906a9d61d4"],
Cell[620969, 15009, 223, 4, 22, "Print",ExpressionUUID->"ae8366ea-b4ad-445e-9de2-049e7a1a8066"],
Cell[621195, 15015, 223, 4, 22, "Print",ExpressionUUID->"279bc8ba-6e5b-4a81-a6f1-080009cef96b"],
Cell[621421, 15021, 221, 4, 22, "Print",ExpressionUUID->"88efd781-fe82-4e1d-898b-6882316d222a"],
Cell[621645, 15027, 5050, 114, 1164, "Print",ExpressionUUID->"d59b6fc4-bd96-41e4-8316-cb38871ebaa6"],
Cell[626698, 15143, 302, 6, 40, "Print",ExpressionUUID->"a059e471-cdb7-4736-bc90-63dd19684560"],
Cell[627003, 15151, 6162, 132, 1286, "Print",ExpressionUUID->"17560d98-d0d7-4b1f-b6ca-bb205b0b9aeb"],
Cell[633168, 15285, 219, 4, 22, "Print",ExpressionUUID->"dc62c0cc-deac-419f-8373-926893fd854f"],
Cell[633390, 15291, 219, 4, 22, "Print",ExpressionUUID->"41c97555-f8a5-4cbb-8f7a-8bbc872b7302"],
Cell[633612, 15297, 222, 4, 22, "Print",ExpressionUUID->"26ccce9d-1fc1-46b8-b00c-5c30f1bedf34"],
Cell[633837, 15303, 220, 4, 22, "Print",ExpressionUUID->"5f8620dd-fee2-4f53-bd94-293bac7e0006"],
Cell[634060, 15309, 7674, 164, 2385, "Print",ExpressionUUID->"06f4c27f-516f-47e8-9cc7-62aaf99863b7"],
Cell[641737, 15475, 216, 4, 22, "Print",ExpressionUUID->"50d99893-02ea-4ed1-8052-c3b99aa9618a"],
Cell[641956, 15481, 1441, 40, 158, "Print",ExpressionUUID->"76730d09-f3f0-4216-8758-5439331b30e9"],
Cell[643400, 15523, 207, 4, 22, "Print",ExpressionUUID->"ce154c69-d555-4023-8af6-1aea27db7803"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[643680, 15535, 481, 9, 107, "Section",ExpressionUUID->"8c534095-bd61-4699-b4f2-50606beedc90"],
Cell[644164, 15546, 2048, 51, 103, "Text",ExpressionUUID->"489f6672-192b-4f5b-8528-ce22c1f98ab7"],
Cell[CellGroupData[{
Cell[646237, 15601, 54827, 1256, 3200, "Code",ExpressionUUID->"3ec9dbe3-d994-4e69-b41c-2c82b13125e7"],
Cell[CellGroupData[{
Cell[701089, 16861, 236, 5, 22, "Print",ExpressionUUID->"d3513958-a072-4922-ad4b-8df8f97370d6"],
Cell[701328, 16868, 18767, 327, 2266, "Print",ExpressionUUID->"90dd7ff6-06ba-432a-a734-0184729eec98"],
Cell[720098, 17197, 4162, 81, 331, "Print",ExpressionUUID->"aff23896-0791-4532-8ca8-78890f8eb2b7"],
Cell[724263, 17280, 205, 4, 22, "Print",ExpressionUUID->"bae833b0-9af5-451d-9225-8c2e08475c6b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

