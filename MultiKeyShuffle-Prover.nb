(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    702865,      16896]
NotebookOptionsPosition[    691888,      16713]
NotebookOutlinePosition[    692453,      16733]
CellTagsIndexPosition[    692410,      16730]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Multi-Key Shuffle: Network Application for Prover", "Title",
 CellChangeTimes->{{3.8866048116486998`*^9, 3.8866048441117306`*^9}, {
  3.8866114293743343`*^9, 3.886611429636989*^9}, {3.8866660968375235`*^9, 
  3.886666098328493*^9}, {3.892345098888772*^9, 3.892345100689569*^9}, {
  3.898313290279275*^9, 3.8983132941087046`*^9}, {3.8983133282783155`*^9, 
  3.898313330388982*^9}, {3.9139487459935412`*^9, 
  3.9139487473393326`*^9}},ExpressionUUID->"faa4b491-5e11-4480-a38b-\
7890630b9d91"],

Cell[TextData[{
 StyleBox["Author: Aaron Kimmig <kimmiga@informatik.uni-freiburg.de> \
<academia@aaronkimmig.de>\nLast Edited: 2023-12-11\n\nImplementing prover \
component in network application for efficient Multi-Key Shuffle Argument\n\n\
", "Text"],
 StyleBox["For a fast start, go to section \
\[OpenCurlyDoubleQuote]Configuration\[CloseCurlyDoubleQuote] > \
\[OpenCurlyDoubleQuote]Set Notebook Context and \
Kernel\[CloseCurlyDoubleQuote].\n", "Text",
  FontWeight->"Bold"],
 StyleBox["\n", "Text"],
 StyleBox["See", "Text",
  FontSlant->"Italic"],
 StyleBox["\n[Master\[CloseCurlyQuote]s Thesis] Efficient Zero-Knowledge \
Multi-Key Verifiable Shuffles: Implementation, Security and Applications\n[B\
\[UDoubleDot]nzDraft23] B\[UDoubleDot]nz, B., Raykova, M., & Sarathy, J. \
(2023, Draft). Efficient Multi-Key Verifiable Shuffles from Short Arguments \
for Randomized Algorithms.\n", "Text"],
 StyleBox["for Shuffle Argument and", "Text",
  FontSlant->"Italic"],
 StyleBox["\n[B\[UDoubleDot]nz18] B\[UDoubleDot]nz, B., Bootle, J., Boneh, \
D., Poelstra, A., & Maxwell, G. (2018). Bulletproofs: Short proofs for \
confidential transactions and more. In 2018 IEEE Symposium on Security and \
Privacy (SP) (pp. 315-334). IEEE.\n", "Text"],
 StyleBox["for Inner Product argument.", "Text",
  FontSlant->"Italic"],
 StyleBox["\n\n", "Text"],
 StyleBox["Configuration options:\n\nShuffle Data", "Text",
  FontWeight->"Bold"],
 StyleBox["\n", "Text"],
 Cell[BoxData[
  RowBox[{"-", " ", "names"}]], "InlineCode",ExpressionUUID->
  "6b094675-caff-4523-925d-2bef51fe4a3e"],
 ": List of names of users",
 StyleBox["\n", "Text"],
 Cell[BoxData[
  RowBox[{"-", " ", "secretKeys"}]], "InlineCode",ExpressionUUID->
  "bdc32849-d391-4634-b9f6-154fb69eba6d"],
 ": List of corresponding secret keys of users",
 StyleBox["\n", "Text"],
 Cell[BoxData[
  RowBox[{"-", " ", "senders"}]], "InlineCode",ExpressionUUID->
  "c5877c89-b078-4193-be8b-fd4c59c77be6"],
 ": Senders of secret messages (index into names and secretKeys)",
 StyleBox["\n", "Text"],
 Cell[BoxData[
  RowBox[{"-", " ", "secretMessages"}]], "InlineCode",ExpressionUUID->
  "f8a455b7-10b1-440e-b0ef-14ec705c80e3"],
 ": Secret Messages to be sent",
 StyleBox["\n", "Text"],
 Cell[BoxData[
  RowBox[{"-", " ", "receivers"}]], "InlineCode",ExpressionUUID->
  "6bbb1a7f-90ec-402c-a7a8-03168afc4498"],
 ": Receivers for secret messages (index into names and secretKeys)\n\n",
 StyleBox["Crypto & Protocol",
  FontWeight->"Bold"],
 "\n",
 Cell[BoxData[
  RowBox[{"-", " ", 
   RowBox[{"useElGamal", ":"}]}]], "InlineCode",ExpressionUUID->
  "610ee83a-2419-448f-82e9-fec664018d8e"],
 StyleBox[" Choose between El Gamal and Elliptic Curve Cryptography (only EC \
is implemented; configuration option left for demonstration of El Gamal \
setup)\n", "Text"],
 Cell[BoxData[
  RowBox[{"-", " ", 
   RowBox[{"interactive", ":"}]}]], "InlineCode",ExpressionUUID->
  "80c20143-1ab9-4fe2-b857-8245280b2602"],
 StyleBox[" Whether to use interactive protocol or Fiat-Shamir transform\n", 
  "Text"],
 Cell[BoxData[
  RowBox[{
   RowBox[{"-", " ", "p"}], ",", " ", "q", ",", " ", 
   RowBox[{"(", 
    RowBox[{"implicit", ":", " ", "cofactor"}], ")"}], ",", " ", 
   RowBox[{"g", ":"}]}]], "InlineCode",ExpressionUUID->
  "58716bc9-7cc7-4988-801f-7f3a88da23c6"],
 " Trapdoor Function / Schnorr Group\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{"-", " ", "p"}], ",", " ", 
   SubscriptBox["n", "EC"], ",", " ", 
   SubscriptBox["h", "EC"], ",", " ", 
   RowBox[{"(", 
    RowBox[{"implicit", ":", " ", "q"}], ")"}], ",", " ", 
   SubscriptBox["a", "EC"], ",", " ", 
   SubscriptBox["b", "EC"], ",", " ", 
   RowBox[{"g", ":"}]}]], "InlineCode",ExpressionUUID->
  "c4c1996c-d160-4ef2-b6fe-8b0f77d73651"],
 " Trapdoor Function / Elliptic Curve (Weierstrass representation)\n",
 Cell[BoxData[
  RowBox[{"-", " ", 
   RowBox[{"useInnerProductProtocol", ":"}]}]], "InlineCode",ExpressionUUID->
  "02d0ee3a-678b-42cf-97a1-177a60ccac62"],
 StyleBox[" Whether to use the communication-cost-efficient inner product \
protocol\n", "Text"],
 Cell[BoxData[
  RowBox[{"-", " ", 
   RowBox[{"rngMethod", ":"}]}]], "InlineCode",ExpressionUUID->
  "de432e11-42d1-4169-a04c-c80e53085f68"],
 StyleBox[" \[OpenCurlyDoubleQuote]OpenSSL\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]ExtendedCA\[CloseCurlyDoubleQuote], ... (All of \
Mathematica\[CloseCurlyQuote]s options)\n", "Text"],
 Cell[BoxData[
  RowBox[{"-", " ", 
   RowBox[{"fixedNUMSRandomSeed", ":"}]}]], "InlineCode",ExpressionUUID->
  "152fe89a-18e4-45ed-bb37-bf31bb567890"],
 " Fixed random seed which will be used for calculating the generators for \
Pedersen Commitments\n\n",
 StyleBox["Network, Communication & Environment",
  FontWeight->"Bold"],
 StyleBox["\n", "Text"],
 Cell[BoxData[
  RowBox[{"-", " ", "myId"}]], "InlineCode",
  FontWeight->"Plain",ExpressionUUID->
  "bfd04a88-202c-481a-8490-2d0f505fd6d5"],
 ": Choose a name that identifies the prover. Could be replaced by a public \
key if a public key infrastructure was implemented\n",
 Cell[BoxData[
  RowBox[{"-", " ", 
   RowBox[{"interactiveVerifierId", ":"}]}]], "InlineCode",ExpressionUUID->
  "6ff507f9-cbf9-44d4-9290-9e214099fd1f"],
 " ID of interactive verifier\n",
 Cell[BoxData[
  RowBox[{"-", " ", 
   RowBox[{"room", ":"}]}]], "InlineCode",ExpressionUUID->
  "c691da9a-7e2c-44df-8508-6069ec83e817"],
 " \[OpenCurlyDoubleQuote]address\[CloseCurlyDoubleQuote] of the proof and \
where messages are routed over\n",
 Cell[BoxData[
  RowBox[{"-", " ", 
   RowBox[{"roomPassword", ":"}]}]], "InlineCode",ExpressionUUID->
  "760dff60-3423-415c-a893-a7b6bcac288c"],
 " password needed to access the room\n",
 Cell[BoxData[
  RowBox[{"-", " ", "inspectionEnabled"}]], "InlineCode",ExpressionUUID->
  "a07efb1c-5c25-4c93-805e-8f62a5da7bc9"],
 ": Publish variables to Inspector for educational purposes\n",
 Cell[BoxData[
  RowBox[{"-", " ", "routerConfig"}]], "InlineCode",ExpressionUUID->
  "e36d96e7-035e-492e-9ba7-ed38a5a7bab4"],
 ": Connection to message router and inspector\n",
 Cell[BoxData[
  RowBox[{"-", " ", "useLocalRouter"}]], "InlineCode",ExpressionUUID->
  "1c6d10b4-c287-4ef5-a448-35ea7e6b5967"],
 ": Whether to use a self-hosted local router instance or a public router \
server on the internet\n",
 Cell[BoxData[
  RowBox[{"-", " ", 
   RowBox[{"fiatShamirSingleKernel", ":"}]}]], "InlineCode",ExpressionUUID->
  "382fdd33-b3ff-4ec6-8e33-40b36de9727a"],
 " Set to True when using a mathematica test license (which allows only one \
kernel to be run simultaneously) and not running prover and verifier on \
different machines\n",
 Cell[BoxData[
  RowBox[{"-", " ", 
   RowBox[{"proverKernelName", ":"}]}]], "InlineCode",ExpressionUUID->
  "0328e58f-e958-4c6b-b7d6-a49193f59c2f"],
 " Name of kernel this notebook shall be run on if fiatShamirSingleKernel = \
False\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{"-", " ", "verbosity"}], " ", 
   RowBox[{"settings", ":"}]}]], "InlineCode",ExpressionUUID->
  "7cca3175-744a-4f0b-8602-dfb8ed602b48"],
 " Set verbosity levels for different components\n",
 StyleBox["\nVerifier\[CloseCurlyQuote]s Notebook: \
\[OpenCurlyDoubleQuote]MultiKeyShuffle-Verifier.nb\[CloseCurlyDoubleQuote]\n\n\
", "Text"],
 StyleBox["Start the router and inspector before running this notebook when \
using a local router:", "Text",
  FontWeight->"Bold"],
 StyleBox["\n", "Text"],
 Cell[BoxData[
  RowBox[{"$", " ", "python3", " ", 
   RowBox[{"RoomServer", ".", "py"}]}]], "InlineCode",ExpressionUUID->
  "40e22e5a-115f-4d0f-8506-91402b395cd5"],
 "\nTo get live inspection, visit http://localhost:11080 when running your \
local server or https://aaronkimmig.de/crypto-insight if you want to use the \
standard external server."
}], "Text",
 CellChangeTimes->{{3.886604866720007*^9, 3.886604960326703*^9}, {
   3.886605000209938*^9, 3.8866054385411625`*^9}, {3.8866072058047915`*^9, 
   3.886607333128967*^9}, {3.8866115075151477`*^9, 3.8866116049696465`*^9}, {
   3.88661789274189*^9, 3.886617892814159*^9}, {3.8866179699634757`*^9, 
   3.8866179720336676`*^9}, {3.886664019031947*^9, 3.8866640919830384`*^9}, {
   3.8866707663770885`*^9, 3.88667076747229*^9}, {3.886670884836714*^9, 
   3.8866709142053843`*^9}, {3.886671021298081*^9, 3.886671455076984*^9}, {
   3.8874804123848095`*^9, 3.887480514646986*^9}, {3.887480633694974*^9, 
   3.887480806142682*^9}, {3.8874808419040775`*^9, 3.8874809042399397`*^9}, {
   3.8874809394079704`*^9, 3.8874809413845162`*^9}, {3.887480990026493*^9, 
   3.8874810212024503`*^9}, {3.8874897579325314`*^9, 
   3.8874897595435915`*^9}, {3.8875432178101244`*^9, 3.887543222083366*^9}, {
   3.887543252393202*^9, 3.887543311451285*^9}, {3.8875434076125298`*^9, 
   3.8875434117325525`*^9}, 3.8875435012577515`*^9, 3.887552128390768*^9, {
   3.887651211682584*^9, 3.8876512117589617`*^9}, {3.8896361260979815`*^9, 
   3.889636210797711*^9}, {3.889636316532115*^9, 3.889636318129504*^9}, {
   3.8896365426023536`*^9, 3.8896365557072353`*^9}, {3.889637028571465*^9, 
   3.889637028907648*^9}, {3.891505831607321*^9, 3.891505992753276*^9}, 
   3.8915065161330357`*^9, {3.8915066718232727`*^9, 3.891506774946591*^9}, {
   3.892279790598201*^9, 3.89227979253974*^9}, {3.8923451444244423`*^9, 
   3.892345203703785*^9}, {3.892345249071413*^9, 3.8923452918737288`*^9}, {
   3.89234533404745*^9, 3.892345362041787*^9}, {3.8923537962221947`*^9, 
   3.8923538150129232`*^9}, {3.892353865764687*^9, 3.892353869498007*^9}, {
   3.892357296483954*^9, 3.892357383991551*^9}, {3.892357600508223*^9, 
   3.892357601180231*^9}, {3.8924392581548243`*^9, 3.892439258366375*^9}, {
   3.898313339015438*^9, 3.8983133413801107`*^9}, {3.8983134143973017`*^9, 
   3.8983134290556145`*^9}, {3.898313538406578*^9, 3.8983136714148073`*^9}, {
   3.898313731130991*^9, 3.8983137437501855`*^9}, {3.898315004563865*^9, 
   3.898315118008475*^9}, {3.898315748037228*^9, 3.8983157643994837`*^9}, {
   3.8983158110841312`*^9, 3.8983158159480762`*^9}, {3.8983159952829237`*^9, 
   3.898315996995859*^9}, {3.898316266891613*^9, 3.898316267243648*^9}, {
   3.898316297313672*^9, 3.898316301187675*^9}, {3.8983163339691734`*^9, 
   3.898316367618928*^9}, {3.898316420570687*^9, 3.8983164216995873`*^9}, {
   3.898317236262931*^9, 3.8983172452356253`*^9}, {3.8983173018644915`*^9, 
   3.89831733861882*^9}, {3.898318562488807*^9, 3.898318562623229*^9}, {
   3.8983450574534802`*^9, 3.898345060661379*^9}, 3.898345322952446*^9, {
   3.898345904895401*^9, 3.8983459475187845`*^9}, {3.8983498250762796`*^9, 
   3.898349827313053*^9}, {3.898364610714532*^9, 3.898364612557428*^9}, {
   3.8983646444926553`*^9, 3.898364646619732*^9}, {3.8983671518101892`*^9, 
   3.898367266498063*^9}, 3.8984075258500977`*^9, {3.8990157802434545`*^9, 
   3.899015796418516*^9}, {3.89902429070555*^9, 3.899024313864662*^9}, {
   3.8990243750105085`*^9, 3.8990243934072704`*^9}, {3.899263448795709*^9, 
   3.899263449590079*^9}, {3.8992729122626724`*^9, 3.899272912349223*^9}, {
   3.899294122079674*^9, 3.8992942650577326`*^9}, {3.8993036310150137`*^9, 
   3.899303631102515*^9}, {3.899307626266754*^9, 3.899307627678196*^9}, 
   3.899307825727557*^9, {3.899309954167135*^9, 3.8993099591434283`*^9}, {
   3.8993100639617167`*^9, 3.89931006604819*^9}, {3.901008592730776*^9, 
   3.9010086415478945`*^9}, {3.901009761248073*^9, 3.901009768758029*^9}, {
   3.91129289825322*^9, 3.911293117598316*^9}, {3.9112932041328464`*^9, 
   3.9112932447852983`*^9}, {3.911293276189863*^9, 3.911293297843961*^9}, {
   3.9112934671980495`*^9, 3.911293571464634*^9}, {3.9112937968052483`*^9, 
   3.911293816837281*^9}, {3.911293939501443*^9, 3.9112939398474174`*^9}, {
   3.911293999426087*^9, 3.9112940255406933`*^9}, {3.9112944734687433`*^9, 
   3.9112945133869743`*^9}, {3.9112950968671675`*^9, 3.911295125669856*^9}, {
   3.9113963322985125`*^9, 3.9113963362189517`*^9}, {3.911408563226633*^9, 
   3.911408564577679*^9}, {3.913297350737464*^9, 3.9132974383114862`*^9}, {
   3.9132974723771677`*^9, 3.913297532980236*^9}, {3.913948750569661*^9, 
   3.9139487515225973`*^9}, {3.9139488005696793`*^9, 
   3.9139488032432585`*^9}},ExpressionUUID->"c87e6cb6-c687-40d6-a558-\
e7ff15063073"],

Cell[CellGroupData[{

Cell["Reset \[Dash] Clean up Notebook, Clear states", "Section",
 CellChangeTimes->{{3.896527282928464*^9, 3.896527283257639*^9}, {
   3.896527315788945*^9, 3.896527387260014*^9}, 
   3.898317951377226*^9},ExpressionUUID->"11fd0fb5-a5b8-4e2c-a5ff-\
cad55b758019"],

Cell[TextData[StyleBox["If fiatShamirSingleKernel is set in section \
\[OpenCurlyDoubleQuote]Configuration\[CloseCurlyDoubleQuote]  run CLEAR ALL \
in the verifier\[CloseCurlyQuote]s notebook after this notebook has been run!",
 FontWeight->"Bold",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.8983176720373735`*^9, 3.89831778016809*^9}, {
  3.898317851389152*^9, 3.898317892141124*^9}, {3.898317927005402*^9, 
  3.898317936403509*^9}, {3.8983456465700436`*^9, 3.8983456488011503`*^9}, {
  3.9010081497618055`*^9, 
  3.9010081675115194`*^9}},ExpressionUUID->"6f46f845-0cde-455e-bef5-\
d325b0414a58"],

Cell[TextData[{
 StyleBox["CREATE NEW KERNEL IF NEEDED:\n",
  FontWeight->"Bold"],
 "Menu ",
 StyleBox[">",
  FontWeight->"Bold"],
 " Evaluation > Kernel Configuration Options > Add > Name: Prover > OK"
}], "Text",
 CellChangeTimes->{{3.8977157233204346`*^9, 
  3.8977157861088495`*^9}},ExpressionUUID->"a6577728-6ab3-40e9-85fd-\
67a7f9d4bfeb"],

Cell[TextData[StyleBox["The following helper actions are useful for cleanup \
and debugging. They are not required to correctly execute the protocols.",
 FontWeight->"Bold",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.898345662274104*^9, 3.898345676040671*^9}, {
  3.9113998059845004`*^9, 
  3.9113998474764175`*^9}},ExpressionUUID->"4664e31c-bff6-48fe-a0cf-\
48666a365003"],

Cell[TextData[StyleBox["CLEAR ALL",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.896417125761096*^9, 3.896417226823968*^9}, {
  3.89652706443888*^9, 3.896527072593178*^9}, {3.896527329638112*^9, 
  3.896527331689686*^9}, {3.8965273672821207`*^9, 
  3.896527370666601*^9}},ExpressionUUID->"d6eac4f9-897f-44ac-8e30-\
985d66ce8bee"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"FrontEndTokenExecute", "[", "\"\<DeleteGeneratedCells\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Deleted all generated output cells\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Quit Kernel\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Quit", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8964170595815897`*^9, 3.8964171073895884`*^9}, {
   3.89652708919742*^9, 3.896527129398819*^9}, 3.896543127469631*^9, {
   3.8969389310813713`*^9, 3.896938945997376*^9}, {3.896938988437545*^9, 
   3.8969390695834017`*^9}, {3.896939123960836*^9, 3.896939174966213*^9}, {
   3.897057090211151*^9, 3.897057099936427*^9}, 3.8970585678591337`*^9, 
   3.911404513780888*^9},
 CellLabel->
  "In[456]:=",ExpressionUUID->"6ff9dc76-0780-4ae5-96f5-8de3f1fd5902"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Deleted all generated output cells\"\>"], "Print",
 CellChangeTimes->{3.913949245436221*^9},
 CellLabel->
  "During evaluation of \
In[456]:=",ExpressionUUID->"116d21cb-9cfe-4324-8e23-f4fc8421e636"],

Cell[BoxData["\<\"Quit Kernel\"\>"], "Print",
 CellChangeTimes->{3.9139492454412184`*^9},
 CellLabel->
  "During evaluation of \
In[456]:=",ExpressionUUID->"587f3ec3-5ff6-4c91-b68e-0c3e9d8ed3ed"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 StyleBox["DELETE ROOM",
  FontWeight->"Bold"],
 " (Can only be executed after initialization)"
}], "Text",
 CellChangeTimes->{{3.896417125761096*^9, 3.896417226823968*^9}, {
  3.89652706443888*^9, 3.896527072593178*^9}, {3.896527329638112*^9, 
  3.896527331689686*^9}, {3.8965273672821207`*^9, 3.896527370666601*^9}, {
  3.897058526101535*^9, 
  3.8970585387967787`*^9}},ExpressionUUID->"4e99bd2f-3711-4a92-9e11-\
1f50a860b105"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SendVariables", "[", 
   RowBox[{"\"\<Router\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<__delete_room__\>\"", "->", "True"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WaitForVariable", "[", 
   RowBox[{"\"\<__delete_room__\>\"", ",", "\"\<Router\>\""}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8964170595815897`*^9, 3.8964171073895884`*^9}, {
   3.89652708919742*^9, 3.896527129398819*^9}, 3.896543127469631*^9, {
   3.8969389310813713`*^9, 3.896938945997376*^9}, {3.896938988437545*^9, 
   3.8969390695834017`*^9}, {3.896939123960836*^9, 3.896939174966213*^9}, {
   3.897057090211151*^9, 3.897057099936427*^9}, {3.897058544393339*^9, 
   3.897058554622757*^9}},
 CellLabel->
  "In[427]:=",ExpressionUUID->"a7a13d0e-8ca6-476b-8ec5-0dbf07f8ec80"],

Cell[TextData[{
 StyleBox["RECONNECT",
  FontWeight->"Bold"],
 " (Can only be executed after initialization)"
}], "Text",
 CellChangeTimes->{{3.896417125761096*^9, 3.896417226823968*^9}, {
  3.896457635422511*^9, 3.896457649650158*^9}, {3.89645769443347*^9, 
  3.896457705227622*^9}, {3.8964613186761017`*^9, 3.8964613325878897`*^9}, {
  3.896522814963489*^9, 3.8965228469408503`*^9}, {3.896522998739846*^9, 
  3.896523000690649*^9}, {3.8965271503647127`*^9, 
  3.8965271574915648`*^9}},ExpressionUUID->"86898e4d-2a70-41e8-98e2-\
9c183aa696ad"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Reconnect", " ", "with", " ", "new", " ", "socket"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"router", " ", "=", " ", 
    RowBox[{"ConnectToRouter", "[", 
     RowBox[{"routerConfig", ",", "True"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.895510969857535*^9, 3.895511008832879*^9}, 
   3.895579868068171*^9, {3.89610166332732*^9, 3.896101677965507*^9}, {
   3.896102373316564*^9, 3.896102428407933*^9}, {3.896523032914097*^9, 
   3.896523034715486*^9}},
 CellLabel->
  "In[265]:=",ExpressionUUID->"539916a4-b383-4ffd-aa9f-4e520b97c593"],

Cell[TextData[{
 StyleBox["CLEAR SAVED STATES",
  FontWeight->"Bold"],
 " (Can only be executed after initialization)"
}], "Text",
 CellChangeTimes->{{3.896417125761096*^9, 3.896417226823968*^9}, {
  3.896457635422511*^9, 3.896457649650158*^9}, {3.89645769443347*^9, 
  3.896457705227622*^9}, {3.8964613186761017`*^9, 3.8964613325878897`*^9}, {
  3.896522814963489*^9, 3.8965228469408503`*^9}, {3.896522998739846*^9, 
  3.896523000690649*^9}, {3.8965271503647127`*^9, 3.8965271574915648`*^9}, {
  3.89772603943329*^9, 
  3.897726042642563*^9}},ExpressionUUID->"51835eb4-1503-497d-810f-\
2dd808f47977"],

Cell[BoxData[
 RowBox[{
  RowBox[{"StateMachineClear", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.895510969857535*^9, 3.895511008832879*^9}, 
   3.895579868068171*^9, {3.89610166332732*^9, 3.896101677965507*^9}, {
   3.896102373316564*^9, 3.896102428407933*^9}, {3.896523032914097*^9, 
   3.896523034715486*^9}, {3.8977260619473925`*^9, 
   3.897726095814425*^9}},ExpressionUUID->"52dc856b-9f8a-45e4-a473-\
9be581e96e9a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Configuration", "Section",
 CellChangeTimes->{{3.8866054675650663`*^9, 3.8866054680045533`*^9}, {
  3.8983187226370153`*^9, 3.8983187267362995`*^9}, {3.8983449908587875`*^9, 
  3.898344995162737*^9}, {3.8983457666250334`*^9, 
  3.8983457810404015`*^9}},ExpressionUUID->"d31ccf2a-0fff-4583-8947-\
caf5f753d285"],

Cell[CellGroupData[{

Cell["Set Notebook Context and Kernel", "Subsection",
 CellChangeTimes->{{3.89938659234009*^9, 
  3.899386601737139*^9}},ExpressionUUID->"3717f2d2-82f5-4bbc-b4ba-\
49eeee97824c"],

Cell[TextData[{
 "- Using a payed license?\n- YES: On your first run, make sure the kernel \
for the prover has been created: Menu ",
 StyleBox[">",
  FontWeight->"Bold"],
 " Evaluation > Kernel Configuration Options > Add > Name: Prover > OK\n- NO: \
set option fiatShamirSingleKernel = True and read the instructions in the \
comment above it.\n\n- To run the whole notebook, place the cursor into this \
cell, press \[OpenCurlyDoubleQuote]Shift-Enter\[CloseCurlyDoubleQuote] and \
click \[OpenCurlyDoubleQuote]Yes\[CloseCurlyDoubleQuote] to evaluate the \
whole notebook. Select \[OpenCurlyDoubleQuote]No\[CloseCurlyDoubleQuote] to \
only evaluate this cell. Go on to the next cells to run them one by one with \
\[OpenCurlyDoubleQuote]Shift-Enter\[CloseCurlyDoubleQuote].\n\n- To clean up \
the notebook and start with a new run, execute the first cell (\
\[OpenCurlyDoubleQuote]Shift-Enter\[CloseCurlyDoubleQuote]) in section \
\[OpenCurlyDoubleQuote]Reset\[CloseCurlyDoubleQuote]. Re-evaluating cells is \
possible because a state machine allows protocol rewinding.\n\n",
 StyleBox["Re-evaluate after changes",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.8993868013321857`*^9, 3.8993868137453547`*^9}, {
  3.9132966941040325`*^9, 3.913296844249787*^9}, {3.91329710775251*^9, 
  3.913297285564633*^9}, {3.91329929975954*^9, 
  3.9132994607079163`*^9}},ExpressionUUID->"c87c42d1-f02e-4df2-823b-\
0f4dd996a12e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Whether", " ", "to", " ", "run", " ", "notbook", " ", "on", " ", 
     "default", " ", 
     RowBox[{"kernel", ".", "\n", "Useful"}], " ", "with", " ", "Mathematica",
      " ", "Test", " ", "License", " ", "where", " ", "only", " ", "a", " ", 
     "single", " ", "kernel", " ", "can", " ", "be", " ", "run", " ", "at", 
     " ", "a", " ", 
     RowBox[{"time", ".", "\n", 
      RowBox[{"Remark", ":", " ", 
       RowBox[{
       "Running", " ", "the", " ", "interactive", " ", "protocol", " ", "is", 
        " ", "not", " ", "possible", " ", "on", " ", "a", " ", "single", " ", 
        
        RowBox[{"kernel", "!"}], "\n", "Also", " ", "apply", " ", "this", " ",
         "setting", " ", "to", " ", "the", " ", "verifier", " ", "and", " ", 
        "run", " ", "it", " ", "after", " ", "the", " ", 
        RowBox[{"prover", ".", "\n", "Quit"}], " ", "Kernel", " ", "after", 
        " ", "prover", " ", "has", " ", "been", " ", "run", " ", "and", " ", 
        "before", " ", "verifier", " ", "is", " ", 
        RowBox[{"started", "!"}], "\n", "interactive"}]}]}]}], " ", "=", " ", 
    
    RowBox[{
    "False", " ", "has", " ", "to", " ", "be", " ", "set", " ", "in", " ", 
     "the", " ", 
     RowBox[{"configuration", "."}]}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"fiatShamirSingleKernel", " ", "=", " ", "False"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"Default", ":", " ", "False"}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Name", " ", "of", " ", "kernel", " ", "this", " ", "notebook", " ", 
      "should", " ", "be", " ", "run", " ", 
      RowBox[{"on", ".", "\n", "Does"}], " ", "not", " ", "take", " ", 
      "effect", " ", "if", " ", "fiatShamirSingleKernel"}], " ", "=", " ", 
     RowBox[{"True", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
        "the", " ", "notebook", " ", "will", " ", "then", " ", "be", " ", 
         "run", " ", "on", " ", "Kernel", " ", "\"\<Local\>\""}], ")"}], 
       "."}]}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"proverKernelName", " ", "=", " ", "\"\<Prover\>\""}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"Default", ":", " ", "\"\<Prover\>\""}], "*)"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"===", " ", 
      RowBox[{
       RowBox[{"don", "'"}], "t", " ", "change", " ", "between", " ", 
       "here"}]}], " ", ">>>", " ", "==="}], "*)"}], "\n", 
   RowBox[{"(*", "Context", "*)"}], "\n", 
   RowBox[{
   "Print", "[", "\"\<Setting Cell Context to Notebook only\>\"", "]"}], "\n", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{
      RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
      RowBox[{"CellContext", "->", "Notebook"}]}], "]"}], ";"}], "\n", 
   RowBox[{"(*", "Kernel", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kernelName", " ", "=", " ", 
     RowBox[{"If", "[", 
      RowBox[{
      "fiatShamirSingleKernel", ",", "\"\<Local\>\"", ",", 
       "proverKernelName"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Make", " ", "sure", " ", "that", " ", "a", " ", "kernel", " ", "with", 
      " ", "this", " ", "name", " ", "has", " ", "been", " ", "created", " ", 
      "via", " ", "Menu"}], "->", 
     RowBox[{"Evaluation", "->", 
      RowBox[{"Kernel", " ", "Configuration", " ", "Options"}]}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{
      RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
      RowBox[{"Evaluator", "->", "kernelName"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<Evaluating on Kernel named \\\"\>\"", "<>", "kernelName", "<>", 
     "\"\<\\\"\>\""}], "]"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"===", " ", 
     RowBox[{"<<", 
      RowBox[{"<", " ", 
       RowBox[{"and", " ", "here"}]}]}], " ", "==="}], "*)"}]}]}]], "Code",
 CellChangeTimes->{{3.899386604798806*^9, 3.8993866977373953`*^9}, {
   3.8993867415777707`*^9, 3.8993867518419847`*^9}, {3.8993901707986026`*^9, 
   3.899390171350896*^9}, {3.9010083579753876`*^9, 3.901008360411872*^9}, {
   3.9010085499279385`*^9, 3.9010085732121773`*^9}, {3.9122537061579933`*^9, 
   3.9122537269753933`*^9}, 3.913948915385149*^9},
 CellLabel->
  "In[449]:=",ExpressionUUID->"d08dd333-9a14-4c70-9cc2-216c35dc7252"]
}, Open  ]],

Cell[CellGroupData[{

Cell["User\[CloseCurlyQuote]s Keys and Messages to be Shuffled", "Subsection",
 CellChangeTimes->{{3.8983458182899823`*^9, 3.898345819518669*^9}, {
  3.899268222468279*^9, 3.8992682333171115`*^9}, {3.8992937819306307`*^9, 
  3.8992938001461525`*^9}, {3.911294519576129*^9, 
  3.911294520034128*^9}},ExpressionUUID->"2a906bb2-a56f-4dcc-a67b-\
913787bb6287"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"secret", " ", "keys"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"names", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Alice\>\"", ",", " ", "\"\<Bob\>\"", ",", " ", "\"\<Charly\>\"", 
       ",", " ", "\"\<Dave\>\""}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"secretKeys", " ", "=", " ", 
     RowBox[{"{", "\n", "\t", 
      RowBox[{"\"\<Alice' Secret Key\>\"", ",", " ", 
       RowBox[{"(*", "1", "*)"}], "\n", "\t", "\"\<Bobs Secret Key\>\"", ",", 
       " ", 
       RowBox[{"(*", "2", "*)"}], "\n", "\t", "\"\<Charlie's Secret Key\>\"", 
       ",", " ", 
       RowBox[{"(*", "3", "*)"}], "\n", "\t", "\"\<Dave's Secret Key\>\""}], 
      " ", 
      RowBox[{"(*", "4", "*)"}], "\n", "}"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "senders", " ", "with", " ", "corresponding", " ", "receivers", " ", 
     "and", " ", "their", " ", "secret", " ", "messages", " ", "to", " ", 
     "be", " ", "shuffled"}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Example", ":", "\n", "Alice"}], " ", "->", " ", 
     RowBox[{"\"\<Wien\>\"", " ", "->", " ", 
      RowBox[{
       RowBox[{"Bob", "\n", "Bob"}], " ", "->", " ", 
       RowBox[{"\"\<M\[UDoubleDot]nchen\>\"", " ", "->", " ", 
        RowBox[{
         RowBox[{"Dave", "\n", "Charly"}], " ", "->", " ", 
         RowBox[{"\"\<Bozen\>\"", " ", "->", " ", "Dave"}]}]}]}]}]}], "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"senders", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"secretMessages", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Wien\>\"", ",", " ", "\"\<M\[UDoubleDot]nchen\>\"", ",", " ", 
       "\"\<Bozen\>\""}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"receivers", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"2", ",", " ", "4", ",", " ", "4"}], "}"}]}], ";"}]}]}]], "Code",\

 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBmIQnf/slU4j91vHMGd2XRD9J2PWJSfet45lpUlXQHTD
LSNlZyDNmNVsCKK/erJbgOjKyfw2INpP4rYDiPacPMkVRPe0l3aB6NwP1b0g
muU2C1MAkC55y8gFovlXswuAaDNnFzkQLeCjrQyiDVccBdMapy5fy1F563jd
RuE6iO7d3foVRCtZvwDTUsHV7LlAuuVeCReIjow6qQKiv12qUgXRSs8chDnU
3jr+yFSUBNFW5XONOYE0S3yxKYiuZTwQDKLtZd+HgOhj+x61gWjTJs9OEO06
/fxlEL15Tsh1EL1DbuZbEO33WvsdiD7LLMLGBaS3tM0B069W92iAaLNJrJog
2mFFsgmI/jfzHphm4/WwBdEbvJjtQXQVy4MAEH32pFQgWL3MifncQDooUHEh
iF4aF3EaRKvVdp4B0esXZmxm1XjrqL2iFkwDAC1PsBs=
  "],
 CellLabel->"In[8]:=",ExpressionUUID->"62f51d77-82ff-47d0-a8c8-682a0a29626a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Crypto & Protocol", "Subsection",
 CellChangeTimes->{{3.8983458182899823`*^9, 3.898345819518669*^9}, {
  3.898345890589458*^9, 
  3.898345892554372*^9}},ExpressionUUID->"12fc3a58-829b-4e9b-8bc7-\
1db5d21a33dd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Whether", " ", "to", " ", "use", " ", "El", " ", "Gamal", " ", "or", " ", 
    "Elliptic", " ", "Curves"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"useElGamal", " ", "=", " ", "False"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "Only", " ", "case", " ", "\"\<False\>\"", " ", "is", " ", "implemented", 
     " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Elliptic", " ", "Curve", " ", "Cryptography"}], ")"}], ".", 
      " ", "El"}], " ", "Gamal", " ", "is", " ", "implemented", " ", "in", 
     " ", "a", " ", "separate", " ", "Notebook"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Whether", " ", "to", " ", "use", " ", "the", " ", "interactive", " ", 
      "protocol", " ", "or", " ", "apply", " ", "Fiat"}], "-", 
     RowBox[{"Shamir", " ", "transform"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"interactive", " ", "=", " ", "True"}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"trapdoor", " ", "function", " ", "configuration"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cryptFuncs", " ", "=", " ", 
     RowBox[{"<|", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{
        SuperscriptBox["y", "2"], " ", 
        SubscriptBox["\[Congruent]", "p"], " ", 
        RowBox[{
         SuperscriptBox["x", "3"], " ", "+", " ", "7"}]}], "*)"}], "\n", "\t", 
      RowBox[{
       RowBox[{"\"\<EllipticCurve\>\"", "->", 
        RowBox[{"<|", "\n", "\t\t", 
         RowBox[{
          RowBox[{
          "\"\<curve_representation\>\"", "->", "\"\<Weierstrass\>\""}], ",", 
          "\n", "\t\t", 
          RowBox[{"(*", 
           RowBox[{"prime", " ", "modulus"}], "*)"}], "\n", "\t\t", 
          RowBox[{"\"\<p\>\"", "->", 
           RowBox[{
            RowBox[{"2", "^", "256"}], "-", 
            RowBox[{"2", "^", "32"}], "-", 
            RowBox[{"2", "^", "9"}], "-", 
            RowBox[{"2", "^", "8"}], "-", 
            RowBox[{"2", "^", "7"}], "-", 
            RowBox[{"2", "^", "6"}], "-", 
            RowBox[{"2", "^", "4"}], "-", "1"}]}], ",", "\n", "\t\t", 
          RowBox[{"(*", 
           RowBox[{"linear", " ", "coefficient"}], "*)"}], "\n", "\t\t", 
          RowBox[{"\"\<a\>\"", "->", "0"}], ",", "\[IndentingNewLine]", 
          "\t\t", 
          RowBox[{"(*", 
           RowBox[{"constant", " ", "coefficient"}], "*)"}], "\n", "\t\t", 
          RowBox[{"\"\<b\>\"", "->", "7"}], ",", "\n", "\t\t", 
          RowBox[{"(*", 
           RowBox[{
           "number", " ", "of", " ", "points", " ", "on", " ", "elliptic", 
            " ", "curve"}], "*)"}], "\[IndentingNewLine]", "\t\t", 
          RowBox[{"\"\<n\>\"", "->", 
           RowBox[{
            RowBox[{"Interpreter", "[", "\"\<HexInteger\>\"", "]"}], "@", 
            "\"\<FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364\
141\>\""}]}], ",", "\n", "\t\t", 
          RowBox[{"(*", "cofactor", "*)"}], "\n", "\t\t", 
          RowBox[{"\"\<h\>\"", "->", "1"}], ",", "\n", "\t\t", 
          RowBox[{"(*", 
           RowBox[{"Standard", " ", "generator", " ", "point"}], "*)"}], 
          "\[IndentingNewLine]", "\t\t", 
          RowBox[{"\"\<g\>\"", "->", 
           RowBox[{"{", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"Interpreter", "[", "\"\<HexInteger\>\"", "]"}], "@", 
              "\"\<79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F\
81798\>\""}], ",", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{"Interpreter", "[", "\"\<HexInteger\>\"", "]"}], "@", 
              "\"\<483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB1\
0D4B8\>\""}]}], "\n", "\t\t", "}"}]}]}], "\n", "\t", "|>"}]}], ",", "\n", 
       "\t", 
       RowBox[{"\"\<ElGamal\>\"", "->", 
        RowBox[{"<|", "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{"prime", " ", "modulus"}], "*)"}], "\n", "\t\t", 
         RowBox[{
          RowBox[{
          "\"\<p\>\"", "->", 
           "104171412955797345374825306094587137358185828944419116766145103921\
246769115772826166902003275003141478433556387974070806804587234468713014875717\
804123991400865933257955249637457218623913474026850215413802899000914003935626\
345813776687095908759935193592311407770025861374225612063433152689563194364722\
923204941750718598830275383048786000007695166493459282523759784306624143833343\
846739529874826892367325493145382851998305481283844092048028518345850720917698\
489885093776158086095887086820399210790167663553143251131404030015728218150138\
682048161609336005082117226337316530721972797940117302139775168174534719729173\
847282086378152852268394028479101668226632707969088356140847230758409678177594\
903605864945639921962529132843047536512215949921757537337874202656307993071920\
260021322202819293196611882257136039776710385294468881144687331623084772514561\
241320433591182151003156521404043462709834984272302739362901092909853359839023\
072861334881982723814881874505701094618494552656423040055025192252683672239647\
207295536692561340958233652529489357630423710693428575731573032937899619579636\
428820393873946188328264259092586682497469565168441636071125865601990605903731\
9767764495324430179399344774413453286723254801982148942951995658849178615809"}\
], ",", "\n", "\t\t", 
          RowBox[{"(*", 
           RowBox[{"prime", " ", "order", " ", "of", " ", "subgroup"}], 
           "*)"}], "\n", "\t\t", 
          RowBox[{
          "\"\<q\>\"", "->", 
           "115495537721865841886753598126790623410803765555514166516267006677\
617384572733"}], ",", "\n", "\t\t", 
          RowBox[{"(*", 
           RowBox[{"generator", " ", "for", " ", "subgroup"}], "*)"}], "\n", 
          "\t\t", 
          RowBox[{
          "\"\<g\>\"", "->", 
           "162250732856086333024198708769552119124132771138701230698321091103\
766110085571699171141349203980294366828575766110696862291375012963324900689246\
883826630558970810696910760255728303505514103270625029368334209378825361907335\
084579749108556809222724660133387677900468273821855625463185878499175607187954\
404920155419542634378491555190737879407105981407512874190584785405148168789543\
772134165144992028324988707356862938007682832923325075932517898086058618590647\
877535979324672490258909983261647537557917093721188049747333685184178180767262\
911468574047251689723993194523377273672908278548956899410348492569021921331332\
809242886079917572718984173130131865083337037790797991041628078640243962978223\
700352127999252785841507408925515177530737873089717214532715614532036548022797\
236101095014943660276203363861629717045745310301056690925197627012933091690617\
034407630917995443344975104480452116839464051786292919538805533343794433129638\
013600305280141011130442361130744729151955048902220327497050772837801000201483\
771576098886696774221646416420545801059476858518953285163743108471259398999773\
981359797164608587496709485510587102141435705241097781413129877036251198635778\
563255068078254557171023061554922779206215207192791641795803094284264880015"}]\
}], "\n", "\t", "|>"}]}]}], "\n", "|>"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Whether", " ", "to", " ", "use", " ", "the", " ", "inner", " ", 
      "product", " ", "protocol", " ", "for", " ", "logarithmic", " ", 
      "communication", " ", "cost"}], ";", " ", 
     RowBox[{
      RowBox[{
      "set", " ", "to", " ", "True", " ", "if", " ", 
       "exploitFixedRandomSeedForVerifier"}], " ", "=", " ", "True"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"useInnerProductProtocol", " ", "=", " ", "True"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"Default", ":", " ", "True"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "How", " ", "random", " ", "numbers", " ", "should", " ", "be", " ", 
      "generated"}], ",", " ", 
     RowBox[{
     "choose", " ", "from", "\[IndentingNewLine]", "\"\<ExtendedCA\>\"", " ", 
      
      RowBox[{"(", 
       RowBox[{"built", "-", 
        RowBox[{
        "in", " ", "pseudo", " ", "random", " ", "number", " ", 
         "generator"}]}], ")"}], " ", "or", "\[IndentingNewLine]", 
      "\"\<OpenSSL\>\""}], ",", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
       "cryptographic", " ", "random", " ", "number", " ", "generator", " ", 
        "from", " ", "OpenSSL"}], ")"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"to", " ", "be", " ", 
        RowBox[{"implemented", ":", " ", 
         RowBox[{"\"\<DevRandom\>\"", " ", 
          RowBox[{"(", 
           RowBox[{"use", " ", "system", " ", "entropy", " ", 
            RowBox[{
             RowBox[{"from", " ", "/", "dev"}], "/", "random"}]}], 
           ")"}]}]}]}], "*)"}], "\[IndentingNewLine]", "Automatically", " ", 
      "set", " ", "to", " ", "\"\<ExtendedCA\>\"", " ", "if", " ", "a", " ", 
      "fixed", " ", "random", " ", "seed", " ", "is", " ", "used", " ", "for",
       " ", "the", " ", "prover", " ", "to", " ", "demonstrate", " ", "the", 
      " ", "implications", " ", "of", " ", "a", " ", "weak", " ", "RNG"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rngMethod", " ", "=", " ", "\"\<OpenSSL\>\""}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"Default", ":", " ", "\"\<OpenSSL\>\""}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Fixed", " ", "random", " ", "seed", " ", "which", " ", "will", " ", "be",
      " ", "used", " ", "for", " ", "calculating", " ", "the", " ", 
     "generators", " ", "for", " ", "Pedersen", " ", "Commitments"}], "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"fixedNUMSRandomSeed", " ", "=", " ", "314159000001"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"Default", ":", " ", "314159000001"}], "*)"}]}]}]], "Code",
 CellChangeTimes->{{3.898345831340629*^9, 3.8983458322269697`*^9}, 
   3.898345888624636*^9, {3.898346198461611*^9, 3.8983461988145695`*^9}, {
   3.8983472968769426`*^9, 3.8983472985355797`*^9}, {3.8983498744969234`*^9, 
   3.898349897008725*^9}, {3.8983652780830994`*^9, 3.898365299733475*^9}, {
   3.898365530164981*^9, 3.8983655327029963`*^9}, {3.898365925697016*^9, 
   3.8983659260214124`*^9}, {3.8983661682221503`*^9, 3.898366171888629*^9}, {
   3.8990190576229296`*^9, 3.8990190589842443`*^9}, {3.899020325739227*^9, 
   3.8990203262526116`*^9}, {3.899032158027087*^9, 3.899032158705352*^9}, 
   3.899293968726787*^9, {3.8993847277894707`*^9, 3.89938472830923*^9}, {
   3.8993901751820736`*^9, 3.899390175623312*^9}, {3.911404365985355*^9, 
   3.911404366428317*^9}, {3.9114067435294046`*^9, 3.911406743848076*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"fd411253-d2ca-4865-adaa-6e531c81786d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Network, Communication & Environment", "Subsection",
 CellChangeTimes->{{3.8983458456194053`*^9, 
  3.8983458517417173`*^9}},ExpressionUUID->"8e59d7ea-73bf-492a-bc02-\
edbe62ce3ca2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Unique", " ", "ID"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"myId", " ", "=", " ", "\"\<Bob-Shuffle-Pro\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"ID", " ", "of", " ", "interactive", " ", "verifier"}], ";", " ", 
     RowBox[{
      RowBox[{"needed", " ", "if", " ", "Fiat"}], "-", 
      RowBox[{"Shamir", " ", "is", " ", "disabled"}]}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
    "interactiveVerifierId", " ", "=", " ", "\"\<Alice-Shuffle-Ver\>\""}], 
    ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Room", " ", "the", " ", "communication", " ", "is", " ", "routed", " ", 
     "over"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"room", " ", "=", " ", "\"\<BobsBPShuffle2\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{"roomPassword", " ", "=", " ", "\"\<mediumBPShuffle\>\""}], ";"}],
    "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Enable", "/", "Disable"}], " ", "publishing", " ", 
     RowBox[{"(", "secret", ")"}], " ", "variables", " ", "to", " ", 
     "Inspector", " ", "for", " ", "educational", " ", "purposes"}], "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"inspectionEnabled", " ", "=", " ", "True"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"Default", ":", " ", "True"}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Connection", " ", "to", " ", "router"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"useLocalRouter", " ", "=", " ", "False"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"routerConfig", " ", "=", " ", 
     RowBox[{"<|", "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"\"\<Host\>\"", "->", 
        RowBox[{"If", "[", 
         RowBox[{"useLocalRouter", ",", "\"\<127.0.0.1\>\"", ",", 
          RowBox[{"TextString", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"HostLookup", "[", "\"\<aaronkimmig.de\>\"", "]"}], "[", 
             
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"\"\<Port\>\"", "->", "25080"}], ",", "\[IndentingNewLine]", 
       "\t", 
       RowBox[{"\"\<Password\>\"", "->", "\"\<Drehkreuz64\>\""}], ",", "\n", 
       "\t", 
       RowBox[{
       "\"\<ConnectionPassword\>\"", "->", "\"\<My name is Bob\>\""}]}], 
      "\[IndentingNewLine]", "|>"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Verbosity", " ", 
      RowBox[{"Levels", ":", " ", "0"}]}], ",", " ", "1", ",", " ", "2"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"stateMachineVerbosity", " ", "=", " ", "0"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fiatShamirVerbosity", " ", "=", " ", "0"}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.884800930669128*^9, 3.884800934235299*^9}, {
   3.884800979685759*^9, 3.8848011900436783`*^9}, {3.884801241103557*^9, 
   3.884801243712435*^9}, {3.884801284170188*^9, 3.884801366688986*^9}, {
   3.8848015126792297`*^9, 3.884801564573984*^9}, {3.884801701149727*^9, 
   3.884801701210188*^9}, {3.884801826097868*^9, 3.884801871780352*^9}, {
   3.884804419784683*^9, 3.8848044334035177`*^9}, {3.8848105611612167`*^9, 
   3.884810570055756*^9}, {3.884810646857059*^9, 3.8848106481654253`*^9}, {
   3.8863111236447744`*^9, 3.886311123862175*^9}, {3.8863113447150974`*^9, 
   3.886311345505064*^9}, {3.8863113791692533`*^9, 3.8863114594651656`*^9}, {
   3.8863115103723364`*^9, 3.886311523873429*^9}, {3.886311670782628*^9, 
   3.8863116714418073`*^9}, {3.8863436698652887`*^9, 3.886343679225382*^9}, {
   3.8865983645390425`*^9, 3.8865983651763678`*^9}, {3.886598906432309*^9, 
   3.8865989087160454`*^9}, {3.8866055772470007`*^9, 3.886605616559933*^9}, {
   3.886605657416505*^9, 3.886605676638733*^9}, {3.886606859667705*^9, 
   3.8866069081367064`*^9}, {3.8866116705500154`*^9, 3.886611670673008*^9}, {
   3.89607287436476*^9, 3.89607287539503*^9}, {3.8960731382499847`*^9, 
   3.896073139058918*^9}, {3.8973664768133802`*^9, 3.897366485719471*^9}, {
   3.897366527330714*^9, 3.897366847150647*^9}, {3.897366923895707*^9, 
   3.897366941540222*^9}, {3.897381518009523*^9, 3.8973815184649754`*^9}, 
   3.8982729021624603`*^9, {3.8982730728411827`*^9, 3.8982730759856477`*^9}, {
   3.8982731379140177`*^9, 3.898273181475877*^9}, {3.8983450158225203`*^9, 
   3.898345051867036*^9}, {3.898345111015131*^9, 3.898345111887562*^9}, {
   3.898345784335936*^9, 3.898345788849991*^9}, {3.8983458217974358`*^9, 
   3.898345897391868*^9}, 3.899020128422682*^9, {3.899386517736616*^9, 
   3.8993865181462154`*^9}, 3.8993866286425066`*^9, {3.9010256728116417`*^9, 
   3.9010256743551693`*^9}, {3.9112926261654997`*^9, 3.911292626577992*^9}, {
   3.911404326158622*^9, 3.9114043279707303`*^9}, {3.9132983305575924`*^9, 
   3.913298331028305*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"7abe395b-e149-4b13-b719-3481d759d316"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Initialization and Setup", "Section",
 CellChangeTimes->{{3.8866054675650663`*^9, 3.8866054680045533`*^9}, {
  3.8983187226370153`*^9, 3.8983187267362995`*^9}, {3.8983449908587875`*^9, 
  3.898344995162737*^9}, {3.8983457666250334`*^9, 
  3.8983457780218773`*^9}},ExpressionUUID->"76555971-758f-465f-bfec-\
6a0743d1ba24"],

Cell[CellGroupData[{

Cell["Symbolize all Variables with Special Appearance", "Subsection",
 CellChangeTimes->{{3.886606834942309*^9, 3.886606844785334*^9}, {
   3.886664191038972*^9, 3.8866641962617702`*^9}, 3.8983187941681356`*^9, {
   3.898345127434121*^9, 3.8983451817769585`*^9}, 
   3.899386582570086*^9},ExpressionUUID->"3123280c-54d6-4047-9601-\
af631ae0b10b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Load", " ", "notation", " ", "package", " ", "for", " ", "pretty", " ", 
    "variables"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"Needs", "[", "\"\<Notation`\>\"", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SymbolQ", " ", "=", " ", 
     RowBox[{
      RowBox[{"MatchQ", "[", 
       RowBox[{"#", ",", " ", 
        RowBox[{"t_Symbol", " ", "/;", " ", 
         RowBox[{"AtomQ", "[", "t", "]"}]}]}], "]"}], " ", "&"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"SymbolQ", "[", 
       SubscriptBox["guard", "symbolize"], "]"}], ",", "\n", 
      RowBox[{"Print", "[", "\"\<Special symbols already set up\>\"", "]"}], 
      ",", "\n", 
      RowBox[{"(*", 
       RowBox[{"Else", ":", " ", 
        RowBox[{
        "Symbolize", " ", "variables", " ", "with", " ", "special", " ", 
         "appearance"}]}], "*)"}], "\n", 
      RowBox[{
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["guard", "symbolize"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"User", "'"}], "s", " ", "secrets"}], "*)"}], "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["x", "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["\[Gamma]", "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["m", "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"(*", "Prover", "*)"}], "\n", 
       RowBox[{"(*", 
        RowBox[{"Elliptic", " ", "curve"}], "*)"}], "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["a", "EC"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["b", "EC"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["h", "EC"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["n", "EC"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"(*", "generators", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["g", "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "public", " ", "input", " ", "and", " ", "output", " ", "values", " ",
          "to", " ", "shuffle", " ", "argument"}], "*)"}], "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["h", "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["b", "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["c", "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["d", "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           RowBox[{"h", "'"}], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           RowBox[{"b", "'"}], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           RowBox[{"c", "'"}], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           RowBox[{"d", "'"}], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SuperscriptBox["h", "*"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SuperscriptBox["b", "*"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SuperscriptBox["c", "*"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SuperscriptBox["d", "*"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{
        "commitments", " ", "to", " ", "secret", " ", "shuffle", " ", "s", 
         " ", "and", " ", 
         SuperscriptBox["s", "n"]}], "*)"}], "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Symbolize", "[", 
          TemplateBox[{
            SubscriptBox["\[Sigma]", "V"]},
           "NotationTemplateTag"], "]"}], ";"}], "*)"}], "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Sigma]", "W"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"Helper", " ", "scalars", " ", "and", " ", "vectors"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SuperscriptBox["y", "n"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubsuperscriptBox["y", "z", 
            RowBox[{"n", "-", "1"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SuperscriptBox["y", 
           RowBox[{"-", "1"}]]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SuperscriptBox["y", 
            RowBox[{"-", "n"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SuperscriptBox["w", "n"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubsuperscriptBox["w", "0", 
            RowBox[{"n", "-", "1"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"shuffle", " ", "protocol"}], "*)"}], "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SuperscriptBox["\[Pi]", 
           RowBox[{"-", "1"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["k", "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["k", "^"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["k", "_"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["A", 
           RowBox[{"R", ",", "h"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["A", 
           RowBox[{"R", ",", "b"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["A", 
           RowBox[{"R", ",", "c"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["A", 
           RowBox[{"R", ",", "d"}]]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["a", "L"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["a", "R"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["s", "L"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["s", "R"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Rho]", "h"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Rho]", "b"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Rho]", "c"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Rho]", "d"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["A", "L"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["S", "L"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["S", 
           RowBox[{"R", ",", "h"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["S", 
           RowBox[{"R", ",", "b"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["S", 
           RowBox[{"R", ",", "c"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["S", 
           RowBox[{"R", ",", "d"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["l", "0"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["l", "2"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["r", "1"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["r", "3"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Delta]", "yz"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["t", "1"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["t", "3"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["t", "5"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["l", "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["r", "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Tau]", "3"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Tau]", "5"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Tau]", "x"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["T", "3"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["T", "5"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["t", "^"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Mu]", "h"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Mu]", "b"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Mu]", "c"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Mu]", "d"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubsuperscriptBox["P", "h", "+"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubsuperscriptBox["P", "b", "+"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubsuperscriptBox["P", "c", "+"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubsuperscriptBox["P", "d", "+"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"PR", " ", "protocol"}], "*)"}], "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["a", 
            RowBox[{"L", ",", "W"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["a", 
            RowBox[{"R", ",", "W"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["s", 
            RowBox[{"L", ",", "W"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["s", 
            RowBox[{"R", ",", "W"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Alpha]", "W"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Beta]", "W"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Gamma]", "W"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["A", "W"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["S", "W"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["l", 
            RowBox[{"0", ",", "W"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["l", 
            RowBox[{"1", ",", "W"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["r", 
            RowBox[{"0", ",", "W"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["r", 
            RowBox[{"1", ",", "W"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Delta]", "yzw"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["t", 
           RowBox[{"0", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["t", 
           RowBox[{"1", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["t", 
           RowBox[{"2", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["l", "W"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["r", "W"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Tau]", 
           RowBox[{"1", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Tau]", 
           RowBox[{"2", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Tau]", 
           RowBox[{"x", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["T", 
           RowBox[{"1", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["T", 
           RowBox[{"2", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["t", "W"], "^"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["\[Mu]", "W"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubsuperscriptBox["P", "W", "+"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"inner", " ", "product", " ", "protocol"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["n", "2"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["n", "pow2"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SuperscriptBox["g", "'"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["u", "IP"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["n", "0"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["k", "2"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["k", "0"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubsuperscriptBox["P", "h", "*"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubsuperscriptBox["P", "b", "*"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubsuperscriptBox["P", "c", "*"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubsuperscriptBox["P", "d", "*"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubsuperscriptBox["P", "W", "*"]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubsuperscriptBox["P", "h", "'"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubsuperscriptBox["P", "b", "'"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubsuperscriptBox["P", "c", "'"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubsuperscriptBox["P", "d", "'"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubsuperscriptBox["P", "W", "'"]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "h"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "b"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "c"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "d"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["P", 
           RowBox[{"next", ",", "h"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["P", 
           RowBox[{"next", ",", "b"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["P", 
           RowBox[{"next", ",", "c"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["P", 
           RowBox[{"next", ",", "d"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["P", 
           RowBox[{"next", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["a", "2"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["a", "IP"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["a", "lo"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["a", "hi"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["a", "next"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["b", "2"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["b", "IP"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["b", "lo"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["b", "hi"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["b", "next"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Symbolize", "[", 
          TemplateBox[{
            SubscriptBox["c", "2"]},
           "NotationTemplateTag"], "]"}], ";"}], "*)"}], "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["a", 
            RowBox[{"2", ",", "W"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["a", "W"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["a", 
            RowBox[{"lo", ",", "W"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["a", 
            RowBox[{"hi", ",", "W"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["a", 
            RowBox[{"next", ",", "W"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["b", 
            RowBox[{"2", ",", "W"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["b", "W"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["b", 
            RowBox[{"lo", ",", "W"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["b", 
            RowBox[{"hi", ",", "W"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["b", 
            RowBox[{"next", ",", "W"}]], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["c", "w"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["G", "2"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["G", "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["G", "lo"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["G", "hi"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["G", "next"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["H", "2"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["H", "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["H", "lo"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["H", "hi"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["H", "next"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["B", "2"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["B", "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["B", "lo"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["B", "hi"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["B", "next"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["C", "2"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["C", "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["C", "lo"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["C", "hi"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["C", "next"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["D", "2"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox["D", "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["D", "lo"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["D", "hi"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          OverscriptBox[
           SubscriptBox["D", "next"], "\[RightVector]"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["L", "h"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["L", "b"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["L", "c"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["L", "d"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["L", "W"]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["L", 
           RowBox[{"2", ",", "h"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["L", 
           RowBox[{"2", ",", "b"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["L", 
           RowBox[{"2", ",", "c"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["L", 
           RowBox[{"2", ",", "d"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["L", 
           RowBox[{"2", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["R", "h"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["R", "b"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["R", "c"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["R", "d"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["R", "W"]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["R", 
           RowBox[{"2", ",", "h"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["R", 
           RowBox[{"2", ",", "b"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["R", 
           RowBox[{"2", ",", "c"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["R", 
           RowBox[{"2", ",", "d"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["R", 
           RowBox[{"2", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["u", "2"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SuperscriptBox["u", 
           RowBox[{"-", "1"}]]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["a", "0"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["b", "0"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["c", "0"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["a", 
           RowBox[{"0", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["b", 
           RowBox[{"0", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["c", 
           RowBox[{"0", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["G", "0"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["H", "0"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["B", "0"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["C", "0"]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["D", "0"]},
         "NotationTemplateTag"], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["P", 
           RowBox[{"0", ",", "h"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["P", 
           RowBox[{"0", ",", "b"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["P", 
           RowBox[{"0", ",", "c"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["P", 
           RowBox[{"0", ",", "d"}]]},
         "NotationTemplateTag"], "]"}], ";", "\n", 
       RowBox[{"Symbolize", "[", 
        TemplateBox[{
          SubscriptBox["P", 
           RowBox[{"0", ",", "W"}]]},
         "NotationTemplateTag"], "]"}], ";", 
       RowBox[{"(*", "PR", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
       "Print", "[", "\"\<Finished setting up special symbols\>\"", "]"}]}]}],
      "\n", "]"}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.884800930669128*^9, 3.884800934235299*^9}, {
   3.884800979685759*^9, 3.8848011900436783`*^9}, {3.884801241103557*^9, 
   3.884801243712435*^9}, {3.884801284170188*^9, 3.884801366688986*^9}, {
   3.8848015126792297`*^9, 3.884801564573984*^9}, {3.884801701149727*^9, 
   3.884801701210188*^9}, {3.884801826097868*^9, 3.884801871780352*^9}, {
   3.884804419784683*^9, 3.8848044334035177`*^9}, {3.8848105611612167`*^9, 
   3.884810570055756*^9}, {3.884810646857059*^9, 3.8848106481654253`*^9}, {
   3.8863111236447744`*^9, 3.886311123862175*^9}, {3.8863113447150974`*^9, 
   3.886311345505064*^9}, {3.8863113791692533`*^9, 3.8863114594651656`*^9}, {
   3.8863115103723364`*^9, 3.886311523873429*^9}, {3.886311670782628*^9, 
   3.8863116714418073`*^9}, {3.8863436698652887`*^9, 3.886343679225382*^9}, {
   3.8865983645390425`*^9, 3.8865983651763678`*^9}, {3.886598906432309*^9, 
   3.8865989087160454`*^9}, {3.8866055772470007`*^9, 3.886605616559933*^9}, {
   3.886605657416505*^9, 3.886605676638733*^9}, {3.886606859667705*^9, 
   3.8866069081367064`*^9}, {3.8866116705500154`*^9, 3.886611670673008*^9}, {
   3.8866642284355545`*^9, 3.886664228692359*^9}, {3.886664445517497*^9, 
   3.886664448236847*^9}, {3.88666448557815*^9, 3.886664734895132*^9}, {
   3.8867523560499425`*^9, 3.8867523655603285`*^9}, {3.8867746068439903`*^9, 
   3.8867746827341986`*^9}, {3.886792648160965*^9, 3.8867926633639593`*^9}, {
   3.8868391865542336`*^9, 3.886839197721838*^9}, {3.886839229034811*^9, 
   3.8868392581644015`*^9}, {3.887078506734831*^9, 3.8870785151566963`*^9}, {
   3.892279902668017*^9, 3.892279904999312*^9}, {3.8922806396821947`*^9, 
   3.8922806407273703`*^9}, {3.892345475758539*^9, 3.892345476339182*^9}, {
   3.892345707680832*^9, 3.892345749548093*^9}, {3.892345784054165*^9, 
   3.8923457908644133`*^9}, {3.892346027759503*^9, 3.892346035441105*^9}, {
   3.8923461275667133`*^9, 3.892346178057288*^9}, {3.892346225919083*^9, 
   3.892346263834573*^9}, {3.892346365991582*^9, 3.892346387964859*^9}, {
   3.892346437373479*^9, 3.89234647086187*^9}, {3.892346840564578*^9, 
   3.892346848848062*^9}, {3.8923468960254297`*^9, 3.892346912882483*^9}, {
   3.892346964630641*^9, 3.8923469995420322`*^9}, {3.892348313968439*^9, 
   3.89234841319764*^9}, {3.892348495434525*^9, 3.892348593684947*^9}, {
   3.892350565902264*^9, 3.892350605586195*^9}, {3.8923506364216948`*^9, 
   3.8923506609193687`*^9}, {3.8923507011726923`*^9, 3.892350723869416*^9}, {
   3.8923507804325533`*^9, 3.892350869794622*^9}, {3.892350917689433*^9, 
   3.8923509663784513`*^9}, {3.8923545094588337`*^9, 
   3.8923545370246983`*^9}, {3.892354648120572*^9, 3.892354788600972*^9}, {
   3.8923548441726847`*^9, 3.892354939333843*^9}, {3.89235496943668*^9, 
   3.8923549743285713`*^9}, {3.8923550387940063`*^9, 3.892355051272606*^9}, {
   3.8923626040397453`*^9, 3.8923626236048183`*^9}, {3.892362661899125*^9, 
   3.8923627468820066`*^9}, {3.892364777025753*^9, 3.892364784639537*^9}, {
   3.892391957475799*^9, 3.8923919751672163`*^9}, {3.892443524285372*^9, 
   3.8924435348927813`*^9}, {3.8924662005904818`*^9, 
   3.8924662394346533`*^9}, {3.8924669468391743`*^9, 3.892466952124249*^9}, {
   3.8924774106106253`*^9, 3.892477484680212*^9}, {3.8924806647429447`*^9, 
   3.8924806939023542`*^9}, {3.892481089155334*^9, 3.892481179762353*^9}, {
   3.892481214860066*^9, 3.892481219045372*^9}, {3.8983174036092653`*^9, 
   3.898317405784706*^9}, {3.8983188195778685`*^9, 3.89831882042703*^9}, {
   3.8983356211778812`*^9, 3.898335624204337*^9}, {3.8983451146027126`*^9, 
   3.8983451184855995`*^9}, 3.8983654699438114`*^9, {3.8989636468924007`*^9, 
   3.8989636565474606`*^9}, {3.8990180396428266`*^9, 
   3.8990182765386147`*^9}, {3.899018307817545*^9, 3.8990183389462147`*^9}, {
   3.8990183793894577`*^9, 3.8990185722332897`*^9}, {3.899018870305994*^9, 
   3.899018876702995*^9}, {3.8990189112241983`*^9, 3.899018916029274*^9}, {
   3.899027835358773*^9, 3.8990278494739237`*^9}, {3.8992653411658335`*^9, 
   3.899265342412073*^9}, 3.899386578021512*^9, {3.9112944365792155`*^9, 
   3.9112944525998974`*^9}, {3.91139762710572*^9, 3.9113978660185013`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"a30b07db-f277-43d7-b782-a22b0426c1d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Apply Configuration, Load Libraries, Set up Network and Communication\
\>", "Subsection",
 CellChangeTimes->{{3.8866069350802546`*^9, 
  3.8866069794922123`*^9}},ExpressionUUID->"b820f5aa-2cd3-4921-a55b-\
4d3edcce46b8"],

Cell["Re-evaluate after changes to configuration", "Text",
 CellChangeTimes->{{3.886606989391242*^9, 3.8866069976059265`*^9}, {
  3.8866073815501127`*^9, 
  3.8866073936791477`*^9}},ExpressionUUID->"5ff75e3e-08fa-458c-9694-\
d82d731e8f62"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Check", " ", "Configuration"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{"fiatShamirSingleKernel", ",", "\n", "\t", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{"interactive", ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<fiatShamirSingleKernel only works with Fiat-Shamir activated, \
but it is not. Forcing it.\>\"", "]"}], ";", "\n", "\t\t", 
          RowBox[{"interactive", " ", "=", " ", "False"}], ";"}]}], "\n", 
        "\t", "]"}], ";"}]}], "\n", "]"}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Trapdoor", " ", "function"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{"useElGamal", ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Load", " ", "ElGamal", " ", "library"}], "*)"}], 
      "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Looking for SchnorrPrimes library: \>\"", "<>", 
         RowBox[{"TextString", "[", 
          RowBox[{"FindFile", "[", "\"\<SchnorrPrimes`\>\"", "]"}], "]"}]}], 
        "]"}], ";", "\[IndentingNewLine]", "\t", 
       RowBox[{"Needs", "[", "\"\<SchnorrPrimes`\>\"", "]"}]}], ",", "\n", 
      RowBox[{"(*", "Else", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Load", " ", "EC", " ", "library"}], "*)"}], 
      "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Looking for elliptic curve library with overloaded + and * \
operators (ECOverloaded): \>\"", "<>", 
         RowBox[{"TextString", "[", 
          RowBox[{"FindFile", "[", "\"\<ECOverloaded`\>\"", "]"}], "]"}]}], 
        "]"}], ";", "\[IndentingNewLine]", "\t", 
       RowBox[{"Needs", "[", "\"\<ECOverloaded`\>\"", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Load", " ", "Sigma", " ", "Tools", " ", "library"}], "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Looking for Sigma Protocol Tools library (SigmaTools): \>\"", "<>", 
      
      RowBox[{"TextString", "[", 
       RowBox[{"FindFile", "[", "\"\<SigmaTools`\>\"", "]"}], "]"}]}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Needs", "[", "\"\<SigmaTools`\>\"", "]"}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Fiat", "-", "Shamir"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{"interactive", ",", "\n", "\t", 
      RowBox[{
       RowBox[{
       "semanticsOfRandomChallenge", " ", "=", " ", 
        "\"\<Random Challenge\>\""}], ";", "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{
          "Default", " ", "setting", " ", "is", " ", "no", " ", "Fiat"}], "-", 
          RowBox[{"Shamir", " ", "transform"}]}], ";", " ", 
         RowBox[{"just", " ", "to", " ", "be", " ", "explicit"}]}], "*)"}], 
       "\n", "\t", 
       RowBox[{"DisableFiatShamir", "[", "]"}], ";"}], "\n", 
      RowBox[{"(*", "Else", "*)"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{
       "semanticsOfRandomChallenge", " ", "=", " ", 
        "\"\<Fiat-Shamir transform\\nof Random Challenge\>\""}], ";", "\n", 
       "\t", 
       RowBox[{"EnableFiatShamir", "[", "]"}], ";", "\[IndentingNewLine]", 
       "\t", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Looking for Fiat-Shamir library (FiatShamir): \>\"", "<>", 
         RowBox[{"TextString", "[", 
          RowBox[{"FindFile", "[", "\"\<FiatShamir`\>\"", "]"}], "]"}]}], 
        "]"}], ";", "\[IndentingNewLine]", "\t", 
       RowBox[{"Needs", "[", "\"\<FiatShamir`\>\"", "]"}], ";", "\n", "\t", 
       RowBox[{
       "Print", "[", 
        "\"\<Non-interactive mode. Using Fiat-Shamir heuristic.\>\"", "]"}], 
       ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Success", "/", "failure"}], " ", "creating", " ", "proof"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"ProofFinished", "[", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Print", "[", "\"\<Creating proof finished.\>\"", "]"}], 
       ";"}]}], "\n", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Error", "[", 
     RowBox[{"reason_", ":", "\"\<\>\""}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"reason", "==", "\"\<\>\""}], ",", "\"\<Error.\>\"", ",", 
          RowBox[{"\"\<Error: \>\"", "<>", "reason"}]}], "]"}], "]"}], ";", 
       "\n", "\t", 
       RowBox[{"FrontEndTokenExecute", "[", "\"\<EvaluatorAbort\>\"", "]"}], 
       ";"}]}], "\n", "]"}]}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Random", " ", "Number", " ", "Generator"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetRNGMethod", "[", "rngMethod", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SetFixedRandomSeeds", "[", "False", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SeedRandom", "[", 
     RowBox[{"Method", "->", "rngMethod"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetStateMachineVerbosity", "[", "stateMachineVerbosity", "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetFiatShamirVerbosity", "[", "fiatShamirVerbosity", "]"}], 
    ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Communication", " ", "setup"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetMyRole", "[", "\"\<Prover\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SetMyId", "[", "myId", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SetRoom", "[", "room", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SetInspection", "[", "inspectionEnabled", "]"}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Network", ":", " ", 
     RowBox[{"set", " ", "up", " ", "connection", " ", "to", " ", 
      RowBox[{"router", " ", "/", " ", "force"}], " ", "authorization", " ", 
      "but", " ", "not", " ", "reconnection"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"router", " ", "=", " ", 
     RowBox[{"ConnectToRouter", "[", 
      RowBox[{"routerConfig", ",", "False", ",", "True"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Network", ":", " ", 
     RowBox[{"join", " ", "room"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"roomConfig", " ", "=", " ", 
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"\"\<password\>\"", "->", "roomPassword"}], ",", "\n", "\t", 
       RowBox[{"\"\<ownership_type\>\"", "->", "\"\<creator\>\""}], ",", "\n",
        "\t", 
       RowBox[{"\"\<create_if_non_existing\>\"", "->", "True"}], ",", "\n", 
       "\t", 
       RowBox[{"\"\<external_keys\>\"", "->", 
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
         "\"\<_verification_result_\>\"", ",", "\n", "\t\t", 
          "\"\<_inspection_request_\>\"", ",", "\n", "\t\t", 
          "\"\<_inspection_result_\>\""}], "\n", "\t", "}"}]}]}], "\n", 
      "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{"interactive", ",", "\n", "\t", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"roomConfig", ",", " ", 
         RowBox[{"\"\<ids_allowed\>\"", "->", 
          RowBox[{"{", "interactiveVerifierId", "}"}]}]}], "]"}], ";", "\n", 
       "\t", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"roomConfig", ",", " ", 
         RowBox[{"\"\<role_restrictions\>\"", "->", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"myId", "->", "\"\<Prover\>\""}], ",", " ", 
            RowBox[{
            "interactiveVerifierId", "->", "\"\<InteractiveVerifier\>\""}]}], 
           "}"}]}]}], "]"}], ";"}], "\t", "\n", 
      RowBox[{"(*", 
       RowBox[{"Else", ":", " ", 
        RowBox[{"Fiat", "-", "Shamir"}]}], "*)"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"roomConfig", ",", " ", 
         RowBox[{"\"\<role_restrictions\>\"", "->", 
          RowBox[{"{", 
           RowBox[{"myId", "->", "\"\<Prover\>\""}], "}"}]}]}], "]"}], 
       ";"}]}], "\n", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"StateMachineClear", "[", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"roomInfo", " ", "=", " ", 
     RowBox[{"JoinRoomAndWaitUntilComplete", "[", "roomConfig", "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"memberIds", " ", "=", " ", 
     RowBox[{"roomInfo", "[", "\"\<members\>\"", "]"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Verify", " ", "room", " ", "and", " ", "members"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{"interactive", ",", "\n", "\t", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "memberIds", "]"}], "!=", "2"}], ",", "\n", 
         "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Assertion failure: Expecting two members in room '\>\"", "<>", 
           "room", "<>", "\"\<' but members are \>\"", "<>", 
           RowBox[{"ToString", "[", "memberIds", "]"}]}], "]"}], ",", "\n", 
         "\t", 
         RowBox[{"(*", 
          RowBox[{"Else", " ", "If"}], "*)"}], "\n", "\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"!", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"memberIds", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "==", "myId"}], " ", "&&", 
               " ", 
               RowBox[{
                RowBox[{"memberIds", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "==", 
                "interactiveVerifierId"}]}], ")"}]}], " ", "&&", " ", 
            RowBox[{"!", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"memberIds", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "==", 
                "interactiveVerifierId"}], " ", "&&", " ", 
               RowBox[{
                RowBox[{"memberIds", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "==", "myId"}]}], ")"}]}]}], 
           ",", "\n", "\t\t", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Assertion failure: Expecting to be member of room '\>\"", "<>",
              "room", "<>", "\"\<' but members are \>\"", "<>", 
             RowBox[{"ToString", "[", "memberIds", "]"}]}], "]"}]}], "\n", 
          "\t", "]"}]}], "]"}], ";"}], "\n", 
      RowBox[{"(*", 
       RowBox[{"Else", ":", " ", 
        RowBox[{"Fiat", "-", "Shamir"}]}], "*)"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "memberIds", "]"}], "!=", "1"}], "||", 
          RowBox[{
           RowBox[{"memberIds", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "!=", "myId"}]}], ",", "\n", 
         "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Assertion failure: Expecting to be the only member in room '\>\
\"", "<>", "room", "<>", "\"\<' but: \>\"", "<>", 
           RowBox[{"ToString", "[", "memberIds", "]"}]}], "]"}]}], "\n", "\t",
         "]"}], ";"}]}], "\n", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"StateMachineSave", "[", "\"\<Init\>\"", "]"}], ";"}]}]}]], "Code",\

 CellChangeTimes->{{3.88212601182014*^9, 3.882126105437923*^9}, {
   3.882126157386588*^9, 3.8821262881927834`*^9}, {3.882126347034425*^9, 
   3.8821264131165047`*^9}, {3.882126444112059*^9, 3.88212651495254*^9}, {
   3.882126562810522*^9, 3.882126675292706*^9}, {3.8821267290386257`*^9, 
   3.882126819147428*^9}, {3.882126947730332*^9, 3.882127010581114*^9}, {
   3.882127040826435*^9, 3.882127057605983*^9}, {3.882127094040963*^9, 
   3.8821271016343327`*^9}, {3.8821272281874533`*^9, 3.88212725584726*^9}, {
   3.8821273345477467`*^9, 3.8821277273460207`*^9}, {3.882127804152906*^9, 
   3.882127955971611*^9}, {3.882127996573687*^9, 3.8821280294834843`*^9}, {
   3.882128064190221*^9, 3.882128500497726*^9}, {3.8821285458515997`*^9, 
   3.882128551121953*^9}, {3.882128645119608*^9, 3.882128697756805*^9}, {
   3.882128769795108*^9, 3.882128905724498*^9}, {3.882128940563304*^9, 
   3.882128961288136*^9}, {3.882128998404777*^9, 3.882129334727005*^9}, {
   3.882129383041806*^9, 3.882129388267255*^9}, {3.8821294575951157`*^9, 
   3.8821296685807247`*^9}, {3.882129707929736*^9, 3.88212971400136*^9}, {
   3.8821298003342123`*^9, 3.882129804360395*^9}, {3.882129851264415*^9, 
   3.882129878662881*^9}, {3.882129913806769*^9, 3.882129916183968*^9}, {
   3.882129961387993*^9, 3.882129963501919*^9}, {3.882129998273814*^9, 
   3.882130014967355*^9}, {3.882130050059778*^9, 3.88213018288277*^9}, {
   3.8821302243218117`*^9, 3.8821302342603073`*^9}, {3.882130289200131*^9, 
   3.882130334694265*^9}, {3.8821304327092857`*^9, 3.8821309157371197`*^9}, {
   3.88213106030072*^9, 3.882131078862301*^9}, {3.882131943756884*^9, 
   3.882131994432254*^9}, {3.882132687376068*^9, 3.882132704169653*^9}, {
   3.882132772122848*^9, 3.882132801348428*^9}, {3.882132834644919*^9, 
   3.88213292892269*^9}, {3.882132960827092*^9, 3.8821331366154757`*^9}, {
   3.882133167317733*^9, 3.882133176348699*^9}, {3.882133211890716*^9, 
   3.8821334786210938`*^9}, {3.882133669319498*^9, 3.882133682642777*^9}, {
   3.882133728801046*^9, 3.8821337859984493`*^9}, {3.882133912459515*^9, 
   3.8821340073172293`*^9}, {3.882134045139497*^9, 3.882134050432169*^9}, {
   3.882134082761634*^9, 3.88213414806208*^9}, {3.882134182987084*^9, 
   3.882134349038516*^9}, {3.882134399709898*^9, 3.88213462278892*^9}, {
   3.882134657003234*^9, 3.8821347375948*^9}, {3.882134838699885*^9, 
   3.882134840162394*^9}, {3.882134891229196*^9, 3.882134919664143*^9}, {
   3.88213513519214*^9, 3.882135177442281*^9}, {3.8821352293551807`*^9, 
   3.8821352647448874`*^9}, {3.882135301985763*^9, 3.88213530963519*^9}, {
   3.882135347440674*^9, 3.882135855423963*^9}, {3.8821359902787237`*^9, 
   3.8821365902631702`*^9}, {3.882136625983577*^9, 3.8821366744417257`*^9}, {
   3.8821367205193443`*^9, 3.8821367462664967`*^9}, {3.8821367930365963`*^9, 
   3.8821368440809517`*^9}, {3.882136948002544*^9, 3.882137045156837*^9}, {
   3.882137079350708*^9, 3.882137103427137*^9}, {3.88213725273446*^9, 
   3.882137267955884*^9}, {3.8821373140744257`*^9, 3.882137376051867*^9}, {
   3.88213740685463*^9, 3.8821374734788933`*^9}, {3.882137523354168*^9, 
   3.8821376216534767`*^9}, {3.882137655452276*^9, 3.882137709504652*^9}, {
   3.882137775585711*^9, 3.882137795352852*^9}, {3.882137829792243*^9, 
   3.882137845806089*^9}, {3.8821378843051147`*^9, 3.882138050976985*^9}, {
   3.882138120220517*^9, 3.882138225573895*^9}, {3.882138303173203*^9, 
   3.882138306583927*^9}, {3.882138360150798*^9, 3.8821384599145184`*^9}, {
   3.882139005002782*^9, 3.882139011965911*^9}, {3.882139294660211*^9, 
   3.8821393492309637`*^9}, {3.8821393940802402`*^9, 3.882139396282548*^9}, {
   3.88213946757045*^9, 3.882139522047206*^9}, {3.882139571507119*^9, 
   3.8821396131848307`*^9}, {3.882139838397388*^9, 3.882139864389881*^9}, 
   3.882139894900915*^9, {3.882140055690908*^9, 3.8821400659250917`*^9}, {
   3.882140147483499*^9, 3.8821402017157383`*^9}, {3.8821402375914173`*^9, 
   3.882140270852751*^9}, {3.882140326525936*^9, 3.882140343496992*^9}, {
   3.8821404691451178`*^9, 3.8821405173388987`*^9}, {3.882140550235352*^9, 
   3.882140575568034*^9}, 3.882192065123015*^9, {3.882193500836578*^9, 
   3.882193505309998*^9}, {3.88219408981535*^9, 3.882194095053145*^9}, {
   3.882194128590591*^9, 3.8821941364948797`*^9}, {3.882194217053501*^9, 
   3.8821942781384983`*^9}, {3.88219431870242*^9, 3.882194356130012*^9}, {
   3.882194512523588*^9, 3.8821946504298763`*^9}, {3.882194713373938*^9, 
   3.882194749056649*^9}, {3.882194788145919*^9, 3.8821947941284037`*^9}, {
   3.882194863614307*^9, 3.882194897791012*^9}, {3.882194937799952*^9, 
   3.8821949831747713`*^9}, {3.88219518989085*^9, 3.882195232556176*^9}, {
   3.882195264927945*^9, 3.882195305030101*^9}, {3.882195473977054*^9, 
   3.882195588740888*^9}, {3.882196298735532*^9, 3.882196388601799*^9}, {
   3.882196575164035*^9, 3.882196663090411*^9}, {3.882196753131729*^9, 
   3.882196864038718*^9}, {3.882196895186059*^9, 3.8821969732970343`*^9}, {
   3.882197005384575*^9, 3.882197014065464*^9}, {3.882197222379483*^9, 
   3.882197279956543*^9}, {3.882197321073032*^9, 3.88219734545315*^9}, {
   3.882197405250618*^9, 3.882197406625124*^9}, 3.882197441284197*^9, {
   3.882197476183638*^9, 3.8821974796858673`*^9}, {3.882197524958724*^9, 
   3.882197613332275*^9}, {3.882197653683772*^9, 3.882197655571095*^9}, {
   3.882197757713047*^9, 3.882197909499144*^9}, {3.882197974394305*^9, 
   3.882198093077166*^9}, {3.882198153477728*^9, 3.8821983767566338`*^9}, {
   3.882198423858922*^9, 3.8821984436240387`*^9}, {3.882198483389039*^9, 
   3.882198490776629*^9}, {3.882198573091659*^9, 3.8821987458584146`*^9}, {
   3.882198777077024*^9, 3.882198915480092*^9}, {3.882198974672318*^9, 
   3.8821990383767157`*^9}, {3.882199121623045*^9, 3.882199146129395*^9}, {
   3.8821991791272297`*^9, 3.8821992083389883`*^9}, {3.882199357608898*^9, 
   3.882199482581058*^9}, {3.882199548910131*^9, 3.882199569238881*^9}, {
   3.8821997303771133`*^9, 3.882199753490342*^9}, {3.8821999072697268`*^9, 
   3.882199914978574*^9}, {3.882200035150516*^9, 3.882200036674315*^9}, {
   3.8822001062569437`*^9, 3.882200110675108*^9}, {3.882200299615374*^9, 
   3.882200450429554*^9}, {3.8822004851259117`*^9, 3.882200521488659*^9}, {
   3.882200552873735*^9, 3.882200568833187*^9}, {3.882200599951137*^9, 
   3.882200724186326*^9}, {3.882200960450082*^9, 3.882200975507918*^9}, {
   3.8822010589071617`*^9, 3.882201061279714*^9}, {3.882201264763714*^9, 
   3.882201270802184*^9}, {3.882201449713717*^9, 3.882201573407618*^9}, {
   3.8822016379086523`*^9, 3.8822016604078503`*^9}, {3.882201707386568*^9, 
   3.882201750424069*^9}, {3.882201788236005*^9, 3.882201856949258*^9}, {
   3.88220190270993*^9, 3.882201910190909*^9}, {3.882202009342135*^9, 
   3.882202100471319*^9}, {3.882202143186777*^9, 3.882202170659362*^9}, {
   3.882202281161335*^9, 3.882202311202969*^9}, {3.882202350832992*^9, 
   3.882202503318931*^9}, {3.8822025493681726`*^9, 3.8822026842451363`*^9}, 
   3.882202809313452*^9, {3.882202966285385*^9, 3.88220310284501*^9}, {
   3.8822031373788013`*^9, 3.8822031669743032`*^9}, {3.882203653571155*^9, 
   3.882203798306149*^9}, {3.882203841062583*^9, 3.882203935481428*^9}, {
   3.882203995085587*^9, 3.88220417276462*^9}, {3.882204221448368*^9, 
   3.882204271944983*^9}, {3.882204330885243*^9, 3.8822043812111063`*^9}, {
   3.8822044665109797`*^9, 3.882204535570982*^9}, {3.8822045787320843`*^9, 
   3.8822045928988237`*^9}, {3.882204626653207*^9, 3.8822046278348503`*^9}, {
   3.882204692316037*^9, 3.882204736759535*^9}, {3.882204770043853*^9, 
   3.882204792252318*^9}, {3.882204833234228*^9, 3.882204835599333*^9}, {
   3.882204866617132*^9, 3.882204892534419*^9}, {3.882204993032811*^9, 
   3.882205064456547*^9}, {3.8822051470975447`*^9, 3.882205319885234*^9}, {
   3.8822054657452106`*^9, 3.88220550148939*^9}, {3.882205604795354*^9, 
   3.8822057442630167`*^9}, {3.88220588235357*^9, 3.882205945903767*^9}, {
   3.882206097780099*^9, 3.8822061598611307`*^9}, {3.882206216582226*^9, 
   3.882206283418428*^9}, {3.882206335611457*^9, 3.882206438347677*^9}, {
   3.8822064820853024`*^9, 3.882206649696603*^9}, {3.88220704257137*^9, 
   3.882207052469508*^9}, {3.8822071885645857`*^9, 3.8822071902655163`*^9}, {
   3.882207304099574*^9, 3.8822073186915417`*^9}, {3.882207394162148*^9, 
   3.882207432256916*^9}, {3.882207558318184*^9, 3.882207583102152*^9}, {
   3.882207629293126*^9, 3.8822076426471157`*^9}, {3.882208320929102*^9, 
   3.882208321796633*^9}, {3.882208413418886*^9, 3.8822084762528343`*^9}, {
   3.8822085528081303`*^9, 3.882208649565406*^9}, {3.882208808114996*^9, 
   3.8822088269163637`*^9}, {3.8822088840489893`*^9, 3.88220891203957*^9}, {
   3.882209027857005*^9, 3.8822090737269077`*^9}, {3.882209216838233*^9, 
   3.8822092814669113`*^9}, {3.882209341628975*^9, 3.8822093429322357`*^9}, {
   3.882209401877328*^9, 3.882209402436228*^9}, {3.8822095102964993`*^9, 
   3.88220951123901*^9}, {3.8822939301095943`*^9, 3.882293940456396*^9}, {
   3.8822940887207317`*^9, 3.882294129870932*^9}, {3.8822941779519787`*^9, 
   3.88229430343824*^9}, {3.882302234265407*^9, 3.882302264180707*^9}, {
   3.882302301201641*^9, 3.882302423234139*^9}, {3.882302466109255*^9, 
   3.8823024681858797`*^9}, {3.882302514123599*^9, 3.8823027779943533`*^9}, {
   3.8823028198289337`*^9, 3.882302821870695*^9}, {3.882302901556707*^9, 
   3.882303340344048*^9}, 3.882303634893717*^9, {3.8823036814048433`*^9, 
   3.882303698624256*^9}, {3.8823038886089163`*^9, 3.882303930384218*^9}, {
   3.882303968782867*^9, 3.882304025580078*^9}, {3.882304056098542*^9, 
   3.882304116972925*^9}, {3.8823042631793537`*^9, 3.882304271682087*^9}, {
   3.882304394979478*^9, 3.8823045285112753`*^9}, {3.8823045840537863`*^9, 
   3.8823046629241867`*^9}, {3.882304698811737*^9, 3.882304804712007*^9}, {
   3.8823048941072197`*^9, 3.882304957614531*^9}, {3.88230503651202*^9, 
   3.882305081427507*^9}, {3.882305135290264*^9, 3.882305180868849*^9}, {
   3.882305247740623*^9, 3.882305338739213*^9}, {3.882305469575721*^9, 
   3.882305548277141*^9}, {3.882305610510664*^9, 3.882305691044917*^9}, {
   3.882305752701919*^9, 3.882305830895217*^9}, {3.882305870296335*^9, 
   3.882305870992592*^9}, {3.8823061484074097`*^9, 3.882306196655452*^9}, {
   3.882306458035907*^9, 3.882306459775858*^9}, {3.882306752562751*^9, 
   3.882306826260364*^9}, {3.8823076230993357`*^9, 3.882307623618671*^9}, {
   3.882310864619494*^9, 3.882310969421712*^9}, {3.8823110090270844`*^9, 
   3.8823110943717537`*^9}, 3.8823111532314157`*^9, {3.88231140336876*^9, 
   3.88231140590866*^9}, 3.8823115322920303`*^9, {3.882311943154574*^9, 
   3.882311943626403*^9}, {3.882864986123872*^9, 3.882865078513582*^9}, {
   3.8828651379624453`*^9, 3.882865186090396*^9}, {3.8828652361198673`*^9, 
   3.88286539566438*^9}, {3.882865446621125*^9, 3.882865583023419*^9}, {
   3.882865974741119*^9, 3.882865980128611*^9}, {3.882867135014968*^9, 
   3.882867255469198*^9}, {3.882867289895159*^9, 3.8828674960602427`*^9}, {
   3.882867534588509*^9, 3.882867577131681*^9}, {3.8828678735837927`*^9, 
   3.882867899872834*^9}, {3.882867992464081*^9, 3.882868037005001*^9}, {
   3.8828681215749397`*^9, 3.882868122689673*^9}, {3.882870313564369*^9, 
   3.882870342233037*^9}, {3.882874266130307*^9, 3.8828743153057003`*^9}, {
   3.882874413510981*^9, 3.882874451592154*^9}, 3.882874521870805*^9, {
   3.882874552837023*^9, 3.8828745543549843`*^9}, {3.882878942128955*^9, 
   3.882878948113559*^9}, 3.8828795593520412`*^9, {3.882879858881559*^9, 
   3.882879865848649*^9}, {3.882879933877288*^9, 3.882879937222159*^9}, {
   3.882882277421981*^9, 3.882882278044063*^9}, {3.8828823671724653`*^9, 
   3.882882392557036*^9}, {3.882882554096324*^9, 3.88288276441249*^9}, {
   3.8828964623062477`*^9, 3.882896538691099*^9}, {3.8829004226218367`*^9, 
   3.882900608510894*^9}, {3.882900649422249*^9, 3.8829006627787457`*^9}, {
   3.882900900785762*^9, 3.88290092268601*^9}, {3.8829009704674177`*^9, 
   3.882901042995089*^9}, {3.882901074519484*^9, 3.88290109723498*^9}, {
   3.8829016891264477`*^9, 3.8829017293862886`*^9}, {3.8829062551566553`*^9, 
   3.88290631471598*^9}, {3.882906384817659*^9, 3.882906385185564*^9}, {
   3.882906415594201*^9, 3.882906502308071*^9}, {3.88290680151367*^9, 
   3.882906842710217*^9}, {3.882906894100046*^9, 3.88290689996935*^9}, {
   3.882942453681546*^9, 3.8829424550223846`*^9}, {3.882942502922147*^9, 
   3.8829425074144697`*^9}, {3.882942671068015*^9, 3.8829427063136806`*^9}, {
   3.882943108547531*^9, 3.882943162026833*^9}, {3.882943488105715*^9, 
   3.8829434892447166`*^9}, {3.8829435938996067`*^9, 3.882943599827635*^9}, {
   3.882943703523067*^9, 3.8829437067179317`*^9}, {3.8829441369593277`*^9, 
   3.88294413903617*^9}, {3.88294458854007*^9, 3.882944643907242*^9}, {
   3.882944682231247*^9, 3.8829447191615343`*^9}, {3.882944759406115*^9, 
   3.882944778559452*^9}, {3.882944821613906*^9, 3.882944824701622*^9}, {
   3.882944869960108*^9, 3.882944870568211*^9}, {3.882944913640233*^9, 
   3.8829449337960243`*^9}, {3.88294496541028*^9, 3.8829450018685303`*^9}, {
   3.882945136263919*^9, 3.882945153366569*^9}, {3.882945223075424*^9, 
   3.8829452489867907`*^9}, {3.8829458141999807`*^9, 3.882945821502015*^9}, {
   3.882945856935864*^9, 3.882945860233379*^9}, {3.8829460473736753`*^9, 
   3.882946061644417*^9}, {3.88294612816616*^9, 3.882946162320449*^9}, {
   3.882946208702407*^9, 3.882946211394226*^9}, {3.88294637600455*^9, 
   3.882946378828423*^9}, {3.882946468075954*^9, 3.882946588966381*^9}, {
   3.882946695555875*^9, 3.88294669580651*^9}, {3.88294680799236*^9, 
   3.882946843009355*^9}, {3.8829469736644278`*^9, 3.882947015818452*^9}, {
   3.882947058328341*^9, 3.882947088124559*^9}, {3.88294713082271*^9, 
   3.882947179261712*^9}, {3.8829472203826113`*^9, 3.8829472205983543`*^9}, {
   3.8829472709193983`*^9, 3.882947271196293*^9}, {3.882947321251504*^9, 
   3.88294739535238*^9}, {3.8829476371541243`*^9, 3.882947637649259*^9}, {
   3.8829476825471087`*^9, 3.882947703885395*^9}, {3.8829477648426037`*^9, 
   3.882947783728129*^9}, {3.882955499104641*^9, 3.882955517807884*^9}, {
   3.882955554593136*^9, 3.882955571290371*^9}, {3.882955612530549*^9, 
   3.8829556138912077`*^9}, {3.883110955821121*^9, 3.8831109564661207`*^9}, {
   3.8831110476850653`*^9, 3.883111103976694*^9}, {3.883111158247613*^9, 
   3.88311118260196*^9}, {3.883111965203745*^9, 3.8831119813786488`*^9}, {
   3.883112016733529*^9, 3.883112048885002*^9}, {3.883112096512888*^9, 
   3.883112115821801*^9}, {3.883113317950807*^9, 3.883113318463978*^9}, {
   3.883130245260641*^9, 3.883130246337219*^9}, {3.8831302794797497`*^9, 
   3.883130280229643*^9}, {3.883215375766326*^9, 3.883215432104066*^9}, {
   3.883215525732005*^9, 3.883215540217671*^9}, 3.883215987825412*^9, {
   3.8832160180208693`*^9, 3.883216022573801*^9}, {3.8832167529158497`*^9, 
   3.883216792835772*^9}, {3.883216851062965*^9, 3.8832168623336554`*^9}, {
   3.883216962829612*^9, 3.8832170262787046`*^9}, {3.883217071578517*^9, 
   3.883217095829359*^9}, {3.8832171558741293`*^9, 3.88321727418123*^9}, 
   3.883217306120483*^9, {3.883217348739843*^9, 3.883217355858337*^9}, {
   3.883217708912484*^9, 3.883217717350724*^9}, {3.883217785845793*^9, 
   3.883217810995219*^9}, {3.883217848393321*^9, 3.883217859576701*^9}, {
   3.88321822755695*^9, 3.883218231706702*^9}, {3.883218615633432*^9, 
   3.883218644550345*^9}, 3.883218682015644*^9, {3.883219510163458*^9, 
   3.8832195808348713`*^9}, {3.88321963111088*^9, 3.883219640763465*^9}, {
   3.8832196750041313`*^9, 3.883219743115588*^9}, {3.883219834847186*^9, 
   3.883219874214806*^9}, {3.883219951489428*^9, 3.8832199747212677`*^9}, {
   3.883220580259325*^9, 3.8832205940721397`*^9}, {3.8832212669371357`*^9, 
   3.8832212992702103`*^9}, {3.883221361986732*^9, 3.88322136561032*^9}, {
   3.8832214072304163`*^9, 3.883221419056223*^9}, {3.88322165415557*^9, 
   3.883221674443137*^9}, {3.8832231423347197`*^9, 3.883223195187886*^9}, {
   3.883223410915251*^9, 3.8832234676195993`*^9}, {3.883223678341629*^9, 
   3.883223714687978*^9}, {3.883224464669283*^9, 3.8832244787186813`*^9}, {
   3.883518426706668*^9, 3.883518428907373*^9}, {3.8837114866561337`*^9, 
   3.883711486794688*^9}, {3.884325766765847*^9, 3.884325787960181*^9}, {
   3.884326170919656*^9, 3.884326206675783*^9}, {3.884334305996975*^9, 
   3.884334306113091*^9}, {3.884337117985983*^9, 3.884337120080048*^9}, {
   3.884349434793581*^9, 3.884349440115451*^9}, {3.8843543313107967`*^9, 
   3.884354460944227*^9}, {3.884354492240139*^9, 3.884354560962772*^9}, {
   3.884354617057119*^9, 3.884354660940299*^9}, {3.8843547836272087`*^9, 
   3.884354862718178*^9}, {3.884355281097105*^9, 3.884355559080484*^9}, {
   3.8843560274974937`*^9, 3.884356046625526*^9}, {3.884356187725457*^9, 
   3.88435623124398*^9}, {3.8843568069466352`*^9, 3.884356807633396*^9}, {
   3.88437086388111*^9, 3.884370873634098*^9}, {3.884751559215351*^9, 
   3.8847515904632483`*^9}, {3.884751636704077*^9, 3.884751637118*^9}, {
   3.884757529696103*^9, 3.88475758699446*^9}, 3.884757908922917*^9, {
   3.8847579500578547`*^9, 3.8847579567030373`*^9}, {3.884758001096903*^9, 
   3.884758021612504*^9}, {3.884758056743779*^9, 3.884758114784061*^9}, {
   3.88475814895081*^9, 3.884758213204677*^9}, {3.884758397480998*^9, 
   3.8847583984177513`*^9}, {3.884758724792734*^9, 3.884758780066004*^9}, {
   3.884758816594995*^9, 3.884758837797365*^9}, {3.884758898919785*^9, 
   3.884758935564465*^9}, {3.884759067694767*^9, 3.8847590705302763`*^9}, {
   3.884759155753117*^9, 3.884759328529643*^9}, {3.884759408972823*^9, 
   3.884759456900456*^9}, {3.884759488621202*^9, 3.884759606323244*^9}, {
   3.884759642293477*^9, 3.8847596516981583`*^9}, {3.8847596968498373`*^9, 
   3.88475970656063*^9}, {3.884760266606277*^9, 3.884760267422029*^9}, {
   3.8847603033019323`*^9, 3.884760451510927*^9}, {3.884760571463957*^9, 
   3.8847605778661747`*^9}, 3.884760662075878*^9, {3.884760986152904*^9, 
   3.8847610251660147`*^9}, {3.884761748573448*^9, 3.884761749006441*^9}, {
   3.884762005953299*^9, 3.88476201552518*^9}, {3.884763502383265*^9, 
   3.884763504927693*^9}, {3.884764606241398*^9, 3.8847646079473057`*^9}, {
   3.884764963662471*^9, 3.8847651764310427`*^9}, {3.884765711760054*^9, 
   3.88476586311874*^9}, {3.8847659468446493`*^9, 3.884765952057642*^9}, 
   3.884766690192477*^9, {3.884767355694304*^9, 3.884767362858801*^9}, {
   3.8847683555244913`*^9, 3.884768359261862*^9}, {3.8847730987768383`*^9, 
   3.8847731171375628`*^9}, {3.884773157476495*^9, 3.88477317202851*^9}, {
   3.884773591124186*^9, 3.884773592517293*^9}, {3.884774737513031*^9, 
   3.8847747379653463`*^9}, {3.884775283252975*^9, 3.884775285754621*^9}, {
   3.884782211253525*^9, 3.8847822119784184`*^9}, {3.884782451841916*^9, 
   3.884782505034103*^9}, {3.884782552724081*^9, 3.884782581734644*^9}, {
   3.884782665732766*^9, 3.884782698219344*^9}, {3.884782740972144*^9, 
   3.8847827779990997`*^9}, 3.884786570868125*^9, {3.884787257526318*^9, 
   3.884787342149115*^9}, {3.884787442905712*^9, 3.884787499152505*^9}, {
   3.884787746684524*^9, 3.884787786917635*^9}, 3.884788006509672*^9, {
   3.884788447147853*^9, 3.88478853067138*^9}, {3.8866649805060825`*^9, 
   3.8866650074078627`*^9}, {3.8866650484139433`*^9, 
   3.8866653251208577`*^9}, {3.886665360892406*^9, 3.8866655844007115`*^9}, {
   3.8866656289890904`*^9, 3.8866657606815877`*^9}, {3.8866659937720404`*^9, 
   3.886665995843498*^9}, {3.886666600750123*^9, 3.886666604488654*^9}, {
   3.8866668029531946`*^9, 3.886666805708765*^9}, {3.8866668441138735`*^9, 
   3.886666845717355*^9}, {3.8866669240297318`*^9, 3.8866669244923053`*^9}, {
   3.88666703549228*^9, 3.886667035862856*^9}, {3.8866704708804646`*^9, 
   3.8866707402933755`*^9}, {3.8866716044560637`*^9, 3.886671605561165*^9}, {
   3.886736941118637*^9, 3.8867369416760044`*^9}, {3.886738241608637*^9, 
   3.8867384097136936`*^9}, {3.8867384659385777`*^9, 3.886738477350247*^9}, {
   3.886739337012309*^9, 3.886739337428998*^9}, {3.886744734157102*^9, 
   3.886744765706815*^9}, {3.8867576811988955`*^9, 3.8867577895281467`*^9}, {
   3.8867579391001387`*^9, 3.88675797684914*^9}, {3.8867794648755007`*^9, 
   3.8867795020189557`*^9}, {3.8867827789148827`*^9, 
   3.8867828031702795`*^9}, {3.88678283397612*^9, 3.8867829843838096`*^9}, {
   3.8867835474521227`*^9, 3.886783575809101*^9}, {3.887093309698722*^9, 
   3.887093331874807*^9}, 3.8870942277110395`*^9, {3.887094261848157*^9, 
   3.8870943471510725`*^9}, {3.887481118379671*^9, 3.8874811275062666`*^9}, {
   3.88748355768677*^9, 3.887483583322211*^9}, {3.887483613484377*^9, 
   3.887483692323841*^9}, {3.8874837578242297`*^9, 3.8874837584288745`*^9}, {
   3.8874838379843445`*^9, 3.8874838838875227`*^9}, {3.8874839188345814`*^9, 
   3.8874839519846783`*^9}, {3.887543763868945*^9, 3.8875437677765226`*^9}, {
   3.887543811766571*^9, 3.88754382110841*^9}, {3.887543873992002*^9, 
   3.887543908134627*^9}, {3.887544032059916*^9, 3.88754410637515*^9}, {
   3.8875457081729803`*^9, 3.8875457327904606`*^9}, {3.887547549082963*^9, 
   3.887547604183854*^9}, {3.887547654057844*^9, 3.8875477607310905`*^9}, {
   3.8875478138783007`*^9, 3.8875479510656548`*^9}, {3.8875479964139137`*^9, 
   3.8875479968043733`*^9}, {3.8875542589189715`*^9, 3.887554259210515*^9}, {
   3.8876154900110483`*^9, 3.887615565249605*^9}, {3.8876158942673807`*^9, 
   3.88761601586176*^9}, 3.8876161539280233`*^9, {3.8876182467408504`*^9, 
   3.88761826674658*^9}, {3.887632842126885*^9, 3.8876329035860543`*^9}, {
   3.887633352484932*^9, 3.8876335229864516`*^9}, {3.887633584016584*^9, 
   3.8876335888547907`*^9}, {3.8876336307316666`*^9, 
   3.8876336599877396`*^9}, {3.887633709675832*^9, 3.8876338623036833`*^9}, {
   3.8876339063752875`*^9, 3.8876339355633593`*^9}, {3.887633974081973*^9, 
   3.8876339755812817`*^9}, {3.887634048574617*^9, 3.8876341537855263`*^9}, {
   3.887635270823313*^9, 3.8876352773219376`*^9}, {3.8876357086317124`*^9, 
   3.887635711906308*^9}, {3.887641568047854*^9, 3.8876416102997417`*^9}, {
   3.88765123635963*^9, 3.8876512779207096`*^9}, {3.887655136895034*^9, 
   3.8876551398902693`*^9}, {3.8876551743027697`*^9, 
   3.8876551746889935`*^9}, {3.8896267491960096`*^9, 
   3.8896267574490733`*^9}, {3.8896283155165195`*^9, 
   3.8896283197895937`*^9}, {3.8896283900250044`*^9, 3.889628395930622*^9}, {
   3.889629062725456*^9, 3.8896290662801847`*^9}, {3.8896359100432844`*^9, 
   3.889635934196351*^9}, {3.889680069060739*^9, 3.889680069608519*^9}, {
   3.890888886272037*^9, 3.8908888871311207`*^9}, {3.891505586437831*^9, 
   3.8915056788997507`*^9}, {3.891506427492437*^9, 3.891506430954574*^9}, {
   3.891506553644834*^9, 3.891506637794095*^9}, {3.891507183330884*^9, 
   3.891507243847793*^9}, {3.8922786111185713`*^9, 3.892278666802075*^9}, {
   3.892352716349716*^9, 3.8923528412862177`*^9}, {3.892352902547859*^9, 
   3.892352952599545*^9}, {3.8923535058493767`*^9, 3.892353573528223*^9}, {
   3.892356631476688*^9, 3.892356669062305*^9}, {3.892356812969067*^9, 
   3.8923571011075563`*^9}, {3.8923572646014967`*^9, 3.892357273374907*^9}, {
   3.892357395448694*^9, 3.892357405534803*^9}, {3.892357435742529*^9, 
   3.8923574361465607`*^9}, {3.8923575533137093`*^9, 3.892357565225585*^9}, {
   3.892380999356989*^9, 3.892381138415247*^9}, {3.892381219105014*^9, 
   3.892381279545506*^9}, {3.892381458427868*^9, 3.892381475189123*^9}, {
   3.8983174614315414`*^9, 3.898317512836718*^9}, {3.898317574715042*^9, 
   3.8983175758148065`*^9}, {3.8983189828885117`*^9, 
   3.8983190770539427`*^9}, {3.898319191894853*^9, 3.8983192414208117`*^9}, 
   3.8983194035692415`*^9, {3.8983194459686155`*^9, 3.898319508914523*^9}, {
   3.898319790401252*^9, 3.8983198343125377`*^9}, {3.898320301460797*^9, 
   3.898320301796958*^9}, 3.898320340691826*^9, {3.898324748891458*^9, 
   3.8983247529330654`*^9}, {3.8983248163473854`*^9, 
   3.8983248205341325`*^9}, {3.898343120770117*^9, 3.8983431212232127`*^9}, {
   3.8983435020297203`*^9, 3.8983435026012077`*^9}, {3.8983449763597603`*^9, 
   3.8983449778257933`*^9}, 3.8983461372405014`*^9, {3.898347093749708*^9, 
   3.8983471001119556`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"57563dad-e424-45be-a527-b71718fddf77"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check Input Data", "Subsection",
 CellChangeTimes->{{3.892357155067923*^9, 3.892357165668367*^9}, {
   3.892365492385234*^9, 3.892365516215049*^9}, 3.898321092001639*^9, {
   3.899294894034916*^9, 
   3.8992948974013243`*^9}},ExpressionUUID->"cfca56cc-6f72-4191-b9ca-\
2b0f3fabb2ef"],

Cell["\<\
Performing some sanity checks on input data.
The size of the shuffle n is the length of the list of secret messages and \
has to match the sender and receiver lists which by them have to point to a \
valid index in the list of secret keys.\
\>", "Text",
 CellChangeTimes->{{3.8923571720703077`*^9, 3.892357172344945*^9}, {
  3.8923631755177*^9, 3.892363228198937*^9}, {3.892363978370638*^9, 
  3.892363978735927*^9}, {3.8923656964540157`*^9, 3.892365764395604*^9}, {
  3.8992949170260987`*^9, 
  3.89929502136032*^9}},ExpressionUUID->"c1e6e0ae-6d0d-4399-bc0a-\
fd047301aa8d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"inputError", " ", "=", " ", "\"\<\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"n", " ", "=", " ", 
   RowBox[{"Length", "[", "secretMessages", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"usersCount", " ", "=", " ", 
   RowBox[{"Length", "[", "secretKeys", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "senders", "]"}], " ", "!=", " ", "n"}], ",", " ", 
    RowBox[{
    "inputError", " ", "=", " ", 
     "\"\<Mismatch between number of secret messages and senders\>\""}]}], 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"MemberQ", "[", 
     RowBox[{"senders", ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"#", " ", "<=", " ", "0"}], " ", "||", " ", 
        RowBox[{"#", " ", ">", " ", "usersCount"}]}], " ", "&"}]}], "]"}], 
    ",", " ", 
    RowBox[{"inputError", " ", "=", " ", "\"\<Invalid sender index\>\""}]}], 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "receivers", "]"}], " ", "!=", " ", "n"}], ",", 
    " ", 
    RowBox[{
    "inputError", " ", "=", " ", 
     "\"\<Mismatch between number of secret messages and senders\>\""}]}], 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"MemberQ", "[", 
     RowBox[{"receivers", ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"#", " ", "<=", " ", "0"}], " ", "||", " ", 
        RowBox[{"#", " ", ">", " ", "usersCount"}]}], " ", "&"}]}], "]"}], 
    ",", " ", 
    RowBox[{"inputError", " ", "=", " ", "\"\<Invalid receiver index\>\""}]}],
    "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "names", "]"}], " ", "!=", " ", "usersCount"}], 
     ",", " ", 
     RowBox[{
     "inputError", " ", "=", " ", 
      "\"\<Mismatch between number of secret keys and user names\>\""}]}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Input Value\>\"", ",", "Bold"}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Value/Equality\>\"", ",", "Bold"}], "]"}]}], "}"}], 
        ",", "\[IndentingNewLine]", "\t", 
        RowBox[{"{", 
         RowBox[{"\"\<Input Valid?\>\"", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"inputError", "==", "\"\<\>\""}], ",", "\"\<Yes\>\"", ",", 
            RowBox[{"\"\<No: \>\"", "<>", "inputError"}]}], "]"}]}], "}"}], 
        ",", "\n", "\t", 
        RowBox[{"{", 
         RowBox[{"\"\<Size of Shuffle\>\"", ",", "n"}], "}"}], ",", "\n", 
        "\t", 
        RowBox[{"{", 
         RowBox[{"\"\<Secret Messages\>\"", ",", "secretMessages"}], "}"}], 
        ",", "\n", "\t", 
        RowBox[{"{", 
         RowBox[{"\"\<Number of Users\>\"", ",", "usersCount"}], "}"}], ",", 
        "\n", "\t", 
        RowBox[{"{", 
         RowBox[{"\"\<Secret Keys\>\"", ",", 
          RowBox[{"Thread", "[", 
           RowBox[{"names", "->", "secretKeys"}], "]"}]}], "}"}], ",", "\n", 
        "\t", 
        RowBox[{"{", 
         RowBox[{"\"\<Message Routes\>\"", ",", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"names", "[", 
             RowBox[{"[", "senders", "]"}], "]"}], "->", 
            RowBox[{"Thread", "[", 
             RowBox[{"secretMessages", "->", 
              RowBox[{"names", "[", 
               RowBox[{"[", "receivers", "]"}], "]"}]}], "]"}]}], "]"}]}], 
         "}"}]}], "\n", "}"}], ",", " ", 
      RowBox[{"Alignment", "->", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"Left", ",", "Left", ",", "Left", ",", "Left"}], "}"}], 
        "}"}]}], ",", 
      RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"inputError", " ", "!=", " ", "\"\<\>\""}], ",", " ", 
    RowBox[{"Error", "[", "inputError", "]"}]}], "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.8923571878717947`*^9, 3.892357200055768*^9}, {
   3.89236230124684*^9, 3.89236236547439*^9}, {3.8923624017205553`*^9, 
   3.892362442477952*^9}, {3.892362488188682*^9, 3.892362495666856*^9}, {
   3.892362814788315*^9, 3.89236286056986*^9}, {3.8923629188486643`*^9, 
   3.8923630071613197`*^9}, {3.892363123637072*^9, 3.892363157203899*^9}, {
   3.8923632465972643`*^9, 3.892363272205101*^9}, {3.8923635252986917`*^9, 
   3.89236353621837*^9}, {3.8923635991281424`*^9, 3.892363827436591*^9}, {
   3.892363858805607*^9, 3.8923638713633223`*^9}, {3.892363934360877*^9, 
   3.892364013129599*^9}, {3.892364055369052*^9, 3.892364090141733*^9}, {
   3.892364388138942*^9, 3.89236449647678*^9}, {3.892364603753725*^9, 
   3.892364636629084*^9}, {3.8923650044126587`*^9, 3.892365004817699*^9}, {
   3.8923655247821217`*^9, 3.892365639086693*^9}, 3.892365774147696*^9, {
   3.892385054319552*^9, 3.892385141591362*^9}, {3.89832096528087*^9, 
   3.89832100150231*^9}, {3.898321144931752*^9, 3.8983212281388583`*^9}, {
   3.899294383935631*^9, 3.8992946264083786`*^9}, {3.8992946632173266`*^9, 
   3.899294885301153*^9}, {3.899295046928265*^9, 3.899295299579447*^9}, {
   3.89929547444722*^9, 3.899295616467357*^9}, {3.8992957120920467`*^9, 
   3.899295796999548*^9}, {3.9112945322820845`*^9, 3.9112945582328115`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"3462765d-e2ca-42ef-bda9-ec128af90e8e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Trapdoor Function: El Gamal or Elliptic Curve", "Subsection",
 CellChangeTimes->{{3.8866083052324157`*^9, 
  3.886608345952487*^9}},ExpressionUUID->"b5eb663b-9d6a-457c-92ce-\
a76cf532593f"],

Cell["\<\
Set up crypto algorithm. The group parameters may be modified.\
\>", "Text",
 CellChangeTimes->{{3.886608364983677*^9, 3.8866084313278475`*^9}, {
  3.8965275407203093`*^9, 
  3.896527560177593*^9}},ExpressionUUID->"d34e9a49-9391-4172-acb7-\
38d173db3d49"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"StateMachineRestore", "[", "\"\<Init\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"GiveInsight", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<__clear_inspection__\>\"", "->", "True"}], "}"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"WaitForVariable", "[", 
   RowBox[{"\"\<__clear_inspection__\>\"", ",", "\"\<Inspector\>\""}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"setupParameters", " ", "=", " ", 
   RowBox[{"<|", "\n", "\t", 
    RowBox[{
     RowBox[{"\"\<room\>\"", "->", "room"}], ",", "\n", "\t", 
     RowBox[{"\"\<prover\>\"", "->", "myId"}], ",", "\n", "\t", 
     RowBox[{"\"\<interactive\>\"", "->", "interactive"}], ",", "\n", "\t", 
     RowBox[{"\"\<n\>\"", "->", "n"}]}], "\n", "|>"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{"interactive", ",", " ", 
    RowBox[{
     RowBox[{"setupParameters", "[", "\"\<verifier\>\"", "]"}], " ", "=", " ",
      "interactiveVerifierId"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{"useElGamal", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Use", " ", "Schnorr"}], "-", "Prime", "-", 
       RowBox[{
        RowBox[{"Generator", ".", "nb"}], " ", "to", " ", "generate", " ", 
        "your", " ", "own", " ", "Schnorr", " ", "Primes"}]}], "*)"}], "\n", 
     "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"setupParameters", "[", "\"\<encryption_method\>\"", "]"}], 
       " ", "=", " ", "\"\<ElGamal\>\""}], ";", "\n", "\t", 
      RowBox[{"cryptFunc", " ", "=", " ", 
       RowBox[{"cryptFuncs", "[", "\"\<ElGamal\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"Scan", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"setupParameters", "[", 
            RowBox[{"\"\<crypt_\>\"", "<>", "#"}], "]"}], " ", "=", " ", 
           RowBox[{"cryptFunc", "[", "#", "]"}]}], ")"}], "&"}], ",", "\n", 
        "\t\t", 
        RowBox[{"Keys", "[", "cryptFunc", "]"}]}], "\n", "\t", "]"}], ";", 
      "\n", "\t", 
      RowBox[{"p", " ", "=", " ", 
       RowBox[{"cryptFunc", "[", "\"\<p\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"h", " ", "=", " ", 
       RowBox[{"cryptFunc", "[", "\"\<h\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"g", " ", "=", " ", 
       RowBox[{"cryptFunc", "[", "\"\<g\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"q", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"p", " ", "-", " ", "1"}], ")"}], " ", "/", " ", "h"}]}], 
      ";", "\n", "\t", 
      RowBox[{"pBits", " ", "=", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"IntegerDigits", "[", 
         RowBox[{"p", ",", "2"}], "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"qBits", " ", "=", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"IntegerDigits", "[", 
         RowBox[{"q", ",", "2"}], "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"entropyParameters", " ", "=", " ", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<group\>\"", "->", "qBits"}], ",", 
         RowBox[{"\"\<scalar\>\"", "->", "qBits"}]}], "|>"}]}], ";", "\n", 
      "\t", 
      RowBox[{
       RowBox[{"setupParameters", "[", "\"\<entropy_parameters\>\"", "]"}], 
       " ", "=", " ", "entropyParameters"}], ";", "\n", "\t", 
      RowBox[{"securityParameters", " ", "=", " ", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<group\>\"", "->", "pBits"}], ",", 
         RowBox[{"\"\<scalar\>\"", "->", "qBits"}]}], "|>"}]}], ";", "\n", 
      "\t", 
      RowBox[{
       RowBox[{"setupParameters", "[", "\"\<security_parameters\>\"", "]"}], 
       " ", "=", " ", "securityParameters"}], ";", "\n", "\t", 
      RowBox[{"SetCostSpecification", "[", "securityParameters", "]"}], ";", 
      "\n", "\t", 
      RowBox[{"modq", " ", "=", " ", 
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"#", ",", "q"}], "]"}], "&"}]}], ";", "\n", "\t", 
      RowBox[{"modinvq", " ", "=", " ", 
       RowBox[{
        RowBox[{"ModularInverse", "[", 
         RowBox[{"#", ",", "q"}], "]"}], "&"}]}], ";", "\n", "\t", 
      RowBox[{"powermodq", " ", "=", " ", 
       RowBox[{
        RowBox[{"PowerMod", "[", 
         RowBox[{"#1", ",", "#2", ",", "q"}], "]"}], "&"}]}], ";", "\n", "\t", 
      RowBox[{"modp", " ", "=", " ", 
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"#", ",", "p"}], "]"}], "&"}]}], ";", "\n", "\t", 
      RowBox[{"modinvp", " ", "=", " ", 
       RowBox[{
        RowBox[{"ModularInverse", "[", 
         RowBox[{"#", ",", "p"}], "]"}], "&"}]}], ";", "\n", "\t", 
      RowBox[{"powermodp", " ", "=", " ", 
       RowBox[{
        RowBox[{"PowerMod", "[", 
         RowBox[{"#1", ",", "#2", ",", "p"}], "]"}], "&"}]}], ";", "\n", "\t", 
      RowBox[{"Print", "[", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", "\t\t", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<p is prime\>\"", ",", 
             RowBox[{"PrimeQ", "[", "p", "]"}]}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{"\"\<bits of p\>\"", ",", "pBits"}], "}"}], ",", "\n", 
           "\t\t", 
           RowBox[{"{", 
            RowBox[{"\"\<q is prime\>\"", ",", 
             RowBox[{"PrimeQ", "[", "q", "]"}]}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{"\"\<bits of q\>\"", ",", "qBits"}], "}"}], ",", "\n", 
           "\t\t", 
           RowBox[{"{", 
            RowBox[{"\"\<bits of cofactor\>\"", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"IntegerDigits", "[", 
               RowBox[{"cofactor", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
           "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<cofactor * q \!\(\*OverscriptBox[\(=\), \(?\)]\) p - 1\>\"", 
             ",", 
             RowBox[{
              RowBox[{"cofactor", "*", "q"}], "==", 
              RowBox[{"p", "-", "1"}]}]}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SuperscriptBox[\(g\), \(q\)]\) \
\!\(\*SubscriptBox[OverscriptBox[\(\[Congruent]\), \(?\)], \(p\)]\) 1\>\"", 
             ",", 
             RowBox[{
              RowBox[{"PowerMod", "[", 
               RowBox[{"g", ",", "q", ",", "p"}], "]"}], "==", "1"}]}], 
            "}"}]}], "\n", "\t", "}"}], ",", 
         RowBox[{"Alignment", "->", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"Left", ",", "Left"}], "}"}], "}"}]}], ",", 
         RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], ";"}], "\n", 
     RowBox[{"(*", "Else", "*)"}], ",", "\n", 
     RowBox[{"(*", 
      RowBox[{"Use", " ", "Elliptic", " ", "Curve"}], "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"setupParameters", "[", "\"\<encryption_method\>\"", "]"}], 
       " ", "=", " ", "\"\<EllipticCurve\>\""}], ";", "\n", "\t", 
      RowBox[{"cryptFunc", " ", "=", " ", 
       RowBox[{"cryptFuncs", "[", "\"\<EllipticCurve\>\"", "]"}]}], ";", "\n",
       "\t", 
      RowBox[{"Scan", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"setupParameters", "[", 
            RowBox[{"\"\<crypt_\>\"", "<>", "#"}], "]"}], " ", "=", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"ListQ", "[", 
              RowBox[{"cryptFunc", "[", "#", "]"}], "]"}], ",", "\n", 
             "\t\t\t", 
             RowBox[{"ecPnt", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"cryptFunc", "[", "#", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
               RowBox[{
                RowBox[{"cryptFunc", "[", "#", "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "\n", "\t\t\t", 
             
             RowBox[{"cryptFunc", "[", "#", "]"}]}], "\n", "\t\t", "]"}]}], 
          ")"}], "&"}], ",", "\n", "\t\t", 
        RowBox[{"Keys", "[", "cryptFunc", "]"}]}], "\n", "\t", "]"}], ";", 
      "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"cryptFunc", "[", "\"\<curve_representation\>\"", "]"}], " ",
          "!=", " ", "\"\<Weierstrass\>\""}], ",", " ", 
        RowBox[{
        "Error", "[", 
         "\"\<Only Weierstrass representations of ECs are supported\>\"", 
         "]"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{"EC", " ", "modulus"}], "*)"}], "\n", "\t", 
      RowBox[{"p", " ", "=", " ", 
       RowBox[{"cryptFunc", "[", "\"\<p\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{"linear", " ", "coefficient"}], "*)"}], "\n", "\t", 
      RowBox[{
       SubscriptBox["a", "EC"], " ", "=", " ", 
       RowBox[{"cryptFunc", "[", "\"\<a\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"(*", 
       RowBox[{"constant", " ", "coefficient"}], "*)"}], "\n", "\t", 
      RowBox[{
       SubscriptBox["b", "EC"], " ", "=", " ", 
       RowBox[{"cryptFunc", "[", "\"\<b\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{
       "number", " ", "of", " ", "points", " ", "on", " ", "elliptic", " ", 
        "curve"}], "*)"}], "\[IndentingNewLine]", "\t", 
      RowBox[{
       SubscriptBox["n", "EC"], " ", "=", " ", 
       RowBox[{"cryptFunc", "[", "\"\<n\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"(*", "cofactor", "*)"}], "\n", "\t", 
      RowBox[{
       SubscriptBox["h", "EC"], " ", "=", " ", 
       RowBox[{"cryptFunc", "[", "\"\<h\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{"group", " ", "modulus"}], "*)"}], "\n", "\t", 
      RowBox[{"q", " ", "=", " ", 
       RowBox[{
        SubscriptBox["n", "EC"], " ", "/", " ", 
        SubscriptBox["h", "EC"]}]}], ";", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{"standard", " ", "generator", " ", "point"}], "*)"}], "\n", 
      "\t", 
      RowBox[{"g", " ", "=", " ", 
       RowBox[{"ecPnt", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"cryptFunc", "[", "\"\<g\>\"", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"cryptFunc", "[", "\"\<g\>\"", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"pBits", " ", "=", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"IntegerDigits", "[", 
         RowBox[{"p", ",", "2"}], "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"qBits", " ", "=", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"IntegerDigits", "[", 
         RowBox[{"q", ",", "2"}], "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"entropyParameters", " ", "=", " ", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<group\>\"", "->", "qBits"}], ",", 
         RowBox[{"\"\<scalar\>\"", "->", "qBits"}]}], "|>"}]}], ";", "\n", 
      "\t", 
      RowBox[{
       RowBox[{"setupParameters", "[", "\"\<entropy_parameters\>\"", "]"}], 
       " ", "=", " ", "entropyParameters"}], ";", "\n", "\t", 
      RowBox[{"securityParameters", " ", "=", " ", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<group\>\"", "->", 
          RowBox[{"pBits", "+", "1"}]}], 
         RowBox[{"(*", 
          RowBox[{"sign", " ", "bit"}], "*)"}], ",", 
         RowBox[{"\"\<scalar\>\"", "->", "qBits"}]}], "|>"}]}], ";", "\n", 
      "\t", 
      RowBox[{
       RowBox[{"setupParameters", "[", "\"\<security_parameters\>\"", "]"}], 
       " ", "=", " ", "securityParameters"}], ";", "\n", "\t", 
      RowBox[{"SetCostSpecification", "[", "securityParameters", "]"}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"setEC", "[", 
       RowBox[{"ecCurve", "[", 
        RowBox[{
         SubscriptBox["a", "EC"], ",", 
         SubscriptBox["b", "EC"], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           SubscriptBox["h", "EC"]}], "}"}]}], "]"}], "]"}], ";", "\n", "\t", 
      
      RowBox[{
       RowBox[{"compressPoint", "[", "point_ecPnt", "]"}], " ", ":=", " ", 
       RowBox[{
        RowBox[{"point", "[", 
         RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"point", "[", 
            RowBox[{"[", "2", "]"}], "]"}], " ", ">", " ", 
           RowBox[{"p", "/", "2"}]}], ",", " ", 
          RowBox[{"2", "^", "pBits"}], ",", " ", "0"}], "]"}]}]}], ";", "\n", 
      "\t", 
      RowBox[{"modq", " ", "=", " ", 
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"#", ",", "q"}], "]"}], "&"}]}], ";", "\n", "\t", 
      RowBox[{"modinvq", " ", "=", " ", 
       RowBox[{
        RowBox[{"ModularInverse", "[", 
         RowBox[{"#", ",", "q"}], "]"}], "&"}]}], ";", "\n", "\t", 
      RowBox[{"powermodq", " ", "=", " ", 
       RowBox[{
        RowBox[{"PowerMod", "[", 
         RowBox[{"#1", ",", "#2", ",", "q"}], "]"}], "&"}]}], ";", "\n", "\t", 
      RowBox[{"Print", "[", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", "\t\t", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<p is prime\>\"", ",", 
             RowBox[{"PrimeQ", "[", "p", "]"}]}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{"\"\<bits of p\>\"", ",", "pBits"}], "}"}], ",", "\n", 
           "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<|\!\(\*SubscriptBox[\(n\), \(EC\)]\) - (p+1)| <= \
2\!\(\*SqrtBox[SubscriptBox[\(n\), \(EC\)]]\);\\n(\!\(\*SubscriptBox[\(n\), \
\(EC\)]\) = number of points on EC)\\n(Hasse's Theorem on ECs)\>\"", ",", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{
                SubscriptBox["n", "EC"], " ", "-", " ", 
                RowBox[{"(", 
                 RowBox[{"p", "+", "1"}], ")"}]}], "]"}], " ", "<=", " ", 
              RowBox[{"2", "*", 
               RowBox[{"Sqrt", "[", "p", "]"}]}]}]}], "}"}], ",", "\n", 
           "\t\t", 
           RowBox[{"{", 
            RowBox[{"\"\<q is prime\>\"", ",", 
             RowBox[{"PrimeQ", "[", "q", "]"}]}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{"\"\<bits of q\>\"", ",", "qBits"}], "}"}], ",", "\n", 
           "\t\t", 
           RowBox[{"{", 
            RowBox[{"\"\<\!\(\*SubscriptBox[\(h\), \(EC\)]\)\>\"", ",", 
             SubscriptBox["h", "EC"]}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(h\), \(EC\)]\) * q \!\(\*OverscriptBox[\
\(=\), \(?\)]\) \!\(\*SubscriptBox[\(n\), \(EC\)]\)\>\"", ",", 
             RowBox[{
              RowBox[{
               SubscriptBox["h", "EC"], " ", "*", " ", "q"}], " ", "==", " ", 
              
              SubscriptBox["n", "EC"]}]}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{"\"\<qg = \[ScriptCapitalO]\>\"", ",", 
             RowBox[{
              RowBox[{"q", " ", "*", " ", "g"}], " ", "==", " ", 
              "\[ScriptCapitalO]"}]}], "}"}]}], "\n", "\t", "}"}], ",", 
         RowBox[{"Alignment", "->", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"Left", ",", "Left"}], "}"}], "}"}]}], ",", 
         RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], ";"}]}], "\n", "]"}],
    ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"setupParameters", "[", "\"\<nums_seed\>\"", "]"}], " ", "=", 
       " ", "fixedNUMSRandomSeed"}], ";", "\n", "\t", 
      RowBox[{"Scan", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"FiatShamirAdd", "[", "\n", "\t\t\t", 
          RowBox[{"#", ",", "\n", "\t\t\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"StringQ", "[", 
              RowBox[{"setupParameters", "[", "#", "]"}], "]"}], ",", "\n", 
             "\t\t\t\t", 
             RowBox[{"StringToInteger", "[", 
              RowBox[{"setupParameters", "[", "#", "]"}], "]"}], ",", "\n", 
             "\t\t\t\t", 
             RowBox[{"setupParameters", "[", "#", "]"}]}], "\n", "\t\t\t", 
            "]"}]}], "\n", "\t\t", "]"}], "&"}], ",", "\n", "\t\t", 
        RowBox[{"(*", 
         RowBox[{
         "sort", " ", "to", " ", "ensure", " ", "fixed", " ", "order"}], 
         "*)"}], "\n", "\t\t", 
        RowBox[{"Sort", "[", 
         RowBox[{"Keys", "[", "setupParameters", "]"}], "]"}]}], "\n", "\t", 
       "]"}], ";"}]}], "\n", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"TellVerifier", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<setup\>\"", "->", "setupParameters"}], "}"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GiveInsight", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<__setup__\>\"", "->", "setupParameters"}], "}"}], "]"}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "interactive"}], ",", " ", 
    RowBox[{"Print", "[", 
     RowBox[{"FiatShamirGrid", "[", "]"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ProcessNewMessages", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"StateMachineSave", "[", "\"\<Setup\>\"", "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.8786655704132843`*^9, 3.878665571345381*^9}, {
   3.878665616792317*^9, 3.878665722056831*^9}, {3.884544729796012*^9, 
   3.884544735444632*^9}, {3.884800077872711*^9, 3.8848000782761087`*^9}, {
   3.884800111194648*^9, 3.8848002721776247`*^9}, {3.8848003112610292`*^9, 
   3.884800390713089*^9}, {3.884800616707436*^9, 3.884800720658853*^9}, {
   3.884800876827126*^9, 3.884800896683572*^9}, {3.884801258936254*^9, 
   3.8848012625343924`*^9}, {3.884801380321656*^9, 3.884801455104535*^9}, {
   3.884801654111761*^9, 3.884801698725898*^9}, {3.884801760141735*^9, 
   3.884801760229102*^9}, {3.884802523216024*^9, 3.884802531134529*^9}, {
   3.884803666721505*^9, 3.884803769838204*^9}, {3.884803957953341*^9, 
   3.8848042915314083`*^9}, {3.884804330249054*^9, 3.884804408628948*^9}, {
   3.8848044405771093`*^9, 3.8848044496698923`*^9}, {3.886347340921402*^9, 
   3.8863473410425873`*^9}, 3.8866082868308935`*^9, {3.8866083390307646`*^9, 
   3.8866083391491013`*^9}, {3.886608446945418*^9, 3.8866084821903086`*^9}, {
   3.88660851589537*^9, 3.886608520550521*^9}, 3.8866085771107087`*^9, {
   3.886608618477708*^9, 3.886608637277816*^9}, 3.8866086871247945`*^9, {
   3.886608723376481*^9, 3.886608893430298*^9}, {3.8866152409092474`*^9, 
   3.886615256228383*^9}, {3.88661685016521*^9, 3.886616873333557*^9}, {
   3.8866523866968036`*^9, 3.886652416612193*^9}, {3.8866526032871637`*^9, 
   3.8866526160958395`*^9}, {3.886652735478368*^9, 3.8866527355999265`*^9}, {
   3.886652873938061*^9, 3.8866529273580914`*^9}, {3.887438232209119*^9, 
   3.8874382390802155`*^9}, {3.887469734266287*^9, 3.887469743211005*^9}, {
   3.8874697804336896`*^9, 3.887469838535192*^9}, {3.887469877063925*^9, 
   3.8874698846267056`*^9}, {3.8874699880964527`*^9, 3.887470007475212*^9}, {
   3.887470659779072*^9, 3.887470770493862*^9}, {3.8874710190064754`*^9, 
   3.8874711080826454`*^9}, {3.887474026774979*^9, 3.8874740286686935`*^9}, {
   3.887474308365773*^9, 3.887474345776414*^9}, {3.887475544544366*^9, 
   3.8874756418052735`*^9}, {3.8874760874612627`*^9, 
   3.8874761708754573`*^9}, {3.8874763655372787`*^9, 3.887476371034152*^9}, {
   3.8874765118312097`*^9, 3.8874765975788*^9}, {3.887476778320448*^9, 
   3.8874767954453187`*^9}, {3.887476826975072*^9, 3.88747686035398*^9}, {
   3.887476901060948*^9, 3.8874769046779766`*^9}, {3.8874781520088367`*^9, 
   3.887478167596043*^9}, 3.887478654312933*^9, {3.8874787916787868`*^9, 
   3.8874787922552185`*^9}, {3.887478962878899*^9, 3.8874789631120577`*^9}, {
   3.887479004846732*^9, 3.887479087455757*^9}, {3.8896832010386963`*^9, 
   3.889683237004333*^9}, {3.891416237203808*^9, 3.891416293997136*^9}, {
   3.891416352830068*^9, 3.891416697347571*^9}, {3.8914167771680202`*^9, 
   3.891416828141573*^9}, {3.895511296466449*^9, 3.895511298218508*^9}, {
   3.895566202782456*^9, 3.895566221864799*^9}, {3.895566253995858*^9, 
   3.895566261001096*^9}, {3.895566321266995*^9, 3.89556632437819*^9}, {
   3.8955757068528147`*^9, 3.8955757079965277`*^9}, 3.895578226122076*^9, {
   3.895578340388382*^9, 3.895578367421815*^9}, {3.895578459609007*^9, 
   3.895578491429323*^9}, {3.8955914721992807`*^9, 3.8955914725083437`*^9}, 
   3.89559154886375*^9, {3.895591971446134*^9, 3.895591974047843*^9}, {
   3.8959286006586447`*^9, 3.895928605567685*^9}, {3.8961053171014757`*^9, 
   3.896105323422098*^9}, {3.8964183918455877`*^9, 3.896418399119027*^9}, {
   3.896419100637116*^9, 3.8964191752797747`*^9}, {3.8964232134379168`*^9, 
   3.896423257523014*^9}, {3.896423330338361*^9, 3.8964235204431543`*^9}, {
   3.896423554001357*^9, 3.8964236957284107`*^9}, {3.896423747007772*^9, 
   3.896423899738409*^9}, {3.896423951862829*^9, 3.896423999560279*^9}, {
   3.896424113626813*^9, 3.896424230741946*^9}, {3.896424262658197*^9, 
   3.896424291753834*^9}, {3.896424334078498*^9, 3.896424337531246*^9}, {
   3.896424451065371*^9, 3.8964245051676807`*^9}, {3.8964245464905443`*^9, 
   3.896424572380187*^9}, {3.896424646966359*^9, 3.896424757222809*^9}, {
   3.896424937390831*^9, 3.896424971824626*^9}, {3.8964254940093813`*^9, 
   3.896425494136396*^9}, {3.8964257074626627`*^9, 3.896425901689172*^9}, {
   3.89642609511441*^9, 3.8964261026454363`*^9}, {3.896426490098875*^9, 
   3.8964265028306923`*^9}, {3.8964276747640057`*^9, 3.896427726957032*^9}, {
   3.896428361141839*^9, 3.896428362572441*^9}, {3.896461838185308*^9, 
   3.896461838301979*^9}, {3.8965241002538013`*^9, 3.896524113173695*^9}, {
   3.8965256572916183`*^9, 3.8965256576340113`*^9}, {3.896525830251186*^9, 
   3.896525832069031*^9}, {3.896526501545147*^9, 3.8965265046463423`*^9}, {
   3.8965268922284937`*^9, 3.8965268930899887`*^9}, 3.896542994048553*^9, {
   3.8965442312445097`*^9, 3.8965442350130167`*^9}, {3.896544881083868*^9, 
   3.89654488425998*^9}, {3.8966882810573797`*^9, 3.89668864402343*^9}, {
   3.896689436116777*^9, 3.896689437019601*^9}, {3.896690556419097*^9, 
   3.8966905861267014`*^9}, {3.897043506133327*^9, 3.897043528517866*^9}, {
   3.897043611794198*^9, 3.89704367377442*^9}, {3.8970437329463253`*^9, 
   3.89704375748007*^9}, {3.8970437891634293`*^9, 3.8970439599414043`*^9}, 
   3.897044016846216*^9, {3.897044090085045*^9, 3.8970443743785677`*^9}, {
   3.897044501427991*^9, 3.897044502300486*^9}, {3.897053813678465*^9, 
   3.8970538360533047`*^9}, {3.897054447130415*^9, 3.897054452178584*^9}, {
   3.897054573590494*^9, 3.897054574214649*^9}, {3.897064777106473*^9, 
   3.89706480000657*^9}, {3.897064907331153*^9, 3.897064931402521*^9}, {
   3.897065048939876*^9, 3.897065109541541*^9}, {3.89706519716819*^9, 
   3.897065199844852*^9}, {3.897293366009762*^9, 3.897293405593175*^9}, {
   3.897295297574258*^9, 3.897295330545288*^9}, {3.897331890155978*^9, 
   3.897331932353683*^9}, {3.8973319748577633`*^9, 3.897332329376658*^9}, {
   3.897332896794236*^9, 3.8973329242596292`*^9}, {3.8973334580563*^9, 
   3.89733346609991*^9}, {3.8973335415078163`*^9, 3.897333544166812*^9}, {
   3.897333578385748*^9, 3.897333578503421*^9}, {3.8973628508908863`*^9, 
   3.897362854669595*^9}, {3.897383342173266*^9, 3.897383372340844*^9}, {
   3.897726591968755*^9, 3.8977266410275273`*^9}, {3.8977266716284895`*^9, 
   3.8977267647513313`*^9}, {3.8977268031443114`*^9, 
   3.8977268163056583`*^9}, {3.897726943702832*^9, 3.8977271620137653`*^9}, {
   3.8977273064931784`*^9, 3.897727307901639*^9}, {3.897727348696086*^9, 
   3.8977273743983083`*^9}, {3.8977274243340635`*^9, 3.8977274398630342`*^9}, 
   3.8977284053300805`*^9, 3.897728483455767*^9, {3.8977285700408845`*^9, 
   3.897728614257897*^9}, {3.8977286476453595`*^9, 3.8977287088714256`*^9}, {
   3.8977288197365465`*^9, 3.8977288431496835`*^9}, {3.897728929951375*^9, 
   3.8977289976485605`*^9}, {3.897729090501418*^9, 3.8977291112737646`*^9}, {
   3.8977293050302315`*^9, 3.897729316011799*^9}, {3.8977299400887547`*^9, 
   3.897729944157992*^9}, {3.8977300813089066`*^9, 3.897730088626896*^9}, {
   3.897730890792378*^9, 3.8977309196083164`*^9}, {3.8977317624618387`*^9, 
   3.8977318543087015`*^9}, {3.897732024864257*^9, 3.897732034474554*^9}, {
   3.8980451670287504`*^9, 3.898045170501485*^9}, {3.898194857582671*^9, 
   3.8981948661734333`*^9}, 3.8981959171382537`*^9, 3.898196406728688*^9, {
   3.8981986116823144`*^9, 3.8981986127794056`*^9}, {3.898270514565832*^9, 
   3.89827054151298*^9}, {3.898315276165642*^9, 3.8983152876132927`*^9}, 
   3.8983207430543847`*^9, {3.8983210234840684`*^9, 3.8983210238550773`*^9}, 
   3.8983492127077055`*^9, {3.898349322963791*^9, 3.898349327193733*^9}, {
   3.8983495480223293`*^9, 3.8983495491291895`*^9}, 3.8983496500602026`*^9, {
   3.898349956699608*^9, 3.8983499653234153`*^9}, 3.898364915815979*^9, {
   3.899308321323411*^9, 3.8993083370396214`*^9}, {3.899308547027015*^9, 
   3.8993086121285143`*^9}, {3.8993088172211*^9, 3.8993088191085563`*^9}, {
   3.8993088666878176`*^9, 3.899308869344929*^9}, {3.8993089001737423`*^9, 
   3.8993089893109317`*^9}, {3.899384943041606*^9, 3.8993849899875536`*^9}, {
   3.899385288479781*^9, 3.899385288621891*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"941b8ef9-fb97-4606-b9be-d7cc890367c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["NUMS Generators for Pedersen Commitments", "Subsection",
 CellChangeTimes->{{3.886669117149886*^9, 
  3.8866691345738077`*^9}},ExpressionUUID->"de66faef-58dc-47c3-8c0b-\
5c49d00832dd"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]NUMS\[CloseCurlyDoubleQuote] \
(\[OpenCurlyDoubleQuote]nothing up my sleeve\[CloseCurlyDoubleQuote]) \
generators for Pedersen Commitments: Every sceptical individual will be able \
to create the same generators based on the public fixed random seed \
314159000001 and ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "9bbdaaf2-141a-467e-b325-fcb457828c07"],
 "."
}], "Text",
 CellChangeTimes->{{3.886672321575017*^9, 3.886672406477848*^9}, {
  3.88667247830145*^9, 3.8866724933250127`*^9}, {3.8867381563963757`*^9, 
  3.8867381780914774`*^9}},ExpressionUUID->"ef3d1ae1-9db3-452f-beae-\
e2d2d27c545e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"StateMachineRestore", "[", "\"\<Setup\>\"", "]"}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", 
   RowBox[{
   "Standard", " ", "\"\<NUMS\>\"", " ", "generator", " ", "point", " ", "g", 
    " ", "is", " ", "already", " ", "given"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
   "Get", " ", "more", " ", "\"\<NUMS\>\"", " ", "generator", " ", "points", 
    " ", "with", " ", "pseudorandom", " ", "number", " ", "generator", " ", 
    "initialized", " ", "by", " ", "fixed", " ", "constant"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"Standard", " ", "behaviour"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"BlockRandom", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"SeedRandom", "[", 
     RowBox[{"fixedNUMSRandomSeed", ",", 
      RowBox[{"Method", "->", "\"\<ExtendedCA\>\""}]}], "]"}], ";", "\n", 
    "\t", 
    RowBox[{"numsGenerators", " ", "=", " ", 
     RowBox[{"ecRandomGenerators", "[", 
      RowBox[{"p", ",", 
       SubscriptBox["h", "EC"], ",", 
       RowBox[{"n", "+", "2"}]}], "]"}]}], ";"}], "\n", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"h", " ", "=", " ", 
   RowBox[{"numsGenerators", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox["g", "\[RightVector]"], " ", "=", " ", 
   RowBox[{"numsGenerators", "[", 
    RowBox[{"[", 
     RowBox[{"2", ";;", 
      RowBox[{"n", "+", "1"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SuperscriptBox["g", "'"], " ", "=", " ", 
   RowBox[{"numsGenerators", "[", 
    RowBox[{"[", 
     RowBox[{"n", "+", "2"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"GiveInsight", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<h\>\"", "->", "h"}], ",", 
     RowBox[{"\"\<gvec\>\"", "->", 
      OverscriptBox["g", "\[RightVector]"]}], ",", 
     RowBox[{"\"\<g'\>\"", "->", 
      SuperscriptBox["g", "'"]}]}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"Join", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Knowledge\>\"", ",", "Bold"}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{"{", 
          RowBox[{"\"\<g\>\"", ",", "\"\<public\>\"", ",", "g"}], "}"}], ",", 
         "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{"\"\<h\>\"", ",", "\"\<public\>\"", ",", "h"}], "}"}]}], 
        "\n", "\t", "}"}], ",", " ", "\n", "\t", 
       RowBox[{"MapIndexed", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<\!\(\*OverscriptBox[\(g\), \(\[RightVector]\)]\).\>\"", "<>", 
             RowBox[{"IntegerString", "[", 
              RowBox[{"First", "[", "#2", "]"}], "]"}]}], ",", 
            "\"\<public (implicit)\>\"", ",", "#1"}], "}"}], "&"}], ",", 
         OverscriptBox["g", "\[RightVector]"]}], "]"}], ",", "\n", "\t", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{"{", 
         RowBox[{"\"\<g'\>\"", ",", "\"\<public\>\"", ",", 
          SuperscriptBox["g", "'"]}], "}"}], "\n", "\t", "}"}]}], "\n", "]"}],
      ",", " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left"}], "}"}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "interactive"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"numsParameters", " ", "=", " ", 
      RowBox[{"Join", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"<|", "\n", "\t\t\t", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Already", " ", 
            RowBox[{"added", ":", "\n", "\t\t\t", "\"\<nums_seed\>\""}]}], "->",
            "fixedNUMSRandomSeed"}], "*)"}], "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"\"\<nums_method\>\"", "->", 
           RowBox[{
           "StringToInteger", "[", "\"\<Mathematica-ExtendedCA\>\"", "]"}]}], 
          ",", "\n", "\t\t\t", 
          RowBox[{"\"\<g\>\"", "->", 
           RowBox[{"compressPoint", "[", "g", "]"}]}], ",", "\n", "\t\t\t", 
          RowBox[{"\"\<h\>\"", "->", 
           RowBox[{"compressPoint", "[", "h", "]"}]}]}], "\n", "\t\t", "|>"}],
         ",", "\n", "\t\t", 
        RowBox[{"Association", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\"\<g.\>\"", "<>", 
              RowBox[{"IntegerString", "[", "#", "]"}]}], "->", 
             RowBox[{"compressPoint", "[", 
              RowBox[{
               OverscriptBox["g", "\[RightVector]"], "[", 
               RowBox[{"[", "#", "]"}], "]"}], "]"}]}], "&"}], ",", " ", 
           RowBox[{"Range", "[", "n", "]"}]}], "]"}], "]"}], ",", "\n", 
        "\t\t", 
        RowBox[{"<|", "\n", "\t\t\t", 
         RowBox[{"\"\<g'\>\"", "->", 
          RowBox[{"compressPoint", "[", 
           SuperscriptBox["g", "'"], "]"}]}], "\n", "\t\t", "|>"}]}], "\n", 
       "\t", "]"}]}], ";", "\n", "\t", 
     RowBox[{"Scan", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"FiatShamirAdd", "[", 
         RowBox[{"#", ",", " ", 
          RowBox[{"numsParameters", "[", "#", "]"}], ",", " ", "0"}], "]"}], 
        "&"}], ",", "\n", "\t\t", 
       RowBox[{"Sort", "[", 
        RowBox[{"Keys", "[", "numsParameters", "]"}], "]"}]}], "\n", "\t", 
      "]"}], ";", "\n", "\t", 
     RowBox[{"Print", "[", 
      RowBox[{"FiatShamirGrid", "[", "]"}], "]"}], ";"}]}], "\n", "]"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"ProcessNewMessages", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"StateMachineSave", "[", "\"\<NUMS\>\"", "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.881611267233099*^9, 3.8816112678870163`*^9}, {
   3.881611305861981*^9, 3.881611367692526*^9}, {3.881612388077072*^9, 
   3.8816123888624268`*^9}, {3.881613483351815*^9, 3.8816135877598886`*^9}, {
   3.881613631488398*^9, 3.8816137275903482`*^9}, {3.881614033955858*^9, 
   3.881614381496943*^9}, {3.882295234175817*^9, 3.882295514933865*^9}, {
   3.882295562817848*^9, 3.8822956145998583`*^9}, {3.882295648145958*^9, 
   3.8822956615701103`*^9}, {3.882299078122971*^9, 3.882299501332181*^9}, {
   3.882299562211405*^9, 3.882299582438773*^9}, {3.8822996437964287`*^9, 
   3.88229981550349*^9}, {3.882299845890562*^9, 3.882300053383555*^9}, {
   3.882306480609292*^9, 3.88230661963726*^9}, {3.8823066553043327`*^9, 
   3.882306657949801*^9}, {3.882306922982127*^9, 3.882307037850234*^9}, {
   3.882307081932117*^9, 3.882307092178425*^9}, {3.882307965645447*^9, 
   3.882308193775022*^9}, {3.882426384666493*^9, 3.882426385563363*^9}, {
   3.882426482103406*^9, 3.882426495433629*^9}, {3.882426569292823*^9, 
   3.8824266883995323`*^9}, {3.882426744424374*^9, 3.8824267821474648`*^9}, {
   3.88242688348168*^9, 3.882427034848382*^9}, {3.882427092456151*^9, 
   3.8824270984561777`*^9}, {3.882614495501625*^9, 3.882614931320109*^9}, {
   3.882614965640972*^9, 3.882615013854362*^9}, {3.882615065385633*^9, 
   3.882615094338655*^9}, {3.8826151442183447`*^9, 3.882615318654228*^9}, {
   3.8826270181994762`*^9, 3.8826270239377937`*^9}, {3.882630775144374*^9, 
   3.882630785372822*^9}, {3.882868160232136*^9, 3.882868160989832*^9}, {
   3.8828685538422403`*^9, 3.882868587825058*^9}, {3.88287058116236*^9, 
   3.882870634171438*^9}, {3.882873275178392*^9, 3.882873275790399*^9}, {
   3.882902581925274*^9, 3.882902620027721*^9}, {3.882952085481254*^9, 
   3.882952094210978*^9}, 3.8835079428428583`*^9, {3.883508046101471*^9, 
   3.8835080825188723`*^9}, {3.883593057102131*^9, 3.883593075486949*^9}, {
   3.8835932203286667`*^9, 3.883593233388596*^9}, {3.883774726025736*^9, 
   3.883774801248807*^9}, {3.884367930939432*^9, 3.884367978729415*^9}, 
   3.884368010507949*^9, {3.884788733227435*^9, 3.884788734242415*^9}, {
   3.886669142028721*^9, 3.886669219004548*^9}, {3.886669264306959*^9, 
   3.8866693247860155`*^9}, {3.886670185955055*^9, 3.8866704576210513`*^9}, {
   3.886671585292697*^9, 3.886671779261938*^9}, {3.8866718465551147`*^9, 
   3.8866719439261*^9}, {3.886671998601804*^9, 3.886672020497059*^9}, {
   3.886672258534028*^9, 3.886672273913044*^9}, {3.886672442982859*^9, 
   3.8866724670285487`*^9}, {3.886673527712757*^9, 3.8866735835467463`*^9}, {
   3.8866736377197*^9, 3.886673700321686*^9}, {3.8866737749606977`*^9, 
   3.8866738212053604`*^9}, {3.8866738860806885`*^9, 
   3.8866739436862535`*^9}, {3.8866742036782236`*^9, 3.8866743003132563`*^9}, 
   3.8866743853695564`*^9, 3.886674420849061*^9, {3.8866745428056097`*^9, 
   3.886674547604929*^9}, {3.8866747223094263`*^9, 3.8866747224174232`*^9}, {
   3.8866747652114286`*^9, 3.8866747653134594`*^9}, {3.886674840098435*^9, 
   3.8866749138304296`*^9}, {3.8866749451200647`*^9, 3.886674949333791*^9}, 
   3.8866750315872583`*^9, {3.886738521448756*^9, 3.886738540213233*^9}, {
   3.8867611134081535`*^9, 3.8867611148674145`*^9}, {3.8873956812381716`*^9, 
   3.887395687517293*^9}, {3.887481789443338*^9, 3.8874820116755543`*^9}, {
   3.8874820583787613`*^9, 3.8874820588811026`*^9}, {3.8874820900231867`*^9, 
   3.8874821302587633`*^9}, {3.8874822009180765`*^9, 3.887482204263749*^9}, {
   3.8874822703873563`*^9, 3.8874824440853157`*^9}, 3.8874843048532743`*^9, {
   3.8874850304465475`*^9, 3.8874850498160977`*^9}, {3.8874858380638256`*^9, 
   3.8874858391178474`*^9}, {3.8874858968589344`*^9, 
   3.8874858976785617`*^9}, {3.8874859353453183`*^9, 3.887485936787695*^9}, 
   3.8874868734151564`*^9, {3.887486992438768*^9, 3.887487015670041*^9}, {
   3.887487049253504*^9, 3.8874871026058817`*^9}, 3.887487254815919*^9, {
   3.8874874669525957`*^9, 3.887487486225472*^9}, {3.8874875928645954`*^9, 
   3.887487592932543*^9}, {3.887487761075022*^9, 3.887487766360179*^9}, {
   3.8874886241515226`*^9, 3.887488723347926*^9}, {3.887488900055628*^9, 
   3.8874889619246955`*^9}, 3.8874890724196806`*^9, {3.8874892080432897`*^9, 
   3.8874892306459*^9}, {3.8876184555660095`*^9, 3.887618484658083*^9}, {
   3.887635856524541*^9, 3.887635908858184*^9}, {3.8876359862529016`*^9, 
   3.8876360406269474`*^9}, {3.8876361673687673`*^9, 
   3.8876361723683295`*^9}, {3.8876362855605803`*^9, 3.887636322572871*^9}, {
   3.8876365718771973`*^9, 3.887636595287266*^9}, {3.8876372396506915`*^9, 
   3.8876372397786922`*^9}, {3.887637478159668*^9, 3.887637503099657*^9}, 
   3.8876377781149654`*^9, {3.8876378280421886`*^9, 3.887637828887335*^9}, {
   3.8894602998716483`*^9, 3.889460306385333*^9}, {3.8923649964956083`*^9, 
   3.892364998917656*^9}, {3.892365098145236*^9, 3.892365098578413*^9}, {
   3.892365128735834*^9, 3.89236514972051*^9}, {3.892365195780336*^9, 
   3.8923651971778727`*^9}, {3.8923652582344933`*^9, 3.892365284265944*^9}, {
   3.89236535686598*^9, 3.8923654016318007`*^9}, {3.8923852136397753`*^9, 
   3.892385215700962*^9}, {3.892385258422206*^9, 3.89238525911866*^9}, {
   3.892392245807974*^9, 3.892392363422483*^9}, {3.892392439920271*^9, 
   3.892392443800645*^9}, {3.892392490439369*^9, 3.892392494469675*^9}, {
   3.8983218105364375`*^9, 3.898321847469303*^9}, {3.898321889488245*^9, 
   3.8983218895982575`*^9}, {3.898321937485649*^9, 3.8983219759766083`*^9}, {
   3.898322179581534*^9, 3.8983221871759834`*^9}, {3.898325138929085*^9, 
   3.8983251690726547`*^9}, {3.8983650593057575`*^9, 
   3.8983650621633463`*^9}, {3.911399377187933*^9, 3.9113994064071054`*^9}, {
   3.9113994388537703`*^9, 3.911399468019266*^9}, {3.9113995136162653`*^9, 
   3.91139955770201*^9}, {3.911399591314272*^9, 3.911399641943985*^9}, {
   3.9114048124201765`*^9, 3.9114048230826006`*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"958f80e0-271f-457a-bd18-2ccfa35cddd1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Register Event Handlers for Verification Results and Pedersen Commitment \
Inspection Requests\
\>", "Subsection",
 CellChangeTimes->{{3.897538275648121*^9, 3.8975382871009398`*^9}, {
  3.897902176989072*^9, 
  3.897902180044725*^9}},ExpressionUUID->"cc8a358f-36d3-4a52-a1b8-\
12b6693cb195"],

Cell[TextData[{
 StyleBox["Functions will be called after the proof has been finished",
  FontWeight->"Bold"],
 "\nReveal Pedersen Commitments ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", ",", " ", "W", ",", " ", 
    SubscriptBox["A", "L"], ",", " ", 
    SubscriptBox["S", "L"], ",", " ", 
    SubscriptBox["S", 
     RowBox[{"R", ",", "h"}]], ",", " ", 
    SubscriptBox["S", 
     RowBox[{"R", ",", "b"}]], ",", " ", 
    SubscriptBox["S", 
     RowBox[{"R", ",", "c"}]], ",", " ", 
    RowBox[{
     SubscriptBox["T", "3"], " ", "and", " ", 
     SubscriptBox["T", "5"]}]}], TraditionalForm]],ExpressionUUID->
  "d3a4a732-02e9-4319-9527-f0d40bc3eed6"],
 " when requested."
}], "Text",
 CellChangeTimes->{{3.8874315380510364`*^9, 3.8874316248126335`*^9}, {
  3.8874328772288*^9, 3.8874330229853535`*^9}, {3.887433123692663*^9, 
  3.8874331256768494`*^9}, {3.887437304731734*^9, 3.8874373718173*^9}, {
  3.887448909622515*^9, 3.887448910241146*^9}, {3.8979021897006707`*^9, 
  3.8979022965175953`*^9}, {3.897902357545152*^9, 3.8979024902677107`*^9}, {
  3.898195917153371*^9, 3.898195917153371*^9}, {3.8981964067657523`*^9, 
  3.8981964067657523`*^9}, {3.8983308165320826`*^9, 3.8983308637935348`*^9}, {
  3.8983309084324937`*^9, 
  3.8983309091178017`*^9}},ExpressionUUID->"e0be0894-2ede-4451-a5c8-\
c6a4b4d334ce"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"GenericParseResult", "[", 
   RowBox[{"action_String", ",", " ", "result_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"action", "<>", "\"\< \>\"", "<>", "\n", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"result", "[", "\"\<status\>\"", "]"}], " ", "==", " ", 
      "\"\<success\>\""}], ",", "\n", "\t\t", "\"\<succeeded\>\"", ",", "\n", 
     "\t\t", "\"\<failed\>\""}], "\n", "\t", "]"}], "<>", "\n", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"KeyExistsQ", "[", 
      RowBox[{"result", ",", " ", "\"\<msg\>\""}], "]"}], ",", "\n", "\t\t", 
     RowBox[{"\"\<: \>\"", "<>", 
      RowBox[{"result", "[", "\"\<msg\>\"", "]"}]}], ",", "\n", "\t\t", 
     "\"\<!\>\""}], "\n", "\t", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetEventHandler", "[", 
    RowBox[{"\"\<_verification_result_\>\"", ",", " ", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "msgParsed", "}"}], ",", "\n", "\t", 
       RowBox[{
        RowBox[{"Print", "[", "\n", "\t\t", 
         RowBox[{"\"\<Received verification result from \>\"", "<>", 
          RowBox[{"msgParsed", "[", "\"\<_SenderRoleAtId\>\"", "]"}], "<>", 
          "\n", "\t\t", "\"\<: \>\"", "<>", 
          RowBox[{"GenericParseResult", "[", 
           RowBox[{"\"\<Verification\>\"", ",", " ", 
            RowBox[{
            "msgParsed", "[", "\"\<_verification_result_\>\"", "]"}]}], 
           "]"}]}], "\n", "\t", "]"}], ";"}]}], "\n", "]"}]}], "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetEventHandler", "[", 
    RowBox[{"\"\<_inspection_request_\>\"", ",", " ", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "msgParsed", "}"}], ",", "\n", "\t", 
       RowBox[{
        RowBox[{"Print", "[", "\n", "\t\t", 
         RowBox[{"\"\<Received inspection request from \>\"", "<>", 
          RowBox[{"msgParsed", "[", "\"\<_SenderRoleAtId\>\"", "]"}], "<>", 
          "\n", "\t\t", 
          "\"\<. Revealing secrets of Pedersen commitments V, W, \
\!\(\*SubscriptBox[\(A\), \(W\)]\), \!\(\*SubscriptBox[\(S\), \(W\)]\), \
\!\(\*SubscriptBox[\(A\), \(L\)]\), \!\(\*SubscriptBox[\(S\), \(L\)]\), \
\!\(\*SubscriptBox[\(S\), \(R, h\)]\), \!\(\*SubscriptBox[\(S\), \(R, b\)]\), \
\!\(\*SubscriptBox[\(S\), \(R, c\)]\), \!\(\*SubscriptBox[\(S\), \(R, d\)]\), \
\!\(\*SubscriptBox[\(T\), \(3\)]\), \!\(\*SubscriptBox[\(T\), \(5\)]\), \
\!\(\*SubscriptBox[\(T\), \(1, W\)]\) and \!\(\*SubscriptBox[\(T\), \(2, W\)]\
\)\>\""}], "\n", "\t", "]"}], ";", "\n", "\t", 
        RowBox[{"inspectionReply", " ", "=", " ", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"\"\<s\>\"", "->", "s"}], ",", "\n", "\t\t", 
           RowBox[{"\"\<sigmaW\>\"", "->", 
            SubscriptBox["\[Sigma]", "W"]}], ",", "\n", "\t\t", 
           RowBox[{"\"\<alphaW\>\"", "->", 
            SubscriptBox["\[Alpha]", "W"]}], ",", "\n", "\t\t", 
           RowBox[{"\"\<betaW\>\"", "->", 
            SubscriptBox["\[Beta]", "W"]}], ",", "\n", "\t\t", 
           RowBox[{"\"\<gammaW\>\"", "->", 
            SubscriptBox["\[Gamma]", "W"]}], ",", "\n", "\t\t", 
           RowBox[{"\"\<pi\>\"", "->", "\[Pi]"}], ",", "\[IndentingNewLine]", 
           "\t\t", 
           RowBox[{"\"\<alpha\>\"", "->", "\[Alpha]"}], ",", 
           "\[IndentingNewLine]", "\t\t", 
           RowBox[{"\"\<beta\>\"", "->", "\[Beta]"}], ",", 
           "\[IndentingNewLine]", "\t\t", 
           RowBox[{"\"\<rhoh\>\"", "->", 
            SubscriptBox["\[Rho]", "h"]}], ",", "\n", "\t\t", 
           RowBox[{"\"\<rhob\>\"", "->", 
            SubscriptBox["\[Rho]", "b"]}], ",", "\n", "\t\t", 
           RowBox[{"\"\<rhoc\>\"", "->", 
            SubscriptBox["\[Rho]", "c"]}], ",", "\n", "\t\t", 
           RowBox[{"\"\<rhod\>\"", "->", 
            SubscriptBox["\[Rho]", "d"]}], ",", "\[IndentingNewLine]", "\t\t", 
           RowBox[{"\"\<sL\>\"", "->", 
            OverscriptBox[
             SubscriptBox["s", "L"], "\[RightVector]"]}], ",", 
           "\[IndentingNewLine]", "\t\t", 
           RowBox[{"\"\<sR\>\"", "->", 
            OverscriptBox[
             SubscriptBox["s", "R"], "\[RightVector]"]}], ",", 
           "\[IndentingNewLine]", "\t\t", 
           RowBox[{"\"\<t3\>\"", "->", 
            SubscriptBox["t", "3"]}], ",", "\[IndentingNewLine]", "\t\t", 
           RowBox[{"\"\<tau3\>\"", "->", 
            SubscriptBox["\[Tau]", "3"]}], ",", "\[IndentingNewLine]", "\t\t", 
           RowBox[{"\"\<t5\>\"", "->", 
            SubscriptBox["t", "5"]}], ",", "\[IndentingNewLine]", "\t\t", 
           RowBox[{"\"\<tau5\>\"", "->", 
            SubscriptBox["\[Tau]", "5"]}], ",", "\n", "\t\t", 
           RowBox[{"\"\<t1W\>\"", "->", 
            SubscriptBox["t", 
             RowBox[{"1", ",", "W"}]]}], ",", "\n", "\t\t", 
           RowBox[{"\"\<tau1W\>\"", "->", 
            SubscriptBox["\[Tau]", 
             RowBox[{"1", ",", "W"}]]}], ",", "\n", "\t\t", 
           RowBox[{"\"\<t2W\>\"", "->", 
            SubscriptBox["t", 
             RowBox[{"2", ",", "W"}]]}], ",", "\n", "\t\t", 
           RowBox[{"\"\<tau2W\>\"", "->", 
            SubscriptBox["\[Tau]", 
             RowBox[{"2", ",", "W"}]]}]}], "\n", "\t", "}"}]}], ";", "\n", 
        "\t", 
        RowBox[{"SendVariables", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{"msgParsed", "[", "\"\<_SenderRoleAtId\>\"", "]"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{"\"\<_inspection_reply\>\"", "->", "inspectionReply"}], 
           "}"}]}], "\n", "\t", "]"}], ";"}]}], "\n", "]"}]}], "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"SetEventHandler", "[", 
   RowBox[{"\"\<_inspection_result_\>\"", ",", " ", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "msgParsed", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Print", "[", "\n", "\t\t", 
        RowBox[{"\"\<Received inspection result from \>\"", "<>", 
         RowBox[{"msgParsed", "[", "\"\<_SenderRoleAtId\>\"", "]"}], "<>", 
         "\n", "\t\t", "\"\<: \>\"", "<>", 
         RowBox[{"GenericParseResult", "[", 
          RowBox[{"\"\<Inspection\>\"", ",", " ", 
           RowBox[{"msgParsed", "[", "\"\<_inspection_result_\>\"", "]"}]}], 
          "]"}]}], "\n", "\t", "]"}], ";"}]}], "\n", "]"}]}], "]"}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.897538321215097*^9, 3.897538554565139*^9}, 
   3.897538588265238*^9, 3.897644218567672*^9, {3.897644390410109*^9, 
   3.897644435781068*^9}, {3.897644580650502*^9, 3.8976446026723003`*^9}, {
   3.8976446526306343`*^9, 3.897644696886361*^9}, {3.8976447305677233`*^9, 
   3.897644748059185*^9}, 3.897645446700501*^9, {3.897646117344692*^9, 
   3.8976462565501738`*^9}, {3.897898867944556*^9, 3.8978988682885866`*^9}, {
   3.8978991134238825`*^9, 3.8978991489206333`*^9}, {3.897899208366969*^9, 
   3.897899296081156*^9}, {3.8978993448705077`*^9, 3.897899346975354*^9}, {
   3.89789948111836*^9, 3.8978995333619404`*^9}, {3.8978995677376018`*^9, 
   3.8978995681047063`*^9}, {3.897899642824323*^9, 3.897899964506594*^9}, {
   3.897900005950091*^9, 3.897900006674721*^9}, {3.897900037898424*^9, 
   3.897900057675665*^9}, {3.8979000933643656`*^9, 3.897900109257904*^9}, {
   3.8979001775560913`*^9, 3.8979001976394625`*^9}, {3.897901970401479*^9, 
   3.8979019869056005`*^9}, {3.8979022779275317`*^9, 
   3.8979022800526705`*^9}, {3.8979025218694706`*^9, 3.8979026032099123`*^9}, 
   3.898150635344056*^9, {3.8981959171613665`*^9, 3.8981959171663637`*^9}, {
   3.8981964149531736`*^9, 3.8981964149571667`*^9}, {3.898329897171689*^9, 
   3.8983298978994503`*^9}, {3.8983301553951674`*^9, 3.898330196409342*^9}, {
   3.8983309233459477`*^9, 3.8983310062405696`*^9}, {3.898331053902343*^9, 
   3.8983311020442977`*^9}, {3.898331133706052*^9, 3.898331145287581*^9}, {
   3.89833118011759*^9, 3.898331195394641*^9}, 3.898331305670573*^9, {
   3.898331436476948*^9, 3.898331443378982*^9}, {3.898335211043297*^9, 
   3.898335214477334*^9}, {3.898335347891164*^9, 3.8983353480699964`*^9}, {
   3.898366536476311*^9, 3.898366543189799*^9}, {3.899024419326645*^9, 
   3.899024563538484*^9}, {3.899265361674852*^9, 3.899265365477874*^9}, {
   3.911397935607589*^9, 3.9113979384917603`*^9}, {3.911398243737768*^9, 
   3.911398247471303*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"8a32714b-8dcf-43d6-9429-93030fd19a16"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Users Prepare Their Messages for the Shuffler", "Section",
 CellChangeTimes->{{3.8866755964292774`*^9, 3.88667560657975*^9}, {
  3.892394350733077*^9, 3.89239435244112*^9}, {3.8992668397494383`*^9, 
  3.899266876681595*^9}, {3.8992669363817887`*^9, 3.8992669960812497`*^9}, {
  3.8992673044211593`*^9, 3.8992673050289946`*^9}, {3.899268268740056*^9, 
  3.8992682688720093`*^9}, {3.911294567150789*^9, 3.9112945675807333`*^9}, {
  3.911398517034685*^9, 
  3.9113985180451703`*^9}},ExpressionUUID->"5a45d715-5ca6-480c-a5a4-\
82a4aae8b6ce"],

Cell[CellGroupData[{

Cell[TextData[{
 "Calculate ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["h", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "5172dd31-69e9-4d82-a238-31458b48dc23"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["b", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "c592828a-7c3f-4a0f-b462-8e65fbf21b0d"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["c", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "71f595b1-b69f-4185-b248-5124d2921d44"],
 " from ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "9c1abab8-10aa-48d0-89b6-f83ce31f66e6"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["\[Gamma]", "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"3513bfc8-5f57-40d6-8dd5-5ded517791a8"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["m", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "d4a64a13-c0e1-481f-ab4d-7becf8c076f5"]
}], "Subsection",
 CellChangeTimes->{{3.892357155067923*^9, 3.892357165668367*^9}, {
   3.8923853468005943`*^9, 3.892385430660461*^9}, {3.892393566490417*^9, 
   3.892393606849579*^9}, {3.89239369952919*^9, 3.8923937088415203`*^9}, 
   3.899268288710007*^9},ExpressionUUID->"96cbbda7-c41e-42c2-bab4-\
95788c039301"],

Cell[TextData[{
 "The senders who want their messages be anonymized by using the multi-key \
verifiable shuffle encrypt their messages.  Actually, this is done by \
separate clients. These calculations were added to the shuffler\
\[CloseCurlyQuote]s notebook for simplicity.",
 StyleBox["\nSecrets of each user:",
  FontWeight->"Bold"],
 "\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "b65252b2-74d6-44b4-b1c0-20a8e3abfafc"],
 ": secret keys of users\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox["\[Gamma]", "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"ba8ee665-77f2-4f65-9145-bac467c9629a"],
 ": secret blinding values\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox["m", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "f50f27a8-71f3-4149-b6d4-d3de758d1389"],
 ": secret messages\n",
 StyleBox["Posted to the public bulletin board",
  FontWeight->"Bold"],
 "\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox["h", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "96744375-a26c-4317-8ece-5bb42cb58d40"],
 ": public keys of receivers - to allow receivers to identify their messages\n\
",
 Cell[BoxData[
  FormBox[
   OverscriptBox["b", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "363c82d3-fd40-4946-b1e0-c8045d7a1a14"],
 ": commitments to blinding values - ElGamal randomizers\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox["c", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "ff6b956d-4df3-4353-af0b-f790d0a72a41"],
 ": blinded commitments to messages - ElGamal message\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox["d", "\[RightVector]"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "bade2364-99f9-42c5-8472-79c83a7d94ec"],
 ": public keys of senders - to allow receivers to reply\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox["h", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "daaab684-48f2-46ad-a019-003a0866860c"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["b", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "99460fd8-8534-4168-a75d-8811cba4005d"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["c", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "b67971d3-3734-4cc9-b937-261c8c29fd2c"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["d", "\[RightVector]"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f0a09ecb-d414-4576-8a52-0eecc8ddbf8b"],
 " form the common reference string (CRS) together with ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "52c0fb31-9a3c-406c-91fc-6527caa0d4a0"],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["g", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "720cbe13-fde4-4062-b21e-d82dbc337130"],
 "."
}], "Text",
 CellChangeTimes->{{3.8923571720703077`*^9, 3.892357172344945*^9}, {
   3.8923631755177*^9, 3.892363228198937*^9}, {3.892363978370638*^9, 
   3.892363978735927*^9}, {3.8923854860347157`*^9, 3.8923855819475*^9}, {
   3.892385623933488*^9, 3.892385649044621*^9}, {3.892385778962092*^9, 
   3.8923858055559883`*^9}, {3.892386704008974*^9, 3.8923868076996202`*^9}, {
   3.8923913468381844`*^9, 3.892391382167954*^9}, {3.8923914827044973`*^9, 
   3.892391629345757*^9}, {3.892440099391005*^9, 3.892440109780429*^9}, {
   3.892467905102088*^9, 3.892467920007127*^9}, {3.892477395910755*^9, 
   3.892477396029931*^9}, {3.8992670885762053`*^9, 3.899267213657443*^9}, {
   3.8992672517818966`*^9, 3.8992672655500317`*^9}, {3.8992673076713743`*^9, 
   3.8992673137744274`*^9}, {3.899268422868309*^9, 3.8992685601973934`*^9}, {
   3.899269969491702*^9, 3.8992700482916994`*^9}, 3.9112945747770205`*^9, {
   3.911397963239926*^9, 3.911397970504918*^9}, {3.911398063329276*^9, 
   3.911398101410821*^9}, {3.9113986985928497`*^9, 3.9113987008463726`*^9}, {
   3.9113987380357275`*^9, 
   3.911398778628296*^9}},ExpressionUUID->"d522ae41-07d7-4535-9a10-\
0d9ad072daa6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"StateMachineRestore", "[", "\"\<NUMS\>\"", "]"}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"Users", ":", " ", "Setup"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"secret", " ", "keys", " ", "of", " ", "receivers"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    OverscriptBox["x", "\[RightVector]"], " ", "=", " ", 
    RowBox[{"StringToInteger", " ", "/@", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"secretKeys", "[", 
         RowBox[{"[", "#", "]"}], "]"}], " ", "&"}], " ", "/@", " ", 
       "receivers"}], ")"}]}]}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"public", " ", "keys", " ", "of", " ", "receivers"}], " ", "-", 
    " ", 
    RowBox[{
    "to", " ", "allow", " ", "receivers", " ", "to", " ", "identify", " ", 
     "their", " ", "messages"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    OverscriptBox["h", "\[RightVector]"], " ", "=", " ", 
    RowBox[{
     OverscriptBox["x", "\[RightVector]"], " ", "*", " ", "g"}]}], ";"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{
   "secret", " ", "random", " ", "blinding", " ", "values", " ", "\[Gamma]", 
    " ", "for", " ", "first", " ", "part", " ", "of", " ", "ElGamal", " ", 
    "ciphertext"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    OverscriptBox["\[Gamma]", "\[RightVector]"], " ", "=", " ", 
    RowBox[{"BPRandomIntegerVector", "[", 
     RowBox[{"0", ",", 
      RowBox[{"q", "-", "1"}], ",", "n"}], "]"}]}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "first", " ", "part", " ", "of", " ", "ElGamal", " ", "ciphertext"}], " ",
     "-", " ", "randomizer"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    OverscriptBox["b", "\[RightVector]"], " ", "=", " ", 
    RowBox[{
     OverscriptBox["\[Gamma]", "\[RightVector]"], " ", "*", " ", "g"}]}], 
   ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "second", " ", "part", " ", "of", " ", "ElGamal", " ", "ciphertext"}], 
    " ", "-", " ", "message"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    OverscriptBox["c", "\[RightVector]"], " ", "=", " ", 
    RowBox[{
     RowBox[{"g", " ", "*", " ", 
      RowBox[{"(", 
       RowBox[{"StringToInteger", " ", "/@", " ", "secretMessages"}], ")"}]}],
      " ", "+", " ", 
     RowBox[{
      OverscriptBox["\[Gamma]", "\[RightVector]"], " ", "*", " ", 
      OverscriptBox["h", "\[RightVector]"]}]}]}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"public", " ", "keys", " ", "of", " ", "senders"}], " ", "-", " ", 
    RowBox[{"to", " ", "allow", " ", "receivers", " ", "to", " ", "reply"}]}],
    "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    OverscriptBox["d", "\[RightVector]"], " ", "=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"StringToInteger", " ", "/@", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"secretKeys", "[", 
           RowBox[{"[", "#", "]"}], "]"}], " ", "&"}], " ", "/@", " ", 
         "senders"}], ")"}]}], ")"}], " ", "*", " ", "g"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SendCRS", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<hvec\>\"", "->", 
       OverscriptBox["h", "\[RightVector]"]}], ",", " ", 
      RowBox[{"\"\<bvec\>\"", "->", 
       OverscriptBox["b", "\[RightVector]"]}], ",", " ", 
      RowBox[{"\"\<cvec\>\"", "->", 
       OverscriptBox["c", "\[RightVector]"]}], ",", " ", 
      RowBox[{"\"\<dvec\>\"", "->", 
       OverscriptBox["d", "\[RightVector]"]}]}], "}"}], "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"StateMachineSave", "[", "\"\<ShuffleInput\>\"", "]"}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.8923571878717947`*^9, 3.892357200055768*^9}, {
   3.89236230124684*^9, 3.89236236547439*^9}, {3.8923624017205553`*^9, 
   3.892362442477952*^9}, {3.892362488188682*^9, 3.892362495666856*^9}, {
   3.892362814788315*^9, 3.89236286056986*^9}, {3.8923629188486643`*^9, 
   3.8923630071613197`*^9}, {3.892363123637072*^9, 3.892363157203899*^9}, {
   3.8923632465972643`*^9, 3.892363272205101*^9}, {3.8923635252986917`*^9, 
   3.89236353621837*^9}, {3.8923635991281424`*^9, 3.892363827436591*^9}, {
   3.892363858805607*^9, 3.8923638713633223`*^9}, {3.892363934360877*^9, 
   3.892364013129599*^9}, {3.892364055369052*^9, 3.892364090141733*^9}, {
   3.892364388138942*^9, 3.89236449647678*^9}, {3.892364603753725*^9, 
   3.892364636629084*^9}, {3.8923650044126587`*^9, 3.892365004817699*^9}, {
   3.8923854503730383`*^9, 3.892385458233302*^9}, {3.8923858232991133`*^9, 
   3.8923858427424*^9}, {3.892385942166603*^9, 3.8923859445433407`*^9}, {
   3.8923859780476007`*^9, 3.8923859882985287`*^9}, {3.892386652804433*^9, 
   3.892386678973385*^9}, {3.892386817464233*^9, 3.892386825876734*^9}, {
   3.89238697683743*^9, 3.8923870110602007`*^9}, {3.892387051524971*^9, 
   3.892387069904491*^9}, {3.8923872555330887`*^9, 3.8923873736842833`*^9}, {
   3.89238830101038*^9, 3.892388466705098*^9}, {3.892388527451086*^9, 
   3.892388604572899*^9}, {3.892388640982808*^9, 3.892388662944775*^9}, 
   3.8923887094605293`*^9, {3.892388830070395*^9, 3.8923888764620934`*^9}, {
   3.8923889095642567`*^9, 3.892389819625381*^9}, {3.892389870008039*^9, 
   3.892389949844398*^9}, {3.892390262458871*^9, 3.892390481679137*^9}, {
   3.892390517168909*^9, 3.8923905240567503`*^9}, {3.892390565455769*^9, 
   3.8923905743015842`*^9}, {3.8923906307152977`*^9, 3.892390631408017*^9}, {
   3.8923911552917757`*^9, 3.892391285453761*^9}, {3.8923913376745863`*^9, 
   3.8923913393520727`*^9}, {3.892391845831077*^9, 3.892391848941504*^9}, {
   3.89239199865071*^9, 3.892392017480694*^9}, {3.89239211466315*^9, 
   3.892392119420492*^9}, {3.892392155244878*^9, 3.892392156484653*^9}, {
   3.892392220815569*^9, 3.892392230325943*^9}, {3.8923926065085*^9, 
   3.892392727116535*^9}, {3.892392937539665*^9, 3.8923929408385687`*^9}, {
   3.892393095282831*^9, 3.8923931143246*^9}, {3.892393151202076*^9, 
   3.892393154593585*^9}, {3.892393190226697*^9, 3.892393277875904*^9}, {
   3.8923933176205807`*^9, 3.892393361939369*^9}, {3.892394429725092*^9, 
   3.892394465687763*^9}, {3.892394523413548*^9, 3.892394524872693*^9}, {
   3.892394577834601*^9, 3.892394591360033*^9}, {3.8923952990599947`*^9, 
   3.892395313713431*^9}, 3.892395536679398*^9, {3.8923994992054377`*^9, 
   3.8923995285219812`*^9}, {3.8924010277356977`*^9, 3.892401040288027*^9}, 
   3.892402419319872*^9, {3.892402775545259*^9, 3.8924028162549543`*^9}, {
   3.892402927277507*^9, 3.892402935749629*^9}, {3.892467852781682*^9, 
   3.8924678570389853`*^9}, {3.892467942824258*^9, 3.892467961473259*^9}, {
   3.89247728456769*^9, 3.8924773356798983`*^9}, {3.89247769677456*^9, 
   3.8924777072711973`*^9}, {3.892477747269787*^9, 3.89247780646216*^9}, {
   3.898322226604899*^9, 3.8983222272630105`*^9}, {3.8983223726765237`*^9, 
   3.8983224231832685`*^9}, {3.898322455054038*^9, 3.898322569611556*^9}, {
   3.898322637177204*^9, 3.89832273624268*^9}, {3.898322770540284*^9, 
   3.898322788970343*^9}, {3.898323149256177*^9, 3.898323195741954*^9}, {
   3.8983232402413597`*^9, 3.898323260941909*^9}, {3.8983239339242396`*^9, 
   3.8983239702708683`*^9}, {3.898324032152175*^9, 3.8983240394644837`*^9}, {
   3.898324087938128*^9, 3.898324097752076*^9}, {3.8983243937913*^9, 
   3.8983244151979856`*^9}, {3.8983245337950954`*^9, 
   3.8983245353648167`*^9}, {3.8983252858725677`*^9, 3.898325359344976*^9}, {
   3.8983266010339036`*^9, 3.898326601177354*^9}, {3.8983443696883245`*^9, 
   3.898344377505392*^9}, {3.8984862263023334`*^9, 3.898486433431111*^9}, {
   3.898486542572585*^9, 3.898486571807664*^9}, {3.898486618387602*^9, 
   3.898486632479243*^9}, {3.8984866682708135`*^9, 3.8984866971684294`*^9}, {
   3.8984867519002037`*^9, 3.8984868741078362`*^9}, {3.8984869087771883`*^9, 
   3.8984869425878277`*^9}, {3.89848703430153*^9, 3.898487103686263*^9}, {
   3.898487530117668*^9, 3.898487549829985*^9}, {3.898508581271341*^9, 
   3.8985085826874943`*^9}, {3.8985207054915276`*^9, 
   3.8985207129994926`*^9}, {3.89852075141648*^9, 3.8985208567673483`*^9}, {
   3.8985208883813295`*^9, 3.898521047749621*^9}, {3.8985212290381603`*^9, 
   3.898521249020995*^9}, {3.898521291211966*^9, 3.898521360536496*^9}, {
   3.8985215427025337`*^9, 3.898521551316084*^9}, {3.898521695478556*^9, 
   3.898521698912264*^9}, {3.898521773629485*^9, 3.898521817374462*^9}, {
   3.8985219469529505`*^9, 3.898522019071253*^9}, {3.898522095589138*^9, 
   3.8985221520473156`*^9}, {3.8985221841570873`*^9, 3.898522195216323*^9}, {
   3.898522951696658*^9, 3.898523091574442*^9}, {3.8985231221111774`*^9, 
   3.898523147901129*^9}, {3.8989631439938545`*^9, 3.8989631453230443`*^9}, {
   3.899024367635637*^9, 3.899024371281042*^9}, {3.899263550287033*^9, 
   3.899263556775858*^9}, {3.8992644406485643`*^9, 3.899264474035733*^9}, {
   3.899264575715626*^9, 3.899264831744545*^9}, {3.899264929937586*^9, 
   3.8992649523552723`*^9}, {3.899267063092107*^9, 3.899267065164672*^9}, 
   3.8992672828609896`*^9, {3.8992687809315214`*^9, 3.8992688972955236`*^9}, {
   3.899268989302785*^9, 3.8992689998763175`*^9}, {3.899269034611386*^9, 
   3.899269081246211*^9}, {3.899269149786484*^9, 3.899269221150139*^9}, {
   3.899269361249707*^9, 3.899269391933929*^9}, {3.899269566568699*^9, 
   3.8992696173962507`*^9}, {3.8992699607831717`*^9, 
   3.8992699641494064`*^9}, {3.899272942645192*^9, 3.899273115845751*^9}, {
   3.899273147873816*^9, 3.8992731490240774`*^9}, {3.911294581724413*^9, 
   3.911294582325656*^9}, {3.911398024322586*^9, 3.911398050805479*^9}, {
   3.911398281119077*^9, 3.9113983513503833`*^9}, {3.911398428263364*^9, 
   3.9113984422266455`*^9}, {3.911398682116357*^9, 3.9113986868575525`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"104a5d65-74c6-4316-b5d3-66dd8ae68c11"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mix Server Performs Multi-Key Shuffle", "Section",
 CellChangeTimes->{{3.8866755964292774`*^9, 3.88667560657975*^9}, {
  3.892394350733077*^9, 3.89239435244112*^9}, {3.899271961593216*^9, 
  3.899272004263422*^9}, {3.911398529155712*^9, 
  3.911398539183647*^9}},ExpressionUUID->"03e8145b-2464-4cf5-a8c1-\
a635c0cf917a"],

Cell[TextData[{
 "- CRS Check\n- Choose random shift s and permutation \[Pi]\n- Transform \
shuffle input ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["h", "\[RightVector]"], TraditionalForm]],
  FontWeight->"Plain",ExpressionUUID->
  "d97c2b47-82e5-4368-a6de-6dee49080cc9"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["b", "\[RightVector]"], TraditionalForm]],
  FontWeight->"Plain",ExpressionUUID->
  "25b01470-d99f-46f7-9fb6-a2ab78d1b2bc"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["c", "\[RightVector]"], TraditionalForm]],
  FontWeight->"Plain",ExpressionUUID->
  "5241b611-c162-452e-809c-0140e1c68d42"],
 " into ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{"h", "'"}], "\[RightVector]"], TraditionalForm]],
  FontWeight->"Plain",ExpressionUUID->
  "d95ad5da-f456-4880-a8ee-b79f7a74119e"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{"b", "'"}], "\[RightVector]"], TraditionalForm]],
  FontWeight->"Plain",ExpressionUUID->
  "d43d7b0d-1f29-403a-a6f5-76c7c0f3032f"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{"c", "'"}], "\[RightVector]"], TraditionalForm]],
  FontWeight->"Plain",ExpressionUUID->
  "8045858e-9300-4b8b-9163-22ec0517419a"],
 "\n- Create commitments V to s and W to ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["s", "n"], TraditionalForm]],ExpressionUUID->
  "cac738d9-79c5-4a50-9c12-a11d999db9fa"],
 "\n- Commit to s by V and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["s", "n"], TraditionalForm]],ExpressionUUID->
  "e0fc341c-faa6-4e8d-916c-3ce0ccde4b82"],
 " by W",
 StyleBox["\nSecret:",
  FontWeight->"Bold"],
 "\ns: secret key shift\n\[Pi]: secret permutation\n",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Pi]", 
    RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
  "a486759b-1b1a-4638-ab97-6c2c6ebc2bc6"],
 ": inverse of \[Pi]\n",
 StyleBox["Public:",
  FontWeight->"Bold"],
 "\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox["h", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "2c089bb9-5cff-41dd-9e1f-80fbadac0c6a"],
 ": public keys of receivers - to allow receivers to identify their messages\n\
",
 Cell[BoxData[
  FormBox[
   OverscriptBox["b", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "47ab99dc-3cf9-4897-8eb9-effe6f146b69"],
 ": commitments to blinding values - ElGamal randomizers\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox["c", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "bcc5bfe6-0119-4f6d-ba0e-5a50f6ce2539"],
 ": blinded commitments to messages - ElGamal message\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox["d", "\[RightVector]"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "82bcda6c-3219-48a5-94e3-7904bd67bd4c"],
 ": public keys of senders - to allow receivers to reply\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{"h", "'"}], "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "c63dd8ae-3570-457a-8f0a-bc3dff658c43"],
 ": shuffled and shifted ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["h", "\[RightVector]"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2094fe2e-1b9c-408c-8e55-23122c4f504b"],
 "\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{"b", "'"}], "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "b18b5d44-e3ea-4215-a7ba-6257e884eb4a"],
 ": shuffled and shifted ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["b", "\[RightVector]"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "d412280f-afc0-42e7-a734-8e0fd49d2688"],
 "\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{"c", "'"}], "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "94d15067-892b-4248-bee8-1e46bba95c63"],
 ": shuffled and shifted ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["c", "\[RightVector]"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f8ba27a0-59c6-4804-a466-797256230094"],
 "\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{"d", "'"}], "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "efd209b1-2021-4813-8953-3420781a5ef9"],
 ": shuffled and shifted ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["d", "\[RightVector]"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "4efd9735-1fb3-461a-811e-1ea7b8ace1b5"],
 "\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{"h", "'"}], "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "e42e3136-fbb5-4622-98b7-c589bf46a45a"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{"b", "'"}], "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "960dacd6-de80-465c-a8af-fe1d27515695"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{"c", "'"}], "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "9810faca-aeef-4fe8-a78a-165e0ad3a6f9"],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{"d", "'"}], "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "d5030677-b3a6-45a0-9d71-e39c1e7887d3"],
 " are added to the CRS"
}], "Text",
 CellChangeTimes->{{3.8923571720703077`*^9, 3.892357172344945*^9}, {
   3.8923631755177*^9, 3.892363228198937*^9}, {3.892363978370638*^9, 
   3.892363978735927*^9}, {3.8923854860347157`*^9, 3.8923855819475*^9}, {
   3.892385623933488*^9, 3.892385649044621*^9}, {3.892385778962092*^9, 
   3.8923858055559883`*^9}, {3.892386704008974*^9, 3.8923868076996202`*^9}, {
   3.8923913468381844`*^9, 3.892391382167954*^9}, {3.8923914827044973`*^9, 
   3.892391629345757*^9}, {3.892440099391005*^9, 3.892440109780429*^9}, {
   3.892467905102088*^9, 3.892467920007127*^9}, {3.892477395910755*^9, 
   3.892477396029931*^9}, {3.899269695020104*^9, 3.8992698360708666`*^9}, {
   3.8992698953218584`*^9, 3.8992699129502125`*^9}, {3.899271788708587*^9, 
   3.899271823213793*^9}, 3.899271939823138*^9, {3.899272018147406*^9, 
   3.8992720184991446`*^9}, {3.9113987975631924`*^9, 
   3.9113988461732545`*^9}, {3.9113989061676683`*^9, 3.911398987274089*^9}, {
   3.9114010379636946`*^9, 
   3.9114010388654613`*^9}},ExpressionUUID->"593efc0c-27b6-4ed2-8071-\
9de6fc44e049"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"StateMachineRestore", "[", "\"\<ShuffleInput\>\"", "]"}], ";"}], 
  "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Perform", " ", "CRS", " ", "Check"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GroupOK", " ", "=", " ", "True"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Assume", " ", "choice", " ", "of", " ", "group", " ", "is", " ", 
    "compliant", " ", "with", " ", "CRS", " ", "requirements"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"!", "GroupOK"}], " ", "||", " ", 
     RowBox[{"!", 
      RowBox[{"PrimeQ", "[", "q", "]"}]}]}], ",", " ", 
    RowBox[{"Error", "[", "\"\<CRS check on group\>\"", "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"g", " ", "==", " ", "\[ScriptCapitalO]"}], ",", " ", 
    RowBox[{"Error", "[", "\"\<CRS check on g\>\"", "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"MemberQ", "[", 
     RowBox[{
      OverscriptBox["g", "\[RightVector]"], ",", " ", "\[ScriptCapitalO]"}], 
     "]"}], ",", " ", 
    RowBox[{
    "Error", "[", 
     "\"\<CRS check on \!\(\*OverscriptBox[\(g\), \(\[RightVector]\)]\)\>\"", 
     "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"MemberQ", "[", 
     RowBox[{
      OverscriptBox["h", "\[RightVector]"], ",", " ", "\[ScriptCapitalO]"}], 
     "]"}], ",", " ", 
    RowBox[{
    "Error", "[", 
     "\"\<CRS check on \!\(\*OverscriptBox[\(h\), \(\[RightVector]\)]\) \
(depending on user value \!\(\*OverscriptBox[\(x\), \
\(\[RightVector]\)]\))\>\"", "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"MemberQ", "[", 
     RowBox[{
      OverscriptBox["b", "\[RightVector]"], ",", " ", "\[ScriptCapitalO]"}], 
     "]"}], ",", " ", 
    RowBox[{
    "Error", "[", 
     "\"\<CRS check on \!\(\*OverscriptBox[\(b\), \(\[RightVector]\)]\) \
(depending on user value \!\(\*OverscriptBox[\(\[Gamma]\), \
\(\[RightVector]\)]\))\>\"", "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"MemberQ", "[", 
     RowBox[{
      OverscriptBox["c", "\[RightVector]"], ",", " ", "\[ScriptCapitalO]"}], 
     "]"}], ",", " ", 
    RowBox[{
    "Error", "[", 
     "\"\<CRS check on \!\(\*OverscriptBox[\(c\), \(\[RightVector]\)]\) \
(depending on user values \!\(\*OverscriptBox[\(x\), \(\[RightVector]\)]\), \
\!\(\*OverscriptBox[\(\[Gamma]\), \(\[RightVector]\)]\) and their messages)\>\
\"", "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"MemberQ", "[", 
      RowBox[{
       OverscriptBox["d", "\[RightVector]"], ",", " ", "\[ScriptCapitalO]"}], 
      "]"}], ",", " ", 
     RowBox[{
     "Error", "[", 
      "\"\<CRS check on \!\(\*OverscriptBox[\(d\), \(\[RightVector]\)]\) \
(depending on user value \!\(\*OverscriptBox[\(x\), \
\(\[RightVector]\)]\))\>\"", "]"}]}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Unprotect", "[", "\[Pi]", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"While", "[", 
    RowBox[{"True", ",", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{
      "Choose", " ", "random", " ", "permutation", " ", "and", " ", "random", 
       " ", "key", " ", "shift"}], "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"s", " ", "=", " ", 
       RowBox[{"BPRandomInteger", "[", 
        RowBox[{"1", ",", 
         RowBox[{"q", "-", "1"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"\[Pi]", " ", "=", " ", 
       RowBox[{"BPRandomPermutation", "[", "n", "]"}]}], ";", "\n", "\t", 
      RowBox[{
       SuperscriptBox["\[Pi]", 
        RowBox[{"-", "1"}]], " ", "=", " ", 
       RowBox[{"InversePermutation", "[", "\[Pi]", "]"}]}], ";", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Transform", " ", "input", " ", 
         OverscriptBox["h", "\[RightVector]"]}], ",", " ", 
        OverscriptBox["b", "\[RightVector]"], ",", " ", 
        OverscriptBox["c", "\[RightVector]"], ",", " ", 
        RowBox[{
         OverscriptBox["d", "\[RightVector]"], " ", "into", " ", 
         OverscriptBox[
          RowBox[{"h", "'"}], "\[RightVector]"]}], ",", " ", 
        OverscriptBox[
         RowBox[{"b", "'"}], "\[RightVector]"], ",", " ", 
        OverscriptBox[
         RowBox[{"c", "'"}], "\[RightVector]"], ",", " ", 
        RowBox[{
         RowBox[{
          OverscriptBox[
           RowBox[{"d", "'"}], "\[RightVector]"], " ", "by", " ", "shuffling",
           " ", "and", " ", "key"}], "-", "shifting"}]}], "*)"}], "\n", "\t", 
      
      RowBox[{
       OverscriptBox[
        RowBox[{"h", "'"}], "\[RightVector]"], " ", "=", " ", 
       RowBox[{"s", " ", "*", " ", 
        RowBox[{"Permute", "[", 
         RowBox[{
          OverscriptBox["h", "\[RightVector]"], ",", " ", "\[Pi]"}], 
         "]"}]}]}], ";", "\n", "\t", 
      RowBox[{
       OverscriptBox[
        RowBox[{"b", "'"}], "\[RightVector]"], " ", "=", " ", 
       RowBox[{"s", " ", "*", " ", 
        RowBox[{"Permute", "[", 
         RowBox[{
          OverscriptBox["b", "\[RightVector]"], ",", " ", "\[Pi]"}], 
         "]"}]}]}], ";", "\n", "\t", 
      RowBox[{
       OverscriptBox[
        RowBox[{"c", "'"}], "\[RightVector]"], " ", "=", " ", 
       RowBox[{"s", " ", "*", " ", 
        RowBox[{"Permute", "[", 
         RowBox[{
          OverscriptBox["c", "\[RightVector]"], ",", " ", "\[Pi]"}], 
         "]"}]}]}], ";", "\n", "\t", 
      RowBox[{
       OverscriptBox[
        RowBox[{"d", "'"}], "\[RightVector]"], " ", "=", " ", 
       RowBox[{"s", " ", "*", " ", 
        RowBox[{"Permute", "[", 
         RowBox[{
          OverscriptBox["d", "\[RightVector]"], ",", " ", "\[Pi]"}], 
         "]"}]}]}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{
            OverscriptBox[
             RowBox[{"h", "'"}], "\[RightVector]"], ",", " ", 
            "\[ScriptCapitalO]"}], "]"}]}], " ", "&&", " ", 
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{
            OverscriptBox[
             RowBox[{"b", "'"}], "\[RightVector]"], ",", " ", 
            "\[ScriptCapitalO]"}], "]"}]}], " ", "&&", " ", 
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{
            OverscriptBox[
             RowBox[{"c", "'"}], "\[RightVector]"], ",", " ", 
            "\[ScriptCapitalO]"}], "]"}]}], " ", "&&", " ", 
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{
            OverscriptBox[
             RowBox[{"d", "'"}], "\[RightVector]"], ",", " ", 
            "\[ScriptCapitalO]"}], "]"}]}]}], ",", " ", 
        RowBox[{"Break", "[", "]"}]}], "]"}], ";"}]}], "\n", "]"}], ";"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Commit", " ", "to", " ", "key", " ", "shift"}], ";", "\n", 
    RowBox[{
    "V", " ", "will", " ", "be", " ", "sent", " ", "to", " ", "the", " ", 
     "verifier", " ", "alongside", " ", "commitment", " ", "W", " ", "in", 
     " ", "the", " ", "next", " ", "step", " ", "of", " ", "the", " ", 
     "prover"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"V", " ", "=", " ", 
    RowBox[{"s", "*", "g"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Add", " ", 
     OverscriptBox[
      RowBox[{"h", "'"}], "\[RightVector]"]}], ",", " ", 
    OverscriptBox[
     RowBox[{"b", "'"}], "\[RightVector]"], ",", " ", 
    RowBox[{
     OverscriptBox[
      RowBox[{"c", "'"}], "\[RightVector]"], " ", "and", " ", 
     OverscriptBox[
      RowBox[{"d", "'"}], "\[RightVector]"], " ", "to", " ", "the", " ", 
     "CRS"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SendCRS", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<hprimevec\>\"", "->", 
       OverscriptBox[
        RowBox[{"h", "'"}], "\[RightVector]"]}], ",", 
      RowBox[{"\"\<bprimevec\>\"", "->", 
       OverscriptBox[
        RowBox[{"b", "'"}], "\[RightVector]"]}], ",", 
      RowBox[{"\"\<cprimevec\>\"", "->", 
       OverscriptBox[
        RowBox[{"c", "'"}], "\[RightVector]"]}], ",", 
      RowBox[{"\"\<dprimevec\>\"", "->", 
       OverscriptBox[
        RowBox[{"d", "'"}], "\[RightVector]"]}]}], "}"}], "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FiatShamirAdd", "[", 
          RowBox[{
           RowBox[{"\"\<h.\>\"", "<>", 
            RowBox[{"ToString", "[", "#", "]"}]}], ",", " ", 
           RowBox[{
            OverscriptBox["h", "\[RightVector]"], "[", 
            RowBox[{"[", "#", "]"}], "]"}], ",", " ", "0"}], "]"}], "&"}], 
        ",", " ", 
        RowBox[{"Range", "[", "n", "]"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FiatShamirAdd", "[", 
          RowBox[{
           RowBox[{"\"\<b.\>\"", "<>", 
            RowBox[{"ToString", "[", "#", "]"}]}], ",", " ", 
           RowBox[{
            OverscriptBox["b", "\[RightVector]"], "[", 
            RowBox[{"[", "#", "]"}], "]"}], ",", " ", "0"}], "]"}], "&"}], 
        ",", " ", 
        RowBox[{"Range", "[", "n", "]"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FiatShamirAdd", "[", 
          RowBox[{
           RowBox[{"\"\<c.\>\"", "<>", 
            RowBox[{"ToString", "[", "#", "]"}]}], ",", " ", 
           RowBox[{
            OverscriptBox["c", "\[RightVector]"], "[", 
            RowBox[{"[", "#", "]"}], "]"}], ",", " ", "0"}], "]"}], "&"}], 
        ",", " ", 
        RowBox[{"Range", "[", "n", "]"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FiatShamirAdd", "[", 
          RowBox[{
           RowBox[{"\"\<d.\>\"", "<>", 
            RowBox[{"ToString", "[", "#", "]"}]}], ",", " ", 
           RowBox[{
            OverscriptBox["d", "\[RightVector]"], "[", 
            RowBox[{"[", "#", "]"}], "]"}], ",", " ", "0"}], "]"}], "&"}], 
        ",", " ", 
        RowBox[{"Range", "[", "n", "]"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FiatShamirAdd", "[", 
          RowBox[{
           RowBox[{"\"\<h'.\>\"", "<>", 
            RowBox[{"ToString", "[", "#", "]"}]}], ",", " ", 
           RowBox[{
            OverscriptBox[
             RowBox[{"h", "'"}], "\[RightVector]"], "[", 
            RowBox[{"[", "#", "]"}], "]"}], ",", " ", "0"}], "]"}], "&"}], 
        ",", " ", 
        RowBox[{"Range", "[", "n", "]"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FiatShamirAdd", "[", 
          RowBox[{
           RowBox[{"\"\<b'.\>\"", "<>", 
            RowBox[{"ToString", "[", "#", "]"}]}], ",", " ", 
           RowBox[{
            OverscriptBox[
             RowBox[{"b", "'"}], "\[RightVector]"], "[", 
            RowBox[{"[", "#", "]"}], "]"}], ",", " ", "0"}], "]"}], "&"}], 
        ",", " ", 
        RowBox[{"Range", "[", "n", "]"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FiatShamirAdd", "[", 
          RowBox[{
           RowBox[{"\"\<c'.\>\"", "<>", 
            RowBox[{"ToString", "[", "#", "]"}]}], ",", " ", 
           RowBox[{
            OverscriptBox[
             RowBox[{"c", "'"}], "\[RightVector]"], "[", 
            RowBox[{"[", "#", "]"}], "]"}], ",", " ", "0"}], "]"}], "&"}], 
        ",", " ", 
        RowBox[{"Range", "[", "n", "]"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FiatShamirAdd", "[", 
          RowBox[{
           RowBox[{"\"\<d'.\>\"", "<>", 
            RowBox[{"ToString", "[", "#", "]"}]}], ",", " ", 
           RowBox[{
            OverscriptBox[
             RowBox[{"d", "'"}], "\[RightVector]"], "[", 
            RowBox[{"[", "#", "]"}], "]"}], ",", " ", "0"}], "]"}], "&"}], 
        ",", " ", 
        RowBox[{"Range", "[", "n", "]"}]}], "]"}], ";"}]}], "\n", "]"}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Name/Equation\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Knowledge\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Value/Equality\>\"", ",", "Bold"}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\>\"", ",", "\"\<CRS Check passed?\>\"", ",", "\"\<P,V\>\"", ",",
          "True"}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(x\), \(\[RightVector]\)]\)\>\"", ",", 
         "\"\<Secret Keys\>\"", ",", "\"\<P\>\"", ",", 
         OverscriptBox["x", "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(\[Gamma]\), \(\[RightVector]\)]\)\>\"", 
         ",", "\"\<Secret Blinding Values\>\"", ",", "\"\<P\>\"", ",", 
         OverscriptBox["\[Gamma]", "\[RightVector]"]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(m\), \(\[RightVector]\)]\)\>\"", ",", 
         "\"\<Secret Messages\>\"", ",", "\"\<P\>\"", ",", 
         OverscriptBox["m", "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<s\>\"", ",", "\"\<Secret Shift\>\"", ",", "\"\<P\>\"", ",", 
         "s"}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Pi]\>\"", ",", "\"\<Secret permutation\>\"", ",", "\"\<P\>\"", 
         ",", "\[Pi]"}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(h\), \(\[RightVector]\)]\)\>\"", ",", 
         "\"\<Public Keys of Receivers for Message Identification\>\"", ",", 
         "\"\<P,V\>\"", ",", 
         OverscriptBox["h", "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(b\), \(\[RightVector]\)]\)\>\"", ",", 
         "\"\<Commitments to \!\(\*OverscriptBox[\(\[Gamma]\), \(\
\[RightVector]\)]\): ElGamal randomizer part\>\"", ",", "\"\<P,V\>\"", ",", 
         OverscriptBox["b", "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(c\), \(\[RightVector]\)]\)\>\"", ",", 
         "\"\<Blinded Commitments \!\(\*OverscriptBox[\(m\), \(\[RightVector]\
\)]\): ElGamal message part\>\"", ",", "\"\<P,V\>\"", ",", 
         OverscriptBox["c", "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(d\), \(\[RightVector]\)]\)\>\"", ",", 
         "\"\<Public Keys of Senders to Allow Receivers to Reply\>\"", ",", 
         "\"\<P,V\>\"", ",", 
         OverscriptBox["d", "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(h'\), \(\[RightVector]\)]\)\>\"", ",", 
         "\"\<Shuffled and Shifted \!\(\*OverscriptBox[\(h\), \
\(\[RightVector]\)]\)\>\"", ",", "\"\<P,V\>\"", ",", 
         OverscriptBox[
          RowBox[{"h", "'"}], "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(b'\), \(\[RightVector]\)]\)\>\"", ",", 
         "\"\<Shuffled and Shifted \!\(\*OverscriptBox[\(b\), \
\(\[RightVector]\)]\)\>\"", ",", "\"\<P,V\>\"", ",", 
         OverscriptBox[
          RowBox[{"b", "'"}], "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(c'\), \(\[RightVector]\)]\)\>\"", ",", 
         "\"\<Shuffled and Shifted \!\(\*OverscriptBox[\(c\), \
\(\[RightVector]\)]\)\>\"", ",", "\"\<P,V\>\"", ",", 
         OverscriptBox[
          RowBox[{"c", "'"}], "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(d'\), \(\[RightVector]\)]\)\>\"", ",", 
         "\"\<Shuffled and Shifted \!\(\*OverscriptBox[\(d\), \
\(\[RightVector]\)]\)\>\"", ",", "\"\<P,V\>\"", ",", 
         OverscriptBox[
          RowBox[{"d", "'"}], "\[RightVector]"]}], "}"}]}], "\n", "}"}], ",", 
     
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left", ",", "Left"}], "}"}], 
       "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "interactive"}], ",", " ", 
    RowBox[{"Print", "[", 
     RowBox[{"FiatShamirGrid", "[", "]"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ProcessNewMessages", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"StateMachineSave", "[", "\"\<ShuffleOutput\>\"", "]"}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.8923571878717947`*^9, 3.892357200055768*^9}, {
   3.89236230124684*^9, 3.89236236547439*^9}, {3.8923624017205553`*^9, 
   3.892362442477952*^9}, {3.892362488188682*^9, 3.892362495666856*^9}, {
   3.892362814788315*^9, 3.89236286056986*^9}, {3.8923629188486643`*^9, 
   3.8923630071613197`*^9}, {3.892363123637072*^9, 3.892363157203899*^9}, {
   3.8923632465972643`*^9, 3.892363272205101*^9}, {3.8923635252986917`*^9, 
   3.89236353621837*^9}, {3.8923635991281424`*^9, 3.892363827436591*^9}, {
   3.892363858805607*^9, 3.8923638713633223`*^9}, {3.892363934360877*^9, 
   3.892364013129599*^9}, {3.892364055369052*^9, 3.892364090141733*^9}, {
   3.892364388138942*^9, 3.89236449647678*^9}, {3.892364603753725*^9, 
   3.892364636629084*^9}, {3.8923650044126587`*^9, 3.892365004817699*^9}, {
   3.8923854503730383`*^9, 3.892385458233302*^9}, {3.8923858232991133`*^9, 
   3.8923858427424*^9}, {3.892385942166603*^9, 3.8923859445433407`*^9}, {
   3.8923859780476007`*^9, 3.8923859882985287`*^9}, {3.892386652804433*^9, 
   3.892386678973385*^9}, {3.892386817464233*^9, 3.892386825876734*^9}, {
   3.89238697683743*^9, 3.8923870110602007`*^9}, {3.892387051524971*^9, 
   3.892387069904491*^9}, {3.8923872555330887`*^9, 3.8923873736842833`*^9}, {
   3.89238830101038*^9, 3.892388466705098*^9}, {3.892388527451086*^9, 
   3.892388604572899*^9}, {3.892388640982808*^9, 3.892388662944775*^9}, 
   3.8923887094605293`*^9, {3.892388830070395*^9, 3.8923888764620934`*^9}, {
   3.8923889095642567`*^9, 3.892389819625381*^9}, {3.892389870008039*^9, 
   3.892389949844398*^9}, {3.892390262458871*^9, 3.892390481679137*^9}, {
   3.892390517168909*^9, 3.8923905240567503`*^9}, {3.892390565455769*^9, 
   3.8923905743015842`*^9}, {3.8923906307152977`*^9, 3.892390631408017*^9}, {
   3.8923911552917757`*^9, 3.892391285453761*^9}, {3.8923913376745863`*^9, 
   3.8923913393520727`*^9}, {3.892391845831077*^9, 3.892391848941504*^9}, {
   3.89239199865071*^9, 3.892392017480694*^9}, {3.89239211466315*^9, 
   3.892392119420492*^9}, {3.892392155244878*^9, 3.892392156484653*^9}, {
   3.892392220815569*^9, 3.892392230325943*^9}, {3.8923926065085*^9, 
   3.892392727116535*^9}, {3.892392937539665*^9, 3.8923929408385687`*^9}, {
   3.892393095282831*^9, 3.8923931143246*^9}, {3.892393151202076*^9, 
   3.892393154593585*^9}, {3.892393190226697*^9, 3.892393277875904*^9}, {
   3.8923933176205807`*^9, 3.892393361939369*^9}, {3.892394429725092*^9, 
   3.892394465687763*^9}, {3.892394523413548*^9, 3.892394524872693*^9}, {
   3.892394577834601*^9, 3.892394591360033*^9}, {3.8923952990599947`*^9, 
   3.892395313713431*^9}, 3.892395536679398*^9, {3.8923994992054377`*^9, 
   3.8923995285219812`*^9}, {3.8924010277356977`*^9, 3.892401040288027*^9}, 
   3.892402419319872*^9, {3.892402775545259*^9, 3.8924028162549543`*^9}, {
   3.892402927277507*^9, 3.892402935749629*^9}, {3.892467852781682*^9, 
   3.8924678570389853`*^9}, {3.892467942824258*^9, 3.892467961473259*^9}, {
   3.89247728456769*^9, 3.8924773356798983`*^9}, {3.89247769677456*^9, 
   3.8924777072711973`*^9}, {3.892477747269787*^9, 3.89247780646216*^9}, {
   3.898322226604899*^9, 3.8983222272630105`*^9}, {3.8983223726765237`*^9, 
   3.8983224231832685`*^9}, {3.898322455054038*^9, 3.898322569611556*^9}, {
   3.898322637177204*^9, 3.89832273624268*^9}, {3.898322770540284*^9, 
   3.898322788970343*^9}, {3.898323149256177*^9, 3.898323195741954*^9}, {
   3.8983232402413597`*^9, 3.898323260941909*^9}, {3.8983239339242396`*^9, 
   3.8983239702708683`*^9}, {3.898324032152175*^9, 3.8983240394644837`*^9}, {
   3.898324087938128*^9, 3.898324097752076*^9}, {3.8983243937913*^9, 
   3.8983244151979856`*^9}, {3.8983245337950954`*^9, 
   3.8983245353648167`*^9}, {3.8983252858725677`*^9, 3.898325359344976*^9}, {
   3.8983266010339036`*^9, 3.898326601177354*^9}, {3.8983443696883245`*^9, 
   3.898344377505392*^9}, {3.8984862263023334`*^9, 3.898486433431111*^9}, {
   3.898486542572585*^9, 3.898486571807664*^9}, {3.898486618387602*^9, 
   3.898486632479243*^9}, {3.8984866682708135`*^9, 3.8984866971684294`*^9}, {
   3.8984867519002037`*^9, 3.8984868741078362`*^9}, {3.8984869087771883`*^9, 
   3.8984869425878277`*^9}, {3.89848703430153*^9, 3.898487103686263*^9}, {
   3.898487530117668*^9, 3.898487549829985*^9}, {3.898508581271341*^9, 
   3.8985085826874943`*^9}, {3.8985207054915276`*^9, 
   3.8985207129994926`*^9}, {3.89852075141648*^9, 3.8985208567673483`*^9}, {
   3.8985208883813295`*^9, 3.898521047749621*^9}, {3.8985212290381603`*^9, 
   3.898521249020995*^9}, {3.898521291211966*^9, 3.898521360536496*^9}, {
   3.8985215427025337`*^9, 3.898521551316084*^9}, {3.898521695478556*^9, 
   3.898521698912264*^9}, {3.898521773629485*^9, 3.898521817374462*^9}, {
   3.8985219469529505`*^9, 3.898522019071253*^9}, {3.898522095589138*^9, 
   3.8985221520473156`*^9}, {3.8985221841570873`*^9, 3.898522195216323*^9}, {
   3.898522951696658*^9, 3.898523091574442*^9}, {3.8985231221111774`*^9, 
   3.898523147901129*^9}, {3.8989631439938545`*^9, 3.8989631453230443`*^9}, {
   3.899024367635637*^9, 3.899024371281042*^9}, {3.899263550287033*^9, 
   3.899263556775858*^9}, {3.8992644406485643`*^9, 3.899264474035733*^9}, {
   3.899264575715626*^9, 3.899264831744545*^9}, {3.899264929937586*^9, 
   3.8992649523552723`*^9}, {3.8992696241089373`*^9, 
   3.8992696318813667`*^9}, {3.899269855497327*^9, 3.8992698596524944`*^9}, 
   3.899269954988388*^9, {3.8992701169894295`*^9, 3.8992703695511813`*^9}, {
   3.8992704017039785`*^9, 3.899270428124405*^9}, {3.89927104110015*^9, 
   3.8992710738430786`*^9}, {3.899271214383683*^9, 3.899271214531132*^9}, {
   3.8992713204310493`*^9, 3.8992713228900523`*^9}, {3.8992714286449566`*^9, 
   3.8992714325847044`*^9}, {3.8992718334113164`*^9, 3.8992718567407017`*^9}, 
   3.8992719182022033`*^9, {3.8992728412206044`*^9, 3.8992728418745766`*^9}, {
   3.8992738460506096`*^9, 3.899273885626717*^9}, {3.8992780715137143`*^9, 
   3.8992781094611497`*^9}, {3.8993849654216003`*^9, 3.8993849654305954`*^9}, 
   3.899386281799593*^9, {3.911401050187411*^9, 3.911401121706646*^9}, {
   3.911401161442449*^9, 3.911401413560796*^9}, {3.9114078919243813`*^9, 
   3.911407891993004*^9}, {3.911407924791311*^9, 3.911407949034444*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"b1548369-de6d-44a3-a372-02e23a06db60"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Users Identify and Decrypt the Messages they Received", "Section",
 CellChangeTimes->{{3.8866755964292774`*^9, 3.88667560657975*^9}, {
  3.892394350733077*^9, 3.89239435244112*^9}, {3.8992668397494383`*^9, 
  3.899266876681595*^9}, {3.8992669363817887`*^9, 3.8992669960812497`*^9}, {
  3.8992673044211593`*^9, 3.8992673050289946`*^9}, {3.899268268740056*^9, 
  3.8992682688720093`*^9}, {3.899273643966826*^9, 3.8992736472548227`*^9}, {
  3.899273734849166*^9, 3.899273735790124*^9}, {3.8992777872992415`*^9, 
  3.8992777919467587`*^9}, {3.9112945890010347`*^9, 
  3.9112945896194267`*^9}},ExpressionUUID->"34bd3f7a-1107-43a9-8486-\
727468d920cb"],

Cell[TextData[{
 "After the multi-key shuffle has been completed, the users can go on to \
identify and decrypt the messages that they anonymously received from other \
users. Usually, this happens after the proof of shuffle has been finished, \
but to avoid spacially separating encryption, shuffling and decryption, it \
has been put here.\nEach user individually checks the shuffled messages at \
the public bulletin board and identifies the ones dedicated to him. On each \
shifted public key in ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{"h", "'"}], "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "4befd2c1-81c1-4b68-b556-fba3d94de05f"],
 " he tests ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"[", 
      RowBox[{
       RowBox[{"pub_key", "*", "s"}], "=", 
       RowBox[{
        RowBox[{"g", "*", "priv_key", "*", "s"}], "="}]}], "]"}], 
     SubsuperscriptBox["h", "j", "'"]}], " ", 
    OverscriptBox["=", "?"], " ", 
    RowBox[{"V", "*", " ", 
     RowBox[{"priv_key", " ", "[", 
      RowBox[{"=", " ", 
       RowBox[{"g", "*", "s", "*", "priv_key"}]}], "]"}]}]}], 
   TraditionalForm]],ExpressionUUID->"6ae26f2f-376d-4e14-8194-43e64d85e0a7"],
 ". In case of equality the corresponding message can be decrypted as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubsuperscriptBox["b", "j", "'"], "*", 
      RowBox[{"(", 
       RowBox[{"-", "priv_key"}], ")"}]}], "+", 
     SubsuperscriptBox["c", "j", "'"]}], "=", 
    RowBox[{
     SubscriptBox["m", "j"], "*", "V"}]}], TraditionalForm]],ExpressionUUID->
  "c3ad20bc-bd62-45cb-8876-224c0de97dc9"],
 ". Finally, the exponent ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "j"], TraditionalForm]],ExpressionUUID->
  "181b245b-0369-4278-abe4-2ccd8e000879"],
 " has to be extracted from this result.\nActually, these calculations are \
performed secretly by each user as a separate client of the system. For \
simplicity, this was added to the shuffler\[CloseCurlyQuote]s notebook.",
 StyleBox["\nVariables:",
  FontWeight->"Bold"],
 "\n",
 StyleBox["index",
  FontSlant->"Italic"],
 ": position of user in arrays ",
 StyleBox["names",
  FontSlant->"Italic"],
 " and ",
 StyleBox["secretKeys",
  FontSlant->"Italic"],
 "\n",
 StyleBox["j",
  FontSlant->"Italic"],
 ": position of encrypted message on public bulletin board, i.e. index in ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{"h", "'"}], "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "2efa26c4-6e82-474a-889d-ec4975f618c8"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{"b", "'"}], "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "3b65fdc0-ab7c-4780-813b-4f1527032114"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{"c", "'"}], "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "dc8d1425-c14f-48e5-9544-c62141226b25"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{"d", "'"}], "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "1f168044-37e7-47ed-a59a-17da9ef7e7d6"]
}], "Text",
 CellChangeTimes->CompressedData["
1:eJwdxU0og3EAB+DXW96sKFNmtMk+XGdILWWzrLFNmBqhkTGWiC07SCQ2Yrtw
4+DIymmKzZJShu0g3JbVcrBG5qOYfM7/t8PTIzCNt5tpiqKKCZxSzDOFVFIZ
ZrkyU6svb0Vkr3HxG6uiui4u2efuzDzIO44IyY/6ozssjP0+4OUxwRO2h3r/
sCfszRKRHRrKhrUDqVlsue7eLyff9gUDWO7qOMPW/J0I5i+MOurI6k+/E7eo
RFwd2VRLleCEeCbQSq56n8usniigG/KSylPWHhs3Z09xcHS9kovj03Y+5p3L
SrE0dOPBuXomgJnDihEVecPAmsRWxn3QSF7ald7jzTbnM5YUsdN4KPWT00SW
R14V2O8LqzGdWDNg3grdg7csH0Z8Eer/0pKDJzVpXB+TXVaLk0rbcPwKc7Y1
ZgtZUubM/A+iQ6pA
  "],ExpressionUUID->"84b81e26-e4f6-4a5a-82fb-2c17f8e770ca"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"StateMachineRestore", "[", "\"\<ShuffleOutput\>\"", "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rows", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Scan", "[", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "index", "}"}], ",", " ", 
       RowBox[{"Block", "[", "\n", "\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "secretKey", ",", " ", "shiftedPublicKeyOfReceiver", ",", " ", 
           "keyCandidate", ",", " ", "messageAsGroupElement", ",", " ", 
           "message", ",", " ", "shiftedPublicKeyOfSender"}], "}"}], ",", 
         "\n", "\t", 
         RowBox[{"(*", 
          RowBox[{
          "Each", " ", "User", " ", "executes", " ", "one", " ", "iteration", 
           " ", "of", " ", "this", " ", "loop", " ", "for", " ", "himself"}], 
          "*)"}], "\n", "\t", 
         RowBox[{
          RowBox[{"secretKey", " ", "=", " ", 
           RowBox[{"StringToInteger", "[", 
            RowBox[{"secretKeys", "[", 
             RowBox[{"[", "index", "]"}], "]"}], "]"}]}], ";", "\n", "\t", 
          RowBox[{"shiftedPublicKeyOfReceiver", " ", "=", " ", 
           RowBox[{"secretKey", "*", "V"}]}], ";", "\n", "\t", 
          RowBox[{"Scan", "[", 
           RowBox[{
            RowBox[{"Function", "[", 
             RowBox[{
              RowBox[{"{", "j", "}"}], ",", "\n", "\t\t", 
              RowBox[{"(*", 
               RowBox[{
               "The", " ", "User", " ", "scans", " ", "all", " ", "shuffled", 
                " ", "and", " ", "shifted", " ", "messages", " ", "on", " ", 
                "the", " ", "public", " ", "anonymouse", " ", "bulletin", " ",
                 "board", "\n", "\t\t", "and", " ", "checks", " ", "if", " ", 
                "the", " ", "shifted", " ", "public", " ", "key", " ", "of", 
                " ", "the", " ", "intended", " ", "receiver", " ", "matches", 
                " ", "his", " ", "own"}], "*)"}], "\n", "\t\t", 
              RowBox[{
               RowBox[{"keyCandidate", " ", "=", " ", 
                RowBox[{
                 OverscriptBox[
                  RowBox[{"h", "'"}], "\[RightVector]"], "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], ";", "\n", "\t\t", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                 "keyCandidate", " ", "==", " ", 
                  "shiftedPublicKeyOfReceiver"}], ",", "\n", "\t\t\t", 
                 RowBox[{
                  RowBox[{"messageAsGroupElement", " ", "=", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"-", "secretKey"}], ")"}], "*", 
                    RowBox[{
                    OverscriptBox[
                    RowBox[{"b", "'"}], "\[RightVector]"], "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], " ", "+", " ", 
                    RowBox[{
                    OverscriptBox[
                    RowBox[{"c", "'"}], "\[RightVector]"], "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}]}], ";", "\n", "\t\t\t", 
                  RowBox[{
                  "message", " ", "=", " ", 
                   "\"\<ERROR: Unknown exponent\>\""}], ";", "\n", "\t\t\t", 
                  RowBox[{"(*", 
                   RowBox[{"Twisted", " ", 
                    RowBox[{"ElGamal", ":", " ", 
                    RowBox[{
                    "Extract", " ", "exponent", " ", "in", " ", "ElGamal", 
                    " ", "message", " ", "part"}]}]}], "*)"}], "\n", "\t\t\t", 
                  RowBox[{"Scan", "[", "\n", "\t\t\t\t", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringToInteger", "[", "#", "]"}], "*", "V"}], 
                    " ", "==", " ", "messageAsGroupElement"}], ",", "\n", 
                    "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"message", " ", "=", " ", "#"}], ";"}]}], "\n", 
                    "\t\t\t\t", "]"}], "&"}], ",", "\n", "\t\t\t\t", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Berlin\>\"", ",", " ", "\"\<Dresden\>\"", ",", " ", 
                    "\"\<K\[ODoubleDot]ln\>\"", ",", " ", 
                    "\"\<M\[UDoubleDot]nchen\>\"", ",", " ", 
                    "\"\<Frankfurt\>\"", ",", "\n", "\t\t\t\t", 
                    "\"\<Hamburg\>\"", ",", " ", "\"\<Wien\>\"", ",", " ", 
                    "\"\<Budapest\>\"", ",", " ", "\"\<Prag\>\"", ",", " ", 
                    "\"\<Bozen\>\"", ",", " ", "\"\<Basel\>\"", ",", "\n", 
                    "\t\t\t\t", "\"\<Stra\[SZ]burg\>\"", ",", " ", 
                    "\"\<Saarbr\[UDoubleDot]cken\>\"", ",", " ", 
                    "\"\<Aachen\>\"", ",", " ", "\"\<Innsbruck\>\"", ",", 
                    " ", "\"\<Bern\>\""}], "}"}]}], "\n", "\t\t\t", "]"}], 
                  ";", "\n", "\t\t\t", 
                  RowBox[{"(*", 
                   RowBox[{"Reply", " ", "Key"}], "*)"}], "\n", "\t\t\t", 
                  RowBox[{"shiftedPublicKeyOfSender", " ", "=", " ", 
                   RowBox[{
                    OverscriptBox[
                    RowBox[{"d", "'"}], "\[RightVector]"], "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], ";", "\n", "\t\t\t", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"rows", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"names", "[", 
                    RowBox[{"[", "index", "]"}], "]"}], ",", " ", "j", ",", 
                    " ", "message", ",", " ", "shiftedPublicKeyOfSender"}], 
                    "}"}]}], "]"}], ";"}]}], "\n", "\t\t\t", 
                RowBox[{"(*", 
                 RowBox[{
                 "User", " ", "could", " ", "reply", " ", "with", " ", "the", 
                  " ", "shifted", " ", "public", " ", "key", " ", "of", " ", 
                  "the", " ", "sender", " ", "on", " ", "shuffling", " ", 
                  RowBox[{"back", ".", " ", "This"}], " ", "routine", " ", 
                  "has", " ", "not", " ", "been", " ", 
                  RowBox[{"implemented", "."}]}], "*)"}], "\n", "\t\t", "]"}],
                ";"}]}], "\n", "\t", "]"}], ",", " ", 
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", " ", 
              RowBox[{"Length", "[", 
               OverscriptBox[
                RowBox[{"h", "'"}], "\[RightVector]"], "]"}]}], "]"}]}], 
           "]"}], ";"}]}], "\n", "]"}]}], "]"}], ",", " ", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", " ", 
       RowBox[{"Length", "[", "secretKeys", "]"}]}], "]"}]}], "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"Join", "[", "\n", "\t", 
       RowBox[{
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Decrypted Messages\>\"", ",", "Bold"}], "]"}], ",", 
            " ", "SpanFromLeft", ",", " ", "SpanFromLeft", ",", " ", 
            "SpanFromLeft"}], "}"}], ",", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Receiver\>\"", ",", "Bold"}], "]"}], ",", " ", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Index in Shuffle\>\"", ",", "Bold"}], "]"}], ",", 
            " ", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Decrypted Message\>\"", ",", "Bold"}], "]"}], ",", 
            " ", 
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<Shifted Public Key of Sender (Reply Key)\>\"", ",", " ", 
              "Bold"}], "]"}]}], "}"}]}], "\n", "\t", "}"}], ",", "\n", "\t", 
        "rows"}], "\n", "]"}], ",", " ", 
      RowBox[{"Alignment", "->", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"Left", ",", "Left", ",", "Left"}], "}"}], "}"}]}], ",", 
      RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"StateMachineSave", "[", "\"\<NeedShuffleProof\>\"", "]"}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.8923571878717947`*^9, 3.892357200055768*^9}, {
   3.89236230124684*^9, 3.89236236547439*^9}, {3.8923624017205553`*^9, 
   3.892362442477952*^9}, {3.892362488188682*^9, 3.892362495666856*^9}, {
   3.892362814788315*^9, 3.89236286056986*^9}, {3.8923629188486643`*^9, 
   3.8923630071613197`*^9}, {3.892363123637072*^9, 3.892363157203899*^9}, {
   3.8923632465972643`*^9, 3.892363272205101*^9}, {3.8923635252986917`*^9, 
   3.89236353621837*^9}, {3.8923635991281424`*^9, 3.892363827436591*^9}, {
   3.892363858805607*^9, 3.8923638713633223`*^9}, {3.892363934360877*^9, 
   3.892364013129599*^9}, {3.892364055369052*^9, 3.892364090141733*^9}, {
   3.892364388138942*^9, 3.89236449647678*^9}, {3.892364603753725*^9, 
   3.892364636629084*^9}, {3.8923650044126587`*^9, 3.892365004817699*^9}, {
   3.8923854503730383`*^9, 3.892385458233302*^9}, {3.8923858232991133`*^9, 
   3.8923858427424*^9}, {3.892385942166603*^9, 3.8923859445433407`*^9}, {
   3.8923859780476007`*^9, 3.8923859882985287`*^9}, {3.892386652804433*^9, 
   3.892386678973385*^9}, {3.892386817464233*^9, 3.892386825876734*^9}, {
   3.89238697683743*^9, 3.8923870110602007`*^9}, {3.892387051524971*^9, 
   3.892387069904491*^9}, {3.8923872555330887`*^9, 3.8923873736842833`*^9}, {
   3.89238830101038*^9, 3.892388466705098*^9}, {3.892388527451086*^9, 
   3.892388604572899*^9}, {3.892388640982808*^9, 3.892388662944775*^9}, 
   3.8923887094605293`*^9, {3.892388830070395*^9, 3.8923888764620934`*^9}, {
   3.8923889095642567`*^9, 3.892389819625381*^9}, {3.892389870008039*^9, 
   3.892389949844398*^9}, {3.892390262458871*^9, 3.892390481679137*^9}, {
   3.892390517168909*^9, 3.8923905240567503`*^9}, {3.892390565455769*^9, 
   3.8923905743015842`*^9}, {3.8923906307152977`*^9, 3.892390631408017*^9}, {
   3.8923911552917757`*^9, 3.892391285453761*^9}, {3.8923913376745863`*^9, 
   3.8923913393520727`*^9}, {3.892391845831077*^9, 3.892391848941504*^9}, {
   3.89239199865071*^9, 3.892392017480694*^9}, {3.89239211466315*^9, 
   3.892392119420492*^9}, {3.892392155244878*^9, 3.892392156484653*^9}, {
   3.892392220815569*^9, 3.892392230325943*^9}, {3.8923926065085*^9, 
   3.892392727116535*^9}, {3.892392937539665*^9, 3.8923929408385687`*^9}, {
   3.892393095282831*^9, 3.8923931143246*^9}, {3.892393151202076*^9, 
   3.892393154593585*^9}, {3.892393190226697*^9, 3.892393277875904*^9}, {
   3.8923933176205807`*^9, 3.892393361939369*^9}, {3.892394429725092*^9, 
   3.892394465687763*^9}, {3.892394523413548*^9, 3.892394524872693*^9}, {
   3.892394577834601*^9, 3.892394591360033*^9}, {3.8923952990599947`*^9, 
   3.892395313713431*^9}, 3.892395536679398*^9, {3.8923994992054377`*^9, 
   3.8923995285219812`*^9}, {3.8924010277356977`*^9, 3.892401040288027*^9}, 
   3.892402419319872*^9, {3.892402775545259*^9, 3.8924028162549543`*^9}, {
   3.892402927277507*^9, 3.892402935749629*^9}, {3.892467852781682*^9, 
   3.8924678570389853`*^9}, {3.892467942824258*^9, 3.892467961473259*^9}, {
   3.89247728456769*^9, 3.8924773356798983`*^9}, {3.89247769677456*^9, 
   3.8924777072711973`*^9}, {3.892477747269787*^9, 3.89247780646216*^9}, {
   3.898322226604899*^9, 3.8983222272630105`*^9}, {3.8983223726765237`*^9, 
   3.8983224231832685`*^9}, {3.898322455054038*^9, 3.898322569611556*^9}, {
   3.898322637177204*^9, 3.89832273624268*^9}, {3.898322770540284*^9, 
   3.898322788970343*^9}, {3.898323149256177*^9, 3.898323195741954*^9}, {
   3.8983232402413597`*^9, 3.898323260941909*^9}, {3.8983239339242396`*^9, 
   3.8983239702708683`*^9}, {3.898324032152175*^9, 3.8983240394644837`*^9}, {
   3.898324087938128*^9, 3.898324097752076*^9}, {3.8983243937913*^9, 
   3.8983244151979856`*^9}, {3.8983245337950954`*^9, 
   3.8983245353648167`*^9}, {3.8983252858725677`*^9, 3.898325359344976*^9}, {
   3.8983266010339036`*^9, 3.898326601177354*^9}, {3.8983443696883245`*^9, 
   3.898344377505392*^9}, {3.8984862263023334`*^9, 3.898486433431111*^9}, {
   3.898486542572585*^9, 3.898486571807664*^9}, {3.898486618387602*^9, 
   3.898486632479243*^9}, {3.8984866682708135`*^9, 3.8984866971684294`*^9}, {
   3.8984867519002037`*^9, 3.8984868741078362`*^9}, {3.8984869087771883`*^9, 
   3.8984869425878277`*^9}, {3.89848703430153*^9, 3.898487103686263*^9}, {
   3.898487530117668*^9, 3.898487549829985*^9}, {3.898508581271341*^9, 
   3.8985085826874943`*^9}, {3.8985207054915276`*^9, 
   3.8985207129994926`*^9}, {3.89852075141648*^9, 3.8985208567673483`*^9}, {
   3.8985208883813295`*^9, 3.898521047749621*^9}, {3.8985212290381603`*^9, 
   3.898521249020995*^9}, {3.898521291211966*^9, 3.898521360536496*^9}, {
   3.8985215427025337`*^9, 3.898521551316084*^9}, {3.898521695478556*^9, 
   3.898521698912264*^9}, {3.898521773629485*^9, 3.898521817374462*^9}, {
   3.8985219469529505`*^9, 3.898522019071253*^9}, {3.898522095589138*^9, 
   3.8985221520473156`*^9}, {3.8985221841570873`*^9, 3.898522195216323*^9}, {
   3.898522951696658*^9, 3.898523091574442*^9}, {3.8985231221111774`*^9, 
   3.898523147901129*^9}, {3.8989631439938545`*^9, 3.8989631453230443`*^9}, {
   3.899024367635637*^9, 3.899024371281042*^9}, {3.899263550287033*^9, 
   3.899263556775858*^9}, {3.8992644406485643`*^9, 3.899264474035733*^9}, {
   3.899264575715626*^9, 3.899264831744545*^9}, {3.899264929937586*^9, 
   3.8992649523552723`*^9}, {3.899267063092107*^9, 3.899267065164672*^9}, 
   3.8992672828609896`*^9, {3.8992687809315214`*^9, 3.8992688972955236`*^9}, {
   3.899268989302785*^9, 3.8992689998763175`*^9}, {3.899269034611386*^9, 
   3.899269081246211*^9}, {3.899269149786484*^9, 3.899269221150139*^9}, {
   3.899269361249707*^9, 3.899269391933929*^9}, {3.899269566568699*^9, 
   3.8992696173962507`*^9}, {3.8992699607831717`*^9, 
   3.8992699641494064`*^9}, {3.899272942645192*^9, 3.899273115845751*^9}, {
   3.899273147873816*^9, 3.8992731490240774`*^9}, {3.89927374123623*^9, 
   3.8992737711793256`*^9}, {3.8992739177242484`*^9, 
   3.8992740670394144`*^9}, {3.8992741016044517`*^9, 
   3.8992741624327664`*^9}, {3.8992742265805817`*^9, 
   3.8992745730318947`*^9}, {3.8992746045308256`*^9, 
   3.8992746343562107`*^9}, {3.8992746734783707`*^9, 
   3.8992747069504223`*^9}, {3.899274783096525*^9, 3.899274863423094*^9}, {
   3.899274921796163*^9, 3.899275140689328*^9}, {3.8992758495495353`*^9, 
   3.899276021988283*^9}, {3.899276091889892*^9, 3.8992761323651323`*^9}, {
   3.899276162950361*^9, 3.8992764035539303`*^9}, {3.911401500738323*^9, 
   3.9114015471895065`*^9}, {3.911401600680258*^9, 3.9114016508843718`*^9}, {
   3.9114017261752234`*^9, 3.9114021676712713`*^9}, {3.9114021999187956`*^9, 
   3.9114022486943254`*^9}, {3.9114022982852426`*^9, 3.9114022990594482`*^9}},
 
 CellLabel->
  "In[118]:=",ExpressionUUID->"8d677617-3400-47e2-ab71-0e686b379750"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Proof of Multi-Key Shuffle", "Section",
 CellChangeTimes->{{3.8866755964292774`*^9, 3.88667560657975*^9}, {
  3.892394350733077*^9, 3.89239435244112*^9}, {3.8992668397494383`*^9, 
  3.899266876681595*^9}, {3.8992669363817887`*^9, 3.8992669960812497`*^9}, {
  3.8992673044211593`*^9, 3.8992673050289946`*^9}, {3.899268268740056*^9, 
  3.8992682688720093`*^9}, {3.8992720502649136`*^9, 3.8992720511162477`*^9}, {
  3.8992721119692955`*^9, 3.8992721188982816`*^9}, {3.899272886479306*^9, 
  3.8992728906675158`*^9}},ExpressionUUID->"f1b63298-c7a1-413b-bf6f-\
1824e87b06b1"],

Cell["\<\
The mixing server proves that mixing and key-shifting has been done correctly \
by transforming the permutation and key shifting conditions into an inner \
product relation which can then be compressed by an inner product argument, \
resulting in a log-sized communication cost between prover (mixing server) \
and verifier.\
\>", "Text",
 CellChangeTimes->{{3.8992781918328743`*^9, 3.899278419688096*^9}, {
  3.899278450765856*^9, 
  3.899278540910014*^9}},ExpressionUUID->"84537546-fd57-4e75-9904-\
47a398f90a4e"],

Cell[CellGroupData[{

Cell["Commitments Needed to Prove W is Well-Formed w.r.t. V", "Subsection",
 CellChangeTimes->{{3.8990024788568277`*^9, 3.8990025302799516`*^9}, {
  3.9112950750799294`*^9, 
  3.911295075599619*^9}},ExpressionUUID->"1b4d34f1-0a18-4032-a94b-\
b3a80ba0c5c1"],

Cell[TextData[{
 "The prover commits to the shift s by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", "=", 
    RowBox[{"s", "*", "g"}]}], TraditionalForm]],ExpressionUUID->
  "1d87f1b8-6320-44fb-a5f8-db928149e5f8"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"W", "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["s", "n"], "*", "g"}], "+", 
     RowBox[{
      SubscriptBox["\[Sigma]", "W"], "*", "h"}]}]}], TraditionalForm]],
  ExpressionUUID->"8ebb8875-1530-4029-8bfe-1c785b64edc5"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["\[Sigma]", "W"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "aed2517e-afff-4baf-91ff-2cbf54b6b2fa"],
 " can be set to zero but is left to demonstrate how the standalone PR \
protocol would deal with blinding factors). The structure of the bulletproof \
shuffle argument requires a separate commitment W to ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["s", "n"], TraditionalForm]],ExpressionUUID->
  "71a1735f-2ab1-445f-88c8-a303056767ad"],
 ". This commitment can not be deduced from V and therefore it has to be \
proved that W is well-formed with respect to V in addition to the proof of \
shuffle. The paper draft does not explain how to do this in detail but it is \
implemented in this notebook nevertheless. It could be separated into its own \
sigma protocol but this would require some additional challenge values. This \
is the reason it is woven into the shuffle argument.\nThe PR argument uses ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox[
     SubscriptBox["a", 
      RowBox[{"R", ",", "W"}]], "\[RightVector]"], ":", 
    RowBox[{
     SubscriptBox["\[Congruent]", "q"], 
     RowBox[{"{", 
      RowBox[{"s", ",", "s", ",", "...", ",", "s"}], "}"}], " "}]}], 
   TraditionalForm]],ExpressionUUID->"82e53bee-07e3-4941-b513-2d6bdf3c0ce3"],
 " (n times) and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox[
     SubscriptBox["a", 
      RowBox[{"L", ",", "W"}]], "\[RightVector]"], ":", 
    RowBox[{
     SubscriptBox["\[Congruent]", "q"], 
     RowBox[{"{", 
      RowBox[{"1", ",", "s", ",", 
       SuperscriptBox["s", "2"], ",", "...", ",", 
       SuperscriptBox["s", 
        RowBox[{"n", "-", "1"}]]}], "}"}]}]}], TraditionalForm]],
  ExpressionUUID->"87b873e0-c606-4cc4-af74-c9f43d9405c7"],
 " similar to how the shuffle argument uses ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["a", "R"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"dba8ed10-6d96-491f-ab43-ab6e9ad6442c"],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["a", "L"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"df923619-9b3a-47c7-8247-2676ea8090cc"],
 ". The additional challenge value ",
 Cell[BoxData[
  FormBox["w", TraditionalForm]],ExpressionUUID->
  "a1c1d0e3-5886-422d-a2fd-de7bdf0c0892"],
 " is needed to prove that all entries of ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["a", 
     RowBox[{"R", ",", "W"}]], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"aaa03f50-c294-4a4a-9d50-72093951a692"],
 " are equal. Up to the constraints the structure of the PR argument is \
exactly like the Bulletproof range proof protocol.\nAll variables exclusive \
to the PR argument contain a \[OpenCurlyDoubleQuote]W\[CloseCurlyDoubleQuote] \
in their names: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox[
     SubscriptBox["a", 
      RowBox[{"R", ",", "W"}]], "\[RightVector]"], ",", 
    OverscriptBox[
     SubscriptBox["a", 
      RowBox[{"L", ",", "W"}]], "\[RightVector]"], ",", 
    SubscriptBox["\[Alpha]", "W"], ",", 
    SubscriptBox["\[Beta]", "W"], ",", 
    SubscriptBox["\[Gamma]", "W"], ",", 
    OverscriptBox[
     SubscriptBox["s", 
      RowBox[{"R", ",", "W"}]], "\[RightVector]"], ",", 
    OverscriptBox[
     SubscriptBox["s", 
      RowBox[{"L", ",", "W"}]], "\[RightVector]"], ",", 
    SubscriptBox["A", "W"], ",", 
    SubscriptBox["S", "W"], ",", "w", ",", 
    OverscriptBox[
     SubscriptBox["l", 
      RowBox[{"0", ",", "W"}]], "\[RightVector]"], ",", 
    OverscriptBox[
     SubscriptBox["l", 
      RowBox[{"1", ",", "W"}]], "\[RightVector]"], ",", 
    OverscriptBox[
     SubscriptBox["r", 
      RowBox[{"0", ",", "W"}]], "\[RightVector]"], ",", 
    OverscriptBox[
     SubscriptBox["r", 
      RowBox[{"1", ",", "W"}]], "\[RightVector]"], ",", 
    SubscriptBox["\[Delta]", "yzw"], ",", 
    SubscriptBox["t", 
     RowBox[{"0", ",", "W"}]], ",", 
    SubscriptBox["t", 
     RowBox[{"1", ",", "W"}]], ",", 
    SubscriptBox["t", 
     RowBox[{"2", ",", "W"}]], ",", 
    OverscriptBox[
     SubscriptBox["l", "W"], "\[RightVector]"], ",", 
    OverscriptBox[
     SubscriptBox["r", "W"], "\[RightVector]"], ",", 
    SubscriptBox["\[Tau]", 
     RowBox[{"1", ",", "W"}]], ",", 
    SubscriptBox["\[Tau]", 
     RowBox[{"2", ",", "W"}]], ",", 
    SubscriptBox["\[Tau]", 
     RowBox[{"x", ",", "W"}]], ",", 
    SubscriptBox["T", 
     RowBox[{"1", ",", "W"}]], ",", 
    SubscriptBox["T", 
     RowBox[{"2", ",", "W"}]], ",", 
    OverscriptBox[
     SubscriptBox["t", "w"], "^"], ",", 
    SubscriptBox["\[Mu]", "W"], ",", 
    SubsuperscriptBox["P", "W", "+"]}], TraditionalForm]],ExpressionUUID->
  "e672e1df-728b-46b6-aa36-5969807a2766"],
 "\nEquivalent in the inner product protocol.\nThe PR protocol is based on \
the following linear constraints:\n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    SubscriptBox["a", 
     RowBox[{"R", ",", 
      SubscriptBox["W", "1"]}]], 
    SubscriptBox["\[Congruent]", "q"], "s"}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{"\[Wedge]", 
     SubscriptBox["a", 
      RowBox[{"R", ",", 
       SubscriptBox["W", "i"]}]]}], 
    SubscriptBox["\[Congruent]", "q"], 
    SubscriptBox["a", 
     RowBox[{"R", ",", 
      SubscriptBox["W", 
       RowBox[{"i", "-", "1"}]]}]]}], TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{"\[Wedge]", 
     SubscriptBox["a", 
      RowBox[{"L", ",", 
       SubscriptBox["W", "1"]}]]}], 
    SubscriptBox["\[Congruent]", "q"], "1"}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{"\[Wedge]", 
     SubscriptBox["a", 
      RowBox[{"L", ",", 
       SubscriptBox["W", "i"]}]]}], 
    SubscriptBox["\[Congruent]", "q"], 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"L", ",", 
       SubscriptBox["W", 
        RowBox[{"i", "-", "1"}]]}]], 
     SubscriptBox["a", 
      RowBox[{"R", ",", 
       SubscriptBox["W", 
        RowBox[{"i", "-", "1"}]]}]]}]}], TraditionalForm]}],ExpressionUUID->
  "14a5e5c5-1b43-4e8e-8e21-99bbd90769a7"],
 "\nThis implies that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"L", ",", 
       SubscriptBox["W", "1"]}]], 
     SubscriptBox["a", 
      RowBox[{"R", ",", 
       SubscriptBox["W", "1"]}]]}], 
    SubscriptBox["\[Congruent]", "q"], "s"}], TraditionalForm]],
  ExpressionUUID->"196b73d3-85b2-4a17-9539-341b24cd016d"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"L", ",", 
       SubscriptBox["W", "n"]}]], 
     SubscriptBox["a", 
      RowBox[{"R", ",", 
       SubscriptBox["W", "n"]}]]}], 
    SubscriptBox["\[Congruent]", "q"], 
    SuperscriptBox["s", "n"]}], TraditionalForm]],ExpressionUUID->
  "712303d6-3193-47c8-8c64-23f65ec180ab"],
 ". By linking V to the first and W to the second of those products the \
required relation between V and W is proven in a zero-knowledge manner."
}], "Text",
 InitializationCell->True,
 CellChangeTimes->{
  3.899002536535371*^9, {3.899271944867069*^9, 3.899271947344928*^9}, {
   3.8992785715817933`*^9, 3.8992792451061077`*^9}, {3.8992807724526405`*^9, 
   3.899280928900668*^9}, {3.8992809667131767`*^9, 3.899281064052579*^9}, {
   3.8992810965365777`*^9, 3.8992813626573257`*^9}, {3.8992814203867064`*^9, 
   3.899281435154397*^9}, {3.899281544555769*^9, 3.8992817736786394`*^9}, {
   3.899281848531167*^9, 3.899282045956156*^9}, {3.8992824904048257`*^9, 
   3.8992824908244143`*^9}, 3.8992826364356422`*^9, {3.899287599087205*^9, 
   3.899287666497625*^9}, {3.8992881911379175`*^9, 3.899288250871679*^9}, {
   3.8992882827900248`*^9, 3.8992883270421066`*^9}, {3.899288360562502*^9, 
   3.899288436931884*^9}, {3.8992885401277037`*^9, 3.899288541248789*^9}, {
   3.8992886637983437`*^9, 3.8992888332449965`*^9}, {3.8992888675967083`*^9, 
   3.8992889595068483`*^9}, {3.89928899729842*^9, 3.89928900238328*^9}, {
   3.899289075365368*^9, 3.899289092932479*^9}, {3.899290215219781*^9, 
   3.89929030409261*^9}, {3.911294454675318*^9, 3.9112944578824496`*^9}, {
   3.911294837322574*^9, 3.911294838240615*^9}, {3.911294933101119*^9, 
   3.91129505873048*^9}, {3.9112951730444603`*^9, 
   3.9112951950296993`*^9}},ExpressionUUID->"6ef2404c-28ea-4540-ab22-\
092e17a10b89"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"StateMachineRestore", "[", "\"\<NeedShuffleProof\>\"", "]"}], 
   ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Commitments", " ", "V", " ", "and", " ", "W", " ", "to", " ", "s", " ", 
     "and", " ", 
     RowBox[{
      SuperscriptBox["s", "n"], ".", "\n", "As"}], " ", "s", " ", "is", " ", 
     "a", " ", "random", " ", "value"}], ",", " ", 
    RowBox[{
    "a", " ", "blinding", " ", "value", " ", "for", " ", "s", " ", "can", " ",
      "be", " ", 
     RowBox[{"omitted", ".", " ", "By"}], " ", "calculating", " ", 
     SuperscriptBox["V", 
      SubscriptBox["x", "i"]], "\n", "which", " ", "is", " ", "equal", " ", 
     "to", " ", 
     SuperscriptBox["h", 
      SubscriptBox["s", "i"]], " ", "the", " ", "receiver", " ", "i", " ", 
     "can", " ", "identify", " ", "the", " ", "messages", " ", "intended", 
     " ", "to", " ", "be", " ", "read", " ", "by", " ", "him"}]}], "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"V", " ", "=", " ", 
     RowBox[{"s", "*", "g"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Already", " ", "calculated", " ", "in", " ", "while", " ", "calculating",
      " ", "the", " ", "shuffle", " ", "output"}], "*)"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"TellVerifier", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<V\>\"", "->", "V"}], ",", 
     RowBox[{"\"\<_cost\>\"", "->", "\"\<group\>\""}]}], "}"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Sigma]", "W"], " ", "=", " ", 
   RowBox[{"BPRandomInteger", "[", 
    RowBox[{"0", ",", 
     RowBox[{"q", "-", "1"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"W", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"powermodq", "[", 
      RowBox[{"s", ",", "n"}], "]"}], "*", "g"}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["\[Sigma]", "W"], "*", "h"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"TellVerifier", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<W\>\"", "->", "W"}], ",", 
     RowBox[{"\"\<_cost\>\"", "->", "\"\<group\>\""}]}], "}"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"FiatShamirAdd", "[", 
       RowBox[{"\"\<V\>\"", ",", " ", 
        RowBox[{"compressPoint", "[", "V", "]"}], ",", " ", 
        RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}], 
      ";", "\n", "\t", 
      RowBox[{"FiatShamirAdd", "[", 
       RowBox[{"\"\<W\>\"", ",", " ", 
        RowBox[{"compressPoint", "[", "W", "]"}], ",", " ", 
        RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}], 
      ";"}]}], "\n", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["a", 
     RowBox[{"R", ",", "W"}]], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"s", ",", " ", "n"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["a", 
     RowBox[{"L", ",", "W"}]], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"Thread", "[", 
    RowBox[{"powermodq", "[", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["a", 
        RowBox[{"R", ",", "W"}]], "\[RightVector]"], ",", " ", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", 
        RowBox[{"n", "-", "1"}]}], "]"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Alpha]", "W"], " ", "=", " ", 
   RowBox[{"BPRandomInteger", "[", 
    RowBox[{"0", ",", 
     RowBox[{"q", "-", "1"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Beta]", "W"], " ", "=", " ", 
   RowBox[{"BPRandomInteger", "[", 
    RowBox[{"0", ",", 
     RowBox[{"q", "-", "1"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Gamma]", "W"], " ", "=", " ", 
   RowBox[{"BPRandomInteger", "[", 
    RowBox[{"0", ",", 
     RowBox[{"q", "-", "1"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["s", 
     RowBox[{"R", ",", "W"}]], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{
     SubscriptBox["\[Gamma]", "W"], ",", " ", "n"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    OverscriptBox[
     SubscriptBox["s", 
      RowBox[{"L", ",", "W"}]], "\[RightVector]"], " ", "=", " ", 
    RowBox[{"Thread", "[", 
     RowBox[{"powermodq", "[", 
      RowBox[{
       RowBox[{"ConstantArray", "[", 
        RowBox[{
         SubscriptBox["\[Gamma]", "W"], ",", "n"}], "]"}], ",", " ", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", 
         RowBox[{"n", "-", "1"}]}], "]"}]}], "]"}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["A", "W"], " ", "=", " ", 
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["a", 
       RowBox[{"L", ",", "W"}]], "\[RightVector]"], ".", 
     OverscriptBox["g", "\[RightVector]"]}], " ", "+", " ", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["a", 
       RowBox[{"R", ",", "W"}]], "\[RightVector]"], ".", 
     OverscriptBox["h", "\[RightVector]"]}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["\[Alpha]", "W"], "*", "h"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"TellVerifier", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<AW\>\"", "->", 
      SubscriptBox["A", "W"]}], ",", 
     RowBox[{"\"\<_cost\>\"", "->", "\"\<group\>\""}]}], "}"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", 
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<AW\>\"", ",", 
       RowBox[{"compressPoint", "[", 
        SubscriptBox["A", "W"], "]"}], ",", 
       RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}]}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["S", "W"], " ", "=", " ", 
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["s", 
       RowBox[{"L", ",", "W"}]], "\[RightVector]"], ".", 
     OverscriptBox["g", "\[RightVector]"]}], " ", "+", " ", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["s", 
       RowBox[{"R", ",", "W"}]], "\[RightVector]"], ".", 
     OverscriptBox["h", "\[RightVector]"]}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["\[Beta]", "W"], "*", "h"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"TellVerifier", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<SW\>\"", "->", 
      SubscriptBox["S", "W"]}], ",", 
     RowBox[{"\"\<_cost\>\"", "->", "\"\<group\>\""}]}], "}"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", 
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<SW\>\"", ",", 
       RowBox[{"compressPoint", "[", 
        SubscriptBox["S", "W"], "]"}], ",", 
       RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}]}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Knowledge\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<V := sg\>\"", ",", "\"\<Commitment to s\>\"", ",", "\"\<P,V\>\"",
          ",", "V"}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(W\)]\) \!\(\*OverscriptBox[\(\
\[LeftArrow]\), \($\)]\) \!\(\*SubscriptBox[\(\[DoubleStruckCapitalZ]\), \
\(q\)]\)\>\"", ",", 
         "\"\<Blinding Value for Commitment W to \!\(\*SuperscriptBox[\(s\), \
\(n\)]\)\>\"", ",", "\"\<P\>\"", ",", 
         SubscriptBox["\[Sigma]", "W"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<W := \!\(\*SuperscriptBox[\(s\), \(n\)]\)g + \!\(\*SubscriptBox[\
\(\[Sigma]\), \(W\)]\)h\>\"", ",", 
         "\"\<Blinded Pedersen Commitment to \!\(\*SuperscriptBox[\(s\), \
\(n\)]\)\>\"", ",", "\"\<P,V\>\"", ",", "W"}], "}"}], ",", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[SubscriptBox[\(a\), \(R, W\)], \(\
\[RightVector]\)]\) :\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) {s, s, \
..., s}\>\"", ",", "\"\<Constant vector of s\>\"", ",", "\"\<P\>\"", ",", 
         OverscriptBox[
          SubscriptBox["a", 
           RowBox[{"R", ",", "W"}]], "\[RightVector]"]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[SubscriptBox[\(a\), \(L, W\)], \(\
\[RightVector]\)]\) :\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) {1, s, \
\!\(\*SuperscriptBox[\(s\), \(2\)]\), ..., \!\(\*SuperscriptBox[\(s\), \(n - \
1\)]\)}\>\"", ",", 
         "\"\<Aggregation of \!\(\*OverscriptBox[SubscriptBox[\(a\), \(R, \
W\)], \(\[RightVector]\)]\)\>\"", ",", "\"\<P\>\"", ",", 
         OverscriptBox[
          SubscriptBox["a", 
           RowBox[{"L", ",", "W"}]], "\[RightVector]"]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Alpha]\), \(W\)]\) \!\(\*OverscriptBox[\(\
\[LeftArrow]\), \($\)]\) \!\(\*SubscriptBox[\(\[DoubleStruckCapitalZ]\), \
\(q\)]\)\>\"", ",", "\"\<Blinding\\nValue\>\"", ",", "\"\<P\>\"", ",", 
         SubscriptBox["\[Alpha]", "W"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Beta]\), \(W\)]\) \!\(\*OverscriptBox[\(\
\[LeftArrow]\), \($\)]\) \!\(\*SubscriptBox[\(\[DoubleStruckCapitalZ]\), \
\(q\)]\)\>\"", ",", "\"\<Blinding\\nValue\>\"", ",", "\"\<P\>\"", ",", 
         SubscriptBox["\[Beta]", "W"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Gamma]\), \(W\)]\) \!\(\*OverscriptBox[\(\
\[LeftArrow]\), \($\)]\) \!\(\*SubscriptBox[\(\[DoubleStruckCapitalZ]\), \
\(q\)]\)\\{0}\>\"", ",", "\"\<Blinding\\nValue\>\"", ",", "\"\<P\>\"", ",", 
         SubscriptBox["\[Gamma]", "W"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[SubscriptBox[\(s\), \(R, W\)], \(\
\[RightVector]\)]\) :\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \
{\!\(\*SubscriptBox[\(\[Gamma]\), \(W\)]\), \!\(\*SubscriptBox[\(\[Gamma]\), \
\(W\)]\), ..., \!\(\*SubscriptBox[\(\[Gamma]\), \(W\)]\)}\>\"", ",", 
         "\"\<Blinding\\nVector for \!\(\*OverscriptBox[SubscriptBox[\(a\), \
\(R, W\)], \(\[RightVector]\)]\)\>\"", ",", "\"\<P\>\"", ",", 
         OverscriptBox[
          SubscriptBox["s", 
           RowBox[{"R", ",", "W"}]], "\[RightVector]"]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[SubscriptBox[\(s\), \(L, W\)], \(\
\[RightVector]\)]\) :\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) {1, \
\!\(\*SubscriptBox[\(\[Gamma]\), \(W\)]\), \!\(\*SubsuperscriptBox[\(\[Gamma]\
\), \(W\), \(2\)]\), ..., \!\(\*SubsuperscriptBox[\(\[Gamma]\), \(W\), \(n - \
1\)]\)}\>\"", ",", 
         "\"\<Blinding\\nVector for \!\(\*OverscriptBox[SubscriptBox[\(a\), \
\(L, W\)], \(\[RightVector]\)]\)\>\"", ",", "\"\<P\>\"", ",", 
         OverscriptBox[
          SubscriptBox["s", 
           RowBox[{"L", ",", "W"}]], "\[RightVector]"]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(A\), \(W\)]\) := \
<\!\(\*OverscriptBox[SubscriptBox[\(a\), \(L, W\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(g\), \(\[RightVector]\)]\)> + <\!\
\(\*OverscriptBox[SubscriptBox[\(a\), \(R, W\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(h\), \(\[RightVector]\)]\)> + \
\[Alpha]*h\>\"", ",", "\"\<Blinded\\nPedersen\\nVector\\nCommitment\>\"", 
         ",", "\"\<P,V\>\"", ",", 
         SubscriptBox["A", "W"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(S\), \(W\)]\) := \
<\!\(\*OverscriptBox[SubscriptBox[\(s\), \(L, W\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(g\), \(\[RightVector]\)]\)> + <\!\
\(\*OverscriptBox[SubscriptBox[\(s\), \(R, W\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(h\), \(\[RightVector]\)]\)> + \
\[Beta]*h\>\"", ",", "\"\<Blinded\\nPedersen\\nVector\\nCommitment\>\"", ",", 
         "\"\<P,V\>\"", ",", 
         SubscriptBox["S", "W"]}], "}"}]}], "\[IndentingNewLine]", "}"}], ",",
      " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left", ",", "Left"}], "}"}], 
       "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], "\n"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"CommunicationCostGrid", "[", "]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "interactive"}], ",", 
    RowBox[{"Print", "[", 
     RowBox[{"FiatShamirGrid", "[", "]"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ProcessNewMessages", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"StateMachineSave", "[", "\"\<VWAWSW\>\"", "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.899002544265931*^9, 3.899002597357145*^9}, {
   3.899002720647664*^9, 3.8990027639333878`*^9}, {3.8990028355551014`*^9, 
   3.8990028968670254`*^9}, {3.8990029290863304`*^9, 3.899002952218539*^9}, {
   3.899003049359424*^9, 3.8990031307976007`*^9}, {3.8990031932005167`*^9, 
   3.899003252402248*^9}, {3.8990090387770405`*^9, 3.8990093942412405`*^9}, {
   3.8990094804671555`*^9, 3.8990094828749447`*^9}, {3.8990096225750327`*^9, 
   3.899009684096972*^9}, {3.8990098023250055`*^9, 3.899009860121993*^9}, 
   3.8992719242384577`*^9, 3.8992728708255444`*^9, {3.899273228428012*^9, 
   3.899273229901264*^9}, {3.8992737742480073`*^9, 3.8992738315598803`*^9}, {
   3.899273894408147*^9, 3.899273898882532*^9}, {3.8992821036196785`*^9, 
   3.899282103760313*^9}, {3.8993078147414775`*^9, 3.899307814767461*^9}, {
   3.8993849654505835`*^9, 3.899384965458579*^9}, {3.899386289860742*^9, 
   3.899386302955465*^9}, 3.911407853715455*^9},
 CellLabel->
  "In[123]:=",ExpressionUUID->"e1c12bea-b419-4d26-b87a-b4bc3d7479d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Commitment to Random Linear Combination of Output Secret Keys, Randomizers \
and Ciphertexts\
\>", "Subsection",
 CellChangeTimes->{{3.886675628435684*^9, 3.886675632694269*^9}, {
  3.886675673427261*^9, 3.8866757084039*^9}, {3.886736097757019*^9, 
  3.8867361085643215`*^9}, {3.8867831401650763`*^9, 3.8867831588242044`*^9}, {
  3.892399784659987*^9, 3.8923997905520973`*^9}, {3.892399878324009*^9, 
  3.892399878573392*^9}, {3.899283239974659*^9, 3.899283301642825*^9}, {
  3.899287431417409*^9, 
  3.899287434608376*^9}},ExpressionUUID->"39072ec7-1c0a-4c52-8f79-\
3ebd73f649e2"],

Cell[TextData[{
 "Begin Shuffle Proof: Receive Challenges r and u, calculate ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["k", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "df772484-fb73-4b0e-a0dc-9df81b634391"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", 
    RowBox[{"R", ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]}]], 
   TraditionalForm]],ExpressionUUID->"c6d3d45c-42e4-4a19-aacb-14dd9c5f7f3e"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["k", "i"], ":", 
    RowBox[{
     SubscriptBox["\[Congruent]", "q"], 
     RowBox[{"r", "-", 
      SuperscriptBox["u", "i"]}]}]}], TraditionalForm]],ExpressionUUID->
  "23e6ce23-834f-4325-9e49-133946ec2004"],
 " for all i in the range of 1 to n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["A", 
     RowBox[{"R", ",", 
      RowBox[{"{", 
       RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]}]], ":=", 
    RowBox[{
     SubsuperscriptBox["\[CapitalSigma]", 
      RowBox[{"i", "=", "1"}], "n"], 
     SubscriptBox["k", "i"], "*", 
     RowBox[{"{", 
      RowBox[{
       SubsuperscriptBox["h", "i", "'"], ",", 
       SubsuperscriptBox["b", "i", "'"], ",", 
       SubsuperscriptBox["c", "i", "'"], ",", 
       SubsuperscriptBox["d", "i", "'"]}], "}"}]}]}], TraditionalForm]],
  ExpressionUUID->"dd3c4e4c-cba5-4d7c-8f5b-4c09f464be27"]
}], "Text",
 CellChangeTimes->{{3.886676685215617*^9, 3.886676700835416*^9}, {
   3.886676737745968*^9, 3.8866767569740047`*^9}, {3.8866767987882247`*^9, 
   3.88667680738196*^9}, {3.886733729206031*^9, 3.886733745574092*^9}, {
   3.8867361156572924`*^9, 3.8867361587095485`*^9}, {3.8867753981034155`*^9, 
   3.8867754895234137`*^9}, {3.8867755618940697`*^9, 3.886775613722292*^9}, {
   3.8867757418943553`*^9, 3.886775760727416*^9}, {3.886776516476204*^9, 
   3.8867766221827345`*^9}, {3.886776886020607*^9, 3.8867769440277014`*^9}, {
   3.8867769986186323`*^9, 3.8867771881186433`*^9}, {3.886777221529439*^9, 
   3.8867772440715747`*^9}, {3.8867773575477686`*^9, 3.886777364926056*^9}, {
   3.886777408222027*^9, 3.8867774177667837`*^9}, {3.886779132225233*^9, 
   3.8867791402332993`*^9}, {3.8867792375097637`*^9, 
   3.8867793666591845`*^9}, {3.8870932623231792`*^9, 3.88709327639538*^9}, {
   3.8870947581873484`*^9, 3.8870947658643456`*^9}, {3.8875458509894934`*^9, 
   3.8875459206585913`*^9}, {3.8875459937362657`*^9, 
   3.8875463254179745`*^9}, {3.8875463817131257`*^9, 
   3.8875463876741095`*^9}, {3.8875464700542884`*^9, 3.887546535505824*^9}, {
   3.8875466379946327`*^9, 3.8875466691822033`*^9}, {3.887546699852492*^9, 
   3.887546759805462*^9}, {3.8875482527199554`*^9, 3.8875483404387274`*^9}, {
   3.887548376008507*^9, 3.887548386479514*^9}, {3.8875494421850758`*^9, 
   3.8875494912219977`*^9}, {3.8875499527306385`*^9, 
   3.8875503089790573`*^9}, {3.8875504437710714`*^9, 
   3.8875504682403584`*^9}, {3.8876185716554956`*^9, 
   3.8876185804066973`*^9}, {3.887620366548234*^9, 3.8876203774012175`*^9}, {
   3.887620428282998*^9, 3.8876204357934093`*^9}, {3.887620498067751*^9, 
   3.8876205299586124`*^9}, {3.8876207040619993`*^9, 3.887620705663001*^9}, {
   3.887621005602075*^9, 3.887621192633377*^9}, {3.88762122292915*^9, 
   3.8876212240257053`*^9}, {3.8876212656935253`*^9, 3.887621400597526*^9}, 
   3.8876215370758*^9, {3.887621582805944*^9, 3.887621687815089*^9}, {
   3.887621739199854*^9, 3.8876217997723045`*^9}, {3.8876218347589855`*^9, 
   3.8876218859683943`*^9}, {3.8876219545237226`*^9, 
   3.8876221763782806`*^9}, {3.8876224534768257`*^9, 3.887622463874411*^9}, {
   3.8923999054273148`*^9, 3.8924001178389463`*^9}, {3.8992828287702675`*^9, 
   3.899282839115845*^9}, {3.899283305148898*^9, 3.899283312861411*^9}, {
   3.899283353717368*^9, 3.8992833759435043`*^9}, 3.89928362292108*^9, {
   3.899283677327447*^9, 3.8992837032388105`*^9}, {3.899289117029598*^9, 
   3.899289117029598*^9}, {3.9114080396735516`*^9, 3.9114080421283903`*^9}, {
   3.9114081803811965`*^9, 
   3.91140818245938*^9}},ExpressionUUID->"c38ec376-5f92-4e3b-83bd-\
c9b0aee4c644"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"StateMachineRestore", "[", "\"\<VWAWSW\>\"", "]"}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{"interactive", ",", "\n", 
     RowBox[{"(*", 
      RowBox[{
      "Random", " ", "challenges", " ", "from", " ", "interactive", " ", 
       "verifier"}], "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"r", " ", "=", " ", 
       RowBox[{"WaitForRandomChallenge", "[", "\"\<r\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"u", " ", "=", " ", 
       RowBox[{"WaitForRandomChallenge", "[", "\"\<u\>\"", "]"}]}], ";"}], 
     "\n", 
     RowBox[{"(*", "Else", "*)"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Fiat", "-", "Shamir"}], "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"r", " ", "=", " ", 
       RowBox[{"FiatShamirGet", "[", 
        RowBox[{"\"\<r\>\"", ",", "q", ",", 
         RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}]}],
       ";", "\n", "\t", 
      RowBox[{"TellVerifier", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<r\>\"", "->", "r"}], ",", 
         RowBox[{"\"\<_cost\>\"", "->", "\"\<scalar\>\""}]}], "}"}], "]"}], 
      ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"u", " ", "=", " ", 
       RowBox[{"FiatShamirGet", "[", 
        RowBox[{"\"\<u\>\"", ",", "q", ",", 
         RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}]}],
       ";", "\n", "\t", 
      RowBox[{"TellVerifier", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<u\>\"", "->", "u"}], ",", 
         RowBox[{"\"\<_cost\>\"", "->", "\"\<scalar\>\""}]}], "}"}], "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"uPowers", " ", "=", " ", 
   RowBox[{"Thread", "[", 
    RowBox[{"powermodq", "[", 
     RowBox[{
      RowBox[{"ConstantArray", "[", 
       RowBox[{"u", ",", "n"}], "]"}], ",", " ", 
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "n"}], "]"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox["k", "\[RightVector]"], " ", "=", " ", 
   RowBox[{"modq", "[", 
    RowBox[{"r", " ", "-", " ", "uPowers"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox["k", "^"], " ", "=", " ", 
   RowBox[{"modq", "[", 
    RowBox[{"Fold", "[", 
     RowBox[{"Times", ",", " ", "1", ",", " ", 
      OverscriptBox["k", "\[RightVector]"]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox["k", "_"], " ", "=", " ", 
   RowBox[{"modq", "[", 
    RowBox[{"Fold", "[", 
     RowBox[{"Plus", ",", " ", "0", ",", " ", 
      OverscriptBox["k", "\[RightVector]"]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["A", 
    RowBox[{"R", ",", "h"}]], " ", "=", " ", 
   RowBox[{"Total", "[", 
    RowBox[{
     OverscriptBox["k", "\[RightVector]"], " ", "*", " ", 
     OverscriptBox[
      RowBox[{"h", "'"}], "\[RightVector]"]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["A", 
    RowBox[{"R", ",", "b"}]], " ", "=", " ", 
   RowBox[{"Total", "[", 
    RowBox[{
     OverscriptBox["k", "\[RightVector]"], " ", "*", " ", 
     OverscriptBox[
      RowBox[{"b", "'"}], "\[RightVector]"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["A", 
    RowBox[{"R", ",", "c"}]], " ", "=", " ", 
   RowBox[{"Total", "[", 
    RowBox[{
     OverscriptBox["k", "\[RightVector]"], " ", "*", " ", 
     OverscriptBox[
      RowBox[{"c", "'"}], "\[RightVector]"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["A", 
     RowBox[{"R", ",", "d"}]], " ", "=", " ", 
    RowBox[{"Total", "[", 
     RowBox[{
      OverscriptBox["k", "\[RightVector]"], " ", "*", " ", 
      OverscriptBox[
       RowBox[{"d", "'"}], "\[RightVector]"]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Knowledge\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<r\>\"", ",", "semanticsOfRandomChallenge", ",", "\"\<P,V\>\"", 
         ",", "r"}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<u\>\"", ",", "semanticsOfRandomChallenge", ",", "\"\<P,V\>\"", 
         ",", "u"}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(u\), \(powers\)]\) :\!\(\*SubscriptBox[\(\
\[Congruent]\), \(q\)]\) {u,\!\(\*SuperscriptBox[\(u\), \
\(2\)]\),\!\(\*SuperscriptBox[\(u\), \
\(3\)]\),\[Ellipsis],\!\(\*SuperscriptBox[\(u\), \(n\)]\)}\>\"", ",", 
         "\"\<\>\"", ",", "\"\<P,V (implicit)\>\"", ",", "uPowers"}], "}"}], 
       ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\) \
:\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) r - \!\(\*SubscriptBox[\(u\), \
\(powers\)]\)\>\"", ",", "\"\<\>\"", ",", "\"\<P,V (implicit)\>\"", ",", 
         OverscriptBox["k", "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(A\), \(R, h\)]\) := \
\[CapitalSigma]{\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\) \
\[SmallCircle] \!\(\*OverscriptBox[\(h'\), \(\[RightVector]\)]\)}\>\"", ",", 
         "\"\<\>\"", ",", "\"\<P,V (implicit)\>\"", ",", 
         SubscriptBox["A", 
          RowBox[{"R", ",", "h"}]]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(A\), \(R, b\)]\) := \
\[CapitalSigma]{\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\) \
\[SmallCircle] \!\(\*OverscriptBox[\(b'\), \(\[RightVector]\)]\)}\>\"", ",", 
         "\"\<\>\"", ",", "\"\<P,V (implicit)\>\"", ",", 
         SubscriptBox["A", 
          RowBox[{"R", ",", "b"}]]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(A\), \(R, c\)]\) := \
\[CapitalSigma]{\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\) \
\[SmallCircle] \!\(\*OverscriptBox[\(c'\), \(\[RightVector]\)]\)}\>\"", ",", 
         "\"\<\>\"", ",", "\"\<P,V (implicit)\>\"", ",", 
         SubscriptBox["A", 
          RowBox[{"R", ",", "c"}]]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(A\), \(R, d\)]\) := \
\[CapitalSigma]{\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\) \
\[SmallCircle] \!\(\*OverscriptBox[\(d'\), \(\[RightVector]\)]\)}\>\"", ",", 
         "\"\<\>\"", ",", "\"\<P,V (implicit)\>\"", ",", 
         SubscriptBox["A", 
          RowBox[{"R", ",", "d"}]]}], "}"}]}], "\[IndentingNewLine]", "}"}], 
     ",", " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left", ",", "Left"}], "}"}], 
       "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], "\n"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"CommunicationCostGrid", "[", "]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "interactive"}], ",", 
    RowBox[{"Print", "[", 
     RowBox[{"FiatShamirGrid", "[", "]"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ProcessNewMessages", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"StateMachineSave", "[", "\"\<ruk\>\"", "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.8816116243241453`*^9, 3.881611660171441*^9}, {
   3.881614428125318*^9, 3.8816144496610193`*^9}, {3.88161456204353*^9, 
   3.881614633721884*^9}, {3.881614843193446*^9, 3.8816148437044764`*^9}, {
   3.8816148754029293`*^9, 3.8816149675400553`*^9}, {3.881615002931444*^9, 
   3.881615060507916*^9}, {3.881615098029173*^9, 3.8816151210318823`*^9}, {
   3.8816151524868107`*^9, 3.881615276835181*^9}, {3.881615353446512*^9, 
   3.88161537924996*^9}, {3.8816154103144712`*^9, 3.881615456025964*^9}, {
   3.881615532069525*^9, 3.8816155364721947`*^9}, {3.8816155931257677`*^9, 
   3.881615853669375*^9}, {3.881615889559787*^9, 3.881616029813496*^9}, {
   3.881616061006765*^9, 3.881616075566166*^9}, {3.881616435998459*^9, 
   3.881616445519804*^9}, {3.881616491950706*^9, 3.881616518889913*^9}, 
   3.881616552421973*^9, {3.881663698233253*^9, 3.8816641171728354`*^9}, {
   3.881664149537904*^9, 3.881664293468644*^9}, {3.881664376793399*^9, 
   3.881664378418961*^9}, {3.881665060875719*^9, 3.881665064461875*^9}, {
   3.8823072034925957`*^9, 3.882307298841543*^9}, {3.882307485379715*^9, 
   3.8823075186820307`*^9}, {3.882307593677328*^9, 3.882307593772273*^9}, {
   3.882307757689488*^9, 3.8823077771481133`*^9}, {3.882307940115011*^9, 
   3.882307940976143*^9}, {3.882308297880229*^9, 3.882308400821534*^9}, {
   3.882308533669093*^9, 3.8823085729845448`*^9}, {3.882308892185584*^9, 
   3.882308900838636*^9}, {3.882427208288774*^9, 3.882427231293509*^9}, {
   3.882427275867312*^9, 3.882427276443467*^9}, {3.882613506378192*^9, 
   3.8826135481819057`*^9}, {3.8826154237894163`*^9, 3.882615624059663*^9}, {
   3.882616883412961*^9, 3.882616883525497*^9}, {3.882627068554702*^9, 
   3.882627070783558*^9}, {3.882868641928274*^9, 3.882868655062811*^9}, {
   3.8828686904264593`*^9, 3.882868736079137*^9}, {3.882873288978519*^9, 
   3.882873301769669*^9}, {3.8828733558712482`*^9, 3.882873358268668*^9}, {
   3.882952116689687*^9, 3.88295211800672*^9}, {3.883132849585574*^9, 
   3.883132850054797*^9}, {3.8831328806193333`*^9, 3.8831328896964197`*^9}, {
   3.8832106052048817`*^9, 3.883210607564109*^9}, {3.8835069940715647`*^9, 
   3.883506998395927*^9}, {3.883507030193005*^9, 3.883507046598276*^9}, {
   3.883507226062605*^9, 3.883507229271455*^9}, 3.8835079256154203`*^9, {
   3.883508089005042*^9, 3.883508110405077*^9}, {3.8835081488916693`*^9, 
   3.883508190141286*^9}, {3.883510444325629*^9, 3.883510471218582*^9}, {
   3.883510806043419*^9, 3.88351082026451*^9}, {3.883511018847508*^9, 
   3.8835110425192204`*^9}, {3.8835113696220417`*^9, 3.883511389435987*^9}, 
   3.8835120618556347`*^9, {3.883512879135339*^9, 3.88351290911948*^9}, {
   3.883597761200822*^9, 3.883597817541102*^9}, {3.883597882681568*^9, 
   3.883597944517598*^9}, {3.883597975044119*^9, 3.883598049269492*^9}, {
   3.883598204165783*^9, 3.8835982141567583`*^9}, {3.8835983246250553`*^9, 
   3.883598341215436*^9}, {3.883598419209539*^9, 3.883598419893332*^9}, {
   3.8836013358086433`*^9, 3.8836013358698063`*^9}, {3.8836014792775784`*^9, 
   3.883601480549267*^9}, {3.883773120778658*^9, 3.8837731502463427`*^9}, {
   3.883773207998699*^9, 3.8837732239311237`*^9}, {3.883773253936391*^9, 
   3.883773296420521*^9}, {3.883773358973373*^9, 3.8837733861686563`*^9}, {
   3.883773430630018*^9, 3.883773431545444*^9}, {3.883773496142131*^9, 
   3.883773567138446*^9}, {3.883773661849062*^9, 3.883773889102766*^9}, {
   3.883773951615705*^9, 3.883773997115494*^9}, {3.883774049784835*^9, 
   3.88377419485935*^9}, {3.88377422528459*^9, 3.883774432181467*^9}, {
   3.8837744648139887`*^9, 3.8837744661811523`*^9}, {3.88377451248158*^9, 
   3.883774705880433*^9}, {3.8837748532297297`*^9, 3.883775324986553*^9}, {
   3.883775549456025*^9, 3.883775550126547*^9}, {3.8837756284051857`*^9, 
   3.883775845127221*^9}, {3.883776019922142*^9, 3.88377603450128*^9}, 
   3.883776381222533*^9, {3.8837764377869387`*^9, 3.883776438038405*^9}, {
   3.883776502019459*^9, 3.8837765184058847`*^9}, {3.8837772454727077`*^9, 
   3.883777260481804*^9}, 3.884322166204599*^9, {3.8843224263918877`*^9, 
   3.884322466684297*^9}, {3.88432254381988*^9, 3.884322571556877*^9}, {
   3.8843270299145117`*^9, 3.884327033243052*^9}, {3.884327368186884*^9, 
   3.884327384759794*^9}, {3.88432973889962*^9, 3.88432974581668*^9}, {
   3.884333664265546*^9, 3.884333762602322*^9}, {3.884333855564014*^9, 
   3.884333856784574*^9}, {3.884335583612111*^9, 3.884335593570149*^9}, {
   3.8843376931636333`*^9, 3.88433771584369*^9}, {3.884347414147975*^9, 
   3.884347428928589*^9}, {3.8843480858533688`*^9, 3.88434808764919*^9}, {
   3.884366942185979*^9, 3.884366948561919*^9}, {3.8843681005624638`*^9, 
   3.8843681742073393`*^9}, {3.884767852610112*^9, 3.8847678713859863`*^9}, {
   3.884768270426532*^9, 3.8847682750390472`*^9}, {3.884784895534739*^9, 
   3.884784895880851*^9}, {3.886675713767267*^9, 3.886675713915103*^9}, {
   3.886675762784294*^9, 3.886676093902419*^9}, {3.886676136088127*^9, 
   3.886676309777057*^9}, {3.886676390632054*^9, 3.886676667614813*^9}, {
   3.886676710004816*^9, 3.8866767292698536`*^9}, {3.8866768730781727`*^9, 
   3.886676961735324*^9}, {3.8866769952719417`*^9, 3.886677026866912*^9}, {
   3.8866770734419065`*^9, 3.8866771247999287`*^9}, {3.886677158575979*^9, 
   3.886677282519866*^9}, {3.886677344140161*^9, 3.8866773767809305`*^9}, {
   3.8866795086892557`*^9, 3.8866795365833006`*^9}, 3.8866801372787275`*^9, {
   3.8866995280064383`*^9, 3.886699635163933*^9}, {3.8867336815169353`*^9, 
   3.8867336840713835`*^9}, {3.8867339451337204`*^9, 
   3.8867339653233423`*^9}, {3.8867358035948997`*^9, 3.886735979816865*^9}, {
   3.886736024810707*^9, 3.8867360913088503`*^9}, {3.886736918271656*^9, 
   3.886736919382514*^9}, {3.8867514627309875`*^9, 3.8867514634686604`*^9}, {
   3.8867520400798607`*^9, 3.886752042038565*^9}, {3.8867611193004265`*^9, 
   3.8867611367993307`*^9}, {3.886761268717227*^9, 3.886761277061352*^9}, {
   3.88676144329191*^9, 3.886761581610306*^9}, {3.886761657388244*^9, 
   3.8867616619882793`*^9}, 3.886761693083291*^9, {3.8867744828755093`*^9, 
   3.886774555044771*^9}, {3.886774892273632*^9, 3.88677497773841*^9}, {
   3.8867750239306126`*^9, 3.886775043355403*^9}, 3.8867750812117767`*^9, {
   3.8867755195859904`*^9, 3.8867755210500107`*^9}, {3.886776223127944*^9, 
   3.8867762409953537`*^9}, {3.8867762996018314`*^9, 3.886776329036092*^9}, {
   3.886776385818288*^9, 3.8867764439867754`*^9}, {3.8867764827737656`*^9, 
   3.8867764956927843`*^9}, {3.8867765558685637`*^9, 3.886776558846425*^9}, {
   3.8867766322266865`*^9, 3.886776716408743*^9}, {3.88677730301858*^9, 
   3.886777341878184*^9}, {3.8867785583377366`*^9, 3.886778568360292*^9}, {
   3.8867786338765554`*^9, 3.886778680506228*^9}, {3.8867787254537272`*^9, 
   3.8867787314067373`*^9}, {3.8867788191316185`*^9, 3.886778902489747*^9}, {
   3.886779026141715*^9, 3.8867791685691147`*^9}, {3.8867795789460526`*^9, 
   3.8867795802528877`*^9}, {3.8867796124118814`*^9, 3.886779634460971*^9}, {
   3.8867796688777275`*^9, 3.8867797026420283`*^9}, {3.886779771692973*^9, 
   3.8867798392009645`*^9}, {3.8867799169514093`*^9, 
   3.8867799694519877`*^9}, {3.8867800609959173`*^9, 
   3.8867801466150265`*^9}, {3.8867801841598816`*^9, 
   3.8867803032048607`*^9}, {3.8867837778310585`*^9, 
   3.8867837781250534`*^9}, {3.8867838138270626`*^9, 
   3.8867838217810183`*^9}, {3.8867843463821926`*^9, 3.886784348917634*^9}, {
   3.886785041051781*^9, 3.886785053611392*^9}, {3.886786583069355*^9, 
   3.8867865857856884`*^9}, {3.886942870312353*^9, 3.886942879706477*^9}, {
   3.8869443600299892`*^9, 3.8869443681534567`*^9}, {3.8870940564506927`*^9, 
   3.887094089906678*^9}, {3.8873957092903194`*^9, 3.887395729405326*^9}, {
   3.8873960622729044`*^9, 3.887396063478672*^9}, {3.887482080291484*^9, 
   3.8874820840818043`*^9}, {3.887482490230404*^9, 3.8874825010737*^9}, {
   3.8874880043455315`*^9, 3.887488004525199*^9}, {3.8874880576488376`*^9, 
   3.8874880667097387`*^9}, {3.8874894072448473`*^9, 3.887489407937056*^9}, {
   3.887489462686842*^9, 3.8874894649073553`*^9}, 3.887489581132061*^9, {
   3.8874896493705263`*^9, 3.887489654811119*^9}, {3.8874898293390927`*^9, 
   3.887489836922227*^9}, 3.8875457864894066`*^9, {3.887546846722664*^9, 
   3.8875468628081436`*^9}, {3.8875470309209557`*^9, 
   3.8875470326043425`*^9}, {3.8875471463243685`*^9, 3.887547178582857*^9}, {
   3.887547467594249*^9, 3.887547504599988*^9}, {3.8875480239476986`*^9, 
   3.887548164477951*^9}, {3.8875482036759834`*^9, 3.887548216917842*^9}, 
   3.88754844707366*^9, {3.8875485535678053`*^9, 3.8875485733625746`*^9}, {
   3.8875486487516336`*^9, 3.8875486508576865`*^9}, {3.887548696783717*^9, 
   3.8875486989311934`*^9}, {3.8875488323930235`*^9, 3.887548863887571*^9}, {
   3.887548973753626*^9, 3.8875489859462547`*^9}, {3.887549088090103*^9, 
   3.887549145870959*^9}, {3.887549284171869*^9, 3.8875494288378143`*^9}, {
   3.8875495388790817`*^9, 3.8875497808825955`*^9}, {3.887549880625827*^9, 
   3.8875499356547866`*^9}, {3.887550251220746*^9, 3.887550256484661*^9}, {
   3.887550327610719*^9, 3.8875503359458437`*^9}, {3.887550413537346*^9, 
   3.8875504416717854`*^9}, {3.8875506116539145`*^9, 3.887550739782279*^9}, {
   3.8875510854314437`*^9, 3.8875511078419514`*^9}, {3.887551146670663*^9, 
   3.8875512261028376`*^9}, {3.8875512970399275`*^9, 3.887551302840237*^9}, {
   3.8875517169748807`*^9, 3.8875517186609106`*^9}, {3.887552024197045*^9, 
   3.887552040174245*^9}, {3.8875521764233727`*^9, 3.8875522006479654`*^9}, {
   3.8875523474332924`*^9, 3.887552375041579*^9}, {3.887552683303011*^9, 
   3.8875526850815496`*^9}, 3.88755298377157*^9, {3.887553127594592*^9, 
   3.88755320064019*^9}, {3.8875539720948753`*^9, 3.8875540009919515`*^9}, {
   3.8875547969425974`*^9, 3.8875548086357307`*^9}, {3.887555082367283*^9, 
   3.8875550842224183`*^9}, {3.887555428305114*^9, 3.887555428590101*^9}, {
   3.8876189212270155`*^9, 3.8876190298702164`*^9}, {3.8876190636374464`*^9, 
   3.887619209710329*^9}, {3.8876197243815165`*^9, 3.8876197878232245`*^9}, {
   3.8876200402034965`*^9, 3.8876200408390293`*^9}, {3.887622204828884*^9, 
   3.8876222654257545`*^9}, {3.8876223146092014`*^9, 3.8876223214165215`*^9}, 
   3.8876226894709067`*^9, {3.887624375750091*^9, 3.8876243799924717`*^9}, {
   3.887624463806749*^9, 3.887624506571785*^9}, {3.887624756671503*^9, 
   3.887624781584098*^9}, {3.8876385393427773`*^9, 3.8876385853661337`*^9}, {
   3.88763865160878*^9, 3.8876387435245442`*^9}, {3.8876389912406063`*^9, 
   3.887638998230548*^9}, {3.88763904916966*^9, 3.887639178635975*^9}, {
   3.8876392413942766`*^9, 3.8876392444710884`*^9}, {3.887639327602273*^9, 
   3.8876394267458706`*^9}, {3.8876394759856057`*^9, 3.887639522817541*^9}, {
   3.8876397311446486`*^9, 3.8876397981523123`*^9}, {3.8876398317328253`*^9, 
   3.88763991362761*^9}, {3.887640081190403*^9, 3.887640112418303*^9}, {
   3.8876401636111174`*^9, 3.887640189775182*^9}, {3.8876402728687115`*^9, 
   3.8876402755821257`*^9}, {3.8876403115828476`*^9, 3.887640324614374*^9}, {
   3.8876405603249283`*^9, 3.887640567724093*^9}, {3.8876406039145336`*^9, 
   3.887640637337191*^9}, {3.8876407781429267`*^9, 3.8876408303831253`*^9}, {
   3.887640868052211*^9, 3.8876412672235394`*^9}, {3.88764261635001*^9, 
   3.887642665920148*^9}, {3.887642745360853*^9, 3.8876427472538605`*^9}, {
   3.88764278338876*^9, 3.887642882739767*^9}, {3.887642926928113*^9, 
   3.8876429367832556`*^9}, {3.8876430278441677`*^9, 
   3.8876430558320956`*^9}, {3.8876430995828543`*^9, 
   3.8876432773736825`*^9}, {3.8876433161755056`*^9, 
   3.8876433934642982`*^9}, {3.8876434237563543`*^9, 
   3.8876434902124743`*^9}, {3.887643584590669*^9, 3.887643607229768*^9}, {
   3.8876449090925994`*^9, 3.8876451547691607`*^9}, {3.8876451936405387`*^9, 
   3.8876452040336013`*^9}, {3.887645513305956*^9, 3.887645514292384*^9}, {
   3.8876455586452074`*^9, 3.8876455938601227`*^9}, {3.8876464680956106`*^9, 
   3.8876464926961136`*^9}, {3.8876499290090303`*^9, 
   3.8876499932431545`*^9}, {3.8876502321962037`*^9, 3.887650232999605*^9}, {
   3.887650713002586*^9, 3.887650721674644*^9}, {3.8876514765614176`*^9, 
   3.887651506451089*^9}, {3.887653657560176*^9, 3.8876536644029856`*^9}, {
   3.8876538342093115`*^9, 3.88765384367965*^9}, {3.8876538769254766`*^9, 
   3.887653906545551*^9}, {3.892399803713168*^9, 3.892399803789022*^9}, {
   3.89240114272393*^9, 3.892401205825488*^9}, {3.892401282906495*^9, 
   3.892401607581439*^9}, {3.892401658025736*^9, 3.89240178309553*^9}, {
   3.892401866171674*^9, 3.892401869543229*^9}, {3.8924019255510073`*^9, 
   3.892401955010405*^9}, {3.892401996364602*^9, 3.892402007677971*^9}, {
   3.8924664047404613`*^9, 3.892466437812728*^9}, {3.892466545590559*^9, 
   3.892466552631722*^9}, {3.892467085223069*^9, 3.892467100195655*^9}, {
   3.892469246610765*^9, 3.892469255304381*^9}, {3.8983245798473845`*^9, 
   3.898324581407652*^9}, {3.8983261511216917`*^9, 3.8983261892278976`*^9}, {
   3.8983262505200233`*^9, 3.898326268007707*^9}, {3.8983265928416696`*^9, 
   3.8983265929736595`*^9}, {3.898326952146888*^9, 3.8983270048342676`*^9}, {
   3.898343777240961*^9, 3.8983437809818172`*^9}, {3.898343917073806*^9, 
   3.8983439253967457`*^9}, {3.8983440707921314`*^9, 3.8983440924676504`*^9}, 
   3.8983441734510202`*^9, 3.8983445502898893`*^9, {3.899002600213873*^9, 
   3.89900260201633*^9}, {3.899009094503557*^9, 3.8990090976405535`*^9}, {
   3.8992821069065304`*^9, 3.899282107045665*^9}, {3.8993078148016253`*^9, 
   3.899307814808621*^9}, {3.8993849654726467`*^9, 3.8993849654786425`*^9}, {
   3.911295678966273*^9, 3.911295684208965*^9}, {3.911402671082039*^9, 
   3.91140268120012*^9}, {3.9114027176764517`*^9, 3.9114027300708284`*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"38f9c8f7-5101-4df9-a427-f299ea6cb5b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Construct Vectors ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["a", "L"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"2e9c22fd-859b-48fc-8dfd-c38484ae8f73"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["a", "R"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"65822650-376e-4835-a179-8d367b52a7da"],
 ", Choose ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["s", "L"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"3eb5eb29-11c0-4ad9-9aac-8c15a30d184e"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["s", "R"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"0a9ae8a1-65e2-45cc-9101-1e44377770b2"],
 " and Commit to them with ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "L"], TraditionalForm]],ExpressionUUID->
  "abc9fa58-0818-4ab6-9ee0-3a647c364bee"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", "L"], TraditionalForm]],ExpressionUUID->
  "5669b2ff-bff3-497e-a926-eae3606c1f11"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", 
    RowBox[{"R", ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]}]], 
   TraditionalForm]],ExpressionUUID->"9703179e-d061-4ef6-8041-60fc407edcd5"]
}], "Subsection",
 CellChangeTimes->{{3.88674248729734*^9, 3.8867426832942395`*^9}, {
  3.886743054139711*^9, 3.8867431780271893`*^9}, {3.8924021513941803`*^9, 
  3.892402284997938*^9}, {3.8992874041374354`*^9, 3.8992874392906713`*^9}, {
  3.911402745883621*^9, 
  3.911402745916319*^9}},ExpressionUUID->"f21f8b9b-5d7c-4616-a762-\
dceabecd3c50"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["a", "R"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"72329278-f046-4906-b867-ad1c976eb554"],
 ": shifted and inversely shuffled version of ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["k", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "23424aaf-f23e-4948-adf4-15317d8d1e1d"],
 " (the discrete logarithms in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", 
    RowBox[{"R", ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]}]], 
   TraditionalForm]],ExpressionUUID->"3c26a03b-eff4-4f6b-9bfd-3d245d093b71"],
 " w.r.t. bases ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     OverscriptBox["h", "\[RightVector]"], ",", 
     OverscriptBox["b", "\[RightVector]"], ",", 
     OverscriptBox["c", "\[RightVector]"], ",", 
     OverscriptBox["d", "\[RightVector]"]}], "}"}], TraditionalForm]],
  ExpressionUUID->"38b2e04f-3f00-479a-8687-14dcf80bd67a"],
 ").\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["a", "L"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"40341f55-3d0b-476b-abbb-e1e97c5a05f9"],
 ": aggregation of ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["a", "R"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"c5ecd460-a50d-4082-afcb-66b63667342a"],
 " (blinding value \[Alpha] for commitment ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "L"], TraditionalForm]],ExpressionUUID->
  "931e3479-76b8-474b-8c09-f20dfe77fba9"],
 "), ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox[
     SubscriptBox["a", "L"], "\[RightVector]"], 
    SubscriptBox["\[Congruent]", "q"], 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      SubscriptBox["a", 
       SubscriptBox["R", "1"]], ",", 
      RowBox[{
       SubscriptBox["a", 
        SubscriptBox["R", "1"]], 
       SubscriptBox["a", 
        SubscriptBox["R", "2"]]}], ",", "...", ",", 
      RowBox[{
       SubsuperscriptBox["\[CapitalPi]", 
        RowBox[{"i", "=", "1"}], 
        RowBox[{"n", "-", "1"}]], 
       SubscriptBox["a", 
        SubscriptBox["R", "i"]]}]}], "}"}]}], TraditionalForm]],
  ExpressionUUID->"39f1aa70-32a8-494c-bae0-b21fd04614ba"],
 "\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["s", "L"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"6943fd14-5ab2-46f8-95fa-c850b0dd27a3"],
 ": blinding values for ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["a", "L"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"e2ff2207-41ae-4457-9d7f-0a535103af89"],
 " (blinding value \[Beta] for commitment ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", "L"], TraditionalForm]],ExpressionUUID->
  "62e96ba2-5308-4211-a21e-3841a3578480"],
 ")\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["s", "R"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"c0f21313-3b82-41d7-a44d-2ff5fe85f05a"],
 ": blinding values for ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["a", "R"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"1608ed52-d537-4e86-b207-0fa85d705477"],
 " (blinding values ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Rho]", 
    RowBox[{"{", 
     RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]], TraditionalForm]],
  ExpressionUUID->"eb4c3b15-ce76-4692-8a88-e7b2d6bd7f54"],
 " for commitments ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", 
    RowBox[{"R", ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]}]], 
   TraditionalForm]],ExpressionUUID->"027bc4c6-5bf7-483a-b6dd-b5d2830f5bbc"],
 " based on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     OverscriptBox["h", "\[RightVector]"], ",", 
     OverscriptBox["b", "\[RightVector]"], ",", 
     OverscriptBox["c", "\[RightVector]"], ",", 
     OverscriptBox["d", "\[RightVector]"]}], "}"}], TraditionalForm]],
  ExpressionUUID->"297266c7-4187-4505-bd35-d377c7c47439"],
 ")\nThe prover is left to argue that ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["a", "R"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"1d104ffd-5de7-4846-ac08-5ea3dae5c968"],
 " satisfies three conditions (see paper draft pg. 21 and 22):\n1. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[CapitalPi]", "i"], 
     SubscriptBox["a", 
      SubscriptBox["R", "i"]]}], 
    SubscriptBox["\[Congruent]", "q"], 
    RowBox[{
     SuperscriptBox["s", "n"], 
     SubscriptBox["\[CapitalPi]", "i"], 
     SubscriptBox["k", "i"]}]}], TraditionalForm]],ExpressionUUID->
  "5649e4e7-0068-411b-9cab-88548da8ed48"],
 ". This shows, using a polynomial identity test, that there exists a \
permutation ",
 Cell[BoxData[
  FormBox["\[Pi]", TraditionalForm]],ExpressionUUID->
  "b4244e66-a99b-47ff-b3f4-deac57ff941b"],
 " of length n such that ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", 
    SubscriptBox["R", "i"]], TraditionalForm]],ExpressionUUID->
  "8b994961-3d06-4a81-8648-50df801aaf8f"],
 " contains ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["c", "i"], "*", 
    SubscriptBox["k", 
     RowBox[{
      SuperscriptBox["\[Pi]", 
       RowBox[{"-", "1"}]], "(", "i", ")"}]]}], TraditionalForm]],
  ExpressionUUID->"2afc6551-f033-46f0-ae23-3e9ca463bec2"],
 ", where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["c", "i"], TraditionalForm]],ExpressionUUID->
  "712bf2a4-9854-4698-8176-b222cfc26a48"],
 " is any constant.\n2. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[CapitalSigma]", "i"], 
     SubscriptBox["a", 
      SubscriptBox["R", "i"]]}], 
    SubscriptBox["\[Congruent]", "q"], 
    RowBox[{
     SubscriptBox["s\[CapitalSigma]", "i"], 
     SubscriptBox["k", "i"]}]}], TraditionalForm]],ExpressionUUID->
  "a6832d80-4fc2-44f9-9098-c1a7293c27fa"],
 ". This shows, using a random linear combination check, that there exists an \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", "\[Element]", 
    SubsuperscriptBox["\[DoubleStruckCapitalZ]", "q", "*"]}], 
   TraditionalForm]],ExpressionUUID->"a6834f83-9b53-42ee-a46d-d26292f8612e"],
 " such that for all ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", 
    SubscriptBox["R", "i"]], TraditionalForm]],ExpressionUUID->
  "835456be-1396-468f-b3a5-32c09e9c4638"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["c", "i"], TraditionalForm]],ExpressionUUID->
  "d1dc248f-6fe7-4cbc-90e9-2824f776e3af"],
 " is equal to ",
 Cell[BoxData[
  FormBox["s", TraditionalForm]],ExpressionUUID->
  "ec36dcbf-ea7d-408d-a6c4-c719dac574d4"],
 ".\n3. ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "R"], TraditionalForm]],ExpressionUUID->
  "aba96a8f-365e-415d-b3d4-04f4bc508bc6"],
 " is the committed value in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", 
    RowBox[{"R", ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]}]], 
   TraditionalForm]],ExpressionUUID->"ca5bb438-be8d-4198-afaa-276350156734"],
 " w.r.t. bases ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     OverscriptBox["h", "\[RightVector]"], ",", 
     OverscriptBox["b", "\[RightVector]"], ",", 
     OverscriptBox["c", "\[RightVector]"], ",", 
     OverscriptBox["d", "\[RightVector]"]}], "}"}], TraditionalForm]],
  ExpressionUUID->"e72829eb-fcb8-4c01-a23c-8a5304727510"],
 ".\nThese conditions need to be transformed into a Hadamard product or \
linear combination of vectors to feed them into a \
\[OpenCurlyDoubleQuote]Bulletproofs sub-routine\[CloseCurlyDoubleQuote], as \
it is called in the paper draft. The product relation in condition 1 can be \
transformed into a Hadamard product with the help of ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["a", "L"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"f6450aed-7081-4855-b94e-02516d43f5a6"],
 " by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["a", 
      SubscriptBox["L", "n"]], 
     SubscriptBox["a", 
      SubscriptBox["R", "n"]]}], 
    SubscriptBox["\[Congruent]", "q"], 
    RowBox[{
     SubscriptBox["\[CapitalPi]", "i"], 
     SubscriptBox["a", 
      SubscriptBox["R", "i"]]}]}], TraditionalForm]],ExpressionUUID->
  "87f29870-e66e-48e9-abec-61c0cd97ab1f"],
 ". Conditions 1 and 2 are then captured by:\n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    SubscriptBox["a", 
     SubscriptBox["L", "1"]], 
    SubscriptBox["\[Congruent]", "q"], "1"}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{"\[Wedge]", 
     SubscriptBox["a", 
      SubscriptBox["L", "i"]]}], 
    SubscriptBox["\[Congruent]", "q"], 
    RowBox[{
     SubscriptBox["a", 
      SubscriptBox["L", 
       RowBox[{"i", "-", "1"}]]], 
     SubscriptBox["a", 
      SubscriptBox["R", 
       RowBox[{"i", "-", "1"}]]]}]}], TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{"\[Wedge]", 
     RowBox[{
      SubscriptBox["a", 
       SubscriptBox["L", "n"]], 
      SubscriptBox["a", 
       SubscriptBox["R", "n"]]}]}], 
    SubscriptBox["\[Congruent]", "q"], 
    RowBox[{
     SuperscriptBox["s", "n"], 
     SubscriptBox["\[CapitalPi]", "i"], 
     SubscriptBox["k", "i"]}]}], TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{"\[Wedge]", 
     RowBox[{
      SubscriptBox["\[CapitalSigma]", "i"], 
      SubscriptBox["a", 
       SubscriptBox["R", "i"]]}]}], 
    SubscriptBox["\[Congruent]", "q"], 
    RowBox[{
     SubscriptBox["s\[CapitalSigma]", "i"], 
     SubscriptBox["k", "i"]}]}], TraditionalForm]}],ExpressionUUID->
  "57fa00db-4835-4352-abb4-cd8264eb9ac4"]
}], "Text",
 CellChangeTimes->{{3.886742765483288*^9, 3.8867428975056753`*^9}, {
   3.886742927813531*^9, 3.8867429914843845`*^9}, {3.886764361233137*^9, 
   3.886764376525034*^9}, {3.8867675397735415`*^9, 3.886767542533122*^9}, {
   3.8867676475024366`*^9, 3.8867677439979005`*^9}, {3.886767936416149*^9, 
   3.8867679513813353`*^9}, {3.886783977786005*^9, 3.886783979705041*^9}, {
   3.8870925156981363`*^9, 3.88709283830938*^9}, {3.887092886224471*^9, 
   3.88709319468186*^9}, {3.892402301900983*^9, 3.892402303301537*^9}, {
   3.8924399147948303`*^9, 3.892439957860833*^9}, {3.8992837223258934`*^9, 
   3.8992837327614326`*^9}, {3.89928409386123*^9, 3.8992841645255623`*^9}, {
   3.8992841969965563`*^9, 3.899284266116633*^9}, {3.8992843288065343`*^9, 
   3.8992845558019323`*^9}, {3.8992856508800755`*^9, 3.899286109311034*^9}, 
   3.899286169346582*^9, {3.8992864677427464`*^9, 3.899286485298997*^9}, {
   3.8992865251552496`*^9, 3.8992866048148346`*^9}, {3.8992866382850475`*^9, 
   3.8992866692227497`*^9}, {3.8992867455266013`*^9, 
   3.8992868500859976`*^9}, {3.8992868819122467`*^9, 
   3.8992870357697783`*^9}, {3.899287167125126*^9, 3.8992873204628716`*^9}, 
   3.8992873986804075`*^9, {3.8992891593956747`*^9, 3.8992891886056223`*^9}, {
   3.911402750705968*^9, 3.9114027653952737`*^9}, {3.911408044426057*^9, 
   3.9114080513988776`*^9}},ExpressionUUID->"db29d8ea-3c0e-4353-9aea-\
5651538e9155"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"StateMachineRestore", "[", "\"\<ruk\>\"", "]"}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["a", "R"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"modq", "[", 
    RowBox[{"s", " ", "*", " ", 
     RowBox[{"Permute", "[", 
      RowBox[{
       OverscriptBox["k", "\[RightVector]"], ",", " ", 
       SuperscriptBox["\[Pi]", 
        RowBox[{"-", "1"}]]}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["a", "L"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"{", "1", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
    RowBox[{"i", " ", "<=", " ", 
     RowBox[{"n", "-", "1"}]}], ",", " ", 
    RowBox[{"i", "++"}], ",", "\n", "\t", 
    RowBox[{"AppendTo", "[", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["a", "L"], "\[RightVector]"], ",", " ", 
      RowBox[{"modq", "[", 
       RowBox[{
        RowBox[{
         OverscriptBox[
          SubscriptBox["a", "L"], "\[RightVector]"], "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", "*", " ", 
        RowBox[{
         OverscriptBox[
          SubscriptBox["a", "R"], "\[RightVector]"], "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "]"}]}], "\n", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Alpha]", " ", "=", " ", 
   RowBox[{"BPRandomInteger", "[", 
    RowBox[{"0", ",", 
     RowBox[{"q", "-", "1"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Beta]", " ", "=", " ", 
   RowBox[{"BPRandomInteger", "[", 
    RowBox[{"0", ",", 
     RowBox[{"q", "-", "1"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Rho]", "h"], " ", "=", " ", 
   RowBox[{"BPRandomInteger", "[", 
    RowBox[{"0", ",", 
     RowBox[{"q", "-", "1"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Rho]", "b"], " ", "=", " ", 
   RowBox[{"BPRandomInteger", "[", 
    RowBox[{"0", ",", 
     RowBox[{"q", "-", "1"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Rho]", "c"], " ", "=", " ", 
   RowBox[{"BPRandomInteger", "[", 
    RowBox[{"0", ",", 
     RowBox[{"q", "-", "1"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Rho]", "d"], " ", "=", " ", 
   RowBox[{"BPRandomInteger", "[", 
    RowBox[{"0", ",", 
     RowBox[{"q", "-", "1"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["s", "L"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"BPRandomIntegerVector", "[", 
    RowBox[{"0", ",", 
     RowBox[{"q", "-", "1"}], ",", "n"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    OverscriptBox[
     SubscriptBox["s", "R"], "\[RightVector]"], " ", "=", " ", 
    RowBox[{"BPRandomIntegerVector", "[", 
     RowBox[{"0", ",", 
      RowBox[{"q", "-", "1"}], ",", "n"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["A", "L"], " ", "=", " ", 
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["a", "L"], "\[RightVector]"], ".", 
     OverscriptBox["g", "\[RightVector]"]}], " ", "+", " ", 
    RowBox[{"\[Alpha]", "*", "h"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"TellVerifier", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<AL\>\"", "->", 
      SubscriptBox["A", "L"]}], ",", 
     RowBox[{"\"\<_cost\>\"", "->", "\"\<group\>\""}]}], "}"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", 
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<AL\>\"", ",", 
       RowBox[{"compressPoint", "[", 
        SubscriptBox["A", "L"], "]"}], ",", 
       RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}]}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["S", "L"], " ", "=", " ", 
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["s", "L"], "\[RightVector]"], ".", 
     OverscriptBox["g", "\[RightVector]"]}], " ", "+", " ", 
    RowBox[{"\[Beta]", "*", "h"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"TellVerifier", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<SL\>\"", "->", 
      SubscriptBox["S", "L"]}], ",", 
     RowBox[{"\"\<_cost\>\"", "->", "\"\<group\>\""}]}], "}"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", 
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<SL\>\"", ",", 
       RowBox[{"compressPoint", "[", 
        SubscriptBox["S", "L"], "]"}], ",", 
       RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}]}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["S", 
    RowBox[{"R", ",", "h"}]], " ", "=", " ", 
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["s", "R"], "\[RightVector]"], ".", 
     OverscriptBox["h", "\[RightVector]"]}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["\[Rho]", "h"], "*", "h"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TellVerifier", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<SRh\>\"", "->", 
      SubscriptBox["S", 
       RowBox[{"R", ",", "h"}]]}], ",", 
     RowBox[{"\"\<_cost\>\"", "->", "\"\<group\>\""}]}], "}"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", 
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<SRh\>\"", ",", 
       RowBox[{"compressPoint", "[", 
        SubscriptBox["S", 
         RowBox[{"R", ",", "h"}]], "]"}], ",", 
       RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}]}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["S", 
    RowBox[{"R", ",", "b"}]], " ", "=", " ", 
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["s", "R"], "\[RightVector]"], ".", 
     OverscriptBox["b", "\[RightVector]"]}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["\[Rho]", "b"], "*", "h"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TellVerifier", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<SRb\>\"", "->", 
      SubscriptBox["S", 
       RowBox[{"R", ",", "b"}]]}], ",", 
     RowBox[{"\"\<_cost\>\"", "->", "\"\<group\>\""}]}], "}"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", 
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<SRb\>\"", ",", 
       RowBox[{"compressPoint", "[", 
        SubscriptBox["S", 
         RowBox[{"R", ",", "b"}]], "]"}], ",", 
       RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}]}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["S", 
    RowBox[{"R", ",", "c"}]], " ", "=", " ", 
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["s", "R"], "\[RightVector]"], ".", 
     OverscriptBox["c", "\[RightVector]"]}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["\[Rho]", "c"], "*", "h"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TellVerifier", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<SRc\>\"", "->", 
      SubscriptBox["S", 
       RowBox[{"R", ",", "c"}]]}], ",", 
     RowBox[{"\"\<_cost\>\"", "->", "\"\<group\>\""}]}], "}"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", 
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<SRc\>\"", ",", 
       RowBox[{"compressPoint", "[", 
        SubscriptBox["S", 
         RowBox[{"R", ",", "c"}]], "]"}], ",", 
       RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}]}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["S", 
    RowBox[{"R", ",", "d"}]], " ", "=", " ", 
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["s", "R"], "\[RightVector]"], ".", 
     OverscriptBox["d", "\[RightVector]"]}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["\[Rho]", "d"], "*", "h"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TellVerifier", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<SRd\>\"", "->", 
      SubscriptBox["S", 
       RowBox[{"R", ",", "d"}]]}], ",", 
     RowBox[{"\"\<_cost\>\"", "->", "\"\<group\>\""}]}], "}"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", 
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<SRd\>\"", ",", 
       RowBox[{"compressPoint", "[", 
        SubscriptBox["S", 
         RowBox[{"R", ",", "d"}]], "]"}], ",", 
       RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}]}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Knowledge\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[SubscriptBox[\(a\), \(R\)], \(\[RightVector]\
\)]\) :\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) s * \
\!\(\*SuperscriptBox[\(\[Pi]\), \(-1\)]\)(\!\(\*OverscriptBox[\(k\), \(\
\[RightVector]\)]\))\>\"", ",", 
         "\"\<Shifted Inverse Shuffle of \!\(\*OverscriptBox[\(k\), \(\
\[RightVector]\)]\)\>\"", ",", "\"\<P\>\"", ",", 
         OverscriptBox[
          SubscriptBox["a", "R"], "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[SubscriptBox[\(a\), \(L\)], \(\[RightVector]\
\)]\) :\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \
{1,s\!\(\*SubscriptBox[OverscriptBox[\(k\), \(\[RightVector]\)], \
\(\*SuperscriptBox[\(\[Pi]\), \(-1\)] \
\((1)\)\)]\),\!\(\*SuperscriptBox[\(s\), \
\(2\)]\)\!\(\*SubscriptBox[OverscriptBox[\(k\), \(\[RightVector]\)], \
\(\*SuperscriptBox[\(\[Pi]\), \(-1\)] \
\((1)\)\)]\)\!\(\*SubscriptBox[OverscriptBox[\(k\), \(\[RightVector]\)], \
\(\*SuperscriptBox[\(\[Pi]\), \(-1\)] \((2)\)\)]\),...}\>\"", ",", 
         "\"\<Aggregation of \!\(\*OverscriptBox[SubscriptBox[\(a\), \(R\)], \
\(\[RightVector]\)]\)\>\"", ",", "\"\<P\>\"", ",", 
         OverscriptBox[
          SubscriptBox["a", "L"], "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Alpha] \!\(\*OverscriptBox[\(\[LeftArrow]\), \($\)]\) \
\!\(\*SubscriptBox[\(\[DoubleStruckCapitalZ]\), \(q\)]\)\>\"", ",", 
         "\"\<Blinding\\nValue\>\"", ",", "\"\<P\>\"", ",", "\[Alpha]"}], 
        "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Beta] \!\(\*OverscriptBox[\(\[LeftArrow]\), \($\)]\) \
\!\(\*SubscriptBox[\(\[DoubleStruckCapitalZ]\), \(q\)]\)\>\"", ",", 
         "\"\<Blinding\\nValue\>\"", ",", "\"\<P\>\"", ",", "\[Beta]"}], 
        "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Rho]\), \(h\)]\) \!\(\*OverscriptBox[\(\
\[LeftArrow]\), \($\)]\) \!\(\*SubscriptBox[\(\[DoubleStruckCapitalZ]\), \
\(q\)]\)\>\"", ",", "\"\<Blinding\\nValue\>\"", ",", "\"\<P\>\"", ",", 
         SubscriptBox["\[Rho]", "h"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Rho]\), \(b\)]\) \!\(\*OverscriptBox[\(\
\[LeftArrow]\), \($\)]\) \!\(\*SubscriptBox[\(\[DoubleStruckCapitalZ]\), \
\(q\)]\)\>\"", ",", "\"\<Blinding\\nValue\>\"", ",", "\"\<P\>\"", ",", 
         SubscriptBox["\[Rho]", "b"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Rho]\), \(c\)]\) \!\(\*OverscriptBox[\(\
\[LeftArrow]\), \($\)]\) \!\(\*SubscriptBox[\(\[DoubleStruckCapitalZ]\), \
\(q\)]\)\>\"", ",", "\"\<Blinding\\nValue\>\"", ",", "\"\<P\>\"", ",", 
         SubscriptBox["\[Rho]", "c"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Rho]\), \(d\)]\) \!\(\*OverscriptBox[\(\
\[LeftArrow]\), \($\)]\) \!\(\*SubscriptBox[\(\[DoubleStruckCapitalZ]\), \
\(q\)]\)\>\"", ",", "\"\<Blinding\\nValue\>\"", ",", "\"\<P\>\"", ",", 
         SubscriptBox["\[Rho]", "d"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[SubscriptBox[\(s\), \(L\)], \(\[RightVector]\
\)]\) \!\(\*OverscriptBox[\(\[LeftArrow]\), \($\)]\) \!\(\*SubsuperscriptBox[\
\(\[DoubleStruckCapitalZ]\), \(q\), \(n\)]\)\>\"", ",", 
         "\"\<Blinding\\nVector for \!\(\*OverscriptBox[SubscriptBox[\(a\), \
\(L\)], \(\[RightVector]\)]\)\>\"", ",", "\"\<P\>\"", ",", 
         OverscriptBox[
          SubscriptBox["s", "L"], "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[SubscriptBox[\(s\), \(R\)], \(\[RightVector]\
\)]\) \!\(\*OverscriptBox[\(\[LeftArrow]\), \($\)]\) \!\(\*SubsuperscriptBox[\
\(\[DoubleStruckCapitalZ]\), \(q\), \(n\)]\)\>\"", ",", 
         "\"\<Blinding\\nVector for \!\(\*OverscriptBox[SubscriptBox[\(a\), \
\(R\)], \(\[RightVector]\)]\)\>\"", ",", "\"\<P\>\"", ",", 
         OverscriptBox[
          SubscriptBox["s", "R"], "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(A\), \(L\)]\) := \
<\!\(\*OverscriptBox[SubscriptBox[\(a\), \(L\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(g\), \(\[RightVector]\)]\)> + \
\[Alpha]*h\>\"", ",", "\"\<Blinded\\nPedersen\\nVector\\nCommitment\>\"", 
         ",", "\"\<P,V\>\"", ",", 
         SubscriptBox["A", "L"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(S\), \(L\)]\) := \
<\!\(\*OverscriptBox[SubscriptBox[\(s\), \(L\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(g\), \(\[RightVector]\)]\)> + \
\[Beta]*h\>\"", ",", "\"\<Blinded\\nPedersen\\nVector\\nCommitment\>\"", ",", 
         "\"\<P,V\>\"", ",", 
         SubscriptBox["S", "L"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(S\), \(R, h\)]\) := \
<\!\(\*OverscriptBox[SubscriptBox[\(s\), \(R\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(h\), \(\[RightVector]\)]\)> + \
\!\(\*SubscriptBox[\(\[Rho]\), \(h\)]\)*h\>\"", ",", 
         "\"\<Blinded\\nPedersen\\nVector\\nCommitment\>\"", ",", 
         "\"\<P,V\>\"", ",", 
         SubscriptBox["S", 
          RowBox[{"R", ",", "h"}]]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(S\), \(R, b\)]\) := \
<\!\(\*OverscriptBox[SubscriptBox[\(s\), \(R\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(b\), \(\[RightVector]\)]\)> + \
\!\(\*SubscriptBox[\(\[Rho]\), \(b\)]\)*h\>\"", ",", 
         "\"\<Blinded\\nPedersen\\nVector\\nCommitment\>\"", ",", 
         "\"\<P,V\>\"", ",", 
         SubscriptBox["S", 
          RowBox[{"R", ",", "b"}]]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(S\), \(R, c\)]\) := \
<\!\(\*OverscriptBox[SubscriptBox[\(s\), \(R\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(c\), \(\[RightVector]\)]\)> + \
\!\(\*SubscriptBox[\(\[Rho]\), \(c\)]\)*h\>\"", ",", 
         "\"\<Blinded\\nPedersen\\nVector\\nCommitment\>\"", ",", 
         "\"\<P,V\>\"", ",", 
         SubscriptBox["S", 
          RowBox[{"R", ",", "c"}]]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(S\), \(R, d\)]\) := \
<\!\(\*OverscriptBox[SubscriptBox[\(s\), \(R\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(d\), \(\[RightVector]\)]\)> + \
\!\(\*SubscriptBox[\(\[Rho]\), \(d\)]\)*h\>\"", ",", 
         "\"\<Blinded\\nPedersen\\nVector\\nCommitment\>\"", ",", 
         "\"\<P,V\>\"", ",", 
         SubscriptBox["S", 
          RowBox[{"R", ",", "d"}]]}], "}"}]}], "\[IndentingNewLine]", "}"}], 
     ",", " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left", ",", "Left"}], "}"}], 
       "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], "\n"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"CommunicationCostGrid", "[", "]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "interactive"}], ",", 
    RowBox[{"Print", "[", 
     RowBox[{"FiatShamirGrid", "[", "]"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ProcessNewMessages", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"StateMachineSave", "[", "\"\<AS\>\"", "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.886743217879135*^9, 3.886743257122286*^9}, {
   3.886743293696246*^9, 3.886743298973475*^9}, {3.8867433927739506`*^9, 
   3.8867433936931295`*^9}, {3.886743429513737*^9, 3.8867434634690943`*^9}, {
   3.8867435016280713`*^9, 3.886743643255063*^9}, {3.886743685722433*^9, 
   3.8867436924792414`*^9}, {3.8867438517007856`*^9, 3.886743852906994*^9}, {
   3.8867440335454865`*^9, 3.8867440353887234`*^9}, {3.886752947308869*^9, 
   3.8867529493223057`*^9}, {3.8867643952417116`*^9, 3.8867644131462393`*^9}, 
   3.8867644739696155`*^9, {3.8867649015635433`*^9, 3.8867649597044945`*^9}, {
   3.8867650376514874`*^9, 3.886765047736618*^9}, 3.8867651283043904`*^9, {
   3.8867651730944767`*^9, 3.8867651744880147`*^9}, {3.8867652644398375`*^9, 
   3.886765310570423*^9}, {3.886767765034854*^9, 3.8867677653355265`*^9}, {
   3.886767797583435*^9, 3.8867678000324087`*^9}, {3.8867678952495832`*^9, 
   3.88676792875167*^9}, {3.886784054654525*^9, 3.8867842561089797`*^9}, {
   3.886784290861681*^9, 3.8867842910743437`*^9}, {3.886784370250554*^9, 
   3.886784380135942*^9}, {3.88678443251721*^9, 3.886784493281917*^9}, {
   3.886784526838865*^9, 3.886784528040907*^9}, {3.8867845944738865`*^9, 
   3.8867846458528814`*^9}, {3.886784794889059*^9, 3.8867847960903645`*^9}, {
   3.886784830108761*^9, 3.886784971326806*^9}, {3.886785016920339*^9, 
   3.886785020780069*^9}, {3.886786026152918*^9, 3.886786029112509*^9}, {
   3.886786074510491*^9, 3.886786076008322*^9}, {3.886786370998456*^9, 
   3.8867864130090585`*^9}, {3.886786512600198*^9, 3.8867865127299547`*^9}, {
   3.8867865712064047`*^9, 3.8867865761923923`*^9}, {3.886786838856307*^9, 
   3.886786871232073*^9}, {3.886942849152564*^9, 3.886942858529339*^9}, {
   3.8869429631625013`*^9, 3.886942963678928*^9}, {3.886942994276499*^9, 
   3.8869430650719824`*^9}, {3.886944344164259*^9, 3.8869443511219673`*^9}, {
   3.887091003821932*^9, 3.887091070174474*^9}, {3.887091105067405*^9, 
   3.887091177854164*^9}, {3.8870913132274*^9, 3.8870913698208323`*^9}, {
   3.8870914003153753`*^9, 3.887091458437227*^9}, {3.887091523244342*^9, 
   3.8870916417123127`*^9}, {3.8870917009958982`*^9, 
   3.8870917100195265`*^9}, {3.8870917621284523`*^9, 
   3.8870918089375753`*^9}, {3.8870922451611767`*^9, 3.887092302453173*^9}, {
   3.8870923390305867`*^9, 3.88709249734931*^9}, {3.8870929250626926`*^9, 
   3.8870929254480157`*^9}, {3.887093584660843*^9, 3.8870936146038156`*^9}, {
   3.8870941016771884`*^9, 3.8870941499217076`*^9}, {3.8873957477974367`*^9, 
   3.8873957869021807`*^9}, {3.8873960823756447`*^9, 
   3.8873960836522207`*^9}, {3.88748260517607*^9, 3.887482607294569*^9}, {
   3.8874899094775352`*^9, 3.8874899418717394`*^9}, {3.887547234143615*^9, 
   3.8875472465601835`*^9}, {3.887552945931972*^9, 3.887552973620694*^9}, {
   3.887553229054779*^9, 3.887553230482229*^9}, {3.8876507626228256`*^9, 
   3.887650861340409*^9}, {3.892402310933446*^9, 3.892402311020927*^9}, {
   3.892402707289016*^9, 3.892402752384016*^9}, {3.8924397829541483`*^9, 
   3.892439897578376*^9}, {3.892440000678547*^9, 3.892440067662943*^9}, {
   3.892440145336035*^9, 3.892440610929955*^9}, {3.892440670434078*^9, 
   3.892440840168297*^9}, {3.892469394388543*^9, 3.892469395326579*^9}, {
   3.8924694505453577`*^9, 3.8924694510521803`*^9}, {3.892469505359024*^9, 
   3.892469510461938*^9}, {3.892469672624345*^9, 3.8924696748441133`*^9}, {
   3.8983253583468714`*^9, 3.8983253583798523`*^9}, {3.8983266821703615`*^9, 
   3.898326683107564*^9}, {3.8983268384977927`*^9, 3.8983268536694374`*^9}, {
   3.898327179660096*^9, 3.898327333371805*^9}, {3.8983274317555084`*^9, 
   3.8983274467951517`*^9}, {3.899285977428336*^9, 3.899285990933959*^9}, {
   3.8992872030355587`*^9, 3.899287208190277*^9}, {3.8993078148226147`*^9, 
   3.899307814861591*^9}, {3.8993849655016294`*^9, 3.899384965537595*^9}, {
   3.9114007112110796`*^9, 3.911400713229821*^9}, {3.911402776367305*^9, 
   3.9114028270848665`*^9}, {3.9114047449831915`*^9, 3.9114047453402033`*^9}},
 
 CellLabel->
  "In[162]:=",ExpressionUUID->"e9a660ea-d256-4cdf-a9b7-2b883938fa85"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Receive V\[CloseCurlyQuote]s Random Challenges y, z and w or Generate \
Fiat-Shamir Transform\
\>", "Subsection",
 CellChangeTimes->{{3.8867443107698793`*^9, 3.886744333953594*^9}, {
   3.886753687539881*^9, 3.886753694167199*^9}, 3.88675373361314*^9, {
   3.886756746963503*^9, 3.886756776924452*^9}, {3.8867870549242983`*^9, 
   3.8867870601581154`*^9}, {3.899286369225185*^9, 
   3.899286373682884*^9}},ExpressionUUID->"5ce96f00-4573-41c6-958e-\
93efc365e410"],

Cell[TextData[{
 "Receive random challenges to prove constraints on ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["a", "L"], "\[RightVector]"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "4521fdf8-a4c5-4c16-8334-86abde7a6450"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["a", "R"], "\[RightVector]"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c8bbdac3-8d2f-42bc-9a25-eb49e509a15b"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["a", 
     RowBox[{"L", ",", "W"}]], "\[RightVector]"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e427e9b4-7faa-497d-b19e-90cbe05f22f8"],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["a", 
     RowBox[{"R", ",", "W"}]], "\[RightVector]"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "485def87-0e4d-45ec-84f7-e5d17fc390c9"],
 "."
}], "Text",
 CellChangeTimes->{{3.886757382196309*^9, 3.886757421216282*^9}, {
  3.8867942804288025`*^9, 3.8867942808284483`*^9}, {3.886794471396433*^9, 
  3.8867944717545233`*^9}, {3.887093705391305*^9, 3.8870937056498246`*^9}, {
  3.887094583312648*^9, 3.887094607832164*^9}, {3.892466720502297*^9, 
  3.892466724864135*^9}, {3.8992863976016273`*^9, 3.8992864183332405`*^9}, {
  3.89928745216398*^9, 
  3.899287533858036*^9}},ExpressionUUID->"4e1e0a20-8a80-4925-b2a0-\
a43db087a541"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"StateMachineRestore", "[", "\"\<AS\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{"interactive", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Random", " ", "challenges", " ", "from", " ", "interactive", " ", 
       "verifier"}], "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"y", " ", "=", " ", 
       RowBox[{"WaitForRandomChallenge", "[", "\"\<y\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"z", " ", "=", " ", 
       RowBox[{"WaitForRandomChallenge", "[", "\"\<z\>\"", "]"}]}], ";", "\n",
       "\t", 
      RowBox[{"w", " ", "=", " ", 
       RowBox[{"WaitForRandomChallenge", "[", "\"\<w\>\"", "]"}]}], ";"}], 
     "\n", 
     RowBox[{"(*", "Else", "*)"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Fiat", "-", "Shamir"}], "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"y", " ", "=", " ", 
       RowBox[{"FiatShamirGet", "[", 
        RowBox[{"\"\<y\>\"", ",", "q", ",", 
         RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}]}],
       ";", "\n", "\t", 
      RowBox[{"TellVerifier", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<y\>\"", "->", "y"}], ",", 
         RowBox[{"\"\<_cost\>\"", "->", "\"\<scalar\>\""}]}], "}"}], "]"}], 
      ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"z", " ", "=", " ", 
       RowBox[{"FiatShamirGet", "[", 
        RowBox[{"\"\<z\>\"", ",", "q", ",", 
         RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}]}],
       ";", "\n", "\t", 
      RowBox[{"TellVerifier", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<z\>\"", "->", "z"}], ",", 
         RowBox[{"\"\<_cost\>\"", "->", "\"\<scalar\>\""}]}], "}"}], "]"}], 
      ";", "\n", "\t", 
      RowBox[{"w", " ", "=", " ", 
       RowBox[{"FiatShamirGet", "[", 
        RowBox[{"\"\<w\>\"", ",", "q", ",", 
         RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}]}],
       ";", "\n", "\t", 
      RowBox[{"TellVerifier", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<w\>\"", "->", "w"}], ",", 
         RowBox[{"\"\<_cost\>\"", "->", "\"\<scalar\>\""}]}], "}"}], "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SuperscriptBox["y", "n"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"Thread", "[", 
    RowBox[{"powermodq", "[", 
     RowBox[{
      RowBox[{"ConstantArray", "[", 
       RowBox[{"y", ",", "n"}], "]"}], ",", " ", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", 
        RowBox[{"n", "-", "1"}]}], "]"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubsuperscriptBox["y", "z", 
     RowBox[{"n", "-", "1"}]], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", "z", "}"}], ",", 
     RowBox[{
      OverscriptBox[
       SuperscriptBox["y", "n"], "\[RightVector]"], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", 
        RowBox[{"n", "-", "1"}]}], "]"}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SuperscriptBox["y", 
    RowBox[{"-", "1"}]], " ", "=", " ", 
   RowBox[{"modinvq", "[", "y", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SuperscriptBox["y", 
     RowBox[{"-", "n"}]], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"Thread", "[", 
    RowBox[{"powermodq", "[", 
     RowBox[{
      RowBox[{"ConstantArray", "[", 
       RowBox[{
        SuperscriptBox["y", 
         RowBox[{"-", "1"}]], ",", "n"}], "]"}], ",", " ", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", 
        RowBox[{"n", "-", "1"}]}], "]"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SuperscriptBox["w", "n"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"Thread", "[", 
    RowBox[{"powermodq", "[", 
     RowBox[{
      RowBox[{"ConstantArray", "[", 
       RowBox[{"w", ",", "n"}], "]"}], ",", " ", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", 
        RowBox[{"n", "-", "1"}]}], "]"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubsuperscriptBox["w", "0", 
     RowBox[{"n", "-", "1"}]], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{
      OverscriptBox[
       SuperscriptBox["w", "n"], "\[RightVector]"], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", 
        RowBox[{"n", "-", "1"}]}], "]"}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Delta]", "yz"], " ", "=", " ", 
   RowBox[{"modq", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"z", "^", "3"}]}], " ", "*", " ", 
      RowBox[{"(", 
       RowBox[{"z", " ", "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "-", "1"}], ")"}], " ", "*", " ", 
         SuperscriptBox["y", 
          RowBox[{"-", "1"}]]}]}], ")"}]}], " ", "-", " ", "z"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Delta]", "yzw"], " ", "=", " ", 
    RowBox[{"modq", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "z"}], " ", "*", " ", 
       RowBox[{"(", 
        RowBox[{"2", " ", "+", " ", "z", " ", "+", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}], " ", "*", " ", 
          SuperscriptBox["y", 
           RowBox[{"-", "1"}]]}]}], ")"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["y", 
          RowBox[{"-", "1"}]], " ", "-", " ", "w"}], ")"}], " ", "*", " ", 
       RowBox[{"(", "\n", "\t", 
        RowBox[{"Total", "[", 
         RowBox[{"Thread", "[", 
          RowBox[{"powermodq", "[", 
           RowBox[{
            RowBox[{"ConstantArray", "[", 
             RowBox[{
              RowBox[{"w", "*", "y"}], ",", 
              RowBox[{"n", "-", "1"}]}], "]"}], ",", " ", 
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", 
              RowBox[{"n", "-", "2"}]}], "]"}]}], "]"}], "]"}], "]"}], "\n", 
        ")"}]}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Knowledge\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<y\>\"", ",", "semanticsOfRandomChallenge", ",", "\"\<P,V\>\"", 
         ",", "y"}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<z\>\"", ",", "semanticsOfRandomChallenge", ",", "\"\<P,V\>\"", 
         ",", "z"}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<w\>\"", ",", "semanticsOfRandomChallenge", ",", "\"\<P,V\>\"", 
         ",", "w"}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Delta]\), \(yz\)]\) \
:\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) -\!\(\*SuperscriptBox[\(z\), \
\(3\)]\)(z + (n-1)\!\(\*SuperscriptBox[\(y\), \(-1\)]\)) - z\>\"", ",", 
         "\"\<\>\"", ",", "\"\<P,V\>\"", ",", 
         SubscriptBox["\[Delta]", "yz"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Delta]\), \(yzw\)]\) :\!\(\*SubscriptBox[\
\(\[Congruent]\), \(q\)]\) -z (2 + z + (n-1)\!\(\*SuperscriptBox[\(y\), \
\(-1\)]\)) + (\!\(\*SuperscriptBox[\(y\), \
\(-1\)]\)-w)\!\(\*SubsuperscriptBox[\(\[CapitalSigma]\), \(i = 0\), \(n - \
2\)]\)(wy\!\(\*SuperscriptBox[\()\), \(i\)]\)\>\"", ",", "\"\<\>\"", ",", 
         "\"\<P,V\>\"", ",", 
         SubscriptBox["\[Delta]", "yzw"]}], "}"}]}], "\n", "}"}], ",", " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left", ",", "Left"}], "}"}], 
       "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"CommunicationCostGrid", "[", "]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "interactive"}], ",", 
    RowBox[{"Print", "[", 
     RowBox[{"FiatShamirGrid", "[", "]"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ProcessNewMessages", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"StateMachineSave", "[", "\"\<yzw\>\"", "]"}], ";"}]}], "Code",
 CellChangeTimes->{
  3.886744287034745*^9, {3.8867443509637175`*^9, 3.8867443646306787`*^9}, {
   3.886744406917935*^9, 3.886744449955654*^9}, {3.886744522648305*^9, 
   3.8867446978173213`*^9}, {3.8867447866334515`*^9, 
   3.8867449256157274`*^9}, {3.8867449573361673`*^9, 
   3.8867452916166573`*^9}, {3.8867453650301304`*^9, 
   3.8867454190256104`*^9}, {3.8867454748436375`*^9, 
   3.8867455007703533`*^9}, {3.8867456476588717`*^9, 3.886745661564602*^9}, {
   3.88674570900254*^9, 3.886745709933563*^9}, {3.886745764944542*^9, 
   3.886745772593075*^9}, {3.8867459143082666`*^9, 3.8867459422913003`*^9}, {
   3.886752988807332*^9, 3.886752993523327*^9}, {3.8867573458861384`*^9, 
   3.886757364564251*^9}, {3.8867574497102785`*^9, 3.886757453147292*^9}, {
   3.886757491403754*^9, 3.8867575717672534`*^9}, {3.8867709026257095`*^9, 
   3.886770907906077*^9}, {3.8867734121834517`*^9, 3.8867734559535217`*^9}, {
   3.8867871285502725`*^9, 3.886787165913699*^9}, {3.8867915478486414`*^9, 
   3.886791552407398*^9}, {3.8867953327689776`*^9, 3.886795360846349*^9}, {
   3.8870945175426507`*^9, 3.8870945192765408`*^9}, {3.8873958302643023`*^9, 
   3.8873958528690557`*^9}, {3.88739609293082*^9, 3.8873960938886776`*^9}, {
   3.8874900176046147`*^9, 3.887490018022373*^9}, {3.887490215272694*^9, 
   3.887490219928483*^9}, {3.887553251498488*^9, 3.8875532526333504`*^9}, {
   3.8875538186175427`*^9, 3.8875538528925095`*^9}, {3.892440909214385*^9, 
   3.892440910625085*^9}, {3.8924409412401114`*^9, 3.8924410180307713`*^9}, {
   3.8924410579093847`*^9, 3.892441125908526*^9}, {3.8924683670864763`*^9, 
   3.8924684344136057`*^9}, {3.898327489332374*^9, 3.898327557882741*^9}, {
   3.8989633138921924`*^9, 3.8989634616406183`*^9}, {3.8989634962249737`*^9, 
   3.8989635563755183`*^9}, {3.898963676856777*^9, 3.8989637217553625`*^9}, {
   3.898963776236309*^9, 3.8989638105614758`*^9}, {3.89901146012163*^9, 
   3.8990115399171743`*^9}, {3.8990116038912*^9, 3.899011658091063*^9}, {
   3.8990126769053645`*^9, 3.899012764578945*^9}, {3.8990223974927053`*^9, 
   3.8990224119587393`*^9}, {3.899307814902345*^9, 3.899307814915338*^9}, {
   3.899384965550782*^9, 3.899384965563774*^9}, {3.911295239844116*^9, 
   3.9112952549504576`*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"9b182915-33ce-4cbe-84d2-d407865b7d9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Construct ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["l", "\[RightVector]"], "(", "X", ")"}], TraditionalForm]],
  ExpressionUUID->"17fa314f-bf04-40cb-998f-895f4cc37767"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["r", "\[RightVector]"], "(", "X", ")"}], TraditionalForm]],
  ExpressionUUID->"c78d30b9-4888-4cc7-a2cb-1e1b9ed61fb1"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["t", "\[RightVector]"], "(", "X", ")"}], TraditionalForm]],
  ExpressionUUID->"d5eefbd4-024f-4577-a59b-046b0e50cecb"],
 ", Commit to Coefficients of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["t", "\[RightVector]"], "(", "X", ")"}], TraditionalForm]],
  ExpressionUUID->"21b93eed-5ba9-42db-998c-42427bdd3523"],
 " for Polynomial Identity Test, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox[
     SubscriptBox["l", "W"], "\[RightVector]"], "(", "X", ")"}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "fb7fbd0d-362e-4aa9-bf0c-755b1dd10d1c"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox[
     SubscriptBox["r", "W"], "\[RightVector]"], "(", "X", ")"}], 
   TraditionalForm]],ExpressionUUID->"13580c53-fdc8-4ce7-a170-8ad406b5d9d8"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox[
     SubscriptBox["t", "W"], "\[RightVector]"], "(", "X", ")"}], 
   TraditionalForm]],ExpressionUUID->"4f550347-a33b-4b52-bc12-a320262b8664"],
 " Similar"
}], "Subsection",
 CellChangeTimes->{{3.8867873608291793`*^9, 3.8867874234502277`*^9}, {
   3.8867874540237994`*^9, 3.886787474443182*^9}, {3.8867875272477694`*^9, 
   3.8867875318521633`*^9}, 3.886788433796176*^9, {3.886789490248704*^9, 
   3.8867895266085463`*^9}, {3.892466340734261*^9, 3.892466350258047*^9}, {
   3.899289300673559*^9, 3.8992893413387403`*^9}, {3.899289377434513*^9, 
   3.899289404949472*^9}},ExpressionUUID->"5e05c7f3-29b9-4ab5-9345-\
c3b70c9143d6"],

Cell[TextData[{
 StyleBox["Shuffle argument:\nPolynomials",
  FontWeight->"Bold"],
 "\nVectors of polynomials:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox["l", "\[RightVector]"], "(", "X", ")"}], 
    SubscriptBox["\[Congruent]", "q"], 
    RowBox[{
     OverscriptBox[
      SubscriptBox["a", "L"], "\[RightVector]"], "+", 
     RowBox[{
      SuperscriptBox["z", "3"], 
      OverscriptBox[
       SuperscriptBox["y", 
        RowBox[{"-", "n"}]], "\[RightVector]"]}], "+", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["s", "L"], "\[RightVector]"], 
      SuperscriptBox["X", "2"]}]}]}], TraditionalForm]],ExpressionUUID->
  "20c2d958-01fd-49fc-b89a-7632f37f19e7"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox["r", "\[RightVector]"], "(", "X", ")"}], 
    SubscriptBox["\[Congruent]", "q"], 
    RowBox[{
     RowBox[{
      OverscriptBox[
       SuperscriptBox["y", "n"], "\[RightVector]"], "\[SmallCircle]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         OverscriptBox[
          SubscriptBox["a", "R"], "\[RightVector]"], "X"}], "+", 
        RowBox[{
         OverscriptBox[
          SubscriptBox["s", "R"], "\[RightVector]"], 
         SuperscriptBox["X", "3"]}]}], ")"}]}], "-", 
     RowBox[{
      OverscriptBox[
       SubsuperscriptBox["y", "z", 
        RowBox[{"n", "-", "1"}]], "\[RightVector]"], "X"}]}]}], 
   TraditionalForm]],ExpressionUUID->"91c4ef9f-8b36-484b-a43c-c71e5ce8fc9a"],
 "\nTheir inner product:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"t", "(", "X", ")"}], 
     SubscriptBox["\[Congruent]", "q"], "<", 
     RowBox[{
      OverscriptBox["l", "\[RightVector]"], "(", "X", ")"}]}], ",", 
    RowBox[{
     RowBox[{
      OverscriptBox["r", "\[RightVector]"], "(", "X", ")"}], ">", " ", 
     SubscriptBox["\[Congruent]", "q"], " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["t", "1"], "X"}], "+", 
      RowBox[{
       SubscriptBox["t", "3"], 
       SuperscriptBox["X", "3"]}], "+", 
      RowBox[{
       SubscriptBox["t", "5"], 
       SuperscriptBox["X", "5"]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "1a979760-a328-46bb-9432-454bd30a3b40"],
 "\nThese polynomials encode the initial conditions as a ZK-proof with an \
inner product. Construct them by calculating their coefficients. The validity \
of the polynomials can be proved with logarithmic communication cost by using \
the Bulletproof inner product protocol.\n",
 StyleBox["Commitments\n",
  FontWeight->"Bold"],
 "Commit to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", "3"], TraditionalForm]],ExpressionUUID->
  "f4350131-823c-45e5-a1ed-b554705933c2"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", "5"], TraditionalForm]],ExpressionUUID->
  "918bf16b-d519-4243-8ca2-9c71994a5712"],
 ". Committing to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", "1"], TraditionalForm]],ExpressionUUID->
  "87a9b45f-a687-4bc1-bd49-307b2048a564"],
 " is not required because the value of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", "1"], TraditionalForm]],ExpressionUUID->
  "0163dffd-ce25-42ee-b841-778c7981e0d4"],
 " solely depends on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", ",", "u", ",", "y", ",", "z"}], TraditionalForm]],
  ExpressionUUID->"88bff88e-a071-4ec8-80af-026aa0aa46f9"],
 " (which are already known to the verifier) and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", ",", 
    SuperscriptBox["s", "n"]}], TraditionalForm]],ExpressionUUID->
  "407c1ee7-d84b-4c99-b5c0-40de7b93416e"],
 " which the prover already committed to by the Pedersen Commitments V and W:\
\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["t", "1"], 
     SubscriptBox["\[Congruent]", "q"], "<", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["a", "L"], "\[RightVector]"], "+", 
      RowBox[{
       SuperscriptBox["z", "3"], 
       OverscriptBox[
        SuperscriptBox["y", 
         RowBox[{"-", "n"}]], "\[RightVector]"]}]}]}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       OverscriptBox[
        SubscriptBox["a", "R"], "\[RightVector]"], "\[SmallCircle]", 
       OverscriptBox[
        SuperscriptBox["y", "n"], "\[RightVector]"]}], "-", 
      OverscriptBox[
       SubsuperscriptBox["y", "z", 
        RowBox[{"n", "-", "1"}]], "\[RightVector]"]}], ">", " ", 
     "\[IndentingNewLine]", 
     SubscriptBox["\[Congruent]", "q"], 
     RowBox[{
      RowBox[{
       SuperscriptBox["z", "3"], "s\[CapitalSigma]", 
       RowBox[{"{", 
        OverscriptBox["k", "\[RightVector]"], "}"}]}], " ", "+", 
      RowBox[{
       SuperscriptBox["y", 
        RowBox[{"n", "-", "1"}]], 
       SuperscriptBox["s", "n"], "\[CapitalPi]", 
       RowBox[{"{", 
        OverscriptBox["k", "\[RightVector]"], "}"}]}], "-", 
      RowBox[{
       SuperscriptBox["z", "3"], "(", 
       RowBox[{"z", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "-", "1"}], ")"}], 
         SuperscriptBox["y", 
          RowBox[{"-", "1"}]]}]}], ")"}], "-", "z"}]}]}], TraditionalForm]],
  ExpressionUUID->"e5c6d9c9-a90b-4adc-992d-b08fee86ccc5"],
 "\nGiven ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", ",", "u", ",", "y", ",", "z"}], TraditionalForm]],
  ExpressionUUID->"5ac6d71b-257b-44b4-8597-2595883bc3d1"],
 " the Commitments V and W to s and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["s", "n"], TraditionalForm]],ExpressionUUID->
  "c2cd6e6a-759c-4498-9ddb-53391160d6d0"],
 " are also binding ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", "1"], TraditionalForm]],ExpressionUUID->
  "745f379a-8628-437a-80ca-fb751f20cd75"],
 ".\nPedersen Commitments ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", 
    RowBox[{"{", 
     RowBox[{"3", ",", "5"}], "}"}]], TraditionalForm]],ExpressionUUID->
  "143ef246-c0fb-4796-8c6b-8ffc21153dc2"],
 " to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", 
    RowBox[{"{", 
     RowBox[{"3", ",", "5"}], "}"}]], TraditionalForm]],ExpressionUUID->
  "624428d0-df62-4d3c-9eeb-c9a86e22568e"],
 " with blinding values ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Tau]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "5"}], "}"}]], TraditionalForm]],ExpressionUUID->
  "ceb63702-8cdd-4528-ac9b-137b644e92c7"],
 " are sent to the Verifier.\n",
 StyleBox["PR",
  FontWeight->"Bold"],
 StyleBox[" argument:\nPolynomials\n",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["l", "W"], "\[RightVector]"], "(", "X", ")"}], 
    SubscriptBox["\[Congruent]", "q"], 
    RowBox[{
     OverscriptBox[
      SubscriptBox["a", 
       RowBox[{"L", ",", "W"}]], "\[RightVector]"], "+", 
     RowBox[{"z", 
      OverscriptBox[
       SuperscriptBox["y", 
        RowBox[{"-", "n"}]], "\[RightVector]"]}], "+", 
     OverscriptBox[
      SuperscriptBox["w", "n"], "\[RightVector]"], "-", 
     RowBox[{
      OverscriptBox[
       SubsuperscriptBox["w", "0", 
        RowBox[{"n", "-", "1"}]], "\[RightVector]"], 
      SuperscriptBox["y", 
       RowBox[{"-", "1"}]]}], "+", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["s", 
        RowBox[{"L", ",", "W"}]], "\[RightVector]"], "X"}]}]}], 
   TraditionalForm]],ExpressionUUID->"27c44a61-3114-411e-bad8-6dbb6d62f0ed"],
 StyleBox["\n",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["r", "W"], "\[RightVector]"], "(", "X", ")"}], 
    SubscriptBox["\[Congruent]", "q"], 
    RowBox[{
     RowBox[{
      OverscriptBox[
       SuperscriptBox["y", "n"], "\[RightVector]"], "\[SmallCircle]", 
      RowBox[{"(", 
       RowBox[{
        OverscriptBox[
         SubscriptBox["a", 
          RowBox[{"R", ",", "W"}]], "\[RightVector]"], "+", 
        RowBox[{
         OverscriptBox[
          SubscriptBox["s", 
           RowBox[{"R", ",", "W"}]], "\[RightVector]"], "X"}]}], ")"}]}], "-", 
     OverscriptBox[
      SubsuperscriptBox["y", "z", 
       RowBox[{"n", "-", "1"}]], "\[RightVector]"]}]}], TraditionalForm]],
  ExpressionUUID->"85034f8c-df83-42ec-b747-fd64fdfd5ed3"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["t", "W"], "(", "X", ")"}], 
     SubscriptBox["\[Congruent]", "q"], "<", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["l", "W"], "\[RightVector]"], "(", "X", ")"}]}], ",", 
    RowBox[{
     RowBox[{
      OverscriptBox[
       SubscriptBox["r", "W"], "\[RightVector]"], "(", "X", ")"}], ">", " ", 
     SubscriptBox["\[Congruent]", "q"], " ", 
     RowBox[{
      SubscriptBox["t", 
       RowBox[{"0", ",", "W"}]], "+", 
      RowBox[{
       SubscriptBox["t", 
        RowBox[{"1", ",", "W"}]], "X"}], "+", 
      RowBox[{
       SubscriptBox["t", 
        RowBox[{"2", ",", "W"}]], 
       SuperscriptBox["X", "2"]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "aff714e7-a81a-4bec-b11d-cd1c6d8110de"],
 "\n",
 StyleBox["Commitments",
  FontWeight->"Bold"],
 "\nCommit to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", 
    RowBox[{"1", ",", "W"}]], TraditionalForm]],ExpressionUUID->
  "4b83deaf-acce-4725-81df-82549bfc4d32"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", 
    RowBox[{"2", ",", "W"}]], TraditionalForm]],ExpressionUUID->
  "50b3258e-49d6-423c-965d-d1bf3d351508"],
 ". Committing to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", 
    RowBox[{"0", ",", "W"}]], TraditionalForm]],ExpressionUUID->
  "9d65e468-e58e-47e0-9757-d510551542b2"],
 " is not required because its value only depends on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", ",", " ", "z", ",", " ", "w"}], TraditionalForm]],
  ExpressionUUID->"c74b4ffa-8638-41c9-86a3-8f0813bce43e"],
 " (which are already known to the verifier) and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", ",", " ", 
    SuperscriptBox["s", "n"]}], TraditionalForm]],ExpressionUUID->
  "85067e02-f73f-46c3-9116-bf9538c899b6"],
 " which the prover already committed to by the Pedersen Commitments V and W:\
\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["t", 
      RowBox[{"0", ",", "W"}]], 
     SubscriptBox["\[Congruent]", "q"], "<", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["a", 
        RowBox[{"L", ",", "W"}]], "\[RightVector]"], "+", 
      RowBox[{"z", 
       OverscriptBox[
        SuperscriptBox["y", 
         RowBox[{"-", "n"}]], "\[RightVector]"]}], "+", 
      OverscriptBox[
       SuperscriptBox["w", "n"], "\[RightVector]"], "-", 
      RowBox[{
       OverscriptBox[
        SubsuperscriptBox["w", "0", 
         RowBox[{"n", "-", "1"}]], "\[RightVector]"], 
       SuperscriptBox["y", 
        RowBox[{"-", "1"}]]}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       OverscriptBox[
        SuperscriptBox["y", "n"], "\[RightVector]"], "\[SmallCircle]", 
       RowBox[{"(", 
        RowBox[{
         OverscriptBox[
          SubscriptBox["a", 
           RowBox[{"R", ",", "W"}]], "\[RightVector]"], "+", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["s", 
            RowBox[{"R", ",", "W"}]], "\[RightVector]"], "X"}]}], ")"}]}], 
      "-", 
      OverscriptBox[
       SubsuperscriptBox["y", "z", 
        RowBox[{"n", "-", "1"}]], "\[RightVector]"]}], ">", 
     "\[IndentingNewLine]", 
     SubscriptBox["\[Congruent]", "q"], 
     RowBox[{
      RowBox[{
       SuperscriptBox["s", "n"], 
       SuperscriptBox["y", 
        RowBox[{"n", "-", "1"}]]}], "+", 
      SuperscriptBox[
       RowBox[{"s", "(", "wy", ")"}], 
       RowBox[{"n", "-", "1"}]], "+", "snz", "-", 
      RowBox[{"z", "(", 
       RowBox[{"2", "+", "z", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "-", "1"}], ")"}], 
         SuperscriptBox["y", 
          RowBox[{"-", "1"}]]}]}], ")"}], " ", "+", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["y", 
          RowBox[{"-", "1"}]], "-", "w"}], ")"}], 
       SubsuperscriptBox["\[CapitalSigma]", 
        RowBox[{"i", "=", "0"}], 
        RowBox[{"n", "-", "2"}]], 
       SuperscriptBox[
        RowBox[{"(", "wy", ")"}], "i"]}]}]}]}], TraditionalForm]],
  ExpressionUUID->"086bf740-a199-4309-8838-bc851fd1379d"],
 "\nGiven ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", ",", "z", ",", "w"}], TraditionalForm]],ExpressionUUID->
  "b14dcc89-0d2b-4544-9580-07fa22b8f142"],
 " the commitments V and W to ",
 Cell[BoxData[
  FormBox["s", TraditionalForm]],ExpressionUUID->
  "079c3c9c-f765-4208-bbef-98b3e5be19da"],
 " and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["s", "n"], TraditionalForm]],ExpressionUUID->
  "cd695acd-b19e-4c03-b67d-ed098fabfe3e"],
 " are also binding ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", 
    RowBox[{"0", ",", "W"}]], TraditionalForm]],ExpressionUUID->
  "29be186b-831a-42aa-820a-57184cdee862"],
 ".\nPedersen Commitments ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", "W"}]], TraditionalForm]],
  ExpressionUUID->"c3c5ade8-dfa4-4a3a-af9c-e01d5526bac8"],
 " to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", "W"}]], TraditionalForm]],
  ExpressionUUID->"18ec122f-cf28-4d7d-95a9-8387bec016d2"],
 " with blinding values ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Tau]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", "W"}]], TraditionalForm]],
  ExpressionUUID->"06355c65-1ae0-432f-8a37-229fab797253"],
 " are sent to the Verifier."
}], "Text",
 CellChangeTimes->{{3.886787598071227*^9, 3.8867876417323275`*^9}, {
   3.8867876916711354`*^9, 3.886787729283425*^9}, {3.886787814938552*^9, 
   3.8867878802890835`*^9}, {3.886787929954974*^9, 3.8867880860175543`*^9}, {
   3.8867881279250774`*^9, 3.8867881600467854`*^9}, {3.886788200089909*^9, 
   3.8867882202850056`*^9}, {3.8867884767089643`*^9, 3.8867885191269684`*^9}, 
   3.886789554412283*^9, {3.886789702909142*^9, 3.886789828891988*^9}, {
   3.886790166324545*^9, 3.8867902666535516`*^9}, {3.8867903168714924`*^9, 
   3.8867903334961867`*^9}, {3.8867903892042637`*^9, 3.886790389205263*^9}, {
   3.886790954962698*^9, 3.8867911484123354`*^9}, {3.886791217694581*^9, 
   3.886791317127302*^9}, {3.886791390233145*^9, 3.8867914028302183`*^9}, {
   3.8924413228896513`*^9, 3.892441414659461*^9}, {3.8924414625845633`*^9, 
   3.892441529152074*^9}, {3.892441563579502*^9, 3.892441601041572*^9}, {
   3.892441829437962*^9, 3.892441832010006*^9}, {3.892441862082899*^9, 
   3.892442042448522*^9}, {3.892443143745091*^9, 3.8924432952759237`*^9}, {
   3.899010839933483*^9, 3.899010842331856*^9}, {3.8992894158071623`*^9, 
   3.899289568784086*^9}, {3.899289600566572*^9, 3.899289604301695*^9}, {
   3.899289643884253*^9, 3.8992897845290947`*^9}, {3.899289821611477*^9, 
   3.899290166509762*^9}, {3.8992903383003836`*^9, 3.8992903996839056`*^9}, {
   3.8992905276512947`*^9, 3.899290612515602*^9}, 3.9112942260141053`*^9, 
   3.911294461929084*^9, {3.9112947397187767`*^9, 3.911294748077531*^9}, {
   3.911295284319533*^9, 3.9112952974923983`*^9}, {3.911295466406325*^9, 
   3.9112954959781294`*^9}},ExpressionUUID->"4f621ba4-6c42-4cca-8636-\
48faf3d3b68b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"StateMachineRestore", "[", "\"\<yzw\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Polynomials", " ", 
     OverscriptBox["l", "\[RightVector]"], 
     RowBox[{"(", "X", ")"}]}], ",", " ", 
    RowBox[{
     RowBox[{
      OverscriptBox["r", "\[RightVector]"], 
      RowBox[{"(", "X", ")"}], " ", "and", " ", "t", 
      RowBox[{"(", "X", ")"}]}], "=", 
     RowBox[{"<", 
      RowBox[{
       OverscriptBox["l", "\[RightVector]"], 
       RowBox[{"(", "X", ")"}]}]}]}], ",", 
    RowBox[{
     RowBox[{
      OverscriptBox["r", "\[RightVector]"], 
      RowBox[{"(", "X", ")"}]}], ">"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["l", "0"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"modq", "[", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["a", "L"], "\[RightVector]"], " ", "+", " ", 
     RowBox[{
      RowBox[{"powermodq", "[", 
       RowBox[{"z", ",", " ", "3"}], "]"}], " ", "*", " ", 
      OverscriptBox[
       SuperscriptBox["y", 
        RowBox[{"-", "n"}]], "\[RightVector]"]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["l", "2"], "\[RightVector]"], " ", "=", " ", 
   OverscriptBox[
    SubscriptBox["s", "L"], "\[RightVector]"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["r", "1"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"modq", "[", 
    RowBox[{
     RowBox[{
      OverscriptBox[
       SuperscriptBox["y", "n"], "\[RightVector]"], " ", "*", " ", 
      OverscriptBox[
       SubscriptBox["a", "R"], "\[RightVector]"]}], " ", "-", " ", 
     OverscriptBox[
      SubsuperscriptBox["y", "z", 
       RowBox[{"n", "-", "1"}]], "\[RightVector]"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["r", "3"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"modq", "[", 
    RowBox[{
     OverscriptBox[
      SuperscriptBox["y", "n"], "\[RightVector]"], " ", "*", " ", 
     OverscriptBox[
      SubscriptBox["s", "R"], "\[RightVector]"]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["t", "1"], " ", "=", " ", 
   RowBox[{"modq", "[", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["l", "0"], "\[RightVector]"], ".", 
     OverscriptBox[
      SubscriptBox["r", "1"], "\[RightVector]"]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["t", "3"], " ", "=", " ", 
   RowBox[{"modq", "[", 
    RowBox[{
     RowBox[{
      OverscriptBox[
       SubscriptBox["l", "0"], "\[RightVector]"], ".", 
      OverscriptBox[
       SubscriptBox["r", "3"], "\[RightVector]"]}], " ", "+", " ", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["l", "2"], "\[RightVector]"], ".", 
      OverscriptBox[
       SubscriptBox["r", "1"], "\[RightVector]"]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["t", "5"], " ", "=", " ", 
    RowBox[{"modq", "[", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["l", "2"], "\[RightVector]"], ".", 
      OverscriptBox[
       SubscriptBox["r", "3"], "\[RightVector]"]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"t1SanityCheck", " ", "=", " ", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["t", "1"], " ", "==", " ", 
      RowBox[{"modq", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"powermodq", "[", 
          RowBox[{"y", ",", 
           RowBox[{"n", "-", "1"}]}], "]"}], "*", 
         RowBox[{"powermodq", "[", 
          RowBox[{"s", ",", "n"}], "]"}], "*", 
         OverscriptBox["k", "^"]}], " ", "+", " ", 
        RowBox[{
         RowBox[{"z", "^", "3"}], "*", "s", "*", 
         OverscriptBox["k", "_"]}], " ", "+", " ", 
        SubscriptBox["\[Delta]", "yz"]}], "]"}]}], ")"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Tau]", "3"], " ", "=", " ", 
   RowBox[{"BPRandomInteger", "[", 
    RowBox[{"0", ",", 
     RowBox[{"q", "-", "1"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["T", "3"], " ", "=", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["t", "3"], "*", "g"}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["\[Tau]", "3"], "*", "h"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TellVerifier", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<T3\>\"", "->", 
      SubscriptBox["T", "3"]}], ",", 
     RowBox[{"\"\<_cost\>\"", "->", "\"\<group\>\""}]}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", 
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<T3\>\"", ",", 
       RowBox[{"compressPoint", "[", 
        SubscriptBox["T", "3"], "]"}], ",", 
       RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}]}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Tau]", "5"], " ", "=", " ", 
   RowBox[{"BPRandomInteger", "[", 
    RowBox[{"0", ",", 
     RowBox[{"q", "-", "1"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["T", "5"], " ", "=", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["t", "5"], "*", "g"}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["\[Tau]", "5"], "*", "h"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TellVerifier", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<T5\>\"", "->", 
      SubscriptBox["T", "5"]}], ",", 
     RowBox[{"\"\<_cost\>\"", "->", "\"\<group\>\""}]}], "}"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", 
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<T5\>\"", ",", 
       RowBox[{"compressPoint", "[", 
        SubscriptBox["T", "5"], "]"}], ",", 
       RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}]}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Knowledge\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[SubscriptBox[\(l\), \(0\)], \(\[RightVector]\
\)]\) :\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \
\!\(\*OverscriptBox[SubscriptBox[\(a\), \(L\)], \(\[RightVector]\)]\) + \
\!\(\*SuperscriptBox[\(z\), \
\(3\)]\)*\!\(\*OverscriptBox[SuperscriptBox[\(y\), \(-n\)], \
\(\[RightVector]\)]\)\>\"", ",", "\"\<\>\"", ",", "\"\<P\>\"", ",", 
         OverscriptBox[
          SubscriptBox["l", "0"], "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[SubscriptBox[\(l\), \(2\)], \(\[RightVector]\
\)]\) :\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \
\!\(\*OverscriptBox[SubscriptBox[\(s\), \(L\)], \(\[RightVector]\)]\)\>\"", 
         ",", "\"\<\>\"", ",", "\"\<P\>\"", ",", 
         OverscriptBox[
          SubscriptBox["l", "2"], "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[SubscriptBox[\(r\), \(1\)], \(\[RightVector]\
\)]\) :\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \
\!\(\*OverscriptBox[SuperscriptBox[\(y\), \(n\)], \
\(\[RightVector]\)]\)*\!\(\*OverscriptBox[SubscriptBox[\(a\), \(R\)], \(\
\[RightVector]\)]\) - \!\(\*OverscriptBox[SubsuperscriptBox[\(y\), \(z\), \(n \
- 1\)], \(\[RightVector]\)]\)\>\"", ",", "\"\<\>\"", ",", "\"\<P\>\"", ",", 
         OverscriptBox[
          SubscriptBox["r", "1"], "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[SubscriptBox[\(r\), \(3\)], \(\[RightVector]\
\)]\) :\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \
\!\(\*OverscriptBox[SuperscriptBox[\(y\), \(n\)], \
\(\[RightVector]\)]\)*\!\(\*OverscriptBox[SubscriptBox[\(s\), \(R\)], \(\
\[RightVector]\)]\)\>\"", ",", "\"\<\>\"", ",", "\"\<P\>\"", ",", 
         OverscriptBox[
          SubscriptBox["r", "3"], "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(t\), \(1\)]\) :\!\(\*SubscriptBox[\(\
\[Congruent]\), \(q\)]\) <\!\(\*OverscriptBox[SubscriptBox[\(l\), \(0\)], \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(r\), \(1\)], \(\
\[RightVector]\)]\)>\>\"", ",", "\"\<\>\"", ",", "\"\<P\>\"", ",", 
         SubscriptBox["t", "1"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(t\), \(1\)]\) \
\!\(\*SubscriptBox[OverscriptBox[\(\[Congruent]\), \(?\)], \(q\)]\) \
\!\(\*SuperscriptBox[\(y\), \(n - 1\)]\)\!\(\*SuperscriptBox[\(s\), \
\(n\)]\)\!\(\*OverscriptBox[\(k\), \(^\)]\) + \!\(\*SuperscriptBox[\(z\), \(3\
\)]\)s\!\(\*OverscriptBox[\(k\), \(_\)]\) + \!\(\*SubscriptBox[\(\[Delta]\), \
\(yz\)]\)\>\"", ",", "\"\<Sanity\\nCheck\>\"", ",", "\"\<P\>\"", ",", 
         "t1SanityCheck"}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(t\), \(3\)]\) :\!\(\*SubscriptBox[\(\
\[Congruent]\), \(q\)]\) <\!\(\*OverscriptBox[SubscriptBox[\(l\), \(0\)], \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(r\), \(3\)], \(\
\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SubscriptBox[\(l\), \(2\)], \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(r\), \(1\)], \(\
\[RightVector]\)]\)>\>\"", ",", "\"\<\>\"", ",", "\"\<P\>\"", ",", 
         SubscriptBox["t", "3"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(3\)]\) \!\(\*OverscriptBox[\(\
\[LeftArrow]\), \($\)]\) \!\(\*SubscriptBox[\(\[DoubleStruckCapitalZ]\), \
\(q\)]\)\>\"", ",", "\"\<Blinding\\nValue\>\"", ",", "\"\<P\>\"", ",", 
         SubscriptBox["\[Tau]", "3"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(T\), \(3\)]\) := \!\(\*SubscriptBox[\(t\), \
\(3\)]\)g + \!\(\*SubscriptBox[\(\[Tau]\), \(3\)]\)h\>\"", ",", 
         "\"\<Blinded\\nPedersen\\nCommitment\>\"", ",", "\"\<P\>\"", ",", 
         SubscriptBox["T", "3"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(t\), \(5\)]\) :\!\(\*SubscriptBox[\(\
\[Congruent]\), \(q\)]\) <\!\(\*OverscriptBox[SubscriptBox[\(l\), \(2\)], \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(r\), \(3\)], \(\
\[RightVector]\)]\)>\>\"", ",", "\"\<\>\"", ",", "\"\<P\>\"", ",", 
         SubscriptBox["t", "5"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(5\)]\) \!\(\*OverscriptBox[\(\
\[LeftArrow]\), \($\)]\) \!\(\*SubscriptBox[\(\[DoubleStruckCapitalZ]\), \
\(q\)]\)\>\"", ",", "\"\<Blinding\\nValue\>\"", ",", "\"\<P\>\"", ",", 
         SubscriptBox["\[Tau]", "5"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(T\), \(5\)]\) := \!\(\*SubscriptBox[\(t\), \
\(5\)]\)g + \!\(\*SubscriptBox[\(\[Tau]\), \(5\)]\)h\>\"", ",", 
         "\"\<Blinded\\nPedersen\\nCommitment\>\"", ",", "\"\<P,V\>\"", ",", 
         SubscriptBox["T", "5"]}], "}"}]}], "\[IndentingNewLine]", "}"}], ",",
      " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left", ",", "Left"}], "}"}], 
       "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["l", 
     RowBox[{"0", ",", "W"}]], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"modq", "[", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["a", 
       RowBox[{"L", ",", "W"}]], "\[RightVector]"], " ", "+", " ", 
     RowBox[{"z", "*", 
      OverscriptBox[
       SuperscriptBox["y", 
        RowBox[{"-", "n"}]], "\[RightVector]"]}], " ", "+", " ", 
     OverscriptBox[
      SuperscriptBox["w", "n"], "\[RightVector]"], " ", "-", " ", 
     RowBox[{
      OverscriptBox[
       SubsuperscriptBox["w", "0", 
        RowBox[{"n", "-", "1"}]], "\[RightVector]"], "*", 
      SuperscriptBox["y", 
       RowBox[{"-", "1"}]]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["l", 
     RowBox[{"1", ",", "W"}]], "\[RightVector]"], " ", "=", " ", 
   OverscriptBox[
    SubscriptBox["s", 
     RowBox[{"L", ",", "W"}]], "\[RightVector]"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["r", 
     RowBox[{"0", ",", "W"}]], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"modq", "[", 
    RowBox[{
     RowBox[{
      OverscriptBox[
       SubscriptBox["a", 
        RowBox[{"R", ",", "W"}]], "\[RightVector]"], "*", 
      OverscriptBox[
       SuperscriptBox["y", "n"], "\[RightVector]"]}], " ", "-", " ", 
     OverscriptBox[
      SubsuperscriptBox["y", "z", 
       RowBox[{"n", "-", "1"}]], "\[RightVector]"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    OverscriptBox[
     SubscriptBox["r", 
      RowBox[{"1", ",", "W"}]], "\[RightVector]"], " ", "=", " ", 
    RowBox[{"modq", "[", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["s", 
        RowBox[{"R", ",", "W"}]], "\[RightVector]"], "*", 
      OverscriptBox[
       SuperscriptBox["y", "n"], "\[RightVector]"]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["t", 
    RowBox[{"0", ",", "W"}]], " ", "=", " ", 
   RowBox[{"modq", "[", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["l", 
       RowBox[{"0", ",", "W"}]], "\[RightVector]"], ".", 
     OverscriptBox[
      SubscriptBox["r", 
       RowBox[{"0", ",", "W"}]], "\[RightVector]"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["t", 
    RowBox[{"1", ",", "W"}]], " ", "=", " ", 
   RowBox[{"modq", "[", 
    RowBox[{
     RowBox[{
      OverscriptBox[
       SubscriptBox["l", 
        RowBox[{"0", ",", "W"}]], "\[RightVector]"], ".", 
      OverscriptBox[
       SubscriptBox["r", 
        RowBox[{"1", ",", "W"}]], "\[RightVector]"]}], " ", "+", " ", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["l", 
        RowBox[{"1", ",", "W"}]], "\[RightVector]"], ".", 
      OverscriptBox[
       SubscriptBox["r", 
        RowBox[{"0", ",", "W"}]], "\[RightVector]"]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["t", 
     RowBox[{"2", ",", "W"}]], " ", "=", " ", 
    RowBox[{"modq", "[", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["l", 
        RowBox[{"1", ",", "W"}]], "\[RightVector]"], ".", 
      OverscriptBox[
       SubscriptBox["r", 
        RowBox[{"1", ",", "W"}]], "\[RightVector]"]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"t0WSanityCheck", " ", "=", " ", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["t", 
       RowBox[{"0", ",", "W"}]], " ", "==", " ", 
      RowBox[{"modq", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"powermodq", "[", 
          RowBox[{"s", ",", "n"}], "]"}], "*", 
         RowBox[{"powermodq", "[", 
          RowBox[{"y", ",", 
           RowBox[{"n", "-", "1"}]}], "]"}]}], " ", "+", " ", 
        RowBox[{"s", "*", 
         RowBox[{"powermodq", "[", 
          RowBox[{
           RowBox[{"w", "*", "y"}], ",", 
           RowBox[{"n", "-", "1"}]}], "]"}]}], " ", "+", " ", 
        RowBox[{"s", "*", "n", "*", "z"}], " ", "+", " ", 
        SubscriptBox["\[Delta]", "yzw"]}], "]"}]}], ")"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Tau]", 
    RowBox[{"1", ",", "W"}]], " ", "=", " ", 
   RowBox[{"BPRandomInteger", "[", 
    RowBox[{"0", ",", 
     RowBox[{"q", "-", "1"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["T", 
    RowBox[{"1", ",", "W"}]], " ", "=", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["t", 
      RowBox[{"1", ",", "W"}]], "*", "g"}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["\[Tau]", 
      RowBox[{"1", ",", "W"}]], "*", "h"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TellVerifier", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<T1W\>\"", "->", 
      SubscriptBox["T", 
       RowBox[{"1", ",", "W"}]]}], ",", 
     RowBox[{"\"\<_cost\>\"", "->", "\"\<group\>\""}]}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", 
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<T1W\>\"", ",", 
       RowBox[{"compressPoint", "[", 
        SubscriptBox["T", 
         RowBox[{"1", ",", "W"}]], "]"}], ",", 
       RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}]}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Tau]", 
    RowBox[{"2", ",", "W"}]], " ", "=", " ", 
   RowBox[{"BPRandomInteger", "[", 
    RowBox[{"0", ",", 
     RowBox[{"q", "-", "1"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["T", 
    RowBox[{"2", ",", "W"}]], " ", "=", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["t", 
      RowBox[{"2", ",", "W"}]], "*", "g"}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["\[Tau]", 
      RowBox[{"2", ",", "W"}]], "*", "h"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TellVerifier", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<T2W\>\"", "->", 
      SubscriptBox["T", 
       RowBox[{"2", ",", "W"}]]}], ",", 
     RowBox[{"\"\<_cost\>\"", "->", "\"\<group\>\""}]}], "}"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", 
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<T2W\>\"", ",", 
       RowBox[{"compressPoint", "[", 
        SubscriptBox["T", 
         RowBox[{"2", ",", "W"}]], "]"}], ",", 
       RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}]}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Knowledge\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[SubscriptBox[\(l\), \(0, W\)], \(\
\[RightVector]\)]\) :\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \
\!\(\*OverscriptBox[SubscriptBox[\(a\), \(L, W\)], \(\[RightVector]\)]\) + \
z\!\(\*OverscriptBox[SuperscriptBox[\(y\), \(-n\)], \(\[RightVector]\)]\) + \
\!\(\*OverscriptBox[SuperscriptBox[\(w\), \(n\)], \(\[RightVector]\)]\) - \
\!\(\*OverscriptBox[SubsuperscriptBox[\(w\), \(0\), \(n - 1\)], \(\
\[RightVector]\)]\)\!\(\*SuperscriptBox[\(y\), \(-1\)]\)\>\"", ",", 
         "\"\<\>\"", ",", "\"\<P\>\"", ",", 
         OverscriptBox[
          SubscriptBox["l", 
           RowBox[{"0", ",", "W"}]], "\[RightVector]"]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[SubscriptBox[\(l\), \(1, W\)], \(\
\[RightVector]\)]\) :\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \
\!\(\*OverscriptBox[SubscriptBox[\(s\), \(L, W\)], \(\[RightVector]\)]\)\>\"",
          ",", "\"\<\>\"", ",", "\"\<P\>\"", ",", 
         OverscriptBox[
          SubscriptBox["l", 
           RowBox[{"1", ",", "W"}]], "\[RightVector]"]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[SubscriptBox[\(r\), \(0, W\)], \(\
\[RightVector]\)]\) :\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \
\!\(\*OverscriptBox[SuperscriptBox[\(y\), \(n\)], \(\[RightVector]\)]\)\
\[SmallCircle]\!\(\*OverscriptBox[SubscriptBox[\(a\), \(R, W\)], \(\
\[RightVector]\)]\) - \!\(\*OverscriptBox[SubsuperscriptBox[\(y\), \(z\), \(n \
- 1\)], \(\[RightVector]\)]\)\>\"", ",", "\"\<\>\"", ",", "\"\<P\>\"", ",", 
         OverscriptBox[
          SubscriptBox["r", 
           RowBox[{"0", ",", "W"}]], "\[RightVector]"]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[SubscriptBox[\(r\), \(1, W\)], \(\
\[RightVector]\)]\) :\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \
\!\(\*OverscriptBox[SuperscriptBox[\(y\), \(n\)], \(\[RightVector]\)]\)\
\[SmallCircle]\!\(\*OverscriptBox[SubscriptBox[\(s\), \(R, W\)], \(\
\[RightVector]\)]\)\>\"", ",", "\"\<\>\"", ",", "\"\<P\>\"", ",", 
         OverscriptBox[
          SubscriptBox["r", 
           RowBox[{"1", ",", "W"}]], "\[RightVector]"]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(t\), \(0, W\)]\) :\!\(\*SubscriptBox[\(\
\[Congruent]\), \(q\)]\) <\!\(\*OverscriptBox[SubscriptBox[\(l\), \(0, W\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(r\), \(0, W\)], \(\
\[RightVector]\)]\)>\>\"", ",", "\"\<\>\"", ",", "\"\<P\>\"", ",", 
         SubscriptBox["t", 
          RowBox[{"0", ",", "W"}]]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(t\), \(0, W\)]\) \
\!\(\*SubscriptBox[OverscriptBox[\(\[Congruent]\), \(?\)], \(q\)]\) \
\!\(\*SuperscriptBox[\(s\), \(n\)]\)\!\(\*SuperscriptBox[\(y\), \(n - 1\)]\) \
+ s(wy\!\(\*SuperscriptBox[\()\), \(n - 1\)]\) + snz + \!\(\*SubscriptBox[\(\
\[Delta]\), \(yzw\)]\)\>\"", ",", "\"\<Sanity\\nCheck\>\"", ",", "\"\<P\>\"", 
         ",", "t0WSanityCheck"}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(t\), \(1, W\)]\) :\!\(\*SubscriptBox[\(\
\[Congruent]\), \(q\)]\) <\!\(\*OverscriptBox[SubscriptBox[\(l\), \(0, W\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(r\), \(1, W\)], \(\
\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SubscriptBox[\(l\), \(1, W\)], \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(r\), \(0, W\)], \(\
\[RightVector]\)]\)>\>\"", ",", "\"\<\>\"", ",", "\"\<P\>\"", ",", 
         SubscriptBox["t", 
          RowBox[{"1", ",", "W"}]]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(1, W\)]\) \
\!\(\*OverscriptBox[\(\[LeftArrow]\), \($\)]\) \!\(\*SubscriptBox[\(\
\[DoubleStruckCapitalZ]\), \(q\)]\)\>\"", ",", "\"\<Blinding\\nValue\>\"", 
         ",", "\"\<P\>\"", ",", 
         SubscriptBox["\[Tau]", 
          RowBox[{"1", ",", "W"}]]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(T\), \(1, W\)]\) := \
\!\(\*SubscriptBox[\(t\), \(1, W\)]\)g + \!\(\*SubscriptBox[\(\[Tau]\), \(1, \
W\)]\)h\>\"", ",", "\"\<Blinded\\nPedersen\\nCommitment\>\"", ",", 
         "\"\<P\>\"", ",", 
         SubscriptBox["T", 
          RowBox[{"1", ",", "W"}]]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(t\), \(2, W\)]\) :\!\(\*SubscriptBox[\(\
\[Congruent]\), \(q\)]\) <\!\(\*OverscriptBox[SubscriptBox[\(l\), \(1, W\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(r\), \(1, W\)], \(\
\[RightVector]\)]\)>\>\"", ",", "\"\<\>\"", ",", "\"\<P\>\"", ",", 
         SubscriptBox["t", 
          RowBox[{"2", ",", "W"}]]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(2, W\)]\) \
\!\(\*OverscriptBox[\(\[LeftArrow]\), \($\)]\) \!\(\*SubscriptBox[\(\
\[DoubleStruckCapitalZ]\), \(q\)]\)\>\"", ",", "\"\<Blinding\\nValue\>\"", 
         ",", "\"\<P\>\"", ",", 
         SubscriptBox["\[Tau]", 
          RowBox[{"2", ",", "W"}]]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(T\), \(2, W\)]\) := \
\!\(\*SubscriptBox[\(t\), \(2, W\)]\)g + \!\(\*SubscriptBox[\(\[Tau]\), \(2, \
W\)]\)h\>\"", ",", "\"\<Blinded\\nPedersen\\nCommitment\>\"", ",", 
         "\"\<P,V\>\"", ",", 
         SubscriptBox["T", 
          RowBox[{"2", ",", "W"}]]}], "}"}]}], "\[IndentingNewLine]", "}"}], 
     ",", " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left", ",", "Left"}], "}"}], 
       "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], "\n"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"CommunicationCostGrid", "[", "]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "interactive"}], ",", 
    RowBox[{"Print", "[", 
     RowBox[{"FiatShamirGrid", "[", "]"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ProcessNewMessages", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"StateMachineSave", "[", "\"\<T3T5T1WT2W\>\"", "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "t1SanityCheck"}], ",", " ", 
    RowBox[{
    "Error", "[", 
     "\"\<Sanity check on \!\(\*SubscriptBox[\(t\), \(1\)]\) failed\>\"", 
     "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "t0WSanityCheck"}], ",", " ", 
    RowBox[{
    "Error", "[", 
     "\"\<Sanity check on \!\(\*SubscriptBox[\(t\), \(0, W\)]\) failed\>\"", 
     "]"}]}], "]"}], ";"}]}], "Code",
 CellChangeTimes->{
  3.8867881123701687`*^9, {3.8867883424833603`*^9, 3.8867884168041005`*^9}, {
   3.8867885573131294`*^9, 3.8867886792372055`*^9}, {3.8867887377343683`*^9, 
   3.8867889348518376`*^9}, {3.8867889958917155`*^9, 3.886788999763297*^9}, {
   3.886789038565031*^9, 3.8867890653428154`*^9}, {3.8867891117498426`*^9, 
   3.88678914526863*^9}, {3.8867899057340775`*^9, 3.8867900126605005`*^9}, {
   3.886790050836368*^9, 3.8867900851345596`*^9}, {3.886790441443863*^9, 
   3.8867905711984615`*^9}, {3.88679060999*^9, 3.8867906279764605`*^9}, {
   3.886790827531259*^9, 3.886790875978382*^9}, {3.8867915075746813`*^9, 
   3.886791527693972*^9}, {3.886791566596215*^9, 3.8867915729005203`*^9}, {
   3.886791651064173*^9, 3.886791799218897*^9}, {3.8867918295636435`*^9, 
   3.8867918393260736`*^9}, {3.886791884616149*^9, 3.88679193166716*^9}, {
   3.8867919740121293`*^9, 3.8867920126681013`*^9}, {3.886792125517538*^9, 
   3.886792316532889*^9}, {3.8867923748172817`*^9, 3.886792483949005*^9}, {
   3.886792706507412*^9, 3.8867928868788996`*^9}, {3.8867930933596916`*^9, 
   3.8867932295220547`*^9}, {3.886793288561799*^9, 3.886793545740867*^9}, {
   3.8867935842667294`*^9, 3.886793663850747*^9}, {3.8867937268507166`*^9, 
   3.8867937832363977`*^9}, {3.8868415336565804`*^9, 3.886841559253335*^9}, {
   3.8869423659154396`*^9, 3.8869424178444586`*^9}, {3.8869435065840535`*^9, 
   3.886943548615426*^9}, {3.886943725230422*^9, 3.886943725366684*^9}, {
   3.8869437605183153`*^9, 3.8869438404068947`*^9}, {3.8869439505759616`*^9, 
   3.886943977654275*^9}, {3.8869440211542854`*^9, 3.8869440213902903`*^9}, {
   3.8869440581567326`*^9, 3.886944097212919*^9}, {3.88694429359716*^9, 
   3.8869443015460863`*^9}, {3.887093750518663*^9, 3.8870938554687405`*^9}, {
   3.887094189496552*^9, 3.8870941914100013`*^9}, {3.8873958794589477`*^9, 
   3.887395890603676*^9}, {3.887396097976839*^9, 3.88739609851046*^9}, {
   3.8874349864768767`*^9, 3.8874350295478497`*^9}, {3.8874827678891478`*^9, 
   3.887482787353803*^9}, {3.8874902855446396`*^9, 3.887490291015038*^9}, {
   3.887490322871437*^9, 3.887490323008554*^9}, {3.8875487611884484`*^9, 
   3.887548796409227*^9}, {3.887550782999195*^9, 3.887550857729375*^9}, {
   3.887550894809045*^9, 3.887550935874187*^9}, {3.887550977317116*^9, 
   3.8875509930211763`*^9}, {3.8875510232360296`*^9, 
   3.8875510703076897`*^9}, {3.8875532591422963`*^9, 3.887553260344861*^9}, {
   3.8875552642166567`*^9, 3.8875552874395657`*^9}, {3.887555374017883*^9, 
   3.8875553781014147`*^9}, {3.8875555641403284`*^9, 3.887555586341483*^9}, {
   3.887623627638457*^9, 3.88762368592356*^9}, {3.887644504886734*^9, 
   3.887644564500985*^9}, 3.887644843209488*^9, {3.887645229587344*^9, 
   3.88764523383893*^9}, {3.8876452647464375`*^9, 3.887645405619684*^9}, {
   3.887645444534807*^9, 3.88764547052003*^9}, {3.88764651833317*^9, 
   3.887646520578185*^9}, {3.8876465567352734`*^9, 3.887646590000579*^9}, {
   3.8876467579938936`*^9, 3.88764676082001*^9}, {3.8876509641519523`*^9, 
   3.8876510072375298`*^9}, {3.887654837589601*^9, 3.8876548912917185`*^9}, {
   3.8876549282176485`*^9, 3.8876549597877307`*^9}, {3.892441263432383*^9, 
   3.892441263719323*^9}, {3.892441419771021*^9, 3.8924414569859667`*^9}, {
   3.8924436792019253`*^9, 3.8924438442252693`*^9}, {3.8924439181708527`*^9, 
   3.89244397235515*^9}, {3.8924660623523417`*^9, 3.892466116864929*^9}, {
   3.892466161842098*^9, 3.892466171167406*^9}, {3.892466739774123*^9, 
   3.892466805695472*^9}, {3.8924668532655783`*^9, 3.892466859086397*^9}, {
   3.89246689169407*^9, 3.892466927748371*^9}, {3.8924671456705513`*^9, 
   3.892467413437154*^9}, {3.892467455652975*^9, 3.892467520399106*^9}, {
   3.8924675745493507`*^9, 3.892467841628889*^9}, {3.892468011753639*^9, 
   3.892468012167158*^9}, {3.892468051383027*^9, 3.892468164475442*^9}, {
   3.892468329286064*^9, 3.892468361504431*^9}, {3.892468480311635*^9, 
   3.8924684807598763`*^9}, {3.8924685444739532`*^9, 3.892468737789838*^9}, {
   3.892468795310954*^9, 3.8924688298275833`*^9}, {3.892468866664213*^9, 
   3.892468907295607*^9}, {3.892468941453697*^9, 3.892468960156485*^9}, {
   3.892469026408813*^9, 3.892469209535523*^9}, {3.892469620080078*^9, 
   3.8924696390171213`*^9}, {3.892469821541379*^9, 3.892469829359714*^9}, {
   3.892469864884646*^9, 3.89246987648615*^9}, {3.892469928183453*^9, 
   3.8924699558483067`*^9}, {3.89246999104795*^9, 3.8924700426165667`*^9}, {
   3.892470097712057*^9, 3.892470222921132*^9}, {3.892470284255169*^9, 
   3.892470423745653*^9}, {3.892470574231938*^9, 3.892470584366166*^9}, {
   3.8924706157174187`*^9, 3.892471156173074*^9}, {3.892471224811524*^9, 
   3.89247127063551*^9}, {3.8924713179363527`*^9, 3.892471349421981*^9}, {
   3.8924713819895973`*^9, 3.8924713933100767`*^9}, {3.8924714316118717`*^9, 
   3.8924714376591873`*^9}, {3.892471514695046*^9, 3.8924715626227217`*^9}, {
   3.8983278950960183`*^9, 3.898328015354265*^9}, {3.898328047226396*^9, 
   3.898328112193201*^9}, 3.89896381555571*^9, {3.8989639156698074`*^9, 
   3.8989639473634872`*^9}, 3.899001301102458*^9, {3.8990017934101295`*^9, 
   3.899001848169935*^9}, {3.899002090456122*^9, 3.8990021320947995`*^9}, {
   3.899010942654651*^9, 3.899011108790016*^9}, {3.899011157311133*^9, 
   3.8990111722514133`*^9}, {3.899011204485138*^9, 3.8990112823329716`*^9}, {
   3.8990113376133595`*^9, 3.899011425205369*^9}, {3.899011773204536*^9, 
   3.89901187721447*^9}, {3.8990119586245794`*^9, 3.899012349366875*^9}, {
   3.8990123811683416`*^9, 3.899012381349352*^9}, {3.899307814934327*^9, 
   3.8993078149683075`*^9}, {3.8993849655957556`*^9, 3.899384965628737*^9}, {
   3.9112953886375666`*^9, 3.911295421541031*^9}, {3.9112954572784815`*^9, 
   3.911295463312348*^9}, {3.91129551023822*^9, 3.9112955150093317`*^9}},
 CellLabel->
  "In[212]:=",ExpressionUUID->"a4627183-a35e-4346-be59-2fe926c9cfaf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Evaluate ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "(", "X", ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a12a267f-526f-48b3-91da-b594ffef6c93"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["t", "W"], "(", "X", ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "5b30d385-0bd0-4c3e-a210-2e964c2916b5"],
 " with Random Challenge x"
}], "Subsection",
 CellChangeTimes->{{3.886794077717168*^9, 3.8867941122709365`*^9}, {
  3.899290671709657*^9, 
  3.899290745822849*^9}},ExpressionUUID->"a57ae501-b509-409f-b898-\
6ed3d46c473a"],

Cell[TextData[{
 "Receive random challenge ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "6aaa118c-852f-4383-b4f1-a9112acfdb62"],
 " which is the evaluation point of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"t", "(", 
     RowBox[{"X", "=", "x"}], ")"}], " ", "and", " ", 
    RowBox[{
     SubscriptBox["t", "W"], "(", 
     RowBox[{"X", "=", "x"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "0b44759c-71c1-49bf-896c-c2a0c53fed6a"]
}], "Text",
 CellChangeTimes->{
  3.88679414143264*^9, {3.8867942552221637`*^9, 3.886794263407239*^9}, {
   3.88679438305804*^9, 3.886794449666207*^9}, {3.8870945318720264`*^9, 
   3.8870945397206583`*^9}, {3.887094616400465*^9, 3.8870946192812996`*^9}, {
   3.892471745041789*^9, 3.892471745154647*^9}, {3.899290646446492*^9, 
   3.8992906596749854`*^9}},ExpressionUUID->"0b2b46e1-4878-4a57-9dd1-\
af890397eea6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"StateMachineRestore", "[", "\"\<T3T5T1WT2W\>\"", "]"}], ";"}], 
  "\n", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Get", " ", "random", " ", "challenge", " ", "x", " ", 
    RowBox[{"(", 
     RowBox[{"evaluation", " ", "point", " ", "of", " ", "t", 
      RowBox[{"(", 
       RowBox[{"X", "=", "x"}], ")"}]}], ")"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{"interactive", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Random", " ", "challenge", " ", "from", " ", "interactive", " ", 
       "verifier"}], "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"x", " ", "=", " ", 
       RowBox[{"WaitForRandomChallenge", "[", "\"\<x\>\"", "]"}]}], ";"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "Else", "*)"}], ",", "\n", 
     RowBox[{"(*", 
      RowBox[{"Fiat", "-", "Shamir"}], "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"x", " ", "=", " ", 
       RowBox[{"FiatShamirGet", "[", 
        RowBox[{"\"\<x\>\"", ",", "q", ",", 
         RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}]}],
       ";", "\n", "\t", 
      RowBox[{"TellVerifier", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<x\>\"", "->", "x"}], ",", 
         RowBox[{"\"\<_cost\>\"", "->", "\"\<scalar\>\""}]}], "}"}], "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Knowledge\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<x\>\"", ",", "semanticsOfRandomChallenge", ",", "\"\<P,V\>\"", 
         ",", "x"}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left", ",", "Left"}], "}"}], 
       "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], "\n", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"CommunicationCostGrid", "[", "]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "interactive"}], ",", 
    RowBox[{"Print", "[", 
     RowBox[{"FiatShamirGrid", "[", "]"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ProcessNewMessages", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"StateMachineSave", "[", "\"\<x\>\"", "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.886794320612423*^9, 3.8867943391234484`*^9}, 
   3.886794371587579*^9, {3.8867944937155256`*^9, 3.8867945617280135`*^9}, 
   3.886794631087307*^9, {3.8867952682293572`*^9, 3.8867953008923473`*^9}, {
   3.8870945449579334`*^9, 3.8870945464635515`*^9}, {3.887395901727228*^9, 
   3.8873959077792997`*^9}, {3.887396101921311*^9, 3.887396102545414*^9}, {
   3.8874903394022493`*^9, 3.8874903489124937`*^9}, {3.8875535393805847`*^9, 
   3.8875535407000613`*^9}, {3.887553836032584*^9, 3.88755384281155*^9}, {
   3.8924717374058104`*^9, 3.89247177895584*^9}, {3.89832816507216*^9, 
   3.898328176382888*^9}, {3.8983282938569937`*^9, 3.8983282953999825`*^9}, {
   3.898328341495141*^9, 3.898328342438545*^9}, 3.8990118827895164`*^9, 
   3.8993078150002937`*^9, 3.8993849656397305`*^9},
 CellLabel->
  "In[253]:=",ExpressionUUID->"3fca9ace-6917-47f4-87d8-fd74c356dbc3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Commit to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "2ddeac27-c449-4a81-a375-52d4b2bcf1d1"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["t", "W"], "(", "x", ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b286105e-7731-4ee9-9366-09b25787f9a9"]
}], "Subsection",
 CellChangeTimes->{{3.8867967265330315`*^9, 3.886796739951027*^9}, {
  3.8992907727161446`*^9, 
  3.8992907759994617`*^9}},ExpressionUUID->"dbb259bd-b170-4f87-8a04-\
817073d9aa4e"],

Cell[TextData[{
 StyleBox["Shuffle argument:",
  FontWeight->"Bold"],
 "\nCalculate a combined commitment ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["t", "^"], TraditionalForm]],ExpressionUUID->
  "975675db-6caa-4993-b991-ab243a70c9e1"],
 " to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "(", "X", ")"}], TraditionalForm]],ExpressionUUID->
  "228c7dab-ca72-4745-91ef-411dc86b750a"],
 " at the challenge point ",
 Cell[BoxData[
  FormBox[
   RowBox[{"X", "=", "x"}], TraditionalForm]],ExpressionUUID->
  "dfdb2c59-d777-4204-b92e-af7da8ae5040"],
 " using blinding factors ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Tau]", "3"], TraditionalForm]],ExpressionUUID->
  "7b74d409-f0e3-44a4-a39f-b4e3c0b2e34a"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Tau]", "5"], TraditionalForm]],ExpressionUUID->
  "be51e196-4a33-4b13-9763-4bd6ed5a690b"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "W"], TraditionalForm]],ExpressionUUID->
  "62f2a67d-82e1-4df7-9200-98d3459db926"],
 " from previous Pedersen Commitments ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "3"], TraditionalForm]],ExpressionUUID->
  "508a8088-eb21-4d86-b3f5-38915394d9e5"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "5"], TraditionalForm]],ExpressionUUID->
  "26bdb746-9c17-46b3-86f2-d97c0cc78ea3"],
 ", ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]],ExpressionUUID->
  "c655f704-c302-4333-89d3-97ed6d70d38d"],
 " and ",
 Cell[BoxData[
  FormBox["W", TraditionalForm]],ExpressionUUID->
  "ce369502-07ea-4709-a1ad-7fb65d7765ed"],
 " as well as blinding factors \[Alpha], \[Beta] and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Rho]", 
    RowBox[{"{", 
     RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]], TraditionalForm]],
  ExpressionUUID->"b322d4dd-da71-4207-be14-f6e941d7e229"],
 " of previous Pedersen Vector Commitments ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "L"], TraditionalForm]],ExpressionUUID->
  "887f64a4-a2ba-48ec-ad1e-69979d5866ce"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", "L"], TraditionalForm]],ExpressionUUID->
  "dd0ca4f5-6783-4872-a0c1-386b5565d9d5"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", 
    RowBox[{"R", ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]}]], 
   TraditionalForm]],ExpressionUUID->"0b997ea1-3993-48c9-b82a-8a91442ca9d6"],
 " resulting in\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Tau]", "x"], ":=", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Sigma]", "W"], 
      SuperscriptBox["ny", 
       RowBox[{"n", "-", "1"}]], 
      OverscriptBox["k", "^"], "x"}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["\[Tau]", "3"], 
      SuperscriptBox["x", "3"]}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["\[Tau]", "5"], 
      SuperscriptBox["x", "5"]}]}]}], TraditionalForm]],ExpressionUUID->
  "6a4b61d9-7564-4244-99ab-4252469ad9ed"],
 ",\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Mu]", 
     RowBox[{"{", 
      RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]], ":=", 
    RowBox[{"\[Alpha]", "+", 
     SuperscriptBox["\[Beta]x", "2"], "+", 
     RowBox[{
      SubscriptBox["\[Rho]", 
       RowBox[{"{", 
        RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]], 
      SuperscriptBox["x", "3"]}]}]}], TraditionalForm]],ExpressionUUID->
  "871fafea-70ba-4c15-96f3-34ff13ee405e"],
 " and\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox["t", "^"], ":=", 
     RowBox[{"<", 
      OverscriptBox["l", "\[RightVector]"]}]}], ",", 
    RowBox[{
     OverscriptBox["r", "\[RightVector]"], ">"}]}], TraditionalForm]],
  ExpressionUUID->"160d56f9-6191-4a51-a7f3-1c6254587335"],
 "\nwhich are sent to V.\n",
 StyleBox["Without the inner product protocol",
  FontWeight->"Bold"],
 "\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox["l", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "0e2b0051-e6af-496b-a82f-8034536fad44"],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["r", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "f0c8ded4-9542-416d-8ba4-7c65cec77105"],
 " have to be sent to V to verify the correctness of the inner product. This \
causes the communication cost to become linear in the length of ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["l", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "93a1ebec-8bb4-4c5e-bbef-5cab0936fdfc"],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["r", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "76d474b5-fab6-45ac-b5c6-64e55fdff5b8"],
 ", which is ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "ff123cac-92b0-4bfd-9bae-97ec3c19d668"],
 ".\n",
 StyleBox["PR",
  FontWeight->"Bold"],
 StyleBox[" argument:",
  FontWeight->"Bold"],
 "\nCalculate a combined commitment ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["t", "W"], "^"], TraditionalForm]],ExpressionUUID->
  "bfe7bfba-16d5-41ca-9735-4cb166cfd571"],
 " to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["t", "W"], "(", "X", ")"}], TraditionalForm]],ExpressionUUID->
  "cc50e084-dcad-47d2-9507-c81ce1ba5f85"],
 " at the challenge point ",
 Cell[BoxData[
  FormBox[
   RowBox[{"X", "=", "x"}], TraditionalForm]],ExpressionUUID->
  "f1a48377-e6a5-41a4-869f-d7dc023b8ec1"],
 " using blinding factors ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Tau]", 
    RowBox[{"1", ",", "W"}]], TraditionalForm]],ExpressionUUID->
  "5915794e-d316-4e04-8c31-f2bd3cfab79a"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Tau]", 
    RowBox[{"2", ",", "W"}]], TraditionalForm]],ExpressionUUID->
  "a59fcb1b-7283-4ee7-86e6-6d9b2aec349f"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "W"], TraditionalForm]],ExpressionUUID->
  "a2c0a4da-b03f-4f78-b84d-ab9b6e1c35a4"],
 " from previous Pedersen Commitments ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", 
    RowBox[{"1", ",", "W"}]], TraditionalForm]],ExpressionUUID->
  "bd30c44e-769c-420c-a5ea-c64eddcd5548"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", 
    RowBox[{"2", ",", "W"}]], TraditionalForm]],ExpressionUUID->
  "5b43a4b1-4096-4ea5-ad5e-fdfcf30292a4"],
 ", ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]],ExpressionUUID->
  "72ca6694-7f45-462a-b5a7-32b5c7c361f6"],
 " and ",
 Cell[BoxData[
  FormBox["W", TraditionalForm]],ExpressionUUID->
  "776720da-1fb9-4866-a7f0-3986ce4c50c9"],
 " as well as blinding factors ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "W"], TraditionalForm]],ExpressionUUID->
  "7573e1fa-8f5b-4749-a888-8fc148d6106b"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "W"], TraditionalForm]],ExpressionUUID->
  "3d169b85-a676-4b0c-b74e-123fb75cbc92"],
 " of previous Pedersen Vector Commitments ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "W"], TraditionalForm]],ExpressionUUID->
  "7e651c77-8068-4d18-a878-1873949ec50a"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", "W"], TraditionalForm]],ExpressionUUID->
  "3555bb9d-574b-4557-846f-f11cffe02ee4"],
 " resulting in\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Tau]", 
     RowBox[{"x", ",", "W"}]], ":=", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Sigma]", "W"], 
      SuperscriptBox["y", 
       RowBox[{"n", "-", "1"}]]}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["\[Tau]", 
       RowBox[{"1", ",", "W"}]], "x"}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["\[Tau]", 
       RowBox[{"2", ",", "W"}]], 
      SuperscriptBox["x", "2"]}]}]}], TraditionalForm]],ExpressionUUID->
  "5469c4be-aa27-4326-b065-e1c9ed71cd88"],
 ",\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Mu]", "W"], ":=", 
    RowBox[{"\[Alpha]", "+", "\[Beta]x"}]}], TraditionalForm]],ExpressionUUID->
  "1d084b2c-6fe3-4974-b757-d9bb05344dfe"],
 " and\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["t", "W"], "^"], ":=", 
     RowBox[{"<", 
      OverscriptBox[
       SubscriptBox["l", "W"], "\[RightVector]"]}]}], ",", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["r", "W"], "\[RightVector]"], ">"}]}], TraditionalForm]],
  ExpressionUUID->"a9ac9977-a04c-4a33-a91f-b794d2d35808"],
 "\nwhich are sent to V.\n",
 StyleBox["Without the inner product protocol",
  FontWeight->"Bold"],
 "\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["l", "W"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"86e35e13-1cc0-4f4b-a7ab-1bac45d29908"],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["r", "W"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"03517bc2-5274-4b88-b286-6261541ba1a4"],
 " have to be sent to V to verify the correctness of the inner product. This \
causes the communication cost to become linear in the length of ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["l", "W"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"31c84a15-4b8d-49a6-94c7-cc3be13b51ae"],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["r", "W"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"9667a801-99af-4d38-9f09-535ee2ccb5d4"],
 ", which is ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "5bdb84db-6dac-42f5-828d-9b993e5eb5bd"],
 "."
}], "Text",
 CellChangeTimes->{{3.886796762075017*^9, 3.8867969766832285`*^9}, {
   3.886797040865929*^9, 3.8867971214109125`*^9}, {3.886838761840433*^9, 
   3.8868387622302475`*^9}, {3.88707461177066*^9, 3.887074873523255*^9}, {
   3.887074908658245*^9, 3.8870752051082196`*^9}, {3.8870755613611393`*^9, 
   3.8870756305872984`*^9}, {3.887075841002067*^9, 3.887075850821916*^9}, {
   3.8870762556410837`*^9, 3.8870762758040485`*^9}, {3.8870769867522297`*^9, 
   3.8870769882657785`*^9}, {3.88707701973625*^9, 3.887077050190703*^9}, {
   3.8870770885387588`*^9, 3.887077092033167*^9}, {3.8870795061307993`*^9, 
   3.8870795342250905`*^9}, {3.8870817598136406`*^9, 
   3.8870819162666616`*^9}, {3.887081948591604*^9, 3.8870820926643248`*^9}, {
   3.8870822414165087`*^9, 3.8870824686627*^9}, {3.892471820965452*^9, 
   3.892471898697029*^9}, {3.892472073617321*^9, 3.892472166618395*^9}, {
   3.892472197180955*^9, 3.892472273304925*^9}, {3.892472308777073*^9, 
   3.892472309157283*^9}, {3.8924724426680317`*^9, 3.892472446639552*^9}, {
   3.8924782394689713`*^9, 3.892478247793839*^9}, {3.892478619237988*^9, 
   3.892478636340794*^9}, {3.899265408487892*^9, 3.899265425997653*^9}, {
   3.899290816478862*^9, 3.899291011844795*^9}, 3.9112944137681017`*^9, {
   3.91140467134155*^9, 
   3.9114046803856883`*^9}},ExpressionUUID->"19f98eed-c753-4b62-b0a9-\
328064625f0a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"StateMachineRestore", "[", "\"\<x\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Tau]", "x"], " ", "=", " ", 
   RowBox[{"modq", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Sigma]", "W"], "*", 
        RowBox[{"powermodq", "[", 
         RowBox[{"y", ",", 
          RowBox[{"n", "-", "1"}]}], "]"}], "*", 
        OverscriptBox["k", "^"]}], ")"}], "*", "x"}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["\[Tau]", "3"], "*", 
      RowBox[{"x", "^", "3"}]}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["\[Tau]", "5"], "*", 
      RowBox[{"x", "^", "5"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TellVerifier", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<taux\>\"", "->", 
      SubscriptBox["\[Tau]", "x"]}], ",", 
     RowBox[{"\"\<_cost\>\"", "->", "\"\<scalar\>\""}]}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", 
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<taux\>\"", ",", 
       SubscriptBox["\[Tau]", "x"], ",", 
       RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}]}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Mu]", "h"], " ", "=", " ", 
   RowBox[{"modq", "[", 
    RowBox[{"\[Alpha]", " ", "+", " ", 
     RowBox[{"\[Beta]", "*", 
      RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["\[Rho]", "h"], "*", 
      RowBox[{"x", "^", "3"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Mu]", "b"], " ", "=", " ", 
   RowBox[{"modq", "[", 
    RowBox[{"\[Alpha]", " ", "+", " ", 
     RowBox[{"\[Beta]", "*", 
      RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["\[Rho]", "b"], "*", 
      RowBox[{"x", "^", "3"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Mu]", "c"], " ", "=", " ", 
   RowBox[{"modq", "[", 
    RowBox[{"\[Alpha]", " ", "+", " ", 
     RowBox[{"\[Beta]", "*", 
      RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["\[Rho]", "c"], "*", 
      RowBox[{"x", "^", "3"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Mu]", "d"], " ", "=", " ", 
   RowBox[{"modq", "[", 
    RowBox[{"\[Alpha]", " ", "+", " ", 
     RowBox[{"\[Beta]", "*", 
      RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["\[Rho]", "d"], "*", 
      RowBox[{"x", "^", "3"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"TellVerifier", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<muh\>\"", "->", 
      SubscriptBox["\[Mu]", "h"]}], ",", 
     RowBox[{"\"\<_cost\>\"", "->", "\"\<scalar\>\""}]}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TellVerifier", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<mub\>\"", "->", 
      SubscriptBox["\[Mu]", "b"]}], ",", 
     RowBox[{"\"\<_cost\>\"", "->", "\"\<scalar\>\""}]}], "}"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"TellVerifier", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<muc\>\"", "->", 
      SubscriptBox["\[Mu]", "c"]}], ",", 
     RowBox[{"\"\<_cost\>\"", "->", "\"\<scalar\>\""}]}], "}"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"TellVerifier", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<mud\>\"", "->", 
      SubscriptBox["\[Mu]", "d"]}], ",", 
     RowBox[{"\"\<_cost\>\"", "->", "\"\<scalar\>\""}]}], "}"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"FiatShamirAdd", "[", 
       RowBox[{"\"\<muh\>\"", ",", 
        SubscriptBox["\[Mu]", "h"], ",", 
        RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}], 
      ";", "\n", "\t", 
      RowBox[{"FiatShamirAdd", "[", 
       RowBox[{"\"\<mub\>\"", ",", 
        SubscriptBox["\[Mu]", "b"], ",", 
        RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}], 
      ";", "\n", "\t", 
      RowBox[{"FiatShamirAdd", "[", 
       RowBox[{"\"\<muc\>\"", ",", 
        SubscriptBox["\[Mu]", "c"], ",", 
        RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}], 
      ";", "\n", "\t", 
      RowBox[{"FiatShamirAdd", "[", 
       RowBox[{"\"\<mud\>\"", ",", 
        SubscriptBox["\[Mu]", "d"], ",", 
        RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}], 
      ";"}]}], "\n", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox["l", "\[RightVector]"], " ", "=", " ", 
   RowBox[{"modq", "[", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["l", "0"], "\[RightVector]"], " ", "+", " ", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["l", "2"], "\[RightVector]"], "*", 
      RowBox[{"x", "^", "2"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox["r", "\[RightVector]"], " ", "=", " ", 
   RowBox[{"modq", "[", 
    RowBox[{
     RowBox[{
      OverscriptBox[
       SubscriptBox["r", "1"], "\[RightVector]"], "*", "x"}], " ", "+", " ", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["r", "3"], "\[RightVector]"], "*", 
      RowBox[{"x", "^", "3"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox["t", "^"], " ", "=", " ", 
   RowBox[{"modq", "[", 
    RowBox[{
     OverscriptBox["l", "\[RightVector]"], ".", 
     OverscriptBox["r", "\[RightVector]"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"TellVerifier", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<t\>\"", "->", 
      OverscriptBox["t", "^"]}], ",", 
     RowBox[{"\"\<_cost\>\"", "->", "\"\<scalar\>\""}]}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", 
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<t\>\"", ",", 
       OverscriptBox["t", "^"], ",", 
       RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}]}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SuperscriptBox["h", "*"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{
    OverscriptBox[
     SuperscriptBox["y", 
      RowBox[{"-", "n"}]], "\[RightVector]"], "*", 
    OverscriptBox["h", "\[RightVector]"]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SuperscriptBox["b", "*"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{
    OverscriptBox[
     SuperscriptBox["y", 
      RowBox[{"-", "n"}]], "\[RightVector]"], "*", 
    OverscriptBox["b", "\[RightVector]"]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SuperscriptBox["c", "*"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{
    OverscriptBox[
     SuperscriptBox["y", 
      RowBox[{"-", "n"}]], "\[RightVector]"], "*", 
    OverscriptBox["c", "\[RightVector]"]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    OverscriptBox[
     SuperscriptBox["d", "*"], "\[RightVector]"], " ", "=", " ", 
    RowBox[{
     OverscriptBox[
      SuperscriptBox["y", 
       RowBox[{"-", "n"}]], "\[RightVector]"], "*", 
     OverscriptBox["d", "\[RightVector]"]}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"For", " ", "sanity", " ", "checks"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   SubsuperscriptBox["P", "h", "+"], " ", "=", " ", 
   RowBox[{
    SubscriptBox["A", "L"], " ", "+", " ", 
    RowBox[{
     SubscriptBox["A", 
      RowBox[{"R", ",", "h"}]], "*", "x"}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["S", "L"], "*", 
     RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["S", 
      RowBox[{"R", ",", "h"}]], "*", 
     RowBox[{"x", "^", "3"}]}], " ", "+", " ", 
    RowBox[{
     OverscriptBox["g", "\[RightVector]"], ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"z", "^", "3"}], "*", 
       OverscriptBox[
        SuperscriptBox["y", 
         RowBox[{"-", "n"}]], "\[RightVector]"]}], ")"}]}], " ", "+", " ", 
    RowBox[{
     OverscriptBox[
      SuperscriptBox["h", "*"], "\[RightVector]"], ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "x"}], "*", 
       OverscriptBox[
        SubsuperscriptBox["y", "z", 
         RowBox[{"n", "-", "1"}]], "\[RightVector]"]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubsuperscriptBox["P", "b", "+"], " ", "=", " ", 
   RowBox[{
    SubscriptBox["A", "L"], " ", "+", " ", 
    RowBox[{
     SubscriptBox["A", 
      RowBox[{"R", ",", "b"}]], "*", "x"}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["S", "L"], "*", 
     RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["S", 
      RowBox[{"R", ",", "b"}]], "*", 
     RowBox[{"x", "^", "3"}]}], " ", "+", " ", 
    RowBox[{
     OverscriptBox["g", "\[RightVector]"], ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"z", "^", "3"}], "*", 
       OverscriptBox[
        SuperscriptBox["y", 
         RowBox[{"-", "n"}]], "\[RightVector]"]}], ")"}]}], " ", "+", " ", 
    RowBox[{
     OverscriptBox[
      SuperscriptBox["b", "*"], "\[RightVector]"], ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "x"}], "*", 
       OverscriptBox[
        SubsuperscriptBox["y", "z", 
         RowBox[{"n", "-", "1"}]], "\[RightVector]"]}], ")"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubsuperscriptBox["P", "c", "+"], " ", "=", " ", 
   RowBox[{
    SubscriptBox["A", "L"], " ", "+", " ", 
    RowBox[{
     SubscriptBox["A", 
      RowBox[{"R", ",", "c"}]], "*", "x"}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["S", "L"], "*", 
     RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["S", 
      RowBox[{"R", ",", "c"}]], "*", 
     RowBox[{"x", "^", "3"}]}], " ", "+", " ", 
    RowBox[{
     OverscriptBox["g", "\[RightVector]"], ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"z", "^", "3"}], "*", 
       OverscriptBox[
        SuperscriptBox["y", 
         RowBox[{"-", "n"}]], "\[RightVector]"]}], ")"}]}], " ", "+", " ", 
    RowBox[{
     OverscriptBox[
      SuperscriptBox["c", "*"], "\[RightVector]"], ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "x"}], "*", 
       OverscriptBox[
        SubsuperscriptBox["y", "z", 
         RowBox[{"n", "-", "1"}]], "\[RightVector]"]}], ")"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubsuperscriptBox["P", "d", "+"], " ", "=", " ", 
    RowBox[{
     SubscriptBox["A", "L"], " ", "+", " ", 
     RowBox[{
      SubscriptBox["A", 
       RowBox[{"R", ",", "d"}]], "*", "x"}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["S", "L"], "*", 
      RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["S", 
       RowBox[{"R", ",", "d"}]], "*", 
      RowBox[{"x", "^", "3"}]}], " ", "+", " ", 
     RowBox[{
      OverscriptBox["g", "\[RightVector]"], ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"z", "^", "3"}], "*", 
        OverscriptBox[
         SuperscriptBox["y", 
          RowBox[{"-", "n"}]], "\[RightVector]"]}], ")"}]}], " ", "+", " ", 
     RowBox[{
      OverscriptBox[
       SuperscriptBox["d", "*"], "\[RightVector]"], ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "x"}], "*", 
        OverscriptBox[
         SubsuperscriptBox["y", "z", 
          RowBox[{"n", "-", "1"}]], "\[RightVector]"]}], ")"}]}]}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Knowledge\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(x\)]\) :\!\(\*SubscriptBox[\(\
\[Congruent]\), \(q\)]\) \!\(\*SubscriptBox[\(\[Sigma]\), \
\(W\)]\)\!\(\*SuperscriptBox[\(ny\), \(n - 1\)]\)\!\(\*OverscriptBox[\(k\), \
\(^\)]\)x + \!\(\*SubscriptBox[\(\[Tau]\), \
\(3\)]\)\!\(\*SuperscriptBox[\(x\), \(3\)]\) + \!\(\*SubscriptBox[\(\[Tau]\), \
\(5\)]\)\!\(\*SuperscriptBox[\(x\), \(5\)]\)\>\"", ",", 
         "\"\<Combined Commitment\\nto Blinding Values\\nof Commitments\\nto \
Coefficiencts of t(X)\>\"", ",", "\"\<P,V\>\"", ",", 
         SubscriptBox["\[Tau]", "x"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Mu]\), \(h\)]\) :\!\(\*SubscriptBox[\(\
\[Congruent]\), \(q\)]\) \[Alpha] + \!\(\*SuperscriptBox[\(\[Beta]x\), \(2\)]\
\) + \!\(\*SubscriptBox[\(\[Rho]\), \(h\)]\)\!\(\*SuperscriptBox[\(x\), \
\(3\)]\)\>\"", ",", 
         "\"\<Combined Commitment\\nto Blinding Values\\nof Vector \
Commitments\\nto \!\(\*OverscriptBox[SubscriptBox[\(a\), \(\[Ellipsis]\)], \(\
\[RightVector]\)]\) and \!\(\*OverscriptBox[SubscriptBox[\(s\), \(\[Ellipsis]\
\)], \(\[RightVector]\)]\)\\nBased on \!\(\*OverscriptBox[\(h\), \(\
\[RightVector]\)]\)\>\"", ",", "\"\<P,V\>\"", ",", 
         SubscriptBox["\[Mu]", "h"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Mu]\), \(b\)]\) :\!\(\*SubscriptBox[\(\
\[Congruent]\), \(q\)]\) \[Alpha] + \!\(\*SuperscriptBox[\(\[Beta]x\), \(2\)]\
\) + \!\(\*SubscriptBox[\(\[Rho]\), \(b\)]\)\!\(\*SuperscriptBox[\(x\), \
\(3\)]\)\>\"", ",", 
         "\"\<Combined Commitment\\nto Blinding Values\\nof Vector \
Commitments\\nto \!\(\*OverscriptBox[SubscriptBox[\(a\), \(\[Ellipsis]\)], \(\
\[RightVector]\)]\) and \!\(\*OverscriptBox[SubscriptBox[\(s\), \(\[Ellipsis]\
\)], \(\[RightVector]\)]\)\\nBased on \!\(\*OverscriptBox[\(b\), \(\
\[RightVector]\)]\)\>\"", ",", "\"\<P,V\>\"", ",", 
         SubscriptBox["\[Mu]", "b"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Mu]\), \(c\)]\) :\!\(\*SubscriptBox[\(\
\[Congruent]\), \(q\)]\) \[Alpha] + \!\(\*SuperscriptBox[\(\[Beta]x\), \(2\)]\
\) + \!\(\*SubscriptBox[\(\[Rho]\), \(c\)]\)\!\(\*SuperscriptBox[\(x\), \
\(3\)]\)\>\"", ",", 
         "\"\<Combined Commitment\\nto Blinding Values\\nof Vector \
Commitments\\nto \!\(\*OverscriptBox[SubscriptBox[\(a\), \(\[Ellipsis]\)], \(\
\[RightVector]\)]\) and \!\(\*OverscriptBox[SubscriptBox[\(s\), \(\[Ellipsis]\
\)], \(\[RightVector]\)]\)\\nBased on \!\(\*OverscriptBox[\(c\), \(\
\[RightVector]\)]\)\>\"", ",", "\"\<P,V\>\"", ",", 
         SubscriptBox["\[Mu]", "c"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Mu]\), \(d\)]\) :\!\(\*SubscriptBox[\(\
\[Congruent]\), \(q\)]\) \[Alpha] + \!\(\*SuperscriptBox[\(\[Beta]x\), \(2\)]\
\) + \!\(\*SubscriptBox[\(\[Rho]\), \(d\)]\)\!\(\*SuperscriptBox[\(x\), \
\(3\)]\)\>\"", ",", 
         "\"\<Combined Commitment\\nto Blinding Values\\nof Vector \
Commitments\\nto \!\(\*OverscriptBox[SubscriptBox[\(a\), \(\[Ellipsis]\)], \(\
\[RightVector]\)]\) and \!\(\*OverscriptBox[SubscriptBox[\(s\), \(\[Ellipsis]\
\)], \(\[RightVector]\)]\)\\nBased on \!\(\*OverscriptBox[\(d\), \(\
\[RightVector]\)]\)\>\"", ",", "\"\<P,V\>\"", ",", 
         SubscriptBox["\[Mu]", "d"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(l\), \(\[RightVector]\)]\) \
:\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \
\!\(\*OverscriptBox[SubscriptBox[\(l\), \(0\)], \(\[RightVector]\)]\) + \
\!\(\*OverscriptBox[SubscriptBox[\(l\), \(2\)], \
\(\[RightVector]\)]\)\!\(\*SuperscriptBox[\(x\), \(2\)]\) = \
\!\(\*OverscriptBox[SubscriptBox[\(a\), \(L\)], \(\[RightVector]\)]\) + \
\!\(\*SuperscriptBox[\(z\), \(3\)]\)\!\(\*OverscriptBox[SuperscriptBox[\(y\), \
\(-n\)], \(\[RightVector]\)]\) + \!\(\*OverscriptBox[SubscriptBox[\(s\), \
\(L\)], \(\[RightVector]\)]\)\!\(\*SuperscriptBox[\(x\), \(2\)]\)\>\"", ",", 
         "\"\<Left side of inner product\>\"", ",", 
         RowBox[{"If", "[", 
          RowBox[{
          "useInnerProductProtocol", ",", "\"\<P\>\"", ",", "\"\<P,V\>\""}], 
          "]"}], ",", 
         OverscriptBox["l", "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(r\), \(\[RightVector]\)]\) \
:\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \
\!\(\*OverscriptBox[SubscriptBox[\(r\), \(1\)], \(\[RightVector]\)]\)x + \!\(\
\*OverscriptBox[SubscriptBox[\(r\), \(3\)], \
\(\[RightVector]\)]\)\!\(\*SuperscriptBox[\(x\), \(3\)]\) = \
(\!\(\*OverscriptBox[SuperscriptBox[\(y\), \(n\)], \(\[RightVector]\)]\)*\!\(\
\*OverscriptBox[SubscriptBox[\(a\), \(R\)], \(\[RightVector]\)]\) - \
\!\(\*OverscriptBox[SubsuperscriptBox[\(y\), \(z\), \(n - 1\)], \(\
\[RightVector]\)]\))x + \!\(\*OverscriptBox[SuperscriptBox[\(y\), \(n\)], \(\
\[RightVector]\)]\)*\!\(\*OverscriptBox[SubscriptBox[\(s\), \(R\)], \(\
\[RightVector]\)]\)\!\(\*SuperscriptBox[\(x\), \(3\)]\)\>\"", ",", 
         "\"\<Right side of inner product\>\"", ",", 
         RowBox[{"If", "[", 
          RowBox[{
          "useInnerProductProtocol", ",", "\"\<P\>\"", ",", "\"\<P,V\>\""}], 
          "]"}], ",", 
         OverscriptBox["r", "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(t\), \(^\)]\) :\!\(\*SubscriptBox[\(\
\[Congruent]\), \(q\)]\) <\!\(\*OverscriptBox[\(l\), \(\[RightVector]\)]\),\!\
\(\*OverscriptBox[\(r\), \(\[RightVector]\)]\)>\>\"", ",", 
         "\"\<Inner Product\>\"", ",", "\"\<P,V\>\"", ",", 
         OverscriptBox["t", "^"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubsuperscriptBox[\(P\), \(h\), \(+\)]\) := \
\!\(\*SubscriptBox[\(A\), \(L\)]\) + \!\(\*SubscriptBox[\(A\), \(R, h\)]\)x + \
\!\(\*SubscriptBox[\(S\), \(L\)]\)\!\(\*SuperscriptBox[\(x\), \(2\)]\) + \!\(\
\*SubscriptBox[\(S\), \(R, h\)]\)\!\(\*SuperscriptBox[\(x\), \(3\)]\) + <\!\(\
\*OverscriptBox[\(g\), \(\[RightVector]\)]\),\!\(\*SuperscriptBox[\(z\), \
\(3\)]\)\!\(\*OverscriptBox[SuperscriptBox[\(y\), \(-n\)], \
\(\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SuperscriptBox[\(h\), \(*\)], \
\(\[RightVector]\)]\),-x\!\(\*OverscriptBox[SubsuperscriptBox[\(y\), \(z\), \
\(n - 1\)], \(\[RightVector]\)]\)>\>\"", ",", 
         "\"\<Combination of\\nShuffle Proof Conditions\\nBased on \
\!\(\*OverscriptBox[\(h\), \(\[RightVector]\)]\)\>\"", ",", 
         "\"\<P,V (implicit)\>\"", ",", 
         SubsuperscriptBox["P", "h", "+"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubsuperscriptBox[\(P\), \(b\), \(+\)]\) := \
\!\(\*SubscriptBox[\(A\), \(L\)]\) + \!\(\*SubscriptBox[\(A\), \(R, b\)]\)x + \
\!\(\*SubscriptBox[\(S\), \(L\)]\)\!\(\*SuperscriptBox[\(x\), \(2\)]\) + \!\(\
\*SubscriptBox[\(S\), \(R, b\)]\)\!\(\*SuperscriptBox[\(x\), \(3\)]\) + <\!\(\
\*OverscriptBox[\(g\), \(\[RightVector]\)]\),\!\(\*SuperscriptBox[\(z\), \
\(3\)]\)\!\(\*OverscriptBox[SuperscriptBox[\(y\), \(-n\)], \
\(\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SuperscriptBox[\(b\), \(*\)], \
\(\[RightVector]\)]\),-x\!\(\*OverscriptBox[SubsuperscriptBox[\(y\), \(z\), \
\(n - 1\)], \(\[RightVector]\)]\)>\>\"", ",", 
         "\"\<Combination of\\nShuffle Proof Conditions\\nBased on \
\!\(\*OverscriptBox[\(b\), \(\[RightVector]\)]\)\>\"", ",", 
         "\"\<P,V (implicit)\>\"", ",", 
         SubsuperscriptBox["P", "b", "+"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubsuperscriptBox[\(P\), \(c\), \(+\)]\) := \
\!\(\*SubscriptBox[\(A\), \(L\)]\) + \!\(\*SubscriptBox[\(A\), \(R, c\)]\)x + \
\!\(\*SubscriptBox[\(S\), \(L\)]\)\!\(\*SuperscriptBox[\(x\), \(2\)]\) + \!\(\
\*SubscriptBox[\(S\), \(R, c\)]\)\!\(\*SuperscriptBox[\(x\), \(3\)]\) + <\!\(\
\*OverscriptBox[\(g\), \(\[RightVector]\)]\),\!\(\*SuperscriptBox[\(z\), \
\(3\)]\)\!\(\*OverscriptBox[SuperscriptBox[\(y\), \(-n\)], \
\(\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SuperscriptBox[\(c\), \(*\)], \
\(\[RightVector]\)]\),-x\!\(\*OverscriptBox[SubsuperscriptBox[\(y\), \(z\), \
\(n - 1\)], \(\[RightVector]\)]\)>\>\"", ",", 
         "\"\<Combination of\\nShuffle Proof Conditions\\nBased on \
\!\(\*OverscriptBox[\(c\), \(\[RightVector]\)]\)\>\"", ",", 
         "\"\<P,V (implicit)\>\"", ",", 
         SubsuperscriptBox["P", "c", "+"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubsuperscriptBox[\(P\), \(d\), \(+\)]\) := \
\!\(\*SubscriptBox[\(A\), \(L\)]\) + \!\(\*SubscriptBox[\(A\), \(R, d\)]\)x + \
\!\(\*SubscriptBox[\(S\), \(L\)]\)\!\(\*SuperscriptBox[\(x\), \(2\)]\) + \!\(\
\*SubscriptBox[\(S\), \(R, d\)]\)\!\(\*SuperscriptBox[\(x\), \(3\)]\) + <\!\(\
\*OverscriptBox[\(g\), \(\[RightVector]\)]\),\!\(\*SuperscriptBox[\(z\), \
\(3\)]\)\!\(\*OverscriptBox[SuperscriptBox[\(y\), \(-n\)], \
\(\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SuperscriptBox[\(d\), \(*\)], \
\(\[RightVector]\)]\),-x\!\(\*OverscriptBox[SubsuperscriptBox[\(y\), \(z\), \
\(n - 1\)], \(\[RightVector]\)]\)>\>\"", ",", 
         "\"\<Combination of\\nShuffle Proof Conditions\\nBased on \
\!\(\*OverscriptBox[\(d\), \(\[RightVector]\)]\)\>\"", ",", 
         "\"\<P,V (implicit)\>\"", ",", 
         SubsuperscriptBox["P", "d", "+"]}], "}"}]}], "\[IndentingNewLine]", 
      "}"}], ",", " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left", ",", "Left"}], "}"}], 
       "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Tau]", 
    RowBox[{"x", ",", "W"}]], " ", "=", " ", 
   RowBox[{"modq", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Sigma]", "W"], "*", 
      RowBox[{"powermodq", "[", 
       RowBox[{"y", ",", 
        RowBox[{"n", "-", "1"}]}], "]"}]}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["\[Tau]", 
       RowBox[{"1", ",", "W"}]], "*", "x"}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["\[Tau]", 
       RowBox[{"2", ",", "W"}]], "*", 
      RowBox[{"x", "^", "2"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TellVerifier", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<tauxW\>\"", "->", 
      SubscriptBox["\[Tau]", 
       RowBox[{"x", ",", "W"}]]}], ",", 
     RowBox[{"\"\<_cost\>\"", "->", "\"\<scalar\>\""}]}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", 
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<tauxW\>\"", ",", 
       SubscriptBox["\[Tau]", 
        RowBox[{"x", ",", "W"}]], ",", 
       RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}]}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Mu]", "W"], " ", "=", " ", 
   RowBox[{"modq", "[", 
    RowBox[{
     SubscriptBox["\[Alpha]", "W"], " ", "+", " ", 
     RowBox[{
      SubscriptBox["\[Beta]", "W"], "*", "x"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"TellVerifier", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<muW\>\"", "->", 
      SubscriptBox["\[Mu]", "W"]}], ",", 
     RowBox[{"\"\<_cost\>\"", "->", "\"\<scalar\>\""}]}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", " ", 
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<muW\>\"", ",", 
       SubscriptBox["\[Mu]", "W"], ",", 
       RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}]}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["l", "W"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"modq", "[", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["l", 
       RowBox[{"0", ",", "W"}]], "\[RightVector]"], " ", "+", " ", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["l", 
        RowBox[{"1", ",", "W"}]], "\[RightVector]"], "*", "x"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["r", "W"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"modq", "[", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["r", 
       RowBox[{"0", ",", "W"}]], "\[RightVector]"], " ", "+", " ", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["r", 
        RowBox[{"1", ",", "W"}]], "\[RightVector]"], "*", "x"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["t", "W"], "^"], " ", "=", " ", 
   RowBox[{"modq", "[", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["l", "W"], "\[RightVector]"], ".", 
     OverscriptBox[
      SubscriptBox["r", "W"], "\[RightVector]"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"TellVerifier", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<tW\>\"", "->", 
      OverscriptBox[
       SubscriptBox["t", "W"], "^"]}], ",", 
     RowBox[{"\"\<_cost\>\"", "->", "\"\<scalar\>\""}]}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "interactive"}], ",", 
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<tW\>\"", ",", 
       OverscriptBox[
        SubscriptBox["t", "W"], "^"], ",", 
       RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}]}], 
    "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"For", " ", "sanity", " ", "checks"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubsuperscriptBox["P", "W", "+"], " ", "=", " ", 
    RowBox[{
     SubscriptBox["A", "W"], " ", "+", " ", 
     RowBox[{
      SubscriptBox["S", "W"], "*", "x"}], " ", "+", " ", 
     RowBox[{
      OverscriptBox["g", "\[RightVector]"], ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"z", "*", 
         OverscriptBox[
          SuperscriptBox["y", 
           RowBox[{"-", "n"}]], "\[RightVector]"]}], " ", "+", " ", 
        OverscriptBox[
         SuperscriptBox["w", "n"], "\[RightVector]"], " ", "-", " ", 
        RowBox[{
         OverscriptBox[
          SubsuperscriptBox["w", "0", 
           RowBox[{"n", "-", "1"}]], "\[RightVector]"], "*", 
         SuperscriptBox["y", 
          RowBox[{"-", "1"}]]}]}], ")"}]}], " ", "+", " ", 
     RowBox[{
      OverscriptBox[
       SuperscriptBox["h", "*"], "\[RightVector]"], ".", 
      RowBox[{"(", 
       RowBox[{"-", 
        OverscriptBox[
         SubsuperscriptBox["y", "z", 
          RowBox[{"n", "-", "1"}]], "\[RightVector]"]}], ")"}]}]}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Knowledge\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(x, W\)]\) \
:\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \
\!\(\*SubscriptBox[\(\[Sigma]\), \(W\)]\)\!\(\*SuperscriptBox[\(y\), \(n - \
1\)]\) + \!\(\*SubscriptBox[\(\[Tau]\), \(1, W\)]\)x + \!\(\*SubscriptBox[\(\
\[Tau]\), \(2, W\)]\)\!\(\*SuperscriptBox[\(x\), \(2\)]\)\>\"", ",", 
         "\"\<Combined Commitment\\nto Blinding Values\\nof Commitments\\nto \
Coefficiencts of \!\(\*SubscriptBox[\(t\), \(W\)]\)(X)\>\"", ",", 
         "\"\<P,V\>\"", ",", 
         SubscriptBox["\[Tau]", 
          RowBox[{"x", ",", "W"}]]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Mu]\), \(W\)]\) :\!\(\*SubscriptBox[\(\
\[Congruent]\), \(q\)]\) \!\(\*SubscriptBox[\(\[Alpha]\), \(W\)]\) + \
\!\(\*SubscriptBox[\(\[Beta]\), \(W\)]\)x\>\"", ",", 
         "\"\<Combined Commitment\\nto Blinding Values\\nof Vector \
Commitments\\nto \!\(\*OverscriptBox[SubscriptBox[\(a\), \(\[Ellipsis], W\)], \
\(\[RightVector]\)]\) and \!\(\*OverscriptBox[SubscriptBox[\(s\), \(\
\[Ellipsis], W\)], \(\[RightVector]\)]\)\>\"", ",", "\"\<P,V\>\"", ",", 
         SubscriptBox["\[Mu]", "W"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[SubscriptBox[\(l\), \(W\)], \(\[RightVector]\
\)]\) :\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \
\!\(\*OverscriptBox[SubscriptBox[\(l\), \(0, W\)], \(\[RightVector]\)]\) + \!\
\(\*OverscriptBox[SubscriptBox[\(l\), \(1, W\)], \(\[RightVector]\)]\)x = \
\!\(\*OverscriptBox[SubscriptBox[\(a\), \(L, W\)], \(\[RightVector]\)]\) + \
z\!\(\*OverscriptBox[SuperscriptBox[\(y\), \(-n\)], \(\[RightVector]\)]\) + \
\!\(\*OverscriptBox[SuperscriptBox[\(w\), \(n\)], \(\[RightVector]\)]\) - \
\!\(\*OverscriptBox[SubsuperscriptBox[\(w\), \(0\), \(n - 1\)], \(\
\[RightVector]\)]\)\!\(\*SuperscriptBox[\(y\), \(-1\)]\) + \
\!\(\*OverscriptBox[SubscriptBox[\(s\), \(L, W\)], \
\(\[RightVector]\)]\)x\>\"", ",", "\"\<Left side of inner product (W)\>\"", 
         ",", 
         RowBox[{"If", "[", 
          RowBox[{
          "useInnerProductProtocol", ",", "\"\<P\>\"", ",", "\"\<P,V\>\""}], 
          "]"}], ",", 
         OverscriptBox[
          SubscriptBox["l", "W"], "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[SubscriptBox[\(r\), \(W\)], \(\[RightVector]\
\)]\) :\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \
\!\(\*OverscriptBox[SubscriptBox[\(r\), \(0, W\)], \(\[RightVector]\)]\) + \!\
\(\*OverscriptBox[SubscriptBox[\(r\), \(1, W\)], \(\[RightVector]\)]\)x = \
\!\(\*OverscriptBox[SubscriptBox[\(a\), \(R, W\)], \(\[RightVector]\)]\)\
\[SmallCircle]\!\(\*OverscriptBox[SuperscriptBox[\(y\), \(n\)], \(\
\[RightVector]\)]\) - \!\(\*OverscriptBox[SubsuperscriptBox[\(y\), \(z\), \(n \
- 1\)], \(\[RightVector]\)]\) + \!\(\*OverscriptBox[SubscriptBox[\(s\), \(R, \
W\)], \(\[RightVector]\)]\)\[SmallCircle]\!\(\*OverscriptBox[SuperscriptBox[\(\
y\), \(n\)], \(\[RightVector]\)]\)x\>\"", ",", 
         "\"\<Right side of inner product (W)\>\"", ",", 
         RowBox[{"If", "[", 
          RowBox[{
          "useInnerProductProtocol", ",", "\"\<P\>\"", ",", "\"\<P,V\>\""}], 
          "]"}], ",", 
         OverscriptBox[
          SubscriptBox["r", "W"], "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[SubscriptBox[\(t\), \(W\)], \(^\)]\) \
:\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \
<\!\(\*OverscriptBox[SubscriptBox[\(l\), \(W\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(r\), \(W\)], \(\
\[RightVector]\)]\)>\>\"", ",", "\"\<Inner Product\>\"", ",", "\"\<P,V\>\"", 
         ",", 
         OverscriptBox[
          SubscriptBox["t", "W"], "^"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubsuperscriptBox[\(P\), \(W\), \(+\)]\) := \
\!\(\*SubscriptBox[\(A\), \(W\)]\) + \!\(\*SubscriptBox[\(S\), \(W\)]\)x + \
<\!\(\*OverscriptBox[\(g\), \
\(\[RightVector]\)]\),z\!\(\*OverscriptBox[SuperscriptBox[\(y\), \(-n\)], \(\
\[RightVector]\)]\)+\!\(\*OverscriptBox[SuperscriptBox[\(w\), \(n\)], \(\
\[RightVector]\)]\)-\!\(\*OverscriptBox[SubsuperscriptBox[\(w\), \(0\), \(n - \
1\)], \(\[RightVector]\)]\)\!\(\*SuperscriptBox[\(y\), \(-1\)]\)> + \
<\!\(\*OverscriptBox[SuperscriptBox[\(h\), \(*\)], \
\(\[RightVector]\)]\),-\!\(\*OverscriptBox[SubsuperscriptBox[\(y\), \(z\), \
\(n - 1\)], \(\[RightVector]\)]\)>\>\"", ",", 
         "\"\<Combination of\\nProof Conditions\>\"", ",", 
         "\"\<P,V (implicit)\>\"", ",", 
         SubsuperscriptBox["P", "W", "+"]}], "}"}]}], "\[IndentingNewLine]", 
      "}"}], ",", " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left", ",", "Left"}], "}"}], 
       "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{"useInnerProductProtocol", ",", "\n", "\t", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"CommunicationCostGrid", "[", "]"}], "]"}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", "interactive"}], ",", 
       RowBox[{"Print", "[", 
        RowBox[{"FiatShamirGrid", "[", "]"}], "]"}]}], "]"}], ";"}]}], "\n", 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ProcessNewMessages", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"StateMachineSave", "[", "\"\<mk_shuffle_argument\>\"", "]"}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "useInnerProductProtocol"}], ",", "\[IndentingNewLine]", 
    "\t", 
    RowBox[{
     RowBox[{"TellVerifier", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<lvec\>\"", "->", 
         OverscriptBox["l", "\[RightVector]"]}], ",", 
        RowBox[{"\"\<rvec\>\"", "->", 
         OverscriptBox["r", "\[RightVector]"]}], ",", 
        RowBox[{"\"\<_cost\>\"", "->", "\"\<scalar\>\""}]}], "}"}], "]"}], 
     ";", "\n", "\t", 
     RowBox[{"TellVerifier", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<lWvec\>\"", "->", 
         OverscriptBox[
          SubscriptBox["l", "W"], "\[RightVector]"]}], ",", 
        RowBox[{"\"\<rWvec\>\"", "->", 
         OverscriptBox[
          SubscriptBox["r", "W"], "\[RightVector]"]}], ",", 
        RowBox[{"\"\<_cost\>\"", "->", "\"\<scalar\>\""}]}], "}"}], "]"}], 
     ";", "\n", "\t", 
     RowBox[{"Print", "[", 
      RowBox[{"CommunicationCostGrid", "[", "]"}], "]"}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", "interactive"}], ",", 
       RowBox[{"Print", "[", 
        RowBox[{"FiatShamirGrid", "[", "]"}], "]"}]}], "]"}], ";", "\n", "\t", 
     RowBox[{"ProcessNewMessages", "[", "]"}], ";", "\n", "\t", 
     RowBox[{
     "StateMachineSave", "[", "\"\<inner_product_argument_linear\>\"", "]"}], 
     ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.8868385485902596`*^9, 3.8868385520840244`*^9}, {
   3.88683859598147*^9, 3.8868385968037395`*^9}, {3.8868387167260065`*^9, 
   3.8868387263846097`*^9}, {3.886838779867591*^9, 3.8868388191323085`*^9}, {
   3.8868389802765665`*^9, 3.8868390058199124`*^9}, {3.88683907051655*^9, 
   3.886839096499877*^9}, {3.8868391336028953`*^9, 3.8868391636007156`*^9}, {
   3.886839350026564*^9, 3.8868393897226906`*^9}, {3.886839577426756*^9, 
   3.8868396653392596`*^9}, {3.886839802169718*^9, 3.8868398152857475`*^9}, {
   3.886839905595727*^9, 3.8868399065286818`*^9}, {3.886839936674698*^9, 
   3.8868399471195183`*^9}, {3.886840167234583*^9, 3.8868404482305975`*^9}, {
   3.886840793930915*^9, 3.886840794105591*^9}, {3.8868408268067017`*^9, 
   3.8868411602552834`*^9}, {3.8868412331973686`*^9, 
   3.8868413780723906`*^9}, {3.8868414144452133`*^9, 3.886841484160329*^9}, {
   3.886841578981947*^9, 3.8868420366471834`*^9}, {3.8868421621611614`*^9, 
   3.8868422986957617`*^9}, {3.886842356596132*^9, 3.8868424965710783`*^9}, {
   3.8868425885789638`*^9, 3.886842804889021*^9}, {3.8868428753360043`*^9, 
   3.886842893027919*^9}, {3.8868429886915607`*^9, 3.8868432625999093`*^9}, {
   3.886942123628747*^9, 3.886942127525754*^9}, {3.8869422744952374`*^9, 
   3.8869423293623753`*^9}, {3.8869441462623777`*^9, 3.886944156922984*^9}, {
   3.886944247501155*^9, 3.8869442768262424`*^9}, {3.886944379957193*^9, 
   3.8869444455118113`*^9}, {3.8869444855511847`*^9, 
   3.8869445280728045`*^9}, {3.887075313037031*^9, 3.887075350592947*^9}, {
   3.887075398284151*^9, 3.8870754020480814`*^9}, {3.887075447958994*^9, 
   3.8870754734458466`*^9}, {3.8870755154715195`*^9, 
   3.8870755160931416`*^9}, {3.887075791579082*^9, 3.8870758304097147`*^9}, {
   3.8870758758460565`*^9, 3.8870758778790245`*^9}, {3.887075910215042*^9, 
   3.887076095861994*^9}, {3.8870761633308935`*^9, 3.8870763015889473`*^9}, {
   3.8870769578620663`*^9, 3.887076966490738*^9}, {3.8870771974640613`*^9, 
   3.8870772310697017`*^9}, {3.8870773076525965`*^9, 3.887077329896397*^9}, {
   3.8870780793410273`*^9, 3.8870781209205236`*^9}, {3.8870781606445036`*^9, 
   3.8870781964395113`*^9}, {3.8870784493086376`*^9, 
   3.8870784839931746`*^9}, {3.887078573074247*^9, 3.8870785984253073`*^9}, 
   3.887078993886533*^9, {3.8870791046842976`*^9, 3.887079142414995*^9}, {
   3.8870791761257267`*^9, 3.8870791877611217`*^9}, {3.887079468723209*^9, 
   3.887079469710907*^9}, 3.887085026862008*^9, 3.8870870107570844`*^9, {
   3.887093880282618*^9, 3.8870939506224613`*^9}, {3.887094193893561*^9, 
   3.887094198788919*^9}, 3.8870945665391827`*^9, {3.8873959148718233`*^9, 
   3.887395925665842*^9}, {3.8873961067562323`*^9, 3.887396114086217*^9}, {
   3.887490405089939*^9, 3.8874904251859975`*^9}, {3.8874904667223597`*^9, 
   3.887490493354409*^9}, {3.8875535469039383`*^9, 3.8875535722126427`*^9}, {
   3.887646841812909*^9, 3.887646891715878*^9}, {3.8876469251190014`*^9, 
   3.8876469376870995`*^9}, {3.887646985191798*^9, 3.8876469935163965`*^9}, {
   3.8876510494146795`*^9, 3.8876511304721546`*^9}, {3.892472314741907*^9, 
   3.892472315414215*^9}, {3.892473220408732*^9, 3.892473223424836*^9}, {
   3.892473481940021*^9, 3.892473546804638*^9}, {3.8924735811486483`*^9, 
   3.892473921884359*^9}, {3.8924739802779903`*^9, 3.892474210005731*^9}, {
   3.892474241818821*^9, 3.892474248974579*^9}, {3.892474286330757*^9, 
   3.892474338684287*^9}, {3.892474393013568*^9, 3.892474642943574*^9}, {
   3.8924746765682993`*^9, 3.8924749125894403`*^9}, {3.892475109466988*^9, 
   3.892475120886442*^9}, {3.892478134142612*^9, 3.892478200031761*^9}, 
   3.892479557035962*^9, {3.892479659749631*^9, 3.892479659873725*^9}, {
   3.8983253584887896`*^9, 3.898325358518773*^9}, {3.8983283766122084`*^9, 
   3.8983285028908153`*^9}, {3.898328551363192*^9, 3.898328618758684*^9}, {
   3.8983286507926855`*^9, 3.8983287110783844`*^9}, {3.898328770319479*^9, 
   3.8983287839418287`*^9}, {3.899013857935918*^9, 3.8990139269968886`*^9}, {
   3.899013957273224*^9, 3.8990139634879055`*^9}, {3.899014025974428*^9, 
   3.899014072053651*^9}, {3.8990141790790253`*^9, 3.8990144050991864`*^9}, {
   3.8990144352513585`*^9, 3.899014435331319*^9}, {3.8990144876344423`*^9, 
   3.8990144979589605`*^9}, {3.899014797115411*^9, 3.8990148205959883`*^9}, {
   3.8990160661745825`*^9, 3.899016076401038*^9}, {3.8990161272341814`*^9, 
   3.899016345002014*^9}, {3.899016403489394*^9, 3.899016590896266*^9}, {
   3.899024018458002*^9, 3.899024018541978*^9}, {3.8990264367496815`*^9, 
   3.899026449839672*^9}, {3.8990273725431433`*^9, 3.8990273967765803`*^9}, {
   3.8990274487996902`*^9, 3.8990274492152867`*^9}, {3.899265021085191*^9, 
   3.8992650250667477`*^9}, {3.8992650840263557`*^9, 
   3.8992650914116554`*^9}, {3.8992651619990005`*^9, 3.899265186003892*^9}, {
   3.899265436077776*^9, 3.899265445829767*^9}, {3.899307815023281*^9, 
   3.8993078151392097`*^9}, {3.8993849656767097`*^9, 3.899384965764659*^9}, {
   3.9112955519110765`*^9, 3.9112955552710547`*^9}, {3.911402874317703*^9, 
   3.9114029800205326`*^9}},
 CellLabel->
  "In[260]:=",ExpressionUUID->"95bf1c3d-91db-408a-b36e-3e5985bdec69"],

Cell[CellGroupData[{

Cell["Verifier\[CloseCurlyQuote]s Last Checks Before the Inner Product \
Protocol", "Subsubsection",
 CellChangeTimes->{{3.887076468356559*^9, 3.887076471963208*^9}, {
  3.887082878650468*^9, 3.887082905141407*^9}, {3.9112941958381467`*^9, 
  3.9112941961823225`*^9}},ExpressionUUID->"6a7e5e8e-6c34-491a-9d5f-\
caf616dcd703"],

Cell[TextData[{
 "Performing the checks that V will do to confirm P\[CloseCurlyQuote]s proof \
convinces V. Checks for PR argument are postfixed with \
\[OpenCurlyDoubleQuote]W\[CloseCurlyDoubleQuote].\nIn all cases:\n1) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      OverscriptBox["t", "^"], "g"}], "+", 
     RowBox[{
      SubscriptBox["\[Tau]", "x"], "h"}]}], 
    OverscriptBox["=", "?"], 
    RowBox[{
     RowBox[{
      SuperscriptBox["z", "3"], 
      OverscriptBox["k", "_"], "xV"}], "+", 
     RowBox[{
      SuperscriptBox["y", 
       RowBox[{"n", "-", "1"}]], 
      OverscriptBox["k", "^"], "xW"}], "+", 
     RowBox[{
      SubscriptBox["\[Delta]", "yz"], "xg"}], "+", 
     RowBox[{
      SuperscriptBox["x", "3"], 
      SubscriptBox["T", "3"]}], "+", 
     RowBox[{
      SuperscriptBox["x", "5"], 
      SubscriptBox["T", "5"]}]}]}], TraditionalForm]],ExpressionUUID->
  "08274cb2-d9e0-4727-b8f9-b5536b35f059"],
 "\n1W) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      OverscriptBox[
       SubscriptBox["t", "W"], "^"], "g"}], "+", 
     RowBox[{
      SubscriptBox["\[Tau]", 
       RowBox[{"x", ",", "W"}]], "h"}]}], 
    OverscriptBox["=", "?"], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", "wy", ")"}], 
         RowBox[{"n", "-", "1"}]], "+", "nz"}], ")"}], "V"}], "+", 
     RowBox[{
      SuperscriptBox["y", 
       RowBox[{"n", "-", "1"}]], "W"}], "+", 
     RowBox[{
      SubscriptBox["\[Delta]", "yzw"], "g"}], "+", 
     SubscriptBox["xT", 
      RowBox[{"1", ",", "W"}]], "+", 
     RowBox[{
      SuperscriptBox["x", "2"], 
      SubscriptBox["T", "2"]}]}]}], TraditionalForm]],ExpressionUUID->
  "60c7ee32-a4a2-4326-8a83-de815e724758"],
 "\n",
 StyleBox["Without the Inner Product Protocol",
  FontWeight->"Bold"],
 "\n2) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["P", 
      RowBox[{"{", 
       RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}], "+"], 
     OverscriptBox["=", "?"], 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[Mu]", 
         RowBox[{"{", 
          RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]], "h"}], "+"}], 
      "<", 
      OverscriptBox["g", "\[RightVector]"]}]}], ",", 
    RowBox[{
     OverscriptBox["l", "\[RightVector]"], ">", 
     RowBox[{"+", 
      RowBox[{"<", 
       OverscriptBox[
        SuperscriptBox[
         RowBox[{"{", 
          RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}], "*"], 
        "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     OverscriptBox["r", "\[RightVector]"], ">"}]}], TraditionalForm]],
  ExpressionUUID->"3d2cf7ed-1981-4802-a950-55387be9d39b"],
 "\n3) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox["t", "^"], 
     OverscriptBox["=", "?"], 
     RowBox[{"<", 
      OverscriptBox["l", "\[RightVector]"]}]}], ",", 
    RowBox[{
     OverscriptBox["r", "\[RightVector]"], ">"}]}], TraditionalForm]],
  ExpressionUUID->"d7797645-179c-4ef2-8a2e-f772d81a9fe0"],
 "\n2W) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["P", "W", "+"], 
     OverscriptBox["=", "?"], 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[Mu]", "W"], "h"}], "+"}], "<", 
      OverscriptBox["g", "\[RightVector]"]}]}], ",", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["l", "W"], "\[RightVector]"], ">", 
     RowBox[{"+", 
      RowBox[{"<", 
       OverscriptBox[
        SuperscriptBox[
         RowBox[{"{", "h", "}"}], "*"], "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["r", "W"], "\[RightVector]"], ">"}]}], TraditionalForm]],
  ExpressionUUID->"0ffcce6f-3313-40e1-8e89-97ffd0951e4a"],
 "\n3W) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["t", "W"], "^"], 
     OverscriptBox["=", "?"], 
     RowBox[{"<", 
      OverscriptBox[
       SubscriptBox["l", "W"], "\[RightVector]"]}]}], ",", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["r", "W"], "\[RightVector]"], ">"}]}], TraditionalForm]],
  ExpressionUUID->"a8f6bcc2-f7a1-4798-9688-517b6c7889d4"],
 "\nWhen using the Inner Product Protocol 2), 3), 2W) and 3W) are proved \
indirectly."
}], "Text",
 CellChangeTimes->{{3.887076489221315*^9, 3.8870765464503202`*^9}, {
   3.887076578203636*^9, 3.8870767036528645`*^9}, {3.8870767405318537`*^9, 
   3.887076865476065*^9}, {3.887076976994685*^9, 3.8870769777583737`*^9}, {
   3.887080009100341*^9, 3.8870800686180673`*^9}, {3.8870805162739058`*^9, 
   3.887080867217811*^9}, {3.8870809654688644`*^9, 3.887081094374797*^9}, {
   3.887081420046754*^9, 3.887081511044706*^9}, {3.887081576142717*^9, 
   3.887081611797072*^9}, {3.8870821478960047`*^9, 3.8870821521485453`*^9}, {
   3.8870832769831853`*^9, 3.8870832775599947`*^9}, {3.8870834412471495`*^9, 
   3.8870834486890554`*^9}, {3.8870840512539654`*^9, 
   3.8870841032921815`*^9}, {3.892479702555585*^9, 3.8924797273745623`*^9}, {
   3.8990148553845367`*^9, 3.8990150394007416`*^9}, {3.89901507281316*^9, 
   3.899015170929617*^9}, {3.899291031364156*^9, 3.89929109151169*^9}, 
   3.9112944209919367`*^9, {3.911404607924942*^9, 
   3.9114046141722574`*^9}},ExpressionUUID->"93b5849b-24aa-4abb-912b-\
7cda6136fd55"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"StateMachineRestore", "[", 
    RowBox[{"If", "[", 
     RowBox[{
     "useInnerProductProtocol", ",", "\"\<mk_shuffle_argument\>\"", ",", 
      "\"\<inner_product_argument_linear\>\""}], "]"}], "]"}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"1", ")"}], " ", 
      OverscriptBox["t", "^"], "g"}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["\[Tau]", "x"], "h"}]}], " ", 
    OverscriptBox["=", "?"], " ", 
    RowBox[{
     RowBox[{
      SuperscriptBox["z", "3"], 
      OverscriptBox["k", "_"], "xV"}], " ", "+", " ", 
     RowBox[{
      SuperscriptBox["y", 
       RowBox[{"n", "-", "1"}]], 
      OverscriptBox["k", "^"], "xW"}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["\[Delta]", "yz"], "xg"}], " ", "+", " ", 
     RowBox[{
      SuperscriptBox["x", "3"], 
      SubscriptBox["T", "3"]}], " ", "+", " ", 
     RowBox[{
      SuperscriptBox["x", "5"], 
      SubscriptBox["T", "5"]}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"selfCheck1", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"g", "*", 
       OverscriptBox["t", "^"]}], "+", 
      RowBox[{"h", "*", 
       SubscriptBox["\[Tau]", "x"]}]}], "==", 
     RowBox[{
      RowBox[{"V", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"z", "^", "3"}], "*", 
         OverscriptBox["k", "_"], "*", "x"}], ")"}]}], " ", "+", " ", 
      RowBox[{"W", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"powermodq", "[", 
          RowBox[{"y", ",", 
           RowBox[{"n", "-", "1"}]}], "]"}], "*", 
         OverscriptBox["k", "^"], "*", "x"}], ")"}]}], " ", "+", " ", 
      RowBox[{"g", "*", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Delta]", "yz"], "*", "x"}], ")"}]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["T", "3"], "*", 
       RowBox[{"x", "^", "3"}]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["T", "5"], "*", 
       RowBox[{"x", "^", "5"}]}]}]}], ")"}]}], ";"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", "\n", 
      "\t", 
      RowBox[{"{", 
       RowBox[{
       "\"\<g\!\(\*OverscriptBox[\(t\), \(^\)]\) + \!\(\*SubscriptBox[\(h\
\[Tau]\), \(x\)]\)\>\"", ",", "\"\<\>\"", ",", 
        RowBox[{
         RowBox[{"g", "*", 
          OverscriptBox["t", "^"]}], " ", "+", " ", 
         RowBox[{"h", "*", 
          SubscriptBox["\[Tau]", "x"]}]}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*OverscriptBox[\(=\), \(?\)]\) \!\(\*SuperscriptBox[\(z\), \
\(3\)]\)\!\(\*OverscriptBox[\(k\), \(_\)]\)xV + \!\(\*SuperscriptBox[\(y\), \
\(n - 1\)]\)\!\(\*OverscriptBox[\(k\), \(^\)]\)xW + \!\(\*SubscriptBox[\(\
\[Delta]\), \(yz\)]\)xg + \!\(\*SuperscriptBox[\(x\), \
\(3\)]\)\!\(\*SubscriptBox[\(T\), \(3\)]\) + \!\(\*SuperscriptBox[\(x\), \
\(5\)]\)\!\(\*SubscriptBox[\(T\), \(5\)]\)\>\"", ",", "\"\<V's Check\>\"", 
        ",", "selfCheck1"}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", " ", 
    
    RowBox[{"Alignment", "->", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Left", ",", "Left"}], "}"}], "}"}]}], ",", 
    RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "selfCheck1"}], ",", " ", 
     RowBox[{
     "Error", "[", 
      "\"\<Assertion failure on self-check 1 (g\!\(\*OverscriptBox[\(t\), \(^\
\)]\) + \!\(\*SubscriptBox[\(h\[Tau]\), \(x\)]\) \!\(\*OverscriptBox[\(=\), \
\(?\)]\) ...)\>\"", "]"}]}], "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"2", ")"}], " ", 
      SubsuperscriptBox["P", 
       RowBox[{"{", 
        RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}], "+"]}], " ", 
     OverscriptBox["=", "?"], " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["h\[Mu]", 
        RowBox[{"{", 
         RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]], " ", "+"}], " ",
       "<", 
      OverscriptBox["g", "\[RightVector]"]}]}], ",", 
    RowBox[{
     OverscriptBox["l", "\[RightVector]"], ">", " ", 
     RowBox[{"+", " ", 
      RowBox[{"<", 
       OverscriptBox[
        SuperscriptBox[
         RowBox[{"{", 
          RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}], "*"], 
        "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     OverscriptBox["r", "\[RightVector]"], ">"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"selfCheck2h", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{
     SubsuperscriptBox["P", "h", "+"], "==", 
     RowBox[{
      RowBox[{"h", "*", 
       SubscriptBox["\[Mu]", "h"]}], "+", 
      RowBox[{
       OverscriptBox["g", "\[RightVector]"], ".", 
       OverscriptBox["l", "\[RightVector]"]}], "+", 
      RowBox[{
       OverscriptBox[
        SuperscriptBox["h", "*"], "\[RightVector]"], ".", 
       OverscriptBox["r", "\[RightVector]"]}]}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubsuperscriptBox[\(P\), \(h\), \(+\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) \!\(\*SubscriptBox[\(A\), \(L\)]\) + \!\(\
\*SubscriptBox[\(A\), \(R, h\)]\)x + \!\(\*SubscriptBox[\(S\), \
\(L\)]\)\!\(\*SuperscriptBox[\(x\), \(2\)]\) + \!\(\*SubscriptBox[\(S\), \(R, \
h\)]\)\!\(\*SuperscriptBox[\(x\), \(3\)]\) + <\!\(\*OverscriptBox[\(g\), \(\
\[RightVector]\)]\),\!\(\*SuperscriptBox[\(z\), \
\(3\)]\)\!\(\*OverscriptBox[SuperscriptBox[\(y\), \(-n\)], \
\(\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SuperscriptBox[\(h\), \(*\)], \
\(\[RightVector]\)]\),-x\!\(\*OverscriptBox[SubsuperscriptBox[\(y\), \(z\), \
\(n - 1\)], \(\[RightVector]\)]\)>\>\"", ",", 
         "\"\<Definition of \!\(\*SubsuperscriptBox[\(P\), \(h\), \
\(+\)]\)\>\"", ",", 
         RowBox[{
          SubsuperscriptBox["P", "h", "+"], " ", "==", " ", 
          RowBox[{
           SubscriptBox["A", "L"], " ", "+", " ", 
           RowBox[{
            SubscriptBox["A", 
             RowBox[{"R", ",", "h"}]], "*", "x"}], " ", "+", " ", 
           RowBox[{
            SubscriptBox["S", "L"], "*", 
            RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
           RowBox[{
            SubscriptBox["S", 
             RowBox[{"R", ",", "h"}]], "*", 
            RowBox[{"x", "^", "3"}]}], " ", "+", " ", 
           RowBox[{
            OverscriptBox["g", "\[RightVector]"], ".", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"z", "^", "3"}], "*", 
              OverscriptBox[
               SuperscriptBox["y", 
                RowBox[{"-", "n"}]], "\[RightVector]"]}], ")"}]}], " ", "+", 
           " ", 
           RowBox[{
            OverscriptBox[
             SuperscriptBox["h", "*"], "\[RightVector]"], ".", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "*", 
              OverscriptBox[
               SubsuperscriptBox["y", "z", 
                RowBox[{"n", "-", "1"}]], "\[RightVector]"]}], ")"}]}]}]}]}], 
        "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(=\), \(?\)]\) \
\!\(\*SubscriptBox[\(h\[Mu]\), \(h\)]\) + <\!\(\*OverscriptBox[\(g\), \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[\(l\), \(\[RightVector]\)]\)> + <\!\(\
\*OverscriptBox[SuperscriptBox[\(h\), \(*\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(r\), \(\[RightVector]\)]\)>\>\"", 
         ",", "\"\<V's Check\\nWithout Inner\\nProduct Protocol\>\"", ",", 
         "selfCheck2h"}], "}"}]}], "\n", "}"}], ",", " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left"}], "}"}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "selfCheck2h"}], ",", " ", 
    RowBox[{
    "Error", "[", 
     "\"\<Assertion failure on self-check 2h (\!\(\*SubsuperscriptBox[\(P\), \
\(h\), \(+\)]\) \!\(\*OverscriptBox[\(=\), \(?\)]\) \!\(\*SubscriptBox[\(h\
\[Mu]\), \(h\)]\) + <\!\(\*OverscriptBox[\(g\), \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(l\), \(\[RightVector]\)]\)> + <\!\
\(\*OverscriptBox[SuperscriptBox[\(h\), \(*\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(r\), \(\[RightVector]\)]\)>)\>\"",
      "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"selfCheck2b", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{
     SubsuperscriptBox["P", "b", "+"], "==", 
     RowBox[{
      RowBox[{"h", "*", 
       SubscriptBox["\[Mu]", "b"]}], "+", 
      RowBox[{
       OverscriptBox["g", "\[RightVector]"], ".", 
       OverscriptBox["l", "\[RightVector]"]}], "+", 
      RowBox[{
       OverscriptBox[
        SuperscriptBox["b", "*"], "\[RightVector]"], ".", 
       OverscriptBox["r", "\[RightVector]"]}]}]}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubsuperscriptBox[\(P\), \(b\), \(+\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) \!\(\*SubscriptBox[\(A\), \(L\)]\) + \!\(\
\*SubscriptBox[\(A\), \(R, b\)]\)x + \!\(\*SubscriptBox[\(S\), \
\(L\)]\)\!\(\*SuperscriptBox[\(x\), \(2\)]\) + \!\(\*SubscriptBox[\(S\), \(R, \
b\)]\)\!\(\*SuperscriptBox[\(x\), \(3\)]\) + <\!\(\*OverscriptBox[\(g\), \(\
\[RightVector]\)]\),\!\(\*SuperscriptBox[\(z\), \
\(3\)]\)\!\(\*OverscriptBox[SuperscriptBox[\(y\), \(-n\)], \
\(\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SuperscriptBox[\(b\), \(*\)], \
\(\[RightVector]\)]\),-x\!\(\*OverscriptBox[SubsuperscriptBox[\(y\), \(z\), \
\(n - 1\)], \(\[RightVector]\)]\)>\>\"", ",", 
         "\"\<Definition of \!\(\*SubsuperscriptBox[\(P\), \(b\), \
\(+\)]\)\>\"", ",", 
         RowBox[{
          SubsuperscriptBox["P", "b", "+"], " ", "==", " ", 
          RowBox[{
           SubscriptBox["A", "L"], " ", "+", " ", 
           RowBox[{
            SubscriptBox["A", 
             RowBox[{"R", ",", "b"}]], "*", "x"}], " ", "+", " ", 
           RowBox[{
            SubscriptBox["S", "L"], "*", 
            RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
           RowBox[{
            SubscriptBox["S", 
             RowBox[{"R", ",", "b"}]], "*", 
            RowBox[{"x", "^", "3"}]}], " ", "+", " ", 
           RowBox[{
            OverscriptBox["g", "\[RightVector]"], ".", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"z", "^", "3"}], "*", 
              OverscriptBox[
               SuperscriptBox["y", 
                RowBox[{"-", "n"}]], "\[RightVector]"]}], ")"}]}], " ", "+", 
           " ", 
           RowBox[{
            OverscriptBox[
             SuperscriptBox["b", "*"], "\[RightVector]"], ".", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "*", 
              OverscriptBox[
               SubsuperscriptBox["y", "z", 
                RowBox[{"n", "-", "1"}]], "\[RightVector]"]}], ")"}]}]}]}]}], 
        "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(=\), \(?\)]\) \
\!\(\*SubscriptBox[\(h\[Mu]\), \(b\)]\) + <\!\(\*OverscriptBox[\(g\), \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[\(l\), \(\[RightVector]\)]\)> + <\!\(\
\*OverscriptBox[SuperscriptBox[\(b\), \(*\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(r\), \(\[RightVector]\)]\)>\>\"", 
         ",", "\"\<V's Check\\nWithout Inner\\nProduct Protocol\>\"", ",", 
         "selfCheck2b"}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left"}], "}"}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "selfCheck2b"}], ",", " ", 
    RowBox[{
    "Error", "[", 
     "\"\<Assertion failure on self-check 2b (\!\(\*SubsuperscriptBox[\(P\), \
\(b\), \(+\)]\) \!\(\*OverscriptBox[\(=\), \(?\)]\) \!\(\*SubscriptBox[\(h\
\[Mu]\), \(b\)]\) + <\!\(\*OverscriptBox[\(g\), \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(l\), \(\[RightVector]\)]\)> + <\!\
\(\*OverscriptBox[SuperscriptBox[\(b\), \(*\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(r\), \(\[RightVector]\)]\)>)\>\"",
      "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"selfCheck2c", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{
     SubsuperscriptBox["P", "c", "+"], "==", 
     RowBox[{
      RowBox[{"h", "*", 
       SubscriptBox["\[Mu]", "c"]}], "+", 
      RowBox[{
       OverscriptBox["g", "\[RightVector]"], ".", 
       OverscriptBox["l", "\[RightVector]"]}], "+", 
      RowBox[{
       OverscriptBox[
        SuperscriptBox["c", "*"], "\[RightVector]"], ".", 
       OverscriptBox["r", "\[RightVector]"]}]}]}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubsuperscriptBox[\(P\), \(c\), \(+\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) \!\(\*SubscriptBox[\(A\), \(L\)]\) + \!\(\
\*SubscriptBox[\(A\), \(R, c\)]\)x + \!\(\*SubscriptBox[\(S\), \
\(L\)]\)\!\(\*SuperscriptBox[\(x\), \(2\)]\) + \!\(\*SubscriptBox[\(S\), \(R, \
c\)]\)\!\(\*SuperscriptBox[\(x\), \(3\)]\) + <\!\(\*OverscriptBox[\(g\), \(\
\[RightVector]\)]\),\!\(\*SuperscriptBox[\(z\), \
\(3\)]\)\!\(\*OverscriptBox[SuperscriptBox[\(y\), \(-n\)], \
\(\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SuperscriptBox[\(c\), \(*\)], \
\(\[RightVector]\)]\),-x\!\(\*OverscriptBox[SubsuperscriptBox[\(y\), \(z\), \
\(n - 1\)], \(\[RightVector]\)]\)>\>\"", ",", 
         "\"\<Definition of \!\(\*SubsuperscriptBox[\(P\), \(c\), \
\(+\)]\)\>\"", ",", 
         RowBox[{
          SubsuperscriptBox["P", "c", "+"], " ", "==", " ", 
          RowBox[{
           SubscriptBox["A", "L"], " ", "+", " ", 
           RowBox[{
            SubscriptBox["A", 
             RowBox[{"R", ",", "c"}]], "*", "x"}], " ", "+", " ", 
           RowBox[{
            SubscriptBox["S", "L"], "*", 
            RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
           RowBox[{
            SubscriptBox["S", 
             RowBox[{"R", ",", "c"}]], "*", 
            RowBox[{"x", "^", "3"}]}], " ", "+", " ", 
           RowBox[{
            OverscriptBox["g", "\[RightVector]"], ".", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"z", "^", "3"}], "*", 
              OverscriptBox[
               SuperscriptBox["y", 
                RowBox[{"-", "n"}]], "\[RightVector]"]}], ")"}]}], " ", "+", 
           " ", 
           RowBox[{
            OverscriptBox[
             SuperscriptBox["c", "*"], "\[RightVector]"], ".", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "*", 
              OverscriptBox[
               SubsuperscriptBox["y", "z", 
                RowBox[{"n", "-", "1"}]], "\[RightVector]"]}], ")"}]}]}]}]}], 
        "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(=\), \(?\)]\) \
\!\(\*SubscriptBox[\(h\[Mu]\), \(c\)]\) + <\!\(\*OverscriptBox[\(g\), \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[\(l\), \(\[RightVector]\)]\)> + <\!\(\
\*OverscriptBox[SuperscriptBox[\(c\), \(*\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(r\), \(\[RightVector]\)]\)>\>\"", 
         ",", "\"\<V's Check\\nWithout Inner\\nProduct Protocol\>\"", ",", 
         "selfCheck2c"}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left"}], "}"}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "selfCheck2c"}], ",", " ", 
    RowBox[{
    "Error", "[", 
     "\"\<Assertion failure on self-check 2c (\!\(\*SubsuperscriptBox[\(P\), \
\(c\), \(+\)]\) \!\(\*OverscriptBox[\(=\), \(?\)]\) \!\(\*SubscriptBox[\(h\
\[Mu]\), \(c\)]\) + <\!\(\*OverscriptBox[\(g\), \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(l\), \(\[RightVector]\)]\)> + <\!\
\(\*OverscriptBox[SuperscriptBox[\(c\), \(*\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(r\), \(\[RightVector]\)]\)>)\>\"",
      "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"selfCheck2d", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{
     SubsuperscriptBox["P", "d", "+"], "==", 
     RowBox[{
      RowBox[{"h", "*", 
       SubscriptBox["\[Mu]", "d"]}], "+", 
      RowBox[{
       OverscriptBox["g", "\[RightVector]"], ".", 
       OverscriptBox["l", "\[RightVector]"]}], "+", 
      RowBox[{
       OverscriptBox[
        SuperscriptBox["d", "*"], "\[RightVector]"], ".", 
       OverscriptBox["r", "\[RightVector]"]}]}]}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubsuperscriptBox[\(P\), \(d\), \(+\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) \!\(\*SubscriptBox[\(A\), \(L\)]\) + \!\(\
\*SubscriptBox[\(A\), \(R, d\)]\)x + \!\(\*SubscriptBox[\(S\), \
\(L\)]\)\!\(\*SuperscriptBox[\(x\), \(2\)]\) + \!\(\*SubscriptBox[\(S\), \(R, \
d\)]\)\!\(\*SuperscriptBox[\(x\), \(3\)]\) + <\!\(\*OverscriptBox[\(g\), \(\
\[RightVector]\)]\),\!\(\*SuperscriptBox[\(z\), \
\(3\)]\)\!\(\*OverscriptBox[SuperscriptBox[\(y\), \(-n\)], \
\(\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SuperscriptBox[\(d\), \(*\)], \
\(\[RightVector]\)]\),-x\!\(\*OverscriptBox[SubsuperscriptBox[\(y\), \(z\), \
\(n - 1\)], \(\[RightVector]\)]\)>\>\"", ",", 
         "\"\<Definition of \!\(\*SubsuperscriptBox[\(P\), \(d\), \
\(+\)]\)\>\"", ",", 
         RowBox[{
          SubsuperscriptBox["P", "d", "+"], " ", "==", " ", 
          RowBox[{
           SubscriptBox["A", "L"], " ", "+", " ", 
           RowBox[{
            SubscriptBox["A", 
             RowBox[{"R", ",", "d"}]], "*", "x"}], " ", "+", " ", 
           RowBox[{
            SubscriptBox["S", "L"], "*", 
            RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
           RowBox[{
            SubscriptBox["S", 
             RowBox[{"R", ",", "d"}]], "*", 
            RowBox[{"x", "^", "3"}]}], " ", "+", " ", 
           RowBox[{
            OverscriptBox["g", "\[RightVector]"], ".", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"z", "^", "3"}], "*", 
              OverscriptBox[
               SuperscriptBox["y", 
                RowBox[{"-", "n"}]], "\[RightVector]"]}], ")"}]}], " ", "+", 
           " ", 
           RowBox[{
            OverscriptBox[
             SuperscriptBox["d", "*"], "\[RightVector]"], ".", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "*", 
              OverscriptBox[
               SubsuperscriptBox["y", "z", 
                RowBox[{"n", "-", "1"}]], "\[RightVector]"]}], ")"}]}]}]}]}], 
        "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(=\), \(?\)]\) \
\!\(\*SubscriptBox[\(h\[Mu]\), \(d\)]\) + <\!\(\*OverscriptBox[\(g\), \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[\(l\), \(\[RightVector]\)]\)> + <\!\(\
\*OverscriptBox[SuperscriptBox[\(d\), \(*\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(r\), \(\[RightVector]\)]\)>\>\"", 
         ",", "\"\<V's Check\\nWithout Inner\\nProduct Protocol\>\"", ",", 
         "selfCheck2d"}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left"}], "}"}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "selfCheck2d"}], ",", " ", 
     RowBox[{
     "Error", "[", 
      "\"\<Assertion failure on self-check 2d (\!\(\*SubsuperscriptBox[\(P\), \
\(d\), \(+\)]\) \!\(\*OverscriptBox[\(=\), \(?\)]\) \!\(\*SubscriptBox[\(h\
\[Mu]\), \(d\)]\) + <\!\(\*OverscriptBox[\(g\), \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(l\), \(\[RightVector]\)]\)> + <\!\
\(\*OverscriptBox[SuperscriptBox[\(d\), \(*\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(r\), \(\[RightVector]\)]\)>)\>\"",
       "]"}]}], "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"3", ")"}], " ", 
      OverscriptBox["t", "^"]}], " ", 
     SubscriptBox[
      OverscriptBox["\[Congruent]", "?"], "q"], " ", "<", 
     OverscriptBox["l", "\[RightVector]"]}], ",", 
    RowBox[{
     OverscriptBox["r", "\[RightVector]"], ">"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"selfCheck3", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{
     OverscriptBox["t", "^"], " ", "==", " ", 
     RowBox[{"modq", "[", 
      RowBox[{
       OverscriptBox["l", "\[RightVector]"], ".", 
       OverscriptBox["r", "\[RightVector]"]}], "]"}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(t\), \(^\)]\) \
\!\(\*SubscriptBox[OverscriptBox[\(\[Congruent]\), \(?\)], \(q\)]\) \
<\!\(\*OverscriptBox[\(l\), \(\[RightVector]\)]\),\!\(\*OverscriptBox[\(r\), \
\(\[RightVector]\)]\)>\>\"", ",", 
         "\"\<V's Check\\nWithout Inner\\nProduct Protocol\>\"", ",", 
         "selfCheck3"}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left"}], "}"}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "selfCheck3"}], ",", " ", 
     RowBox[{
     "Error", "[", 
      "\"\<Assertion failure on self-check 3 (\!\(\*OverscriptBox[\(t\), \
\(^\)]\) \!\(\*SubscriptBox[OverscriptBox[\(\[Congruent]\), \(?\)], \(q\)]\) \
<\!\(\*OverscriptBox[\(l\), \(\[RightVector]\)]\),\!\(\*OverscriptBox[\(r\), \
\(\[RightVector]\)]\)>)\>\"", "]"}]}], "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"1", "W"}], ")"}], " ", 
      OverscriptBox[
       SubscriptBox["t", "W"], "^"], "g"}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["\[Tau]", 
       RowBox[{"x", ",", "W"}]], "h"}]}], " ", 
    OverscriptBox["=", "?"], " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", "wy", ")"}], 
         RowBox[{"n", "-", "1"}]], "+", "nz"}], ")"}], "V"}], " ", "+", " ", 
     RowBox[{
      SuperscriptBox["y", 
       RowBox[{"n", "-", "1"}]], "W"}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["\[Delta]", "yzw"], "g"}], " ", "+", " ", 
     SubscriptBox["xT", 
      RowBox[{"1", ",", "W"}]], " ", "+", " ", 
     RowBox[{
      SuperscriptBox["x", "2"], 
      SubscriptBox["T", 
       RowBox[{"2", ",", "W"}]]}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"selfCheck1W", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"g", "*", 
       OverscriptBox[
        SubscriptBox["t", "W"], "^"]}], " ", "+", " ", 
      RowBox[{"h", "*", 
       SubscriptBox["\[Tau]", 
        RowBox[{"x", ",", "W"}]]}]}], " ", "==", " ", 
     RowBox[{
      RowBox[{"V", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"powermodq", "[", 
          RowBox[{
           RowBox[{"w", "*", "y"}], ",", 
           RowBox[{"n", "-", "1"}]}], "]"}], "+", 
         RowBox[{"n", "*", "z"}]}], ")"}]}], " ", "+", " ", 
      RowBox[{"W", "*", 
       RowBox[{"powermodq", "[", 
        RowBox[{"y", ",", 
         RowBox[{"n", "-", "1"}]}], "]"}]}], " ", "+", " ", 
      RowBox[{"g", "*", 
       SubscriptBox["\[Delta]", "yzw"]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["T", 
        RowBox[{"1", ",", "W"}]], "*", "x"}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["T", 
        RowBox[{"2", ",", "W"}]], "*", 
       RowBox[{"x", "^", "2"}]}]}]}], ")"}]}], ";"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", "\n", 
      "\t", 
      RowBox[{"{", 
       RowBox[{
       "\"\<g\!\(\*OverscriptBox[SubscriptBox[\(t\), \(W\)], \(^\)]\) + \
\!\(\*SubscriptBox[\(h\[Tau]\), \(x, W\)]\)\>\"", ",", "\"\<\>\"", ",", 
        RowBox[{
         RowBox[{"g", "*", 
          OverscriptBox[
           SubscriptBox["t", "W"], "^"]}], " ", "+", " ", 
         RowBox[{"h", "*", 
          SubscriptBox["\[Tau]", 
           RowBox[{"x", ",", "W"}]]}]}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*OverscriptBox[\(=\), \(?\)]\) \
(wy\!\(\*SuperscriptBox[\()\), \(n - 1\)]\)+nz)V + \
\!\(\*SuperscriptBox[\(y\), \(n - 1\)]\)W + \!\(\*SubscriptBox[\(\[Delta]\), \
\(yzw\)]\)g + \!\(\*SubscriptBox[\(xT\), \(1, W\)]\) + \
\!\(\*SuperscriptBox[\(x\), \(2\)]\)\!\(\*SubscriptBox[\(T\), \(2, \
W\)]\)\>\"", ",", "\"\<V's Check\>\"", ",", "selfCheck1W"}], "}"}]}], 
     "\[IndentingNewLine]", "}"}], ",", " ", 
    RowBox[{"Alignment", "->", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Left", ",", "Left"}], "}"}], "}"}]}], ",", 
    RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "selfCheck1W"}], ",", " ", 
     RowBox[{
     "Error", "[", 
      "\"\<Assertion failure on self-check 1W \
(g\!\(\*OverscriptBox[SubscriptBox[\(t\), \(W\)], \(^\)]\) + \
\!\(\*SubscriptBox[\(h\[Tau]\), \(x, W\)]\) \!\(\*OverscriptBox[\(=\), \(?\)]\
\) ...)\>\"", "]"}]}], "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"2", "W"}], ")"}], " ", 
      SubsuperscriptBox["P", "W", "+"]}], " ", 
     OverscriptBox["=", "?"], " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["h\[Mu]", "W"], " ", "+"}], " ", "<", 
      OverscriptBox["g", "\[RightVector]"]}]}], ",", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["l", "W"], "\[RightVector]"], ">", " ", 
     RowBox[{"+", " ", 
      RowBox[{"<", 
       OverscriptBox[
        SuperscriptBox["h", "*"], "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["r", "W"], "\[RightVector]"], ">"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"selfCheck2W", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{
     SubsuperscriptBox["P", "W", "+"], " ", "==", " ", 
     RowBox[{
      RowBox[{"h", "*", 
       SubscriptBox["\[Mu]", "W"]}], " ", "+", " ", 
      RowBox[{
       OverscriptBox["g", "\[RightVector]"], ".", 
       OverscriptBox[
        SubscriptBox["l", "W"], "\[RightVector]"]}], " ", "+", " ", 
      RowBox[{
       OverscriptBox[
        SuperscriptBox["h", "*"], "\[RightVector]"], ".", 
       OverscriptBox[
        SubscriptBox["r", "W"], "\[RightVector]"]}]}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubsuperscriptBox[\(P\), \(W\), \(+\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) \!\(\*SubscriptBox[\(A\), \(W\)]\) + \!\(\
\*SubscriptBox[\(S\), \(W\)]\)x + <\!\(\*OverscriptBox[\(g\), \
\(\[RightVector]\)]\),z\!\(\*OverscriptBox[SuperscriptBox[\(y\), \(-n\)], \(\
\[RightVector]\)]\)+\!\(\*OverscriptBox[SuperscriptBox[\(w\), \(n\)], \(\
\[RightVector]\)]\)-\!\(\*OverscriptBox[SubsuperscriptBox[\(w\), \(0\), \(n - \
1\)], \(\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SuperscriptBox[\(h\), \(*\
\)], \(\[RightVector]\)]\),-\!\(\*OverscriptBox[SubsuperscriptBox[\(y\), \
\(z\), \(n - 1\)], \(\[RightVector]\)]\)>\>\"", ",", 
         "\"\<Definition of \!\(\*SubsuperscriptBox[\(P\), \(W\), \
\(+\)]\)\>\"", ",", 
         RowBox[{
          SubsuperscriptBox["P", "W", "+"], " ", "==", " ", 
          RowBox[{
           SubscriptBox["A", "W"], " ", "+", " ", 
           RowBox[{
            SubscriptBox["S", "W"], "*", "x"}], " ", "+", " ", 
           RowBox[{
            OverscriptBox["g", "\[RightVector]"], ".", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"z", "*", 
               OverscriptBox[
                SuperscriptBox["y", 
                 RowBox[{"-", "n"}]], "\[RightVector]"]}], " ", "+", " ", 
              OverscriptBox[
               SuperscriptBox["w", "n"], "\[RightVector]"], " ", "-", " ", 
              RowBox[{
               OverscriptBox[
                SubsuperscriptBox["w", "0", 
                 RowBox[{"n", "-", "1"}]], "\[RightVector]"], "*", 
               SuperscriptBox["y", 
                RowBox[{"-", "1"}]]}]}], ")"}]}], " ", "+", " ", 
           RowBox[{
            OverscriptBox[
             SuperscriptBox["h", "*"], "\[RightVector]"], ".", 
            RowBox[{"(", 
             RowBox[{"-", 
              OverscriptBox[
               SubsuperscriptBox["y", "z", 
                RowBox[{"n", "-", "1"}]], "\[RightVector]"]}], ")"}]}]}]}]}], 
        "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(=\), \(?\)]\) \
\!\(\*SubscriptBox[\(h\[Mu]\), \(W\)]\) + <\!\(\*OverscriptBox[\(g\), \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(l\), \(W\)], \(\
\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SuperscriptBox[\(h\), \(*\)], \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(r\), \(W\)], \(\
\[RightVector]\)]\)>\>\"", ",", 
         "\"\<V's Check\\nWithout Inner\\nProduct Protocol\>\"", ",", 
         "selfCheck2W"}], "}"}]}], "\n", "}"}], ",", " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left"}], "}"}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "selfCheck2W"}], ",", " ", 
     RowBox[{
     "Error", "[", 
      "\"\<Assertion failure on self-check 2W (\!\(\*SubsuperscriptBox[\(P\), \
\(W\), \(+\)]\) \!\(\*OverscriptBox[\(=\), \(?\)]\) \!\(\*SubscriptBox[\(h\
\[Mu]\), \(W\)]\) + <\!\(\*OverscriptBox[\(g\), \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(l\), \(W\)], \(\
\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SuperscriptBox[\(h\), \(*\)], \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(r\), \(W\)], \(\
\[RightVector]\)]\)>)\>\"", "]"}]}], "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"3", "W"}], ")"}], " ", 
      OverscriptBox[
       SubscriptBox["t", "W"], "^"]}], " ", 
     SubscriptBox[
      OverscriptBox["\[Congruent]", "?"], "q"], " ", "<", 
     OverscriptBox[
      SubscriptBox["l", "W"], "\[RightVector]"]}], ",", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["r", "W"], "\[RightVector]"], ">"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"selfCheck3W", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["t", "W"], "^"], " ", "==", " ", 
     RowBox[{"modq", "[", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["l", "W"], "\[RightVector]"], ".", 
       OverscriptBox[
        SubscriptBox["r", "W"], "\[RightVector]"]}], "]"}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[SubscriptBox[\(t\), \(W\)], \(^\)]\) \
\!\(\*SubscriptBox[OverscriptBox[\(\[Congruent]\), \(?\)], \(q\)]\) \
<\!\(\*OverscriptBox[SubscriptBox[\(l\), \(W\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(r\), \(W\)], \(\
\[RightVector]\)]\)>\>\"", ",", 
         "\"\<V's Check\\nWithout Inner\\nProduct Protocol\>\"", ",", 
         "selfCheck3W"}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left"}], "}"}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "selfCheck3W"}], ",", " ", 
     RowBox[{
     "Error", "[", 
      "\"\<Assertion failure on self-check 3W \
(\!\(\*OverscriptBox[SubscriptBox[\(t\), \(W\)], \(^\)]\) \
\!\(\*SubscriptBox[OverscriptBox[\(\[Congruent]\), \(?\)], \(q\)]\) \
<\!\(\*OverscriptBox[SubscriptBox[\(l\), \(W\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(r\), \(W\)], \(\
\[RightVector]\)]\)>)\>\"", "]"}]}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{"If", "[", 
  RowBox[{"useInnerProductProtocol", ",", "\n", "\t", 
   RowBox[{
    RowBox[{
    "StateMachineSave", "[", "\"\<mk_shuffle_argument_selfcheck\>\"", "]"}], 
    ";"}], "\n", 
   RowBox[{"(*", "Else", "*)"}], ",", "\n", "\t", 
   RowBox[{
    RowBox[{"ProofFinished", "[", "]"}], ";", "\n", "\t", 
    RowBox[{
    "Print", "[", 
     "\"\<Continuing to inner product protocol not required, but \
possible.\>\"", "]"}], ";", "\n", "\t", 
    RowBox[{
    "StateMachineSave", "[", "\"\<mk_shuffle_argument_selfcheck\>\"", "]"}], 
    ";", "\n", "\t", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{"fiatShamirSingleKernel", ",", "\n", "\t", 
      RowBox[{
       RowBox[{
       "Print", "[", 
        "\"\<Can't answer requests without multi-kernel or multi-machine \
setup\>\"", "]"}], ";"}], "\n", "\t", 
      RowBox[{"(*", "Else", "*)"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"WaitForVariables", "[", 
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
         "\"\<_verification_result_\>\"", ",", "\n", "\t\t", 
          "\"\<_inspection_request_\>\"", ",", "\n", "\t\t", 
          "\"\<_inspection_result_\>\""}], "\n", "\t", "}"}], "]"}], ";"}]}], 
     "\n", "\t", "]"}], ";", "\n", "\t", "\n", "\t", 
    RowBox[{
    "StateMachineSave", "[", "\"\<mk_shuffle_argument_selfcheck\>\"", "]"}], 
    ";", "\n", "\t", 
    RowBox[{"FrontEndTokenExecute", "[", "\"\<EvaluatorAbort\>\"", "]"}], 
    ";"}]}], "\n", "]"}]}], "Code",
 CellChangeTimes->{{3.8824424479588757`*^9, 3.882442482968297*^9}, {
   3.882442906944003*^9, 3.882442908368454*^9}, {3.8824429996457767`*^9, 
   3.882443038653941*^9}, {3.88244315219648*^9, 3.8824432099201937`*^9}, {
   3.88244324167651*^9, 3.882443256575935*^9}, {3.8824433337776327`*^9, 
   3.8824433416685753`*^9}, {3.882443449056179*^9, 3.882443453059208*^9}, {
   3.882443508176478*^9, 3.882443554641068*^9}, {3.8824436194755096`*^9, 
   3.882443708339353*^9}, {3.8824437807788067`*^9, 3.882443857433524*^9}, {
   3.88244390355091*^9, 3.8824439385464354`*^9}, {3.882616743779714*^9, 
   3.882616752183807*^9}, {3.882617737085897*^9, 3.88261775039567*^9}, {
   3.882618198978024*^9, 3.882618568000251*^9}, {3.882618609768333*^9, 
   3.8826188846285467`*^9}, {3.882618954682726*^9, 3.882618979046832*^9}, {
   3.882620017083704*^9, 3.882620033864896*^9}, {3.882620097704623*^9, 
   3.8826201264570007`*^9}, {3.8826201639651127`*^9, 
   3.8826201834918137`*^9}, {3.8826203085701103`*^9, 3.882620323726163*^9}, {
   3.882627182805575*^9, 3.882627183338189*^9}, {3.882628227160232*^9, 
   3.882628307963994*^9}, {3.8826283533689213`*^9, 3.882628414377632*^9}, {
   3.882630689897908*^9, 3.8826307187126513`*^9}, {3.8828709505607347`*^9, 
   3.8828710072260303`*^9}, {3.8828719583770437`*^9, 3.882872027155259*^9}, {
   3.882874593840088*^9, 3.882874607300828*^9}, {3.882906205297468*^9, 
   3.882906205663821*^9}, 3.882906524653955*^9, {3.88295481817096*^9, 
   3.882954863255486*^9}, {3.883132959819723*^9, 3.8831329923037043`*^9}, {
   3.883210672571444*^9, 3.883210683529304*^9}, {3.883508264897275*^9, 
   3.883508292122602*^9}, {3.8835121585137978`*^9, 3.883512167451676*^9}, {
   3.883513096906794*^9, 3.883513145618958*^9}, {3.883513210650654*^9, 
   3.8835132676657763`*^9}, {3.883516681436142*^9, 3.8835166851486*^9}, {
   3.883712030007739*^9, 3.883712062193074*^9}, {3.884316819415824*^9, 
   3.884316833020831*^9}, {3.8843171838279*^9, 3.8843173964069853`*^9}, {
   3.884318277268124*^9, 3.884318305053996*^9}, {3.884320809201262*^9, 
   3.884321083761818*^9}, {3.884331140485894*^9, 3.8843314822914953`*^9}, {
   3.884331521311676*^9, 3.884331633010337*^9}, {3.884331686560566*^9, 
   3.8843317028260193`*^9}, {3.884331760260537*^9, 3.884331889244608*^9}, {
   3.884331935020316*^9, 3.884331974591784*^9}, {3.884332069312928*^9, 
   3.8843321015212803`*^9}, {3.8843321888108473`*^9, 3.884332189658493*^9}, {
   3.884332328825205*^9, 3.884332361112341*^9}, {3.884332398519904*^9, 
   3.884332491569325*^9}, {3.884332527344521*^9, 3.88433257683836*^9}, {
   3.884332627300743*^9, 3.884333001135573*^9}, {3.88433303581155*^9, 
   3.88433313838343*^9}, {3.88433319067118*^9, 3.884333373850924*^9}, {
   3.8843334368194523`*^9, 3.88433343970498*^9}, {3.884334867459156*^9, 
   3.8843348903521748`*^9}, {3.884335163665189*^9, 3.88433516439841*^9}, {
   3.884335453783063*^9, 3.884335456824972*^9}, {3.8843363628979053`*^9, 
   3.8843363741953907`*^9}, {3.884339186298147*^9, 3.884339189910161*^9}, {
   3.884339291556093*^9, 3.884339313433004*^9}, {3.884339354820312*^9, 
   3.8843393773179827`*^9}, 3.8843395315934277`*^9, {3.884339594646476*^9, 
   3.8843396069628677`*^9}, {3.88433967352922*^9, 3.8843396780779343`*^9}, {
   3.884339712042458*^9, 3.8843397160237017`*^9}, {3.884339749238781*^9, 
   3.8843397533681507`*^9}, {3.884339786421928*^9, 3.8843398750503263`*^9}, {
   3.884340045609829*^9, 3.884340046341763*^9}, {3.884340096591049*^9, 
   3.8843400983886766`*^9}, {3.8843401286854763`*^9, 3.884340135688448*^9}, {
   3.884340173855814*^9, 3.884340186737783*^9}, {3.884341178397524*^9, 
   3.88434119482495*^9}, {3.884341987696906*^9, 3.8843419958414*^9}, {
   3.884342153125112*^9, 3.8843422709263077`*^9}, {3.8843423208080473`*^9, 
   3.8843423377325573`*^9}, 3.884342499921212*^9, {3.884342656752882*^9, 
   3.884342684478197*^9}, {3.8843427654292727`*^9, 3.884342776381353*^9}, {
   3.884342817541875*^9, 3.884342830232068*^9}, {3.884343022482539*^9, 
   3.88434303852625*^9}, {3.884345873174542*^9, 3.884345874312627*^9}, {
   3.884345934854287*^9, 3.884345978134527*^9}, {3.884346023592979*^9, 
   3.8843460804154387`*^9}, {3.8843461321377363`*^9, 
   3.8843461556375723`*^9}, {3.884346187783486*^9, 3.88434622196562*^9}, {
   3.884346300764563*^9, 3.884346302639287*^9}, {3.8843699550739727`*^9, 
   3.88436996219121*^9}, {3.884369993271708*^9, 3.884370025537436*^9}, {
   3.884370064217306*^9, 3.884370083363002*^9}, {3.884370135058313*^9, 
   3.884370135219244*^9}, {3.884752070315407*^9, 3.884752070770465*^9}, {
   3.884784917176958*^9, 3.8847849173194103`*^9}, {3.8867871913597364`*^9, 
   3.886787192784498*^9}, 3.886794324895059*^9, {3.886794363909441*^9, 
   3.886794366784356*^9}, {3.8867954094458146`*^9, 3.886795409669713*^9}, {
   3.886797127448865*^9, 3.8867971513688116`*^9}, 3.8868385480244017`*^9, {
   3.886841246742259*^9, 3.8868412592757406`*^9}, {3.886842396067398*^9, 
   3.8868424004151125`*^9}, {3.8870755414848003`*^9, 3.8870755421987143`*^9}, 
   3.8870757662949066`*^9, {3.8870770129149647`*^9, 3.8870770136647234`*^9}, {
   3.8870771070153813`*^9, 3.887077166353177*^9}, {3.8870775186131763`*^9, 
   3.8870775407120485`*^9}, {3.887077578537759*^9, 3.8870779152105284`*^9}, {
   3.8870780222350187`*^9, 3.887078022799735*^9}, {3.8870790325677223`*^9, 
   3.8870790792793603`*^9}, 3.887079159464758*^9, {3.8870792391666293`*^9, 
   3.887079421744973*^9}, {3.8870794539911346`*^9, 3.88707946142076*^9}, {
   3.8870795571972265`*^9, 3.887079730140127*^9}, {3.8870797843607416`*^9, 
   3.887079789464613*^9}, {3.8870798464000864`*^9, 3.8870799162650023`*^9}, {
   3.887079967306062*^9, 3.8870799683710575`*^9}, {3.8870801204830265`*^9, 
   3.8870802117426195`*^9}, {3.887082105580022*^9, 3.887082141036538*^9}, {
   3.887083576762538*^9, 3.88708359402728*^9}, {3.8870847154470396`*^9, 
   3.8870847626378717`*^9}, {3.8870888106754675`*^9, 3.887088930810926*^9}, {
   3.8870889658209686`*^9, 3.887088979035956*^9}, {3.887395945965273*^9, 
   3.887395986105267*^9}, {3.887647051087378*^9, 3.8876471211891794`*^9}, {
   3.887647174957494*^9, 3.8876473862740765`*^9}, {3.8876474248101764`*^9, 
   3.8876474776309066`*^9}, {3.8876475101239805`*^9, 3.887647568476171*^9}, {
   3.887647622060641*^9, 3.8876479087301335`*^9}, {3.8876480318594117`*^9, 
   3.887648144409664*^9}, {3.8876482398109937`*^9, 3.8876482939603786`*^9}, {
   3.887648345287237*^9, 3.887648359842141*^9}, {3.887648406213459*^9, 
   3.8876484504374347`*^9}, 3.8876485511256886`*^9, {3.887648597045271*^9, 
   3.887648605603655*^9}, {3.8876503926664743`*^9, 3.8876503929522543`*^9}, {
   3.8876504521272354`*^9, 3.887650491755992*^9}, 3.892479739577695*^9, 
   3.892479811321908*^9, {3.892479845311266*^9, 3.892479947524295*^9}, {
   3.892479978365553*^9, 3.8924801718039913`*^9}, {3.89248021330375*^9, 
   3.892480221206675*^9}, {3.8983290015173225`*^9, 3.8983290153370256`*^9}, {
   3.8983290478466096`*^9, 3.8983290684611654`*^9}, {3.8983291021486135`*^9, 
   3.898329176669903*^9}, {3.8983292609526396`*^9, 3.8983292704480696`*^9}, {
   3.8983293134715714`*^9, 3.898329792713314*^9}, {3.898329833798477*^9, 
   3.8983298348085566`*^9}, {3.898331489247444*^9, 3.8983314906538916`*^9}, 
   3.8983432437861867`*^9, {3.899015201488898*^9, 3.899015736738052*^9}, {
   3.899015841933957*^9, 3.899015973468233*^9}, 3.8990160097061234`*^9, {
   3.8990226005016565`*^9, 3.8990226039173517`*^9}, {3.899027460670454*^9, 
   3.8990274767029686`*^9}, {3.8992734439472246`*^9, 3.899273464958335*^9}, {
   3.911403009944131*^9, 3.91140307988387*^9}, {3.911408016167943*^9, 
   3.9114080204469643`*^9}, 3.911408053455412*^9},
 CellLabel->
  "In[304]:=",ExpressionUUID->"4d3b6a90-3983-4659-8be8-7cbd0980bd45"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Message Processing: Event Loop", "Subsection",
 CellChangeTimes->{{3.8974846299496613`*^9, 3.897484702175345*^9}, {
  3.897495197442492*^9, 3.897495199825204*^9}, {3.897496000965238*^9, 
  3.8974960246391907`*^9}, {3.897497298957355*^9, 
  3.8974973050574903`*^9}},ExpressionUUID->"35dbbb96-ad0a-4be6-9f2e-\
9845accec8fa"],

Cell[TextData[{
 StyleBox["Recommended to run when not using the inner product protocol and \
Fiat-Shamir transform is activated:",
  FontWeight->"Bold"],
 " Answer inspection requests and receive verification and inspection results \
after proof has been finished\nAbort after all expected messages have been \
received"
}], "Text",
 CellChangeTimes->{{3.8976484402653303`*^9, 3.897648455622541*^9}, {
   3.897648532788278*^9, 3.897648567328744*^9}, {3.8976490181928673`*^9, 
   3.897649041573123*^9}, {3.897675628161806*^9, 3.897675697150329*^9}, 
   3.898365829749481*^9, {3.8992733451678705`*^9, 
   3.899273350781613*^9}},ExpressionUUID->"1c425026-5648-4996-8e7d-\
3d1f11f8e74b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "StateMachineRestore", "[", "\"\<mk_shuffle_argument_selfcheck\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"ProcessIncomingMessages", "[", 
   RowBox[{"router", ",", 
    RowBox[{"{", "\"\<\>\"", "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.897481821357059*^9, 3.897481872352661*^9}, {
  3.8974819064336033`*^9, 3.897481918084467*^9}, {3.897481948708789*^9, 
  3.897481981326715*^9}, {3.897482016826459*^9, 3.897482128770421*^9}, {
  3.897484068148286*^9, 3.897484139557282*^9}, {3.89748427563197*^9, 
  3.89748429950484*^9}, {3.897484716379912*^9, 3.89748472320048*^9}, {
  3.8974948862409*^9, 3.89749494254821*^9}, {3.897495028522992*^9, 
  3.897495117506402*^9}, {3.89749515965842*^9, 3.897495169118095*^9}, {
  3.897495204443527*^9, 3.897495206818741*^9}, {3.897497225636208*^9, 
  3.897497266873748*^9}, {3.8979021051835957`*^9, 3.8979021053774195`*^9}, {
  3.897903887500248*^9, 3.897903898199651*^9}, {3.8992733723870883`*^9, 
  3.899273386676329*^9}},ExpressionUUID->"5b3788b9-fcb5-4963-a636-\
a10f946601e5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Inner Product Protocol", "Section",
 CellChangeTimes->{{3.887086890466463*^9, 
  3.8870868979654603`*^9}},ExpressionUUID->"017f88fa-9cd2-4716-8b88-\
2445a0ca7974"],

Cell[CellGroupData[{

Cell["Set up vectors and variables for successive halving", "Subsection",
 CellChangeTimes->{{3.887352916198608*^9, 3.887352990003416*^9}, 
   3.8873606602711983`*^9},ExpressionUUID->"d5c23223-8cd6-4e74-98ef-\
45789dde92b6"],

Cell[TextData[{
 "Pad ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["g", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "7dfd3488-b449-4089-a982-4e8e8c72f7a9"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SuperscriptBox["h", "*"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"c4d77fac-98d3-4248-b594-13970b4bb5d3"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SuperscriptBox["b", "*"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"ef7e687b-083e-478a-a36f-8d4c9c6c788f"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SuperscriptBox["c", "*"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"0cde3952-9408-4e40-aa9c-dd93d30067e2"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SuperscriptBox["d", "*"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"2ccccfc3-58c5-43be-ba61-ef5aacecebc1"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["l", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "6f2021b6-fedd-4dc3-abbc-ca997a580db8"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["r", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "820eebee-39a7-43aa-9b3d-f081668c4309"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["l", "W"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"8c65f3f8-1f1c-4f31-b0d8-2a5996c508a5"],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["r", "W"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"20bd9909-11c8-4cf5-87ce-d7ec85add914"],
 " such that their lengths become a power of two, resulting in the vectors ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["G", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "8b331737-ec74-4e6b-830d-3e82d38d4bb7"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["H", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "5c8d57e5-0c17-40af-88a3-39b40ed2b8b7"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["B", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "19478aac-9e29-428a-a984-3ec528c01dc9"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["C", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "661a2691-89e9-435f-a8b8-26fa1e9b3bf7"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["D", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "11b32cbb-6178-442b-890a-82b71c00c582"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["a", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "ada853cd-cecb-4597-8249-02e40d1d1d39"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["b", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "4ebdd5c5-7e79-404d-99fb-b73b2f161fcd"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["a", "W"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"beff20d7-b4e7-433a-a4be-dc4641310ab1"],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["b", "W"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"1025d628-7e29-4392-b85e-a248dbf99f80"],
 ". Pad vectors of scalars with zeros and vectors of elliptic curve points \
with points at infinity. ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["b", "\[RightVector]"], TraditionalForm]],
  FontSlant->"Italic",ExpressionUUID->
  "24ae875c-7439-4ad6-aef3-16d6909db625"],
 StyleBox[" has a name colission with the randomizers of the ElGamal \
ciphertexts. Thus, ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   OverscriptBox["a", "\[RightVector]"], TraditionalForm]],
  FontSlant->"Italic",ExpressionUUID->
  "89c6e02a-f4f2-4848-a000-c47184226e1f"],
 StyleBox[" and ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   OverscriptBox["b", "\[RightVector]"], TraditionalForm]],
  InitializationCell->True,
  FontSlant->"Italic",ExpressionUUID->
  "e1b53ce7-3001-49a7-9c9e-fa2edc29e09f"],
 StyleBox[" are indexed with \
\[OpenCurlyDoubleQuote]IP\[CloseCurlyDoubleQuote] in the code.",
  FontSlant->"Italic"],
 "\nDefine ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["P", 
      RowBox[{"{", 
       RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}], "*"], ":=", 
     RowBox[{"<", 
      OverscriptBox["a", "\[RightVector]"]}]}], ",", 
    RowBox[{
     OverscriptBox["G", "\[RightVector]"], ">", " ", 
     RowBox[{"+", " ", 
      RowBox[{"<", 
       OverscriptBox["b", "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     OverscriptBox[
      RowBox[{"{", 
       RowBox[{"H", ",", "B", ",", "C", ",", "D"}], "}"}], "\[RightVector]"], 
     ">"}]}], TraditionalForm]],ExpressionUUID->
  "40a32531-891c-493f-a5a4-72f32e670215"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"c", ":", 
     RowBox[{
      SubscriptBox["\[Congruent]", "q"], "<", 
      OverscriptBox["a", "\[RightVector]"]}]}], ",", 
    RowBox[{
     OverscriptBox["b", "\[RightVector]"], ">"}]}], TraditionalForm]],
  ExpressionUUID->"3da823e0-ed65-45e6-a11f-49cbb3626c0c"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["P", 
     RowBox[{"{", 
      RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}], "'"], ":=", 
    RowBox[{
     SubsuperscriptBox["P", 
      RowBox[{"{", 
       RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}], "*"], "+", 
     RowBox[{"c", "*", 
      SuperscriptBox["g", "'"]}]}]}], TraditionalForm]],ExpressionUUID->
  "b567df7c-387d-4cb8-8dfa-e8342641cc86"],
 ".\nEquivalently for PR: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["P", "W", "*"], ":=", 
     RowBox[{"<", 
      OverscriptBox[
       SubscriptBox["a", "W"], "\[RightVector]"]}]}], ",", 
    RowBox[{
     OverscriptBox["G", "\[RightVector]"], ">", " ", 
     RowBox[{"+", " ", 
      RowBox[{"<", 
       OverscriptBox[
        SubscriptBox["b", "W"], "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     OverscriptBox["H", "\[RightVector]"], ">"}]}], TraditionalForm]],
  ExpressionUUID->"096f6814-d077-4a2a-aab7-f45548abdd35"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["c", "W"], ":", 
     RowBox[{
      SubscriptBox["\[Congruent]", "q"], "<", 
      OverscriptBox[
       SubscriptBox["a", "W"], "\[RightVector]"]}]}], ",", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["b", "W"], "\[RightVector]"], ">"}]}], TraditionalForm]],
  ExpressionUUID->"9e5a5b56-99c0-45d8-8231-b0dabc6d1123"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["P", "W", "'"], ":=", 
    RowBox[{
     SubsuperscriptBox["P", "W", "*"], "+", 
     RowBox[{
      SubscriptBox["c", "W"], "*", 
      SuperscriptBox["g", "'"]}]}]}], TraditionalForm]],ExpressionUUID->
  "6c533767-8dba-4fea-a5dc-c7dfebc83602"],
 ". Iteratively adding up those and all \[OpenCurlyDoubleQuote]halved\
\[CloseCurlyDoubleQuote] versions of ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["P", 
    RowBox[{"{", 
     RowBox[{"h", ",", "b", ",", "c", ",", "W"}], "}"}], "'"], 
   TraditionalForm]],ExpressionUUID->"9bb608e3-9a8e-46d9-be2a-b94a5be903d7"],
 " (which are yet to be calculated) is the central part of the inner product \
protocol which ensures the correctness of the inner product after \
verification.\nThe verifier calculates\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["P", 
      RowBox[{"{", 
       RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}], "'"], ":=", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox["A", "L"], "+", 
       RowBox[{
        SubscriptBox["A", 
         RowBox[{"R", ",", 
          RowBox[{"{", 
           RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]}]], "x"}], "+", 
       
       RowBox[{
        SubscriptBox["S", "L"], 
        SuperscriptBox["x", "2"]}], "+", 
       RowBox[{
        SubscriptBox["S", 
         RowBox[{"R", ",", 
          RowBox[{"{", 
           RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]}]], 
        SuperscriptBox["x", "3"]}], "+"}], "<", 
      OverscriptBox["g", "\[RightVector]"]}]}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["z", "3"], 
      OverscriptBox[
       SuperscriptBox["y", 
        RowBox[{"-", "n"}]], "\[RightVector]"]}], ">", 
     RowBox[{"+", 
      RowBox[{"<", 
       OverscriptBox[
        SuperscriptBox[
         RowBox[{"{", 
          RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}], "*"], 
        "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "x"}], 
      OverscriptBox[
       SubsuperscriptBox["y", "z", 
        RowBox[{"n", "-", "1"}]], "\[RightVector]"]}], ">", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["\[Mu]", 
         RowBox[{"{", 
          RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]]}], "h"}], "+", 
      RowBox[{
       OverscriptBox["t", "^"], 
       SuperscriptBox["g", "'"]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "6d24e157-bec9-4611-b4fa-a1037f0bc8b0"],
 "\nand\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["P", "W", "'"], ":=", 
     RowBox[{
      RowBox[{
       SubscriptBox["A", "W"], "+", 
       RowBox[{
        SubscriptBox["S", "W"], "x"}], "+"}], "<", 
      OverscriptBox["g", "\[RightVector]"]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"z", 
       OverscriptBox[
        SuperscriptBox["y", 
         RowBox[{"-", "n"}]], "\[RightVector]"]}], "+", 
      OverscriptBox[
       SuperscriptBox["w", "n"], "\[RightVector]"], "-", 
      RowBox[{
       OverscriptBox[
        SubsuperscriptBox["w", "0", 
         RowBox[{"n", "-", "1"}]], "\[RightVector]"], 
       SuperscriptBox["y", 
        RowBox[{"-", "1"}]]}]}], ">", 
     RowBox[{"+", 
      RowBox[{"<", 
       OverscriptBox[
        SuperscriptBox["h", "*"], "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     RowBox[{"-", 
      OverscriptBox[
       SubsuperscriptBox["y", "z", 
        RowBox[{"n", "-", "1"}]], "\[RightVector]"]}], ">", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["\[Mu]", "W"]}], "h"}], "+", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["t", "W"], "^"], 
       SuperscriptBox["g", "'"]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "8c6c401b-12fc-416e-9008-3bcf4ca18384"],
 " which are equal to the ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["P", 
    RowBox[{"{", 
     RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}], "'"], 
   TraditionalForm]],ExpressionUUID->"589d991f-c7a3-4cc2-8a29-588f88fbe73f"],
 " of the prover which are calculated based on the knowledge of ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["a", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "f03b8315-9899-4b10-a7f0-ac99f7d280ad"],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["b", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "0127ce62-7e39-4987-bca1-587e26574b97"],
 " resp. ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["a", "W"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"db9c018f-3b0d-4eec-afe6-109a26f8da2a"],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["b", "W"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"00fbb8a1-b6c1-40b9-9a58-7e31e803289d"],
 " (",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["P", "W", "'"], TraditionalForm]],ExpressionUUID->
  "80200c57-bae3-4831-9be7-d93aba80e4c3"],
 ")."
}], "Text",
 CellChangeTimes->{{3.8873535513966537`*^9, 3.8873536791946135`*^9}, {
   3.887353711348617*^9, 3.887353721260577*^9}, {3.8873537669021115`*^9, 
   3.887353818626687*^9}, 3.8873550817288923`*^9, {3.8873551719646826`*^9, 
   3.8873552139054327`*^9}, {3.887355292061865*^9, 3.8873554865651956`*^9}, {
   3.887355786328285*^9, 3.887355806926796*^9}, {3.8873564335822644`*^9, 
   3.8873566279231663`*^9}, {3.8873572291367083`*^9, 
   3.8873572784806814`*^9}, {3.88735733087914*^9, 3.8873573355337596`*^9}, {
   3.8873577158026457`*^9, 3.8873577178861322`*^9}, {3.887360499991683*^9, 
   3.8873605214399285`*^9}, {3.8873605850447044`*^9, 
   3.8873606071139746`*^9}, {3.887361739674698*^9, 3.887361755782729*^9}, {
   3.887393053902968*^9, 3.8873931061471524`*^9}, {3.892480375459816*^9, 
   3.892480461549214*^9}, {3.8992911276658025`*^9, 3.899291188762516*^9}, {
   3.899291229225937*^9, 3.899291528857547*^9}, {3.8992916059775105`*^9, 
   3.899291724753728*^9}, {3.8992918337107277`*^9, 3.8992918437230783`*^9}, {
   3.899291895780218*^9, 3.8992919378973846`*^9}, {3.899292061892232*^9, 
   3.8992921310618*^9}, {3.8992921885893*^9, 3.8992922408096952`*^9}, {
   3.899292272635969*^9, 3.899292391226856*^9}, {3.899292509028572*^9, 
   3.8992925091986375`*^9}, 3.911294425106141*^9, {3.911403103065364*^9, 
   3.9114032118546925`*^9}, {3.9122553614852037`*^9, 
   3.9122554066983156`*^9}},ExpressionUUID->"6ff919a7-5ecc-4859-9972-\
d425a3874f58"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"StateMachineRestore", "[", "\"\<mk_shuffle_argument\>\"", "]"}], 
   ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["n", "pow2"], " ", "=", " ", 
    RowBox[{"2", "^", 
     RowBox[{"Ceiling", "[", 
      RowBox[{"Log2", "[", "n", "]"}], "]"}]}]}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"pad", " ", "vectors"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox["G", "\[RightVector]"], " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      OverscriptBox["g", "\[RightVector]"], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", 
        RowBox[{"Min", "[", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["n", "pow2"], ",", "n"}], "}"}], "]"}]}], "]"}], 
      "]"}], ",", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{"\[Infinity]", ",", "\[Infinity]"}], "]"}], ",", 
       RowBox[{"Max", "[", 
        RowBox[{"0", ",", 
         RowBox[{
          SubscriptBox["n", "pow2"], "-", "n"}]}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox["H", "\[RightVector]"], " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      OverscriptBox[
       SuperscriptBox["h", "*"], "\[RightVector]"], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", 
        RowBox[{"Min", "[", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["n", "pow2"], ",", "n"}], "}"}], "]"}]}], "]"}], 
      "]"}], ",", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{"\[Infinity]", ",", "\[Infinity]"}], "]"}], ",", 
       RowBox[{"Max", "[", 
        RowBox[{"0", ",", 
         RowBox[{
          SubscriptBox["n", "pow2"], "-", "n"}]}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox["B", "\[RightVector]"], " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      OverscriptBox[
       SuperscriptBox["b", "*"], "\[RightVector]"], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", 
        RowBox[{"Min", "[", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["n", "pow2"], ",", "n"}], "}"}], "]"}]}], "]"}], 
      "]"}], ",", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{"\[Infinity]", ",", "\[Infinity]"}], "]"}], ",", 
       RowBox[{"Max", "[", 
        RowBox[{"0", ",", 
         RowBox[{
          SubscriptBox["n", "pow2"], "-", "n"}]}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox["C", "\[RightVector]"], " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      OverscriptBox[
       SuperscriptBox["c", "*"], "\[RightVector]"], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", 
        RowBox[{"Min", "[", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["n", "pow2"], ",", "n"}], "}"}], "]"}]}], "]"}], 
      "]"}], ",", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{"\[Infinity]", ",", "\[Infinity]"}], "]"}], ",", 
       RowBox[{"Max", "[", 
        RowBox[{"0", ",", 
         RowBox[{
          SubscriptBox["n", "pow2"], "-", "n"}]}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox["D", "\[RightVector]"], " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      OverscriptBox[
       SuperscriptBox["d", "*"], "\[RightVector]"], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", 
        RowBox[{"Min", "[", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["n", "pow2"], ",", "n"}], "}"}], "]"}]}], "]"}], 
      "]"}], ",", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"ecPnt", "[", 
        RowBox[{"\[Infinity]", ",", "\[Infinity]"}], "]"}], ",", 
       RowBox[{"Max", "[", 
        RowBox[{"0", ",", 
         RowBox[{
          SubscriptBox["n", "pow2"], "-", "n"}]}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["a", "IP"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      OverscriptBox["l", "\[RightVector]"], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", 
        RowBox[{"Min", "[", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["n", "pow2"], ",", "n"}], "}"}], "]"}]}], "]"}], 
      "]"}], ",", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"Max", "[", 
        RowBox[{"0", ",", 
         RowBox[{
          SubscriptBox["n", "pow2"], "-", "n"}]}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["b", "IP"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      OverscriptBox["r", "\[RightVector]"], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", 
        RowBox[{"Min", "[", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["n", "pow2"], ",", "n"}], "}"}], "]"}]}], "]"}], 
      "]"}], ",", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"Max", "[", 
        RowBox[{"0", ",", 
         RowBox[{
          SubscriptBox["n", "pow2"], "-", "n"}]}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"c", " ", "=", " ", 
    RowBox[{"modq", "[", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["a", "IP"], "\[RightVector]"], ".", 
      OverscriptBox[
       SubscriptBox["b", "IP"], "\[RightVector]"]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["a", "W"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      OverscriptBox[
       SubscriptBox["l", "W"], "\[RightVector]"], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", 
        RowBox[{"Min", "[", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["n", "pow2"], ",", "n"}], "}"}], "]"}]}], "]"}], 
      "]"}], ",", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"Max", "[", 
        RowBox[{"0", ",", 
         RowBox[{
          SubscriptBox["n", "pow2"], "-", "n"}]}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["b", "W"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      OverscriptBox[
       SubscriptBox["r", "W"], "\[RightVector]"], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", 
        RowBox[{"Min", "[", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["n", "pow2"], ",", "n"}], "}"}], "]"}]}], "]"}], 
      "]"}], ",", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"Max", "[", 
        RowBox[{"0", ",", 
         RowBox[{
          SubscriptBox["n", "pow2"], "-", "n"}]}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["c", "W"], " ", "=", " ", 
    RowBox[{"modq", "[", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["a", "W"], "\[RightVector]"], ".", 
      OverscriptBox[
       SubscriptBox["b", "W"], "\[RightVector]"]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\n", 
  RowBox[{"(*", 
   RowBox[{
    SuperscriptBox["P", "*"], " ", "is", " ", "called", " ", "P", " ", "in", 
    " ", "the", " ", "Bulletproof", " ", "paper", " ", 
    RowBox[{"(", 
     RowBox[{
     "not", " ", "to", " ", "be", " ", "confused", " ", "with", " ", "the", 
      " ", "equally", " ", "named", " ", "variable", " ", "at", " ", "the", 
      " ", "end", " ", "of", " ", "the", " ", "range", " ", "proof"}], 
     ")"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   SubsuperscriptBox["P", "h", "*"], " ", "=", " ", 
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["a", "IP"], "\[RightVector]"], ".", 
     OverscriptBox["G", "\[RightVector]"]}], " ", "+", " ", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["b", "IP"], "\[RightVector]"], ".", 
     OverscriptBox["H", "\[RightVector]"]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubsuperscriptBox["P", "b", "*"], " ", "=", " ", 
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["a", "IP"], "\[RightVector]"], ".", 
     OverscriptBox["G", "\[RightVector]"]}], " ", "+", " ", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["b", "IP"], "\[RightVector]"], ".", 
     OverscriptBox["B", "\[RightVector]"]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubsuperscriptBox["P", "c", "*"], " ", "=", " ", 
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["a", "IP"], "\[RightVector]"], ".", 
     OverscriptBox["G", "\[RightVector]"]}], " ", "+", " ", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["b", "IP"], "\[RightVector]"], ".", 
     OverscriptBox["C", "\[RightVector]"]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubsuperscriptBox["P", "d", "*"], " ", "=", " ", 
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["a", "IP"], "\[RightVector]"], ".", 
     OverscriptBox["G", "\[RightVector]"]}], " ", "+", " ", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["b", "IP"], "\[RightVector]"], ".", 
     OverscriptBox["D", "\[RightVector]"]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubsuperscriptBox["P", "W", "*"], " ", "=", " ", 
    RowBox[{
     RowBox[{
      OverscriptBox[
       SubscriptBox["a", "W"], "\[RightVector]"], ".", 
      OverscriptBox["G", "\[RightVector]"]}], " ", "+", " ", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["b", "W"], "\[RightVector]"], ".", 
      OverscriptBox["H", "\[RightVector]"]}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   SubsuperscriptBox["P", "h", "'"], " ", "=", " ", 
   RowBox[{
    SubsuperscriptBox["P", "h", "*"], " ", "+", " ", 
    RowBox[{"c", "*", 
     SuperscriptBox["g", "'"]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubsuperscriptBox["P", "b", "'"], " ", "=", " ", 
   RowBox[{
    SubsuperscriptBox["P", "b", "*"], " ", "+", " ", 
    RowBox[{"c", "*", 
     SuperscriptBox["g", "'"]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubsuperscriptBox["P", "c", "'"], " ", "=", " ", 
   RowBox[{
    SubsuperscriptBox["P", "c", "*"], " ", "+", " ", 
    RowBox[{"c", "*", 
     SuperscriptBox["g", "'"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubsuperscriptBox["P", "d", "'"], " ", "=", " ", 
   RowBox[{
    SubsuperscriptBox["P", "d", "*"], " ", "+", " ", 
    RowBox[{"c", "*", 
     SuperscriptBox["g", "'"]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubsuperscriptBox["P", "W", "'"], " ", "=", " ", 
    RowBox[{
     SubsuperscriptBox["P", "W", "*"], " ", "+", " ", 
     RowBox[{
      SubscriptBox["c", "W"], "*", 
      SuperscriptBox["g", "'"]}]}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Keep", " ", "track", " ", "of", " ", "different", " ", "versions", " ", 
     "of", " ", 
     OverscriptBox["G", "\[RightVector]"]}], ",", " ", 
    OverscriptBox["H", "\[RightVector]"], ",", " ", 
    OverscriptBox["B", "\[RightVector]"], ",", " ", 
    OverscriptBox["C", "\[RightVector]"], ",", " ", 
    OverscriptBox["D", "\[RightVector]"], ",", " ", 
    OverscriptBox["a", "\[RightVector]"], ",", " ", 
    RowBox[{
     OverscriptBox["b", "\[RightVector]"], " ", "and", " ", 
     SubsuperscriptBox["P", 
      RowBox[{"{", 
       RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}], "'"], 
     " ", "throughout", " ", "halving", " ", 
     RowBox[{"steps", ".", "\n", "The"}], " ", "2", " ", "in", " ", "the", 
     " ", "base", " ", "indicates", " ", "that", " ", "those", " ", "lists", 
     " ", "contain", " ", "variables", " ", "or", " ", "vectors", " ", "from",
      " ", "the", " ", "halving", " ", "steps"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["G", "2"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"{", 
    OverscriptBox["G", "\[RightVector]"], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["H", "2"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"{", 
    OverscriptBox["H", "\[RightVector]"], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["B", "2"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"{", 
    OverscriptBox["B", "\[RightVector]"], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["C", "2"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"{", 
    OverscriptBox["C", "\[RightVector]"], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["D", "2"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"{", 
    OverscriptBox["D", "\[RightVector]"], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["a", "2"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"{", 
    OverscriptBox[
     SubscriptBox["a", "IP"], "\[RightVector]"], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["b", "2"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"{", 
    OverscriptBox[
     SubscriptBox["b", "IP"], "\[RightVector]"], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["a", 
     RowBox[{"2", ",", "W"}]], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"{", 
    OverscriptBox[
     SubscriptBox["a", "W"], "\[RightVector]"], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["b", 
     RowBox[{"2", ",", "W"}]], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"{", 
    OverscriptBox[
     SubscriptBox["b", "W"], "\[RightVector]"], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"2", ",", "h"}]], " ", "=", " ", 
   RowBox[{"{", 
    SubsuperscriptBox["P", "h", "'"], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"2", ",", "b"}]], " ", "=", " ", 
   RowBox[{"{", 
    SubsuperscriptBox["P", "b", "'"], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"2", ",", "c"}]], " ", "=", " ", 
   RowBox[{"{", 
    SubsuperscriptBox["P", "c", "'"], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"2", ",", "d"}]], " ", "=", " ", 
   RowBox[{"{", 
    SubsuperscriptBox["P", "d", "'"], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"2", ",", "W"}]], " ", "=", " ", 
    RowBox[{"{", 
     SubsuperscriptBox["P", "W", "'"], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Knowledge\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(n\), \(pow2\)]\) := \
\!\(\*SuperscriptBox[\(2\), \(\[LeftCeiling]\*SubscriptBox[\(log\), \(2\)] n\
\[RightCeiling]\)]\)\>\"", ",", 
         "\"\<Smallest power of 2\\ngreater than\\nor equal to n\>\"", ",", 
         "\"\<P,V\>\"", ",", 
         SubscriptBox["n", "pow2"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(G\), \(\[RightVector]\)]\) := padded \
\!\(\*OverscriptBox[\(g\), \(\[RightVector]\)]\)\>\"", ",", "\"\<\>\"", ",", 
         "\"\<P,V\>\"", ",", 
         OverscriptBox["G", "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(H\), \(\[RightVector]\)]\) := padded \
\!\(\*OverscriptBox[SuperscriptBox[\(h\), \(*\)], \(\[RightVector]\)]\)\>\"", 
         ",", "\"\<\>\"", ",", "\"\<P,V\>\"", ",", 
         OverscriptBox["H", "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(B\), \(\[RightVector]\)]\) := padded \
\!\(\*OverscriptBox[SuperscriptBox[\(b\), \(*\)], \(\[RightVector]\)]\)\>\"", 
         ",", "\"\<\>\"", ",", "\"\<P,V\>\"", ",", 
         OverscriptBox["B", "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(C\), \(\[RightVector]\)]\) := padded \
\!\(\*OverscriptBox[SuperscriptBox[\(c\), \(*\)], \(\[RightVector]\)]\)\>\"", 
         ",", "\"\<\>\"", ",", "\"\<P,V\>\"", ",", 
         OverscriptBox["C", "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(D\), \(\[RightVector]\)]\) := padded \
\!\(\*OverscriptBox[SuperscriptBox[\(d\), \(*\)], \(\[RightVector]\)]\)\>\"", 
         ",", "\"\<\>\"", ",", "\"\<P,V\>\"", ",", 
         OverscriptBox["D", "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[SubscriptBox[\(a\), \(IP\)], \
\(\[RightVector]\)]\) := padded \!\(\*OverscriptBox[\(l\), \
\(\[RightVector]\)]\)\>\"", ",", "\"\<\>\"", ",", "\"\<P\>\"", ",", 
         OverscriptBox[
          SubscriptBox["a", "IP"], "\[RightVector]"]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[SubscriptBox[\(b\), \(IP\)], \
\(\[RightVector]\)]\) := padded \!\(\*OverscriptBox[\(r\), \
\(\[RightVector]\)]\)\>\"", ",", "\"\<\>\"", ",", "\"\<P\>\"", ",", 
         OverscriptBox[
          SubscriptBox["b", "IP"], "\[RightVector]"]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<c :\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\) \
<\!\(\*OverscriptBox[SubscriptBox[\(a\), \(IP\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(b\), \(IP\)], \(\
\[RightVector]\)]\)> \!\(\*SubscriptBox[OverscriptBox[\(\[Congruent]\), \
\(?\)], \(q\)]\) <\!\(\*OverscriptBox[\(l\), \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(r\), \(\[RightVector]\)]\)> \
\!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\): \!\(\*OverscriptBox[\(t\), \(^\
\)]\)\>\"", ",", "\"\<Inner Product\>\"", ",", "\"\<P,V\>\"", ",", 
         RowBox[{
          OverscriptBox["t", "^"], "==", "c"}]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[SubscriptBox[\(a\), \(W\)], \(\[RightVector]\
\)]\) := padded \!\(\*OverscriptBox[SubscriptBox[\(l\), \(W\)], \(\
\[RightVector]\)]\)\>\"", ",", "\"\<\>\"", ",", "\"\<P\>\"", ",", 
         OverscriptBox[
          SubscriptBox["a", "W"], "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[SubscriptBox[\(b\), \(W\)], \(\[RightVector]\
\)]\) := padded \!\(\*OverscriptBox[SubscriptBox[\(r\), \(W\)], \(\
\[RightVector]\)]\)\>\"", ",", "\"\<\>\"", ",", "\"\<P\>\"", ",", 
         OverscriptBox[
          SubscriptBox["b", "W"], "\[RightVector]"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(c\), \(W\)]\) :\!\(\*SubscriptBox[\(\
\[Congruent]\), \(q\)]\) <\!\(\*OverscriptBox[SubscriptBox[\(a\), \(W\)], \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(b\), \(W\)], \(\
\[RightVector]\)]\)> \!\(\*SubscriptBox[OverscriptBox[\(\[Congruent]\), \
\(?\)], \(q\)]\) <\!\(\*OverscriptBox[SubscriptBox[\(l\), \(W\)], \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(r\), \(W\)], \(\
\[RightVector]\)]\)> \!\(\*SubscriptBox[\(\[Congruent]\), \(q\)]\): \
\!\(\*OverscriptBox[SubscriptBox[\(t\), \(W\)], \(^\)]\)\>\"", ",", 
         "\"\<Inner Product\>\"", ",", "\"\<P,V\>\"", ",", 
         RowBox[{
          OverscriptBox[
           SubscriptBox["t", "W"], "^"], "==", 
          SubscriptBox["c", "W"]}]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<(1) \!\(\*SubsuperscriptBox[\(P\), \({h, b, c, d}\), \(*\)]\) :=\
\\n(2) <\!\(\*OverscriptBox[\(a\), \(\[RightVector]\)]\),\!\(\*OverscriptBox[\
\(G\), \(\[RightVector]\)]\)> + <\!\(\*OverscriptBox[\(b\), \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\({H, B, C, D}\), \
\(\[RightVector]\)]\)> \!\(\*OverscriptBox[\(=\), \(?\)]\)\\n(3) \
<\!\(\*OverscriptBox[\(g\), \(\[RightVector]\)]\),\!\(\*OverscriptBox[\(l\), \
\(\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SuperscriptBox[\({h, b, c, \
d}\), \(*\)], \(\[RightVector]\)]\),\!\(\*OverscriptBox[\(r\), \(\
\[RightVector]\)]\)> =\\n(4) \!\(\*SubsuperscriptBox[\(P\), \({h, b, c, d}\), \
\(+\)]\) - \!\(\*SubscriptBox[\(h\[Mu]\), \({h, b, c, d}\)]\)\>\"", ",", 
         "\"\<\>\"", ",", "\"\<1,4: P,V (implicit)\\n2,3: P\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SubsuperscriptBox["P", "h", "*"], "==", 
            RowBox[{
             SubsuperscriptBox["P", "h", "+"], "-", 
             RowBox[{"h", "*", 
              SubscriptBox["\[Mu]", "h"]}]}]}], ",", 
           RowBox[{
            SubsuperscriptBox["P", "b", "*"], "==", 
            RowBox[{
             SubsuperscriptBox["P", "b", "+"], "-", 
             RowBox[{"h", "*", 
              SubscriptBox["\[Mu]", "b"]}]}]}], ",", 
           RowBox[{
            SubsuperscriptBox["P", "c", "*"], "==", 
            RowBox[{
             SubsuperscriptBox["P", "c", "+"], "-", 
             RowBox[{"h", "*", 
              SubscriptBox["\[Mu]", "c"]}]}]}], ",", 
           RowBox[{
            SubsuperscriptBox["P", "d", "*"], "==", 
            RowBox[{
             SubsuperscriptBox["P", "d", "+"], "-", 
             RowBox[{"h", "*", 
              SubscriptBox["\[Mu]", "d"]}]}]}]}], "}"}]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<(1) \!\(\*SubsuperscriptBox[\(P\), \(W\), \(*\)]\) :=\\n(2) \
<\!\(\*OverscriptBox[SubscriptBox[\(a\), \(W\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(G\), \(\[RightVector]\)]\)> + <\!\
\(\*OverscriptBox[SubscriptBox[\(b\), \(W\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[\(H\), \(\[RightVector]\)]\)> \
\!\(\*OverscriptBox[\(=\), \(?\)]\)\\n(3) <\!\(\*OverscriptBox[\(g\), \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(l\), \(W\)], \(\
\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SuperscriptBox[\(h\), \(*\)], \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(r\), \(W\)], \(\
\[RightVector]\)]\)> =\\n(4) \!\(\*SubsuperscriptBox[\(P\), \(W\), \(+\)]\) - \
\!\(\*SubscriptBox[\(h\[Mu]\), \(W\)]\)\>\"", ",", "\"\<\>\"", ",", 
         "\"\<1,4: P,V (implicit)\\n2,3: P\>\"", ",", 
         RowBox[{
          SubsuperscriptBox["P", "W", "*"], "==", 
          RowBox[{
           SubsuperscriptBox["P", "W", "+"], "-", 
           RowBox[{"h", "*", 
            SubscriptBox["\[Mu]", "W"]}]}]}]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubsuperscriptBox[\(P\), \({h, b, c, d}\), \('\)]\) := \
\!\(\*SubsuperscriptBox[\(P\), \({h, b, c, d}\), \(*\)]\) + \
\!\(\*SuperscriptBox[\(cg\), \('\)]\)\>\"", ",", 
         "\"\<Combination of\\nShuffle Proof\\nConditions\\nBased on \
\!\(\*OverscriptBox[\(h\), \(\[RightVector]\)]\), \!\(\*OverscriptBox[\(b\), \
\(\[RightVector]\)]\), \!\(\*OverscriptBox[\(c\), \(\[RightVector]\)]\) resp. \
\!\(\*OverscriptBox[\(d\), \(\[RightVector]\)]\)\>\"", ",", 
         "\"\<P,V (implicit)\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           SubsuperscriptBox["P", "h", "'"], ",", 
           SubsuperscriptBox["P", "b", "'"], ",", 
           SubsuperscriptBox["P", "c", "'"], ",", 
           SubsuperscriptBox["P", "d", "'"]}], "}"}]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubsuperscriptBox[\(P\), \({h, b, c, d}\), \('\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) \!\(\*SubsuperscriptBox[\(P\), \({h, b, \
c, d}\), \(+\)]\) - \!\(\*SubscriptBox[\(\[Mu]\), \({h, b, c, d}\)]\)h + \!\(\
\*OverscriptBox[\(t\), \(^\)]\)\!\(\*SuperscriptBox[\(g\), \('\)]\)\>\"", 
         ",", "\"\<The way V\\nis calculating \!\(\*SubsuperscriptBox[\(P\), \
\({h, b, c, d}\), \('\)]\)\>\"", ",", "\"\<P,V\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SubsuperscriptBox["P", "h", "'"], "==", 
            RowBox[{
             SubsuperscriptBox["P", "h", "+"], "-", 
             RowBox[{
              SubscriptBox["\[Mu]", "h"], "*", "h"}], "+", 
             RowBox[{
              OverscriptBox["t", "^"], "*", 
              SuperscriptBox["g", "'"]}]}]}], ",", 
           RowBox[{
            SubsuperscriptBox["P", "b", "'"], "==", 
            RowBox[{
             SubsuperscriptBox["P", "b", "+"], "-", 
             RowBox[{
              SubscriptBox["\[Mu]", "b"], "*", "h"}], "+", 
             RowBox[{
              OverscriptBox["t", "^"], "*", 
              SuperscriptBox["g", "'"]}]}]}], ",", 
           RowBox[{
            SubsuperscriptBox["P", "c", "'"], "==", 
            RowBox[{
             SubsuperscriptBox["P", "c", "+"], "-", 
             RowBox[{
              SubscriptBox["\[Mu]", "c"], "*", "h"}], "+", 
             RowBox[{
              OverscriptBox["t", "^"], "*", 
              SuperscriptBox["g", "'"]}]}]}], ",", 
           RowBox[{
            SubsuperscriptBox["P", "d", "'"], "==", 
            RowBox[{
             SubsuperscriptBox["P", "d", "+"], "-", 
             RowBox[{
              SubscriptBox["\[Mu]", "d"], "*", "h"}], "+", 
             RowBox[{
              OverscriptBox["t", "^"], "*", 
              SuperscriptBox["g", "'"]}]}]}]}], "}"}]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubsuperscriptBox[\(P\), \(W\), \('\)]\) := \
\!\(\*SubsuperscriptBox[\(P\), \(W\), \(*\)]\) + \!\(\*SubscriptBox[\(c\), \
\(W\)]\)\!\(\*SuperscriptBox[\(g\), \('\)]\)\>\"", ",", 
         "\"\<Combination of\\nPR Proof\\nConditions\>\"", ",", 
         "\"\<P,V (implicit)\>\"", ",", 
         SubsuperscriptBox["P", "W", "'"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubsuperscriptBox[\(P\), \(W\), \('\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) \!\(\*SubsuperscriptBox[\(P\), \(W\), \(+\
\)]\) - \!\(\*SubscriptBox[\(\[Mu]\), \(W\)]\)h + \
\!\(\*OverscriptBox[SubscriptBox[\(t\), \(W\)], \(^\)]\)\!\(\*SuperscriptBox[\
\(g\), \('\)]\)\>\"", ",", 
         "\"\<The way V\\nis calculating \!\(\*SubsuperscriptBox[\(P\), \
\(W\), \('\)]\)\>\"", ",", "\"\<P,V\>\"", ",", 
         RowBox[{
          SubsuperscriptBox["P", "W", "'"], "==", 
          RowBox[{
           SubsuperscriptBox["P", "W", "+"], "-", 
           RowBox[{
            SubscriptBox["\[Mu]", "W"], "*", "h"}], "+", 
           RowBox[{
            OverscriptBox[
             SubscriptBox["t", "W"], "^"], "*", 
            SuperscriptBox["g", "'"]}]}]}]}], "}"}]}], "\[IndentingNewLine]", 
      "}"}], ",", " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left", ",", "Left"}], "}"}], 
       "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "interactive"}], ",", 
    RowBox[{"Print", "[", 
     RowBox[{"FiatShamirGrid", "[", "]"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"CommunicationCostGrid", "[", "]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"ProcessNewMessages", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"StateMachineSave", "[", "\"\<inner_product_setup\>\"", "]"}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.880176997903616*^9, 3.880177006815494*^9}, {
   3.88017896451156*^9, 3.88017897379574*^9}, 3.8801812255268908`*^9, {
   3.880181398353156*^9, 3.880181409762622*^9}, {3.8801814426434183`*^9, 
   3.8801814448432198`*^9}, {3.8801814990585814`*^9, 3.88018152758603*^9}, {
   3.8801815636756353`*^9, 3.8801816216774073`*^9}, {3.880181656820722*^9, 
   3.88018170762073*^9}, {3.880181759815432*^9, 3.8801819014837627`*^9}, {
   3.880181996944119*^9, 3.880182167698957*^9}, {3.880182274996242*^9, 
   3.8801823269121304`*^9}, {3.880182706176051*^9, 3.8801827740634737`*^9}, {
   3.880182990078308*^9, 3.880182991308283*^9}, {3.880183036037154*^9, 
   3.880183071447262*^9}, {3.880183104699847*^9, 3.880183120359179*^9}, {
   3.8801834476002283`*^9, 3.880183513678368*^9}, {3.880183745679297*^9, 
   3.88018377881312*^9}, {3.880183841040388*^9, 3.8801841825449057`*^9}, {
   3.8801842250955544`*^9, 3.8801843055090647`*^9}, {3.8801843828594303`*^9, 
   3.880184824547505*^9}, {3.880184862608967*^9, 3.880184863164784*^9}, {
   3.8801850466377897`*^9, 3.880185051128821*^9}, {3.880314158182897*^9, 
   3.880314170219771*^9}, {3.880316282721386*^9, 3.880316335401243*^9}, {
   3.8803172732900963`*^9, 3.8803172934544353`*^9}, {3.8803175748219748`*^9, 
   3.880317577639402*^9}, {3.88031865613377*^9, 3.880318656810638*^9}, {
   3.880444837210267*^9, 3.880444837705865*^9}, {3.881422219123683*^9, 
   3.8814222521848583`*^9}, {3.8814225422954884`*^9, 3.881422619926873*^9}, {
   3.881422652701913*^9, 3.881423007151497*^9}, {3.881423047558651*^9, 
   3.881423144880308*^9}, {3.881423293831607*^9, 3.881423304960064*^9}, {
   3.8826207770940037`*^9, 3.882620777834773*^9}, {3.882620824405415*^9, 
   3.8826208248545856`*^9}, {3.882621101812855*^9, 3.882621108134468*^9}, {
   3.8826213333224487`*^9, 3.882621454705687*^9}, {3.8826215250924883`*^9, 
   3.882621612177423*^9}, {3.882623153225078*^9, 3.882623156897641*^9}, {
   3.8826234746352863`*^9, 3.882623572637047*^9}, {3.882623606437666*^9, 
   3.882623612843706*^9}, 3.882623700627502*^9, {3.882623731404642*^9, 
   3.8826237659053392`*^9}, {3.882623897776725*^9, 3.882623932913796*^9}, {
   3.882624075106051*^9, 3.8826240874212503`*^9}, {3.8826241186495256`*^9, 
   3.882624133425355*^9}, {3.882624174196127*^9, 3.8826242777086163`*^9}, 
   3.882624474736305*^9, {3.882624517758301*^9, 3.882624650784144*^9}, {
   3.882624697211668*^9, 3.882624697562608*^9}, {3.8826247379087276`*^9, 
   3.882624783764133*^9}, {3.882624871989564*^9, 3.882625251659041*^9}, {
   3.882625286258099*^9, 3.882625399601571*^9}, {3.88262542975965*^9, 
   3.8826254672898407`*^9}, {3.8826254980364237`*^9, 
   3.8826256446287537`*^9}, {3.88262568391854*^9, 3.8826258936206007`*^9}, {
   3.882625992130237*^9, 3.882626320924451*^9}, {3.882626417780987*^9, 
   3.8826264637620287`*^9}, {3.8826265265597563`*^9, 3.882626853849914*^9}, {
   3.882627265815353*^9, 3.882627268118409*^9}, {3.8826273201629*^9, 
   3.882627380204967*^9}, {3.882627431934901*^9, 3.882627505730157*^9}, {
   3.882627536180019*^9, 3.882627545048173*^9}, {3.882627599716195*^9, 
   3.882627647455503*^9}, {3.8826285400115557`*^9, 3.882628567383662*^9}, {
   3.882628623655027*^9, 3.882628637252529*^9}, {3.8826286752984743`*^9, 
   3.882628698642397*^9}, {3.882629152393485*^9, 3.88262920406627*^9}, {
   3.882629234301022*^9, 3.882629300017096*^9}, {3.882629414055821*^9, 
   3.882629419977401*^9}, {3.88262983800565*^9, 3.882629936935417*^9}, {
   3.882629987084567*^9, 3.8826299945983667`*^9}, {3.882630042267148*^9, 
   3.8826300800210457`*^9}, {3.882630122010371*^9, 3.882630310459004*^9}, {
   3.8826305298039207`*^9, 3.882630605854007*^9}, {3.8826308911700172`*^9, 
   3.882630895863329*^9}, {3.882630968383841*^9, 3.882630970249279*^9}, {
   3.882631102614801*^9, 3.882631122451066*^9}, {3.882631172217104*^9, 
   3.882631188358602*^9}, {3.88268279226572*^9, 3.882682793358436*^9}, {
   3.882682825128171*^9, 3.882682905649119*^9}, {3.882682941456689*^9, 
   3.882683035340578*^9}, {3.882683097616954*^9, 3.8826831243599997`*^9}, {
   3.8826832079267187`*^9, 3.88268322636056*^9}, {3.8826832720524406`*^9, 
   3.882683272563937*^9}, {3.88268393033654*^9, 3.882683970774704*^9}, {
   3.882684453729652*^9, 3.882684457833633*^9}, {3.88287169323452*^9, 
   3.88287169526972*^9}, {3.882872155689251*^9, 3.8828721840974483`*^9}, {
   3.882872240113267*^9, 3.88287230451122*^9}, {3.882872401594884*^9, 
   3.882872445630475*^9}, {3.8828725706559477`*^9, 3.88287257218093*^9}, {
   3.882874647868102*^9, 3.882874657894518*^9}, {3.882874692505217*^9, 
   3.882874712980083*^9}, {3.8829062248131247`*^9, 3.882906225436141*^9}, 
   3.882906526352764*^9, {3.8829580077676487`*^9, 3.882958010785356*^9}, {
   3.882958114564476*^9, 3.8829581252195377`*^9}, {3.8829582246042213`*^9, 
   3.882958274277948*^9}, {3.8829584556314497`*^9, 3.882958496995678*^9}, {
   3.882958529930963*^9, 3.882958582477921*^9}, {3.882959074530908*^9, 
   3.882959107314625*^9}, {3.882959152218637*^9, 3.882959187654585*^9}, {
   3.882959271316031*^9, 3.882959488085753*^9}, {3.882959527465816*^9, 
   3.882959588550624*^9}, {3.8829596448093367`*^9, 3.882959704198756*^9}, {
   3.882959744644762*^9, 3.882959831292804*^9}, {3.882960201889804*^9, 
   3.8829602415903587`*^9}, {3.882960320722063*^9, 3.882960321899201*^9}, {
   3.88313300273757*^9, 3.8831330139229107`*^9}, {3.883508296361834*^9, 
   3.883508329084527*^9}, {3.8835121783246727`*^9, 3.883512187977483*^9}, {
   3.883513288099462*^9, 3.8835132883305807`*^9}, {3.883713059045032*^9, 
   3.883713061975047*^9}, {3.884349983475937*^9, 3.884349985069503*^9}, {
   3.884350020656683*^9, 3.884350153081869*^9}, {3.88478492095297*^9, 
   3.8847849210815268`*^9}, {3.8873530155748644`*^9, 
   3.8873530635807176`*^9}, {3.8873531217297306`*^9, 
   3.8873531268613153`*^9}, {3.8873531677135153`*^9, 3.887353170004109*^9}, {
   3.887353242240324*^9, 3.8873532631987233`*^9}, {3.8873533393770947`*^9, 
   3.8873535384690037`*^9}, {3.8873539134525237`*^9, 3.887354175806956*^9}, {
   3.887354224683109*^9, 3.8873542531833515`*^9}, {3.8873542832073545`*^9, 
   3.887354312841448*^9}, {3.887354976224515*^9, 3.8873550659971933`*^9}, {
   3.8873552193095603`*^9, 3.8873552201092834`*^9}, {3.8873555162776394`*^9, 
   3.887355556028121*^9}, {3.8873556407959065`*^9, 3.8873557105094*^9}, {
   3.8873557623215046`*^9, 3.887355768022781*^9}, {3.88735582950482*^9, 
   3.887356020015331*^9}, {3.8873562117861824`*^9, 3.8873564096291537`*^9}, {
   3.8873566364697027`*^9, 3.887356745034751*^9}, {3.8873569831326838`*^9, 
   3.8873570824047685`*^9}, {3.887357115890314*^9, 3.887357135090784*^9}, {
   3.887357702395252*^9, 3.8873577036256256`*^9}, {3.8873601020771184`*^9, 
   3.887360104171961*^9}, 3.8873601706489067`*^9, {3.8873907507229977`*^9, 
   3.887390778109973*^9}, {3.887392502303525*^9, 3.8873925390000577`*^9}, {
   3.8873960377162495`*^9, 3.887396039974807*^9}, {3.8873961191367483`*^9, 
   3.887396120195592*^9}, {3.8874908675345144`*^9, 3.887490867716958*^9}, {
   3.892279248795033*^9, 3.89227925089471*^9}, {3.892279297741334*^9, 
   3.892279392739946*^9}, {3.8922794643385963`*^9, 3.892279488188856*^9}, {
   3.892279550740053*^9, 3.8922795799428368`*^9}, {3.892279644156551*^9, 
   3.892279682627396*^9}, {3.892279769527017*^9, 3.892279775855711*^9}, {
   3.892280337951572*^9, 3.892280360496025*^9}, {3.892280424117546*^9, 
   3.892280443595283*^9}, {3.892280478457492*^9, 3.892280605280066*^9}, {
   3.892480595573666*^9, 3.892480629686801*^9}, {3.8924808712276077`*^9, 
   3.892481029617671*^9}, {3.892481343935094*^9, 3.892481462419512*^9}, {
   3.892481499640921*^9, 3.89248152727452*^9}, {3.892481584747057*^9, 
   3.892481655266346*^9}, {3.892481695479455*^9, 3.892481772645609*^9}, {
   3.8924818568425426`*^9, 3.892482134180829*^9}, {3.892482175107458*^9, 
   3.8924821789318132`*^9}, {3.898330034141533*^9, 3.8983300398922644`*^9}, {
   3.898334904549183*^9, 3.898334920352315*^9}, {3.8983350815867243`*^9, 
   3.898335145069361*^9}, {3.89833742942799*^9, 3.898337432102622*^9}, {
   3.8983377118522887`*^9, 3.898337711966152*^9}, {3.8983379510825872`*^9, 
   3.898337951165939*^9}, {3.899027774323803*^9, 3.8990278067898245`*^9}, {
   3.8990278800111876`*^9, 3.8990279921901464`*^9}, {3.8990280348413105`*^9, 
   3.8990280842053785`*^9}, {3.8990281247045913`*^9, 3.899028165691496*^9}, {
   3.8990282201267433`*^9, 3.899028417746507*^9}, {3.899031601231619*^9, 
   3.899031626203148*^9}, {3.8992919946679244`*^9, 3.8992920140423994`*^9}, {
   3.8992922494559803`*^9, 3.8992922574390564`*^9}, 3.8993078152061763`*^9, 
   3.899384965795641*^9, 3.91129442984382*^9, {3.911400093624672*^9, 
   3.9114001287426033`*^9}, {3.9114032203861785`*^9, 
   3.9114033147357755`*^9}, {3.9114033755814543`*^9, 3.9114035057784185`*^9}},
 
 CellLabel->
  "In[333]:=",ExpressionUUID->"26e914ac-a14a-4788-87e5-df4b23a3f9f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Halving Iterations", "Subsection",
 CellChangeTimes->{{3.887360148490834*^9, 
  3.887360155487077*^9}},ExpressionUUID->"05a9b2c2-f72e-475c-8292-\
7892d63094c1"],

Cell[TextData[{
 "Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"{", 
      RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]], ":=", 
    SubsuperscriptBox["P", 
     RowBox[{"{", 
      RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}], "'"]}], 
   TraditionalForm]],ExpressionUUID->"75e8fef8-7274-479c-93ee-19bee0b626e5"],
 "\nContinue to:\n- Split and halve ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["G", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "c91ea4f0-b161-4476-b0cb-934e34ca3e51"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["H", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "697ab0e1-90b8-4501-91e9-d3c8cb11bb7d"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["B", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "8f2be653-2de8-4dad-bae5-d4c82813f01b"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["C", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "282a2aa4-eba1-460f-b74d-5648c0518f31"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["D", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "37e7ad47-c9b2-49cc-8497-b8988007ff5e"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["a", "IP"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"6d59d2d7-836e-4c5c-a597-81130f7b5d78"],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["b", "IP"], "\[RightVector]"], TraditionalForm]],
  ExpressionUUID->"9dd691c3-fe3b-4b18-9c23-50d5e40be23f"],
 " based on challenges from V,\n- Make commitments ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["L", 
    RowBox[{"{", 
     RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]], TraditionalForm]],
  ExpressionUUID->"bd1e8ae4-1d88-4395-9e38-8e353f5215c6"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["R", 
    RowBox[{"{", 
     RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]], TraditionalForm]],
  ExpressionUUID->"b19d3bd3-f4a5-4b42-9129-ffff91c1bccf"],
 " to ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["a", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "cc861519-fa83-4438-9c8c-3c9b3844fb6e"],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["b", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "d08fb947-45a9-487f-a637-24a4bc23c632"],
 " and send them to V,\n- Calculate halved versions of ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["P", 
    RowBox[{"{", 
     RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}], "'"], 
   TraditionalForm]],ExpressionUUID->"7c57b226-2e96-4f1f-82ae-dd1bb53daa5a"],
 ":\nSplit into lower and higher parts:\n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["G", "lo"], "\[RightVector]"], "<>", 
     OverscriptBox[
      SubscriptBox["G", "hi"], "\[RightVector]"]}], ":=", 
    OverscriptBox["G", "\[RightVector]"]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["H", "lo"], "\[RightVector]"], "<>", 
     OverscriptBox[
      SubscriptBox["H", "hi"], "\[RightVector]"]}], ":=", 
    OverscriptBox["H", "\[RightVector]"]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["B", "lo"], "\[RightVector]"], "<>", 
     OverscriptBox[
      SubscriptBox["B", "hi"], "\[RightVector]"]}], ":=", 
    OverscriptBox["B", "\[RightVector]"]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["C", "lo"], "\[RightVector]"], "<>", 
     OverscriptBox[
      SubscriptBox["C", "hi"], "\[RightVector]"]}], ":=", 
    OverscriptBox["C", "\[RightVector]"]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["D", "lo"], "\[RightVector]"], "<>", 
     OverscriptBox[
      SubscriptBox["D", "hi"], "\[RightVector]"]}], ":=", 
    OverscriptBox["D", "\[RightVector]"]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["a", "lo"], "\[RightVector]"], "<>", 
     OverscriptBox[
      SubscriptBox["a", "hi"], "\[RightVector]"]}], ":=", 
    OverscriptBox[
     SubscriptBox["a", "IP"], "\[RightVector]"]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["b", "lo"], "\[RightVector]"], "<>", 
     OverscriptBox[
      SubscriptBox["b", "hi"], "\[RightVector]"]}], ":=", 
    OverscriptBox[
     SubscriptBox["b", "IP"], "\[RightVector]"]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["a", 
       RowBox[{"lo", ",", "W"}]], "\[RightVector]"], "<>", 
     OverscriptBox[
      SubscriptBox["a", 
       RowBox[{"hi", ",", "W"}]], "\[RightVector]"]}], ":=", 
    OverscriptBox[
     SubscriptBox["a", "W"], "\[RightVector]"]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["b", 
       RowBox[{"lo", ",", "W"}]], "\[RightVector]"], "<>", 
     OverscriptBox[
      SubscriptBox["b", 
       RowBox[{"hi", ",", "W"}]], "\[RightVector]"]}], ":=", 
    OverscriptBox[
     SubscriptBox["b", "W"], "\[RightVector]"]}], TraditionalForm]}],
  ExpressionUUID->"2526968a-3710-465f-8b49-f38670f34abf"],
 "\nMake commitments ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["L", 
    RowBox[{"{", 
     RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]], TraditionalForm]],
  ExpressionUUID->"220efe39-74bc-4399-b028-cb5b1fa3097b"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["R", 
    RowBox[{"{", 
     RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]], TraditionalForm]],
  ExpressionUUID->"120b857c-f44f-46c6-bcbb-cbc70693b0dd"],
 " which are sent to V:\n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["L", 
      RowBox[{"{", 
       RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]], ":=", 
     RowBox[{"<", 
      OverscriptBox[
       SubscriptBox["a", "lo"], "\[RightVector]"]}]}], ",", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["G", "hi"], "\[RightVector]"], ">", 
     RowBox[{"+", 
      RowBox[{"<", 
       OverscriptBox[
        SubscriptBox["b", "hi"], "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     OverscriptBox[
      SubscriptBox[
       RowBox[{"{", 
        RowBox[{"H", ",", "B", ",", "C", ",", "D"}], "}"}], "lo"], 
      "\[RightVector]"], ">", 
     RowBox[{"+", 
      RowBox[{"<", 
       OverscriptBox[
        SubscriptBox["a", "lo"], "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["b", "hi"], "\[RightVector]"], ">", 
     SuperscriptBox["g", "'"]}]}], TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["R", 
      RowBox[{"{", 
       RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]], ":=", 
     RowBox[{"<", 
      OverscriptBox[
       SubscriptBox["a", "hi"], "\[RightVector]"]}]}], ",", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["G", "lo"], "\[RightVector]"], ">", 
     RowBox[{"+", 
      RowBox[{"<", 
       OverscriptBox[
        SubscriptBox["b", "lo"], "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     OverscriptBox[
      SubscriptBox[
       RowBox[{"{", 
        RowBox[{"H", ",", "B", ",", "C", ",", "D"}], "}"}], "hi"], 
      "\[RightVector]"], ">", 
     RowBox[{"+", 
      RowBox[{"<", 
       OverscriptBox[
        SubscriptBox["a", "hi"], "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["b", "lo"], "\[RightVector]"], ">", 
     SuperscriptBox["g", "'"]}]}], TraditionalForm]}],ExpressionUUID->
  "9eb3d900-c595-4427-a33a-e709fcab8623"],
 "\nand equivalently for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["L", "W"], TraditionalForm]],ExpressionUUID->
  "ecfdad19-f492-49d9-8583-a04db45e9623"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["R", "W"], TraditionalForm]],ExpressionUUID->
  "4b6172a3-db6c-4853-99b7-8346194438f2"],
 ":\n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["L", "W"], ":=", 
     RowBox[{"<", 
      OverscriptBox[
       SubscriptBox["a", 
        RowBox[{"lo", ",", "W"}]], "\[RightVector]"]}]}], ",", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["G", "hi"], "\[RightVector]"], ">", 
     RowBox[{"+", 
      RowBox[{"<", 
       OverscriptBox[
        SubscriptBox["b", 
         RowBox[{"hi", ",", "W"}]], "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["H", "lo"], "\[RightVector]"], ">", 
     RowBox[{"+", 
      RowBox[{"<", 
       OverscriptBox[
        SubscriptBox["a", 
         RowBox[{"lo", ",", "W"}]], "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["b", 
       RowBox[{"hi", ",", "W"}]], "\[RightVector]"], ">", 
     SuperscriptBox["g", "'"]}]}], TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["R", "W"], ":=", 
     RowBox[{"<", 
      OverscriptBox[
       SubscriptBox["a", 
        RowBox[{"hi", ",", "W"}]], "\[RightVector]"]}]}], ",", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["G", "lo"], "\[RightVector]"], ">", 
     RowBox[{"+", 
      RowBox[{"<", 
       OverscriptBox[
        SubscriptBox["b", 
         RowBox[{"lo", ",", "W"}]], "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["H", "hi"], "\[RightVector]"], ">", 
     RowBox[{"+", 
      RowBox[{"<", 
       OverscriptBox[
        SubscriptBox["a", 
         RowBox[{"hi", ",", "W"}]], "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["b", 
       RowBox[{"lo", ",", "W"}]], "\[RightVector]"], ">", 
     SuperscriptBox["g", "'"]}]}], TraditionalForm]}],ExpressionUUID->
  "9e11c9d6-e648-430a-8279-21263ebe1c2e"],
 "\nReceive challenge ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["u", "IP"], TraditionalForm]],ExpressionUUID->
  "4c548070-6ddd-4fd7-8b30-166b16c6d17a"],
 " (called ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "f62bf8d2-9f81-4886-a1af-df31e2d97db6"],
 " in the Bulletproof paper). ",
 StyleBox["To avoid name collission with previous challenge u index with \
\[OpenCurlyDoubleQuote]IP\[CloseCurlyDoubleQuote].",
  FontSlant->"Italic"],
 "\nCalculate halves:\n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    OverscriptBox[
     SubscriptBox["G", "next"], "\[RightVector]"], ":=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["u", 
       RowBox[{"-", "1"}]], 
      OverscriptBox[
       SubscriptBox["G", "lo"], "\[RightVector]"]}], "+", 
     RowBox[{"u", 
      OverscriptBox[
       SubscriptBox["G", "hi"], "\[RightVector]"]}]}]}], 
   TraditionalForm], "\n", 
  FormBox[
   RowBox[{
    OverscriptBox[
     SubscriptBox["H", "next"], "\[RightVector]"], ":=", 
    RowBox[{
     RowBox[{"u", 
      OverscriptBox[
       SubscriptBox["H", "lo"], "\[RightVector]"]}], "+", 
     RowBox[{
      SuperscriptBox["u", 
       RowBox[{"-", "1"}]], 
      OverscriptBox[
       SubscriptBox["H", "hi"], "\[RightVector]"]}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    OverscriptBox[
     SubscriptBox["B", "next"], "\[RightVector]"], ":=", 
    RowBox[{
     RowBox[{"u", 
      OverscriptBox[
       SubscriptBox["B", "lo"], "\[RightVector]"]}], "+", 
     RowBox[{
      SuperscriptBox["u", 
       RowBox[{"-", "1"}]], 
      OverscriptBox[
       SubscriptBox["B", "hi"], "\[RightVector]"]}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    OverscriptBox[
     SubscriptBox["C", "next"], "\[RightVector]"], ":=", 
    RowBox[{
     RowBox[{"u", 
      OverscriptBox[
       SubscriptBox["C", "lo"], "\[RightVector]"]}], "+", 
     RowBox[{
      SuperscriptBox["u", 
       RowBox[{"-", "1"}]], 
      OverscriptBox[
       SubscriptBox["C", "hi"], "\[RightVector]"]}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    OverscriptBox[
     SubscriptBox["D", "next"], "\[RightVector]"], ":=", 
    RowBox[{
     RowBox[{"u", 
      OverscriptBox[
       SubscriptBox["D", "lo"], "\[RightVector]"]}], "+", 
     RowBox[{
      SuperscriptBox["u", 
       RowBox[{"-", "1"}]], 
      OverscriptBox[
       SubscriptBox["D", "hi"], "\[RightVector]"]}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    OverscriptBox[
     SubscriptBox["a", "next"], "\[RightVector]"], ":=", 
    RowBox[{
     RowBox[{"u", 
      OverscriptBox[
       SubscriptBox["a", "lo"], "\[RightVector]"]}], "+", 
     RowBox[{
      SuperscriptBox["u", 
       RowBox[{"-", "1"}]], 
      OverscriptBox[
       SubscriptBox["a", "hi"], "\[RightVector]"]}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    OverscriptBox[
     SubscriptBox["b", "next"], "\[RightVector]"], ":=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["u", 
       RowBox[{"-", "1"}]], 
      OverscriptBox[
       SubscriptBox["b", "lo"], "\[RightVector]"]}], "+", 
     RowBox[{"u", 
      OverscriptBox[
       SubscriptBox["b", "hi"], "\[RightVector]"]}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    OverscriptBox[
     SubscriptBox["a", 
      RowBox[{"next", ",", "W"}]], "\[RightVector]"], ":=", 
    RowBox[{
     RowBox[{"u", 
      OverscriptBox[
       SubscriptBox["a", 
        RowBox[{"lo", ",", "W"}]], "\[RightVector]"]}], "+", 
     RowBox[{
      SuperscriptBox["u", 
       RowBox[{"-", "1"}]], 
      OverscriptBox[
       SubscriptBox["a", 
        RowBox[{"hi", ",", "W"}]], "\[RightVector]"]}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    OverscriptBox[
     SubscriptBox["b", 
      RowBox[{"next", ",", "W"}]], "\[RightVector]"], ":=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["u", 
       RowBox[{"-", "1"}]], 
      OverscriptBox[
       SubscriptBox["b", 
        RowBox[{"lo", ",", "W"}]], "\[RightVector]"]}], "+", 
     RowBox[{"u", 
      OverscriptBox[
       SubscriptBox["b", 
        RowBox[{"hi", ",", "W"}]], "\[RightVector]"]}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"next", ",", 
      RowBox[{"{", 
       RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}]}]], ":=", 
    
    RowBox[{
     SubscriptBox["P", 
      RowBox[{"{", 
       RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}]], "+", 
     RowBox[{
      SuperscriptBox["u", "2"], 
      SubscriptBox["L", 
       RowBox[{"{", 
        RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}]]}], "+", 
     
     RowBox[{
      SuperscriptBox["u", 
       RowBox[{"-", "2"}]], 
      SubscriptBox["R", 
       RowBox[{"{", 
        RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}]]}]}]}], 
   TraditionalForm]}],ExpressionUUID->
  "752699ca-74a2-4973-8a8e-bd1ada1fb982"],
 "\nThe equalities ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["P", 
      RowBox[{"next", ",", 
       RowBox[{"{", 
        RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]}]], "=", 
     RowBox[{"<", 
      OverscriptBox[
       SubscriptBox["a", "next"], "\[RightVector]"]}]}], ",", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["G", "next"], "\[RightVector]"], ">", 
     RowBox[{"+", 
      RowBox[{"<", 
       OverscriptBox[
        SubscriptBox["b", "next"], "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     OverscriptBox[
      SubscriptBox[
       RowBox[{"{", 
        RowBox[{"H", ",", "B", ",", "C", ",", "D"}], "}"}], "next"], 
      "\[RightVector]"], ">", 
     RowBox[{"+", 
      RowBox[{"<", 
       OverscriptBox[
        SubscriptBox["a", "next"], "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["b", "next"], "\[RightVector]"], ">", 
     SuperscriptBox["g", "'"]}]}], TraditionalForm]],ExpressionUUID->
  "5c971db3-10f9-4d4a-8ef4-688118ce98a8"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["P", 
      RowBox[{"next", ",", "W"}]], "=", 
     RowBox[{"<", 
      OverscriptBox[
       SubscriptBox["a", 
        RowBox[{"next", ",", "W"}]], "\[RightVector]"]}]}], ",", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["G", "next"], "\[RightVector]"], ">", 
     RowBox[{"+", 
      RowBox[{"<", 
       OverscriptBox[
        SubscriptBox["b", 
         RowBox[{"next", ",", "W"}]], "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["H", "next"], "\[RightVector]"], ">", 
     RowBox[{"+", 
      RowBox[{"<", 
       OverscriptBox[
        SubscriptBox["a", 
         RowBox[{"next", ",", "W"}]], "\[RightVector]"]}]}]}], ",", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["b", 
       RowBox[{"next", ",", "W"}]], "\[RightVector]"], ">", 
     SuperscriptBox["g", "'"]}]}], TraditionalForm]],ExpressionUUID->
  "f0b38196-d90b-47b5-aeba-3989a7648f71"],
 " will hold. This equalities form the backbone of the Bulletproof inner \
product protocol.\nSet ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"{", 
      RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}]], ":=", 
    SubscriptBox["P", 
     RowBox[{"next", ",", 
      RowBox[{"{", 
       RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}]}]]}], 
   TraditionalForm]],ExpressionUUID->"70e52036-05d7-4479-92a5-02ba7c759312"],
 " and go to next iteration until the size of the halved vectors has reached \
1.\nLast single-valued step:\n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    SubscriptBox["G", "0"], ":=", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["G", "next"], "\[RightVector]"], "[", "1", "]"}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    SubscriptBox["H", "0"], ":=", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["H", "next"], "\[RightVector]"], "[", "1", "]"}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    SubscriptBox["B", "0"], ":=", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["B", "next"], "\[RightVector]"], "[", "1", "]"}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    SubscriptBox["C", "0"], ":=", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["C", "next"], "\[RightVector]"], "[", "1", "]"}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    SubscriptBox["D", "0"], ":=", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["D", "next"], "\[RightVector]"], "[", "1", "]"}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    SubscriptBox["a", "0"], ":=", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["a", "next"], "\[RightVector]"], "[", "1", "]"}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    SubscriptBox["b", "0"], ":=", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["b", "next"], "\[RightVector]"], "[", "1", "]"}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    SubscriptBox["a", 
     RowBox[{"0", ",", "W"}]], ":=", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["a", 
       RowBox[{"next", ",", "W"}]], "\[RightVector]"], "[", "1", "]"}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    SubscriptBox["b", 
     RowBox[{"0", ",", "W"}]], ":=", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["b", 
       RowBox[{"next", ",", "W"}]], "\[RightVector]"], "[", "1", "]"}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}]}]], ":=", 
    
    SubscriptBox["P", 
     RowBox[{"{", 
      RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}]]}], 
   TraditionalForm]}],ExpressionUUID->
  "0646e65c-83c8-47f3-8864-cae3d655ca0b"],
 "\nSend ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "0"], TraditionalForm]],ExpressionUUID->
  "046eb1e7-bd41-4dde-89ff-37237eaacf0b"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["b", "0"], TraditionalForm]],ExpressionUUID->
  "3afe5df3-3dfa-48b7-933f-8d34bcfe91c5"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", 
    RowBox[{"0", ",", "W"}]], TraditionalForm]],ExpressionUUID->
  "57bb8b05-1a23-47a2-9fdf-44b6194313ec"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["b", 
    RowBox[{"0", ",", "W"}]], TraditionalForm]],ExpressionUUID->
  "fe441c20-f807-4a31-8aa6-559013e30414"],
 " to the verifier.\nThe \[OpenCurlyDoubleQuote]anatomy\
\[CloseCurlyDoubleQuote] of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}]}]], 
   TraditionalForm]],ExpressionUUID->"a4b77876-fdf4-4b25-8ed9-f2041462ae23"],
 " is: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["P", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}]}]], "=", 
     
     RowBox[{
      RowBox[{
       SubsuperscriptBox["P", 
        RowBox[{"{", 
         RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}], "'"], 
       "+"}], "<", 
      SubsuperscriptBox["u", "2", "2"]}]}], ",", 
    RowBox[{
     SubscriptBox["L", 
      RowBox[{"2", ",", 
       RowBox[{"{", 
        RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}]}]], ">", 
     
     RowBox[{"+", 
      RowBox[{"<", 
       SubsuperscriptBox["u", "2", 
        RowBox[{"-", "2"}]]}]}]}], ",", 
    RowBox[{
     SubscriptBox["R", 
      RowBox[{"2", ",", 
       RowBox[{"{", 
        RowBox[{"h", ",", "b", ",", "c", ",", "d", ",", "W"}], "}"}]}]], 
     ">"}]}], TraditionalForm]],ExpressionUUID->
  "623efb43-588c-4657-840b-3020b2a5d0f7"],
 ". This can be calculated as a sanity check at the end.\nThe verifier will \
calculate ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["c", "0"], ":=", 
    RowBox[{
     SubscriptBox["a", "0"], 
     SubscriptBox["b", "0"]}]}], TraditionalForm]],ExpressionUUID->
  "20a95fe6-7f19-4186-9380-c1680ae6a878"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["c", 
     RowBox[{"0", ",", "W"}]], ":=", 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"0", ",", "W"}]], 
     SubscriptBox["b", 
      RowBox[{"0", ",", "W"}]]}]}], TraditionalForm]],ExpressionUUID->
  "2370c9b9-f1fd-4b83-9975-ef1c1f3557be"],
 " and check if his version of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]}]], 
   TraditionalForm]],ExpressionUUID->"4f2fae46-3cd1-43e6-97ed-04d7126de98e"],
 " resp. ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", 
    RowBox[{"0", ",", "W"}]], TraditionalForm]],ExpressionUUID->
  "5121d3d6-89e9-4442-abb1-c0a229fa5514"],
 " equals ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["a", "0"], "*", 
     SubscriptBox["G", "0"]}], "+", 
    RowBox[{
     SubscriptBox["b", "0"], "*", 
     SubscriptBox[
      RowBox[{"{", 
       RowBox[{"H", ",", "B", ",", "C", ",", "D"}], "}"}], "0"]}], "+", 
    RowBox[{
     SubscriptBox["c", "0"], "*", 
     SuperscriptBox["g", "'"]}]}], TraditionalForm]],ExpressionUUID->
  "2b8e6abd-370b-4023-aeb4-6ba972d969f6"],
 " resp. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"0", ",", "W"}]], "*", 
     SubscriptBox["G", "0"]}], "+", 
    RowBox[{
     SubscriptBox["b", 
      RowBox[{"0", ",", "W"}]], "*", 
     SubscriptBox["H", "0"]}], "+", 
    RowBox[{
     SubscriptBox["c", 
      RowBox[{"0", ",", "W"}]], "*", 
     SuperscriptBox["g", "'"]}]}], TraditionalForm]],ExpressionUUID->
  "78fe8c63-11ef-488c-bbd0-3f6c113b8b92"],
 ". These final verification steps mark the end of the inner product \
protocol.\n",
 StyleBox["Note on implementation:",
  FontWeight->"Bold"],
 " Indices of vectors count up from 1 to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["log", "2"], 
     SubscriptBox["n", "pow2"]}], "+", "1"}], TraditionalForm]],
  ExpressionUUID->"1f673dbc-bfdc-49f1-99cc-f0903b1d796d"],
 " (",
 Cell[BoxData[
 "currentIteration"], "InlineCode",ExpressionUUID->
  "af12ec32-bb46-49f3-84d6-8aec5299cf51"],
 ") and numbers for names of elements of vectors count down from ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["log", "2"], 
    SubscriptBox["n", "pow2"]}], TraditionalForm]],ExpressionUUID->
  "97b60865-f1d2-4945-9c95-c7b20c875d42"],
 " to 0 (",
 Cell[BoxData[
  RowBox[{"k", ",", " ", "ciStr"}]], "InlineCode",ExpressionUUID->
  "2ac1946c-3202-4c34-bbcb-c021d5b30c3d"],
 "), i.e. for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["n", "pow2"], "=", 
    RowBox[{"16", ":"}]}], TraditionalForm]],ExpressionUUID->
  "a4c274c3-00c3-4d58-823c-f64f3403170e"],
 " w[1]=w.4, w[2]=w.3, ... w[5]=w.0"
}], "Text",
 CellChangeTimes->CompressedData["
1:eJwdz20o43EAB/B/Wso8vCDJ0g5peKF24SSr+/+94DDtTFuxulvcQoslChEp
xXSG4rLNSVc7nbucxbl44+GERjrPj3nOZjZOMRsvdr/v/8W3T993329UkUaq
8qEoSkACv5j3wztcDqax286DP+f/8qFOPhwNF/xD4+G4VJMKBXOm93CQJ1NC
oWpZBVcUHjWsGpushEOL9lr4OlWmhbIQng5upxl6YU9DsAlaPkz8gKdvhWbY
lMb9BRUDrYuweCbnjN0XsPsP7vkFPcCIP7EueG+wheiIynVaBLnJL8I6ie2S
wHDIGRlJh1/XojJg3kfKqidGnn+zwaSjuQ0DUXP+uAkP7RajkRh3XTYKqWyr
vB+/j1KaoVcWL/5MTEzQ5sKzqdpSmJE8ybow7KqCNwVZNbBGvGWHlrU6B+TM
Cu8g/10La4+e64Z9b7pYG4/147deB9Nx+zwBL0J9JFLKybg35CXwO/1KDcc+
tZWzPfqpEoqu+C0w1lbcm0/001azdtGCpdUAJxNDGy2waHp+lTVBvwM9mxUH
8Hf6lBveZypnJIFOhlsoX4K+proTKH5etkLFZb0bbr+kPVC0X8Epi3EyuoNM
Hizt5ySqiUGi4CT4H/F4UxI=
  "],ExpressionUUID->"8e76743e-26fe-4b9d-90fd-8103a993730c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"StateMachineRestore", "[", "\"\<inner_product_setup\>\"", "]"}], 
   ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["n", "2"], " ", "=", " ", 
   RowBox[{"{", 
    SubscriptBox["n", "pow2"], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["k", "2"], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"Log2", "[", 
      SubscriptBox["n", "pow2"], "]"}], "}"}]}], ";"}], "\n", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Re", "-", 
     RowBox[{"initialize", " ", "G"}]}], ",", " ", "H", ",", " ", "B", ",", 
    " ", "C", ",", " ", "D", ",", " ", "a", ",", " ", 
    RowBox[{
    "b", " ", "and", " ", "P", " ", "in", " ", "case", " ", "of", " ", 
     "multiple", " ", "cell", " ", "evaluations"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["G", "2"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["G", "2"], "\[RightVector]"], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["H", "2"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["H", "2"], "\[RightVector]"], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["B", "2"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["B", "2"], "\[RightVector]"], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["C", "2"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["C", "2"], "\[RightVector]"], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["D", "2"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["D", "2"], "\[RightVector]"], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["a", "2"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["a", "2"], "\[RightVector]"], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["b", "2"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["b", "2"], "\[RightVector]"], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["a", 
     RowBox[{"2", ",", "W"}]], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["a", 
       RowBox[{"2", ",", "W"}]], "\[RightVector]"], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["b", 
     RowBox[{"2", ",", "W"}]], "\[RightVector]"], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["b", 
       RowBox[{"2", ",", "W"}]], "\[RightVector]"], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"2", ",", "h"}]], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["P", 
      RowBox[{"2", ",", "h"}]], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"2", ",", "b"}]], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["P", 
      RowBox[{"2", ",", "b"}]], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"2", ",", "c"}]], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["P", 
      RowBox[{"2", ",", "c"}]], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"2", ",", "d"}]], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["P", 
      RowBox[{"2", ",", "d"}]], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"2", ",", "W"}]], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"2", ",", "W"}]], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["L", 
    RowBox[{"2", ",", "h"}]], " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["L", 
    RowBox[{"2", ",", "b"}]], " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["L", 
    RowBox[{"2", ",", "c"}]], " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["L", 
    RowBox[{"2", ",", "d"}]], " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["L", 
    RowBox[{"2", ",", "W"}]], " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", 
    RowBox[{"2", ",", "h"}]], " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", 
    RowBox[{"2", ",", "b"}]], " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", 
    RowBox[{"2", ",", "c"}]], " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", 
    RowBox[{"2", ",", "d"}]], " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", 
    RowBox[{"2", ",", "W"}]], " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["u", "2"], " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"currentIteration", " ", "=", " ", "1"}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["n", "2"], "[", 
      RowBox[{"[", "currentIteration", "]"}], "]"}], " ", "!=", " ", "1"}], 
    ",", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"ciStr", " ", "=", " ", 
      RowBox[{"IntegerString", "[", 
       RowBox[{
        SubscriptBox["k", "2"], "[", 
        RowBox[{"[", "currentIteration", "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"Print", "[", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<Iteration \>\"", "<>", "ciStr", "<>", 
              "\"\< (Counting from \>\"", "<>", 
              RowBox[{"IntegerString", "[", 
               RowBox[{
                SubscriptBox["k", "2"], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
              "\"\< to 0)\>\""}], "]"}], ",", " ", "SpanFromLeft", ",", " ", 
            "SpanFromLeft", ",", " ", "SpanFromLeft"}], "}"}], ",", "\n", 
          "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Semantics\>\"", ",", "Bold"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Knowledge\>\"", ",", "Bold"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<k := \!\(\*SubscriptBox[\(k\), \(2\)]\).\>\"", "<>", 
             "ciStr"}], ",", "\"\<Current Iteration\\n(counting down)\>\"", 
            ",", "\"\<P,V\>\"", ",", 
            RowBox[{
             SubscriptBox["k", "2"], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(n\), \(2\)]\).\>\"", "<>", "ciStr", 
             "<>", "\"\< = \!\(\*SuperscriptBox[\(2\), \(k\)]\)\>\""}], ",", 
            "\"\<Current Length\\nof Vectors\>\"", ",", "\"\<P,V\>\"", ",", 
            RowBox[{
             SubscriptBox["n", "2"], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<\!\(\*OverscriptBox[\(G\), \(\[RightVector]\)]\) := \
\!\(\*OverscriptBox[SubscriptBox[\(G\), \(2\)], \(\[RightVector]\)]\).\>\"", "<>",
              "ciStr"}], ",", "\"\<\>\"", ",", "\"\<P,V (implicit)\>\"", ",", 
            
            RowBox[{
             OverscriptBox[
              SubscriptBox["G", "2"], "\[RightVector]"], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<\!\(\*OverscriptBox[\(H\), \(\[RightVector]\)]\) := \
\!\(\*OverscriptBox[SubscriptBox[\(H\), \(2\)], \(\[RightVector]\)]\).\>\"", "<>",
              "ciStr"}], ",", "\"\<\>\"", ",", "\"\<P,V (implicit)\>\"", ",", 
            
            RowBox[{
             OverscriptBox[
              SubscriptBox["H", "2"], "\[RightVector]"], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<\!\(\*OverscriptBox[\(B\), \(\[RightVector]\)]\) := \
\!\(\*OverscriptBox[SubscriptBox[\(B\), \(2\)], \(\[RightVector]\)]\).\>\"", "<>",
              "ciStr"}], ",", "\"\<\>\"", ",", "\"\<P,V (implicit)\>\"", ",", 
            
            RowBox[{
             OverscriptBox[
              SubscriptBox["B", "2"], "\[RightVector]"], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<\!\(\*OverscriptBox[\(C\), \(\[RightVector]\)]\) := \
\!\(\*OverscriptBox[SubscriptBox[\(C\), \(2\)], \(\[RightVector]\)]\).\>\"", "<>",
              "ciStr"}], ",", "\"\<\>\"", ",", "\"\<P,V (implicit)\>\"", ",", 
            
            RowBox[{
             OverscriptBox[
              SubscriptBox["C", "2"], "\[RightVector]"], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<\!\(\*OverscriptBox[\(D\), \(\[RightVector]\)]\) := \
\!\(\*OverscriptBox[SubscriptBox[\(D\), \(2\)], \(\[RightVector]\)]\).\>\"", "<>",
              "ciStr"}], ",", "\"\<\>\"", ",", "\"\<P,V (implicit)\>\"", ",", 
            
            RowBox[{
             OverscriptBox[
              SubscriptBox["D", "2"], "\[RightVector]"], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<\!\(\*OverscriptBox[\(a\), \(\[RightVector]\)]\) := \
\!\(\*OverscriptBox[SubscriptBox[\(a\), \(2\)], \(\[RightVector]\)]\).\>\"", "<>",
              "ciStr"}], ",", "\"\<\>\"", ",", "\"\<P\>\"", ",", 
            RowBox[{
             OverscriptBox[
              SubscriptBox["a", "2"], "\[RightVector]"], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<\!\(\*OverscriptBox[\(b\), \(\[RightVector]\)]\) := \
\!\(\*OverscriptBox[SubscriptBox[\(b\), \(2\)], \(\[RightVector]\)]\).\>\"", "<>",
              "ciStr"}], ",", "\"\<\>\"", ",", "\"\<P\>\"", ",", 
            RowBox[{
             OverscriptBox[
              SubscriptBox["b", "2"], "\[RightVector]"], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<\!\(\*OverscriptBox[SubscriptBox[\(a\), \(W\)], \(\
\[RightVector]\)]\) := \!\(\*OverscriptBox[SubscriptBox[\(a\), \(2, W\)], \(\
\[RightVector]\)]\).\>\"", "<>", "ciStr"}], ",", "\"\<\>\"", ",", "\"\<P\>\"",
             ",", 
            RowBox[{
             OverscriptBox[
              SubscriptBox["a", 
               RowBox[{"2", ",", "W"}]], "\[RightVector]"], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<\!\(\*OverscriptBox[SubscriptBox[\(b\), \(W\)], \(\
\[RightVector]\)]\) := \!\(\*OverscriptBox[SubscriptBox[\(b\), \(2, W\)], \(\
\[RightVector]\)]\).\>\"", "<>", "ciStr"}], ",", "\"\<\>\"", ",", "\"\<P\>\"",
             ",", 
            RowBox[{
             OverscriptBox[
              SubscriptBox["b", 
               RowBox[{"2", ",", "W"}]], "\[RightVector]"], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(P\), \({h, b, c, d, W}\)]\) := \
\!\(\*SubscriptBox[\(P\), \(2, {h, b, c, d, W}\)]\).\>\"", "<>", "ciStr"}], 
            ",", "\"\<\>\"", ",", "\"\<P,V (implicit)\>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               SubscriptBox["P", 
                RowBox[{"2", ",", "h"}]], "[", 
               RowBox[{"[", "currentIteration", "]"}], "]"}], ",", " ", 
              RowBox[{
               SubscriptBox["P", 
                RowBox[{"2", ",", "b"}]], "[", 
               RowBox[{"[", "currentIteration", "]"}], "]"}], ",", " ", 
              RowBox[{
               SubscriptBox["P", 
                RowBox[{"2", ",", "c"}]], "[", 
               RowBox[{"[", "currentIteration", "]"}], "]"}], ",", " ", 
              RowBox[{
               SubscriptBox["P", 
                RowBox[{"2", ",", "d"}]], "[", 
               RowBox[{"[", "currentIteration", "]"}], "]"}], ",", " ", 
              RowBox[{
               SubscriptBox["P", 
                RowBox[{"2", ",", "W"}]], "[", 
               RowBox[{"[", "currentIteration", "]"}], "]"}]}], "}"}]}], 
           "}"}]}], "\[IndentingNewLine]", "\t", "}"}], ",", " ", 
        RowBox[{"Alignment", "->", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"Left", ",", "Left", ",", "Left", ",", "Left"}], "}"}], 
          "}"}]}], ",", 
        RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], ";", "\n", "\t", 
     RowBox[{"currentN", " ", "=", " ", 
      RowBox[{
       SubscriptBox["n", "2"], "[", 
       RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"halfN", " ", "=", " ", 
      RowBox[{"currentN", "/", "2"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"k", " ", "=", " ", 
      RowBox[{
       SubscriptBox["k", "2"], "[", 
       RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox["G", "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["G", "2"], "\[RightVector]"], "[", 
       RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox["H", "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["H", "2"], "\[RightVector]"], "[", 
       RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{
      OverscriptBox["B", "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["B", "2"], "\[RightVector]"], "[", 
       RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{
      OverscriptBox["C", "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["C", "2"], "\[RightVector]"], "[", 
       RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{
      OverscriptBox["D", "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["D", "2"], "\[RightVector]"], "[", 
       RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["a", "IP"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["a", "2"], "\[RightVector]"], "[", 
       RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["b", "IP"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["b", "2"], "\[RightVector]"], "[", 
       RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["a", "W"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["a", 
         RowBox[{"2", ",", "W"}]], "\[RightVector]"], "[", 
       RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["b", "W"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["b", 
         RowBox[{"2", ",", "W"}]], "\[RightVector]"], "[", 
       RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      SubscriptBox["P", "h"], " ", "=", " ", 
      RowBox[{
       SubscriptBox["P", 
        RowBox[{"2", ",", "h"}]], "[", 
       RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{
      SubscriptBox["P", "b"], " ", "=", " ", 
      RowBox[{
       SubscriptBox["P", 
        RowBox[{"2", ",", "b"}]], "[", 
       RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{
      SubscriptBox["P", "c"], " ", "=", " ", 
      RowBox[{
       SubscriptBox["P", 
        RowBox[{"2", ",", "c"}]], "[", 
       RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{
      SubscriptBox["P", "d"], " ", "=", " ", 
      RowBox[{
       SubscriptBox["P", 
        RowBox[{"2", ",", "d"}]], "[", 
       RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{
      SubscriptBox["P", "W"], " ", "=", " ", 
      RowBox[{
       SubscriptBox["P", 
        RowBox[{"2", ",", "W"}]], "[", 
       RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", 
      RowBox[{
      "Split", " ", "into", " ", "lower", " ", "and", " ", "higher", " ", 
       "parts"}], "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["G", "lo"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox["G", "\[RightVector]"], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "halfN"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["G", "hi"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox["G", "\[RightVector]"], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"halfN", "+", "1"}], ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["H", "lo"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox["H", "\[RightVector]"], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "halfN"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["H", "hi"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox["H", "\[RightVector]"], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"halfN", "+", "1"}], ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["B", "lo"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox["B", "\[RightVector]"], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "halfN"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["B", "hi"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox["B", "\[RightVector]"], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"halfN", "+", "1"}], ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["C", "lo"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox["C", "\[RightVector]"], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "halfN"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["C", "hi"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox["C", "\[RightVector]"], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"halfN", "+", "1"}], ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["D", "lo"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox["D", "\[RightVector]"], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "halfN"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["D", "hi"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox["D", "\[RightVector]"], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"halfN", "+", "1"}], ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["a", "lo"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["a", "IP"], "\[RightVector]"], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "halfN"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["a", "hi"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["a", "IP"], "\[RightVector]"], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"halfN", "+", "1"}], ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["b", "lo"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["b", "IP"], "\[RightVector]"], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "halfN"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["b", "hi"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["b", "IP"], "\[RightVector]"], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"halfN", "+", "1"}], ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["a", 
        RowBox[{"lo", ",", "W"}]], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["a", "W"], "\[RightVector]"], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "halfN"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["a", 
        RowBox[{"hi", ",", "W"}]], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["a", "W"], "\[RightVector]"], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"halfN", "+", "1"}], ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["b", 
        RowBox[{"lo", ",", "W"}]], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["b", "W"], "\[RightVector]"], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "halfN"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["b", 
        RowBox[{"hi", ",", "W"}]], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["b", "W"], "\[RightVector]"], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"halfN", "+", "1"}], ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"(*", 
      RowBox[{"Digest", " ", "into", " ", 
       SubscriptBox["L", 
        RowBox[{"{", 
         RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]], " ", "and", " ", 
       SubscriptBox["R", 
        RowBox[{"{", 
         RowBox[{"h", ",", "b", ",", "c", ",", "d"}], "}"}]]}], "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      SubscriptBox["L", "h"], " ", "=", " ", 
      RowBox[{
       RowBox[{
        OverscriptBox[
         SubscriptBox["a", "lo"], "\[RightVector]"], ".", 
        OverscriptBox[
         SubscriptBox["G", "hi"], "\[RightVector]"]}], " ", "+", " ", 
       RowBox[{
        OverscriptBox[
         SubscriptBox["b", "hi"], "\[RightVector]"], ".", 
        OverscriptBox[
         SubscriptBox["H", "lo"], "\[RightVector]"]}], " ", "+", " ", 
       RowBox[{
        RowBox[{
         OverscriptBox[
          SubscriptBox["a", "lo"], "\[RightVector]"], ".", 
         OverscriptBox[
          SubscriptBox["b", "hi"], "\[RightVector]"]}], "*", 
        SuperscriptBox["g", "'"]}]}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{
      SubscriptBox["R", "h"], " ", "=", " ", 
      RowBox[{
       RowBox[{
        OverscriptBox[
         SubscriptBox["a", "hi"], "\[RightVector]"], ".", 
        OverscriptBox[
         SubscriptBox["G", "lo"], "\[RightVector]"]}], " ", "+", " ", 
       RowBox[{
        OverscriptBox[
         SubscriptBox["b", "lo"], "\[RightVector]"], ".", 
        OverscriptBox[
         SubscriptBox["H", "hi"], "\[RightVector]"]}], " ", "+", " ", 
       RowBox[{
        RowBox[{
         OverscriptBox[
          SubscriptBox["a", "hi"], "\[RightVector]"], ".", 
         OverscriptBox[
          SubscriptBox["b", "lo"], "\[RightVector]"]}], "*", 
        SuperscriptBox["g", "'"]}]}]}], ";", "\n", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["L", 
        RowBox[{"2", ",", "h"}]], ",", 
       SubscriptBox["L", "h"]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["R", 
        RowBox[{"2", ",", "h"}]], ",", 
       SubscriptBox["R", "h"]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{
      SubscriptBox["L", "b"], " ", "=", " ", 
      RowBox[{
       RowBox[{
        OverscriptBox[
         SubscriptBox["a", "lo"], "\[RightVector]"], ".", 
        OverscriptBox[
         SubscriptBox["G", "hi"], "\[RightVector]"]}], " ", "+", " ", 
       RowBox[{
        OverscriptBox[
         SubscriptBox["b", "hi"], "\[RightVector]"], ".", 
        OverscriptBox[
         SubscriptBox["B", "lo"], "\[RightVector]"]}], " ", "+", " ", 
       RowBox[{
        RowBox[{
         OverscriptBox[
          SubscriptBox["a", "lo"], "\[RightVector]"], ".", 
         OverscriptBox[
          SubscriptBox["b", "hi"], "\[RightVector]"]}], "*", 
        SuperscriptBox["g", "'"]}]}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{
      SubscriptBox["R", "b"], " ", "=", " ", 
      RowBox[{
       RowBox[{
        OverscriptBox[
         SubscriptBox["a", "hi"], "\[RightVector]"], ".", 
        OverscriptBox[
         SubscriptBox["G", "lo"], "\[RightVector]"]}], " ", "+", " ", 
       RowBox[{
        OverscriptBox[
         SubscriptBox["b", "lo"], "\[RightVector]"], ".", 
        OverscriptBox[
         SubscriptBox["B", "hi"], "\[RightVector]"]}], " ", "+", " ", 
       RowBox[{
        RowBox[{
         OverscriptBox[
          SubscriptBox["a", "hi"], "\[RightVector]"], ".", 
         OverscriptBox[
          SubscriptBox["b", "lo"], "\[RightVector]"]}], "*", 
        SuperscriptBox["g", "'"]}]}]}], ";", "\n", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["L", 
        RowBox[{"2", ",", "b"}]], ",", 
       SubscriptBox["L", "b"]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["R", 
        RowBox[{"2", ",", "b"}]], ",", 
       SubscriptBox["R", "b"]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{
      SubscriptBox["L", "c"], " ", "=", " ", 
      RowBox[{
       RowBox[{
        OverscriptBox[
         SubscriptBox["a", "lo"], "\[RightVector]"], ".", 
        OverscriptBox[
         SubscriptBox["G", "hi"], "\[RightVector]"]}], " ", "+", " ", 
       RowBox[{
        OverscriptBox[
         SubscriptBox["b", "hi"], "\[RightVector]"], ".", 
        OverscriptBox[
         SubscriptBox["C", "lo"], "\[RightVector]"]}], " ", "+", " ", 
       RowBox[{
        RowBox[{
         OverscriptBox[
          SubscriptBox["a", "lo"], "\[RightVector]"], ".", 
         OverscriptBox[
          SubscriptBox["b", "hi"], "\[RightVector]"]}], "*", 
        SuperscriptBox["g", "'"]}]}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{
      SubscriptBox["R", "c"], " ", "=", " ", 
      RowBox[{
       RowBox[{
        OverscriptBox[
         SubscriptBox["a", "hi"], "\[RightVector]"], ".", 
        OverscriptBox[
         SubscriptBox["G", "lo"], "\[RightVector]"]}], " ", "+", " ", 
       RowBox[{
        OverscriptBox[
         SubscriptBox["b", "lo"], "\[RightVector]"], ".", 
        OverscriptBox[
         SubscriptBox["C", "hi"], "\[RightVector]"]}], " ", "+", " ", 
       RowBox[{
        RowBox[{
         OverscriptBox[
          SubscriptBox["a", "hi"], "\[RightVector]"], ".", 
         OverscriptBox[
          SubscriptBox["b", "lo"], "\[RightVector]"]}], "*", 
        SuperscriptBox["g", "'"]}]}]}], ";", "\n", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["L", 
        RowBox[{"2", ",", "c"}]], ",", 
       SubscriptBox["L", "c"]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["R", 
        RowBox[{"2", ",", "c"}]], ",", 
       SubscriptBox["R", "c"]}], "]"}], ";", "\n", "\t", 
     RowBox[{
      SubscriptBox["L", "d"], " ", "=", " ", 
      RowBox[{
       RowBox[{
        OverscriptBox[
         SubscriptBox["a", "lo"], "\[RightVector]"], ".", 
        OverscriptBox[
         SubscriptBox["G", "hi"], "\[RightVector]"]}], " ", "+", " ", 
       RowBox[{
        OverscriptBox[
         SubscriptBox["b", "hi"], "\[RightVector]"], ".", 
        OverscriptBox[
         SubscriptBox["D", "lo"], "\[RightVector]"]}], " ", "+", " ", 
       RowBox[{
        RowBox[{
         OverscriptBox[
          SubscriptBox["a", "lo"], "\[RightVector]"], ".", 
         OverscriptBox[
          SubscriptBox["b", "hi"], "\[RightVector]"]}], "*", 
        SuperscriptBox["g", "'"]}]}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{
      SubscriptBox["R", "d"], " ", "=", " ", 
      RowBox[{
       RowBox[{
        OverscriptBox[
         SubscriptBox["a", "hi"], "\[RightVector]"], ".", 
        OverscriptBox[
         SubscriptBox["G", "lo"], "\[RightVector]"]}], " ", "+", " ", 
       RowBox[{
        OverscriptBox[
         SubscriptBox["b", "lo"], "\[RightVector]"], ".", 
        OverscriptBox[
         SubscriptBox["D", "hi"], "\[RightVector]"]}], " ", "+", " ", 
       RowBox[{
        RowBox[{
         OverscriptBox[
          SubscriptBox["a", "hi"], "\[RightVector]"], ".", 
         OverscriptBox[
          SubscriptBox["b", "lo"], "\[RightVector]"]}], "*", 
        SuperscriptBox["g", "'"]}]}]}], ";", "\n", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["L", 
        RowBox[{"2", ",", "d"}]], ",", 
       SubscriptBox["L", "d"]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["R", 
        RowBox[{"2", ",", "d"}]], ",", 
       SubscriptBox["R", "d"]}], "]"}], ";", "\n", "\t", 
     RowBox[{
      SubscriptBox["L", "W"], " ", "=", " ", 
      RowBox[{
       RowBox[{
        OverscriptBox[
         SubscriptBox["a", 
          RowBox[{"lo", ",", "W"}]], "\[RightVector]"], ".", 
        OverscriptBox[
         SubscriptBox["G", "hi"], "\[RightVector]"]}], " ", "+", " ", 
       RowBox[{
        OverscriptBox[
         SubscriptBox["b", 
          RowBox[{"hi", ",", "W"}]], "\[RightVector]"], ".", 
        OverscriptBox[
         SubscriptBox["H", "lo"], "\[RightVector]"]}], " ", "+", " ", 
       RowBox[{
        RowBox[{
         OverscriptBox[
          SubscriptBox["a", 
           RowBox[{"lo", ",", "W"}]], "\[RightVector]"], ".", 
         OverscriptBox[
          SubscriptBox["b", 
           RowBox[{"hi", ",", "W"}]], "\[RightVector]"]}], "*", 
        SuperscriptBox["g", "'"]}]}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{
      SubscriptBox["R", "W"], " ", "=", " ", 
      RowBox[{
       RowBox[{
        OverscriptBox[
         SubscriptBox["a", 
          RowBox[{"hi", ",", "W"}]], "\[RightVector]"], ".", 
        OverscriptBox[
         SubscriptBox["G", "lo"], "\[RightVector]"]}], " ", "+", " ", 
       RowBox[{
        OverscriptBox[
         SubscriptBox["b", 
          RowBox[{"lo", ",", "W"}]], "\[RightVector]"], ".", 
        OverscriptBox[
         SubscriptBox["H", "hi"], "\[RightVector]"]}], " ", "+", " ", 
       RowBox[{
        RowBox[{
         OverscriptBox[
          SubscriptBox["a", 
           RowBox[{"hi", ",", "W"}]], "\[RightVector]"], ".", 
         OverscriptBox[
          SubscriptBox["b", 
           RowBox[{"lo", ",", "W"}]], "\[RightVector]"]}], "*", 
        SuperscriptBox["g", "'"]}]}]}], ";", "\n", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["L", 
        RowBox[{"2", ",", "W"}]], ",", 
       SubscriptBox["L", "W"]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["R", 
        RowBox[{"2", ",", "W"}]], ",", 
       SubscriptBox["R", "W"]}], "]"}], ";", "\n", "\t", 
     RowBox[{"TellVerifier", "[", 
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"\"\<Lh.\>\"", "<>", "ciStr"}], "->", 
         SubscriptBox["L", "h"]}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"\"\<Rh.\>\"", "<>", "ciStr"}], "->", 
         SubscriptBox["R", "h"]}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"\"\<Lb.\>\"", "<>", "ciStr"}], "->", 
         SubscriptBox["L", "b"]}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"\"\<Rb.\>\"", "<>", "ciStr"}], "->", 
         SubscriptBox["R", "b"]}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"\"\<Lc.\>\"", "<>", "ciStr"}], "->", 
         SubscriptBox["L", "c"]}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"\"\<Rc.\>\"", "<>", "ciStr"}], "->", 
         SubscriptBox["R", "c"]}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"\"\<Ld.\>\"", "<>", "ciStr"}], "->", 
         SubscriptBox["L", "d"]}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"\"\<Rd.\>\"", "<>", "ciStr"}], "->", 
         SubscriptBox["R", "d"]}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"\"\<LW.\>\"", "<>", "ciStr"}], "->", 
         SubscriptBox["L", "W"]}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"\"\<RW.\>\"", "<>", "ciStr"}], "->", 
         SubscriptBox["R", "W"]}], ",", "\n", "\t\t", 
        RowBox[{"\"\<_cost\>\"", "->", "\"\<group\>\""}]}], "\n", "\t", "}"}],
       "]"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", "interactive"}], ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{"FiatShamirAdd", "[", 
         RowBox[{
          RowBox[{"\"\<Lh.\>\"", "<>", "ciStr"}], ",", 
          RowBox[{"compressPoint", "[", 
           SubscriptBox["L", "h"], "]"}], ",", 
          RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"FiatShamirAdd", "[", 
         RowBox[{
          RowBox[{"\"\<Rh.\>\"", "<>", "ciStr"}], ",", 
          RowBox[{"compressPoint", "[", 
           SubscriptBox["R", "h"], "]"}], ",", 
          RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"FiatShamirAdd", "[", 
         RowBox[{
          RowBox[{"\"\<Lb.\>\"", "<>", "ciStr"}], ",", 
          RowBox[{"compressPoint", "[", 
           SubscriptBox["L", "b"], "]"}], ",", 
          RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"FiatShamirAdd", "[", 
         RowBox[{
          RowBox[{"\"\<Rb.\>\"", "<>", "ciStr"}], ",", 
          RowBox[{"compressPoint", "[", 
           SubscriptBox["R", "b"], "]"}], ",", 
          RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"FiatShamirAdd", "[", 
         RowBox[{
          RowBox[{"\"\<Lc.\>\"", "<>", "ciStr"}], ",", 
          RowBox[{"compressPoint", "[", 
           SubscriptBox["L", "c"], "]"}], ",", 
          RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"FiatShamirAdd", "[", 
         RowBox[{
          RowBox[{"\"\<Rc.\>\"", "<>", "ciStr"}], ",", 
          RowBox[{"compressPoint", "[", 
           SubscriptBox["R", "c"], "]"}], ",", 
          RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"FiatShamirAdd", "[", 
         RowBox[{
          RowBox[{"\"\<Ld.\>\"", "<>", "ciStr"}], ",", 
          RowBox[{"compressPoint", "[", 
           SubscriptBox["L", "d"], "]"}], ",", 
          RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"FiatShamirAdd", "[", 
         RowBox[{
          RowBox[{"\"\<Rd.\>\"", "<>", "ciStr"}], ",", 
          RowBox[{"compressPoint", "[", 
           SubscriptBox["R", "d"], "]"}], ",", 
          RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"FiatShamirAdd", "[", 
         RowBox[{
          RowBox[{"\"\<LW.\>\"", "<>", "ciStr"}], ",", 
          RowBox[{"compressPoint", "[", 
           SubscriptBox["L", "W"], "]"}], ",", 
          RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"FiatShamirAdd", "[", 
         RowBox[{
          RowBox[{"\"\<RW.\>\"", "<>", "ciStr"}], ",", 
          RowBox[{"compressPoint", "[", 
           SubscriptBox["R", "W"], "]"}], ",", 
          RowBox[{"entropyParameters", "[", "\"\<group\>\"", "]"}]}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "\t", "]"}], ";", "\n", "\t", 
     RowBox[{"Print", "[", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Knowledge\>\"", ",", "Bold"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<(1) \!\(\*SubscriptBox[\(L\), \({h, b, c, d}\)]\) := \
\!\(\*SubscriptBox[\(L\), \(2, {h, b, c, d}\)]\).\>\"", "<>", "ciStr", "<>", 
             "\"\< :=\\n(2) <\!\(\*OverscriptBox[SubscriptBox[\(a\), \(lo\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(G\), \(hi\)], \(\
\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SubscriptBox[\(b\), \(hi\)], \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\({H, B, C, D}\), \
\(lo\)], \(\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SubscriptBox[\(a\), \
\(lo\)], \(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(b\), \
\(hi\)], \(\[RightVector]\)]\)>\!\(\*SuperscriptBox[\(g\), \('\)]\)\>\""}], 
            ",", "\"\<1: P,V\\n2: P\>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               SubscriptBox["L", 
                RowBox[{"2", ",", "h"}]], "[", 
               RowBox[{"[", "currentIteration", "]"}], "]"}], ",", 
              RowBox[{
               SubscriptBox["L", 
                RowBox[{"2", ",", "b"}]], "[", 
               RowBox[{"[", "currentIteration", "]"}], "]"}], ",", 
              RowBox[{
               SubscriptBox["L", 
                RowBox[{"2", ",", "c"}]], "[", 
               RowBox[{"[", "currentIteration", "]"}], "]"}], ",", 
              RowBox[{
               SubscriptBox["L", 
                RowBox[{"2", ",", "d"}]], "[", 
               RowBox[{"[", "currentIteration", "]"}], "]"}]}], "}"}]}], 
           "}"}], ",", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<(1) \!\(\*SubscriptBox[\(R\), \({h, b, c, d}\)]\) := \
\!\(\*SubscriptBox[\(R\), \(2, {h, b, c, d}\)]\).\>\"", "<>", "ciStr", "<>", 
             "\"\< :=\\n(2) <\!\(\*OverscriptBox[SubscriptBox[\(a\), \(hi\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(G\), \(lo\)], \(\
\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SubscriptBox[\(b\), \(lo\)], \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\({H, B, C, D}\), \
\(hi\)], \(\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SubscriptBox[\(a\), \
\(hi\)], \(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(b\), \
\(lo\)], \(\[RightVector]\)]\)>\!\(\*SuperscriptBox[\(g\), \('\)]\)\>\""}], 
            ",", "\"\<1: P,V\\n2: P\>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               SubscriptBox["R", 
                RowBox[{"2", ",", "h"}]], "[", 
               RowBox[{"[", "currentIteration", "]"}], "]"}], ",", 
              RowBox[{
               SubscriptBox["R", 
                RowBox[{"2", ",", "b"}]], "[", 
               RowBox[{"[", "currentIteration", "]"}], "]"}], ",", 
              RowBox[{
               SubscriptBox["R", 
                RowBox[{"2", ",", "c"}]], "[", 
               RowBox[{"[", "currentIteration", "]"}], "]"}], ",", 
              RowBox[{
               SubscriptBox["R", 
                RowBox[{"2", ",", "d"}]], "[", 
               RowBox[{"[", "currentIteration", "]"}], "]"}]}], "}"}]}], 
           "}"}], ",", "\[IndentingNewLine]", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<(1) \!\(\*SubscriptBox[\(L\), \(W\)]\) := \
\!\(\*SubscriptBox[\(L\), \(2, W\)]\).\>\"", "<>", "ciStr", "<>", 
             "\"\< :=\\n(2) <\!\(\*OverscriptBox[SubscriptBox[\(a\), \(lo, \
W\)], \(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(G\), \(hi\)], \
\(\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SubscriptBox[\(b\), \(hi, W\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(H\), \(lo\)], \(\
\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SubscriptBox[\(a\), \(lo, W\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(b\), \(hi, W\)], \(\
\[RightVector]\)]\)>\!\(\*SuperscriptBox[\(g\), \('\)]\)\>\""}], ",", 
            "\"\<1: P,V\\n2: P\>\"", ",", 
            RowBox[{
             SubscriptBox["L", 
              RowBox[{"2", ",", "W"}]], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<(1) \!\(\*SubscriptBox[\(R\), \(W\)]\) := \
\!\(\*SubscriptBox[\(R\), \(2, W\)]\).\>\"", "<>", "ciStr", "<>", 
             "\"\< :=\\n(2) <\!\(\*OverscriptBox[SubscriptBox[\(a\), \(hi, \
W\)], \(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(G\), \(lo\)], \
\(\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SubscriptBox[\(b\), \(lo, W\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(H\), \(hi\)], \(\
\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SubscriptBox[\(a\), \(hi, W\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(b\), \(lo, W\)], \(\
\[RightVector]\)]\)>\!\(\*SuperscriptBox[\(g\), \('\)]\)\>\""}], ",", 
            "\"\<1: P,V\\n2: P\>\"", ",", 
            RowBox[{
             SubscriptBox["R", 
              RowBox[{"2", ",", "W"}]], "[", 
             RowBox[{"[", "currentIteration", "]"}], "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "\t", "}"}], ",", " ", 
        RowBox[{"Alignment", "->", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"Left", ",", "Left", ",", "Left"}], "}"}], "}"}]}], ",", 
        RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], ";", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{"Challenge", " ", 
       SubscriptBox["u", "IP"]}], "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{"interactive", ",", "\[IndentingNewLine]", "\t", 
       RowBox[{"(*", 
        RowBox[{
        "Random", " ", "challenge", " ", "from", " ", "interactive", " ", 
         "verifier"}], "*)"}], "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{
         SubscriptBox["u", "IP"], " ", "=", " ", 
         RowBox[{"WaitForRandomChallenge", "[", 
          RowBox[{"\"\<u.\>\"", "<>", "ciStr"}], "]"}]}], ";"}], 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"(*", "Else", "*)"}], ",", "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{"Fiat", "-", "Shamir"}], "*)"}], "\[IndentingNewLine]", 
       "\t\t", 
       RowBox[{
        RowBox[{
         SubscriptBox["u", "IP"], " ", "=", " ", 
         RowBox[{"FiatShamirGet", "[", 
          RowBox[{
           RowBox[{"\"\<u.\>\"", "<>", "ciStr"}], ",", "q", ",", 
           RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], 
          "]"}]}], ";", "\n", "\t\t", 
        RowBox[{"TellVerifier", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"\"\<u.\>\"", "<>", "ciStr"}], "->", 
            SubscriptBox["u", "IP"]}], ",", 
           RowBox[{"\"\<_cost\>\"", "->", "\"\<scalar\>\""}]}], "}"}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "\t", "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["u", "2"], ",", 
       SubscriptBox["u", "IP"]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{
      SuperscriptBox["u", 
       RowBox[{"-", "1"}]], " ", "=", " ", 
      RowBox[{"modinvq", "[", 
       SubscriptBox["u", "IP"], "]"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["G", "next"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       RowBox[{
        SuperscriptBox["u", 
         RowBox[{"-", "1"}]], "*", 
        OverscriptBox[
         SubscriptBox["G", "lo"], "\[RightVector]"]}], "+", 
       RowBox[{
        SubscriptBox["u", "IP"], "*", 
        OverscriptBox[
         SubscriptBox["G", "hi"], "\[RightVector]"]}]}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["G", "2"], "\[RightVector]"], ",", 
       OverscriptBox[
        SubscriptBox["G", "next"], "\[RightVector]"]}], "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["H", "next"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       RowBox[{
        SubscriptBox["u", "IP"], "*", 
        OverscriptBox[
         SubscriptBox["H", "lo"], "\[RightVector]"]}], "+", 
       RowBox[{
        SuperscriptBox["u", 
         RowBox[{"-", "1"}]], "*", 
        OverscriptBox[
         SubscriptBox["H", "hi"], "\[RightVector]"]}]}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["H", "2"], "\[RightVector]"], ",", 
       OverscriptBox[
        SubscriptBox["H", "next"], "\[RightVector]"]}], "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["B", "next"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       RowBox[{
        SubscriptBox["u", "IP"], "*", 
        OverscriptBox[
         SubscriptBox["B", "lo"], "\[RightVector]"]}], "+", 
       RowBox[{
        SuperscriptBox["u", 
         RowBox[{"-", "1"}]], "*", 
        OverscriptBox[
         SubscriptBox["B", "hi"], "\[RightVector]"]}]}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["B", "2"], "\[RightVector]"], ",", 
       OverscriptBox[
        SubscriptBox["B", "next"], "\[RightVector]"]}], "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["C", "next"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       RowBox[{
        SubscriptBox["u", "IP"], "*", 
        OverscriptBox[
         SubscriptBox["C", "lo"], "\[RightVector]"]}], "+", 
       RowBox[{
        SuperscriptBox["u", 
         RowBox[{"-", "1"}]], "*", 
        OverscriptBox[
         SubscriptBox["C", "hi"], "\[RightVector]"]}]}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["C", "2"], "\[RightVector]"], ",", 
       OverscriptBox[
        SubscriptBox["C", "next"], "\[RightVector]"]}], "]"}], ";", "\n", 
     "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["D", "next"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{
       RowBox[{
        SubscriptBox["u", "IP"], "*", 
        OverscriptBox[
         SubscriptBox["D", "lo"], "\[RightVector]"]}], "+", 
       RowBox[{
        SuperscriptBox["u", 
         RowBox[{"-", "1"}]], "*", 
        OverscriptBox[
         SubscriptBox["D", "hi"], "\[RightVector]"]}]}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["D", "2"], "\[RightVector]"], ",", 
       OverscriptBox[
        SubscriptBox["D", "next"], "\[RightVector]"]}], "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"next", ",", "h"}]], " ", "=", " ", 
      RowBox[{
       SubscriptBox["P", "h"], " ", "+", " ", 
       RowBox[{
        RowBox[{
         SubscriptBox["u", "IP"], "^", "2"}], "*", 
        SubscriptBox["L", "h"]}], " ", "+", " ", 
       RowBox[{
        RowBox[{
         SuperscriptBox["u", 
          RowBox[{"-", "1"}]], "^", "2"}], "*", 
        SubscriptBox["R", "h"]}]}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["P", 
        RowBox[{"2", ",", "h"}]], ",", 
       SubscriptBox["P", 
        RowBox[{"next", ",", "h"}]]}], "]"}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"next", ",", "b"}]], " ", "=", " ", 
      RowBox[{
       SubscriptBox["P", "b"], " ", "+", " ", 
       RowBox[{
        RowBox[{
         SubscriptBox["u", "IP"], "^", "2"}], "*", 
        SubscriptBox["L", "b"]}], " ", "+", " ", 
       RowBox[{
        RowBox[{
         SuperscriptBox["u", 
          RowBox[{"-", "1"}]], "^", "2"}], "*", 
        SubscriptBox["R", "b"]}]}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["P", 
        RowBox[{"2", ",", "b"}]], ",", 
       SubscriptBox["P", 
        RowBox[{"next", ",", "b"}]]}], "]"}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"next", ",", "c"}]], " ", "=", " ", 
      RowBox[{
       SubscriptBox["P", "c"], " ", "+", " ", 
       RowBox[{
        RowBox[{
         SubscriptBox["u", "IP"], "^", "2"}], "*", 
        SubscriptBox["L", "c"]}], " ", "+", " ", 
       RowBox[{
        RowBox[{
         SuperscriptBox["u", 
          RowBox[{"-", "1"}]], "^", "2"}], "*", 
        SubscriptBox["R", "c"]}]}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["P", 
        RowBox[{"2", ",", "c"}]], ",", 
       SubscriptBox["P", 
        RowBox[{"next", ",", "c"}]]}], "]"}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"next", ",", "d"}]], " ", "=", " ", 
      RowBox[{
       SubscriptBox["P", "d"], " ", "+", " ", 
       RowBox[{
        RowBox[{
         SubscriptBox["u", "IP"], "^", "2"}], "*", 
        SubscriptBox["L", "d"]}], " ", "+", " ", 
       RowBox[{
        RowBox[{
         SuperscriptBox["u", 
          RowBox[{"-", "1"}]], "^", "2"}], "*", 
        SubscriptBox["R", "d"]}]}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["P", 
        RowBox[{"2", ",", "d"}]], ",", 
       SubscriptBox["P", 
        RowBox[{"next", ",", "d"}]]}], "]"}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"next", ",", "W"}]], " ", "=", " ", 
      RowBox[{
       SubscriptBox["P", "W"], " ", "+", " ", 
       RowBox[{
        RowBox[{
         SubscriptBox["u", "IP"], "^", "2"}], "*", 
        SubscriptBox["L", "W"]}], " ", "+", " ", 
       RowBox[{
        RowBox[{
         SuperscriptBox["u", 
          RowBox[{"-", "1"}]], "^", "2"}], "*", 
        SubscriptBox["R", "W"]}]}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["P", 
        RowBox[{"2", ",", "W"}]], ",", 
       SubscriptBox["P", 
        RowBox[{"next", ",", "W"}]]}], "]"}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["a", "next"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{"modq", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["u", "IP"], "*", 
         OverscriptBox[
          SubscriptBox["a", "lo"], "\[RightVector]"]}], " ", "+", " ", 
        RowBox[{
         SuperscriptBox["u", 
          RowBox[{"-", "1"}]], "*", 
         OverscriptBox[
          SubscriptBox["a", "hi"], "\[RightVector]"]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["a", "2"], "\[RightVector]"], ",", 
       OverscriptBox[
        SubscriptBox["a", "next"], "\[RightVector]"]}], "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["b", "next"], "\[RightVector]"], " ", "=", " ", 
      RowBox[{"modq", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox["u", 
          RowBox[{"-", "1"}]], "*", 
         OverscriptBox[
          SubscriptBox["b", "lo"], "\[RightVector]"]}], " ", "+", " ", 
        RowBox[{
         SubscriptBox["u", "IP"], "*", 
         OverscriptBox[
          SubscriptBox["b", "hi"], "\[RightVector]"]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["b", "2"], "\[RightVector]"], ",", 
       OverscriptBox[
        SubscriptBox["b", "next"], "\[RightVector]"]}], "]"}], ";", "\n", 
     "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["a", 
        RowBox[{"next", ",", "W"}]], "\[RightVector]"], " ", "=", " ", 
      RowBox[{"modq", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["u", "IP"], "*", 
         OverscriptBox[
          SubscriptBox["a", 
           RowBox[{"lo", ",", "W"}]], "\[RightVector]"]}], " ", "+", " ", 
        RowBox[{
         SuperscriptBox["u", 
          RowBox[{"-", "1"}]], "*", 
         OverscriptBox[
          SubscriptBox["a", 
           RowBox[{"hi", ",", "W"}]], "\[RightVector]"]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["a", 
         RowBox[{"2", ",", "W"}]], "\[RightVector]"], ",", 
       OverscriptBox[
        SubscriptBox["a", 
         RowBox[{"next", ",", "W"}]], "\[RightVector]"]}], "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["b", 
        RowBox[{"next", ",", "W"}]], "\[RightVector]"], " ", "=", " ", 
      RowBox[{"modq", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox["u", 
          RowBox[{"-", "1"}]], "*", 
         OverscriptBox[
          SubscriptBox["b", 
           RowBox[{"lo", ",", "W"}]], "\[RightVector]"]}], " ", "+", " ", 
        RowBox[{
         SubscriptBox["u", "IP"], "*", 
         OverscriptBox[
          SubscriptBox["b", 
           RowBox[{"hi", ",", "W"}]], "\[RightVector]"]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["b", 
         RowBox[{"2", ",", "W"}]], "\[RightVector]"], ",", 
       OverscriptBox[
        SubscriptBox["b", 
         RowBox[{"next", ",", "W"}]], "\[RightVector]"]}], "]"}], ";", "\n", 
     "\t", 
     RowBox[{"Print", "[", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "Style", "[", 
             "\"\<Fold \!\(\*OverscriptBox[\(G\), \(\[RightVector]\)]\), \!\(\
\*OverscriptBox[\(H\), \(\[RightVector]\)]\), \!\(\*OverscriptBox[\(B\), \(\
\[RightVector]\)]\), \!\(\*OverscriptBox[\(C\), \(\[RightVector]\)]\), \
\!\(\*OverscriptBox[\(P\), \(\[RightVector]\)]\), \!\(\*OverscriptBox[\(a\), \
\(\[RightVector]\)]\) and \!\(\*OverscriptBox[\(b\), \(\[RightVector]\)]\) \
based on challenge \!\(\*SubscriptBox[\(u\), \(IP\)]\)\>\"", "]"}], ",", " ", 
            "SpanFromLeft", ",", " ", "SpanFromLeft"}], "}"}], ",", "\n", 
          "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Knowledge\>\"", ",", "Bold"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(u\), \(IP\)]\) = \!\(\*SubscriptBox[\(u\
\), \(2\)]\).\>\"", "<>", "ciStr"}], ",", "\"\<P,V\>\"", ",", 
            SubscriptBox["u", "IP"]}], "}"}], ",", "\[IndentingNewLine]", 
          "\t\t", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[SubscriptBox[\(G\), \(next\)], \(\
\[RightVector]\)]\) := \!\(\*SubsuperscriptBox[\(u\), \(IP\), \
\(-1\)]\)\!\(\*OverscriptBox[SubscriptBox[\(G\), \(lo\)], \(\[RightVector]\)]\
\) + \!\(\*SubscriptBox[\(u\), \
\(IP\)]\)\!\(\*OverscriptBox[SubscriptBox[\(G\), \(hi\)], \(\[RightVector]\)]\
\)\>\"", ",", "\"\<P,V\>\"", ",", 
            OverscriptBox[
             SubscriptBox["G", "next"], "\[RightVector]"]}], "}"}], ",", "\n",
           "\t\t", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[SubscriptBox[\(H\), \(next\)], \(\
\[RightVector]\)]\) := \!\(\*SubscriptBox[\(u\), \
\(IP\)]\)\!\(\*OverscriptBox[SubscriptBox[\(H\), \(lo\)], \(\[RightVector]\)]\
\) + \!\(\*SubsuperscriptBox[\(u\), \(IP\), \
\(-1\)]\)\!\(\*OverscriptBox[SubscriptBox[\(H\), \(hi\)], \(\[RightVector]\)]\
\)\>\"", ",", "\"\<P,V\>\"", ",", 
            OverscriptBox[
             SubscriptBox["H", "next"], "\[RightVector]"]}], "}"}], ",", "\n",
           "\t\t", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[SubscriptBox[\(B\), \(next\)], \(\
\[RightVector]\)]\) := \!\(\*SubscriptBox[\(u\), \
\(IP\)]\)\!\(\*OverscriptBox[SubscriptBox[\(B\), \(lo\)], \(\[RightVector]\)]\
\) + \!\(\*SubsuperscriptBox[\(u\), \(IP\), \
\(-1\)]\)\!\(\*OverscriptBox[SubscriptBox[\(B\), \(hi\)], \(\[RightVector]\)]\
\)\>\"", ",", "\"\<P,V\>\"", ",", 
            OverscriptBox[
             SubscriptBox["B", "next"], "\[RightVector]"]}], "}"}], ",", "\n",
           "\t\t", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[SubscriptBox[\(C\), \(next\)], \(\
\[RightVector]\)]\) := \!\(\*SubscriptBox[\(u\), \
\(IP\)]\)\!\(\*OverscriptBox[SubscriptBox[\(C\), \(lo\)], \(\[RightVector]\)]\
\) + \!\(\*SubsuperscriptBox[\(u\), \(IP\), \
\(-1\)]\)\!\(\*OverscriptBox[SubscriptBox[\(C\), \(hi\)], \(\[RightVector]\)]\
\)\>\"", ",", "\"\<P,V\>\"", ",", 
            OverscriptBox[
             SubscriptBox["C", "next"], "\[RightVector]"]}], "}"}], ",", "\n",
           "\t\t", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[SubscriptBox[\(D\), \(next\)], \(\
\[RightVector]\)]\) := \!\(\*SubscriptBox[\(u\), \
\(IP\)]\)\!\(\*OverscriptBox[SubscriptBox[\(D\), \(lo\)], \(\[RightVector]\)]\
\) + \!\(\*SubsuperscriptBox[\(u\), \(IP\), \
\(-1\)]\)\!\(\*OverscriptBox[SubscriptBox[\(D\), \(hi\)], \(\[RightVector]\)]\
\)\>\"", ",", "\"\<P,V\>\"", ",", 
            OverscriptBox[
             SubscriptBox["D", "next"], "\[RightVector]"]}], "}"}], ",", "\n",
           "\t\t", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(P\), \(next, {h, b, c, d, W}\)]\) := \
\!\(\*SubscriptBox[\(P\), \({h, b, c, d, W}\)]\) + \
\!\(\*SubsuperscriptBox[\(u\), \(IP\), \(2\)]\)\!\(\*SubscriptBox[\(L\), \
\({h, b, c, d, W}\)]\) + \!\(\*SubsuperscriptBox[\(u\), \(IP\), \(-2\)]\)\!\(\
\*SubscriptBox[\(R\), \({h, b, c, d, W}\)]\)\>\"", ",", "\"\<P,V\>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["P", 
               RowBox[{"next", ",", "h"}]], ",", 
              SubscriptBox["P", 
               RowBox[{"next", ",", "b"}]], ",", 
              SubscriptBox["P", 
               RowBox[{"next", ",", "c"}]], ",", 
              SubscriptBox["P", 
               RowBox[{"next", ",", "d"}]], ",", 
              SubscriptBox["P", 
               RowBox[{"next", ",", "W"}]]}], "}"}]}], "}"}], ",", "\n", 
          "\t\t", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[SubscriptBox[\(a\), \(next\)], \(\
\[RightVector]\)]\) = \!\(\*SubscriptBox[\(u\), \
\(IP\)]\)\!\(\*OverscriptBox[SubscriptBox[\(a\), \(lo\)], \(\[RightVector]\)]\
\) + \!\(\*SubsuperscriptBox[\(u\), \(IP\), \
\(-1\)]\)\!\(\*OverscriptBox[SubscriptBox[\(a\), \(hi\)], \(\[RightVector]\)]\
\)\>\"", ",", "\"\<P\>\"", ",", 
            OverscriptBox[
             SubscriptBox["a", "next"], "\[RightVector]"]}], "}"}], ",", "\n",
           "\t\t", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[SubscriptBox[\(b\), \(next\)], \(\
\[RightVector]\)]\) = \!\(\*SubsuperscriptBox[\(u\), \(IP\), \
\(-1\)]\)\!\(\*OverscriptBox[SubscriptBox[\(b\), \(lo\)], \(\[RightVector]\)]\
\) + \!\(\*SubscriptBox[\(u\), \
\(IP\)]\)\!\(\*OverscriptBox[SubscriptBox[\(b\), \(hi\)], \(\[RightVector]\)]\
\)\>\"", ",", "\"\<P\>\"", ",", 
            OverscriptBox[
             SubscriptBox["b", "next"], "\[RightVector]"]}], "}"}], ",", "\n",
           "\t\t", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[SubscriptBox[\(a\), \(next, W\)], \(\
\[RightVector]\)]\) = \!\(\*SubscriptBox[\(u\), \
\(IP\)]\)\!\(\*OverscriptBox[SubscriptBox[\(a\), \(lo, W\)], \(\[RightVector]\
\)]\) + \!\(\*SubsuperscriptBox[\(u\), \(IP\), \
\(-1\)]\)\!\(\*OverscriptBox[SubscriptBox[\(a\), \(hi, W\)], \(\[RightVector]\
\)]\)\>\"", ",", "\"\<P\>\"", ",", 
            OverscriptBox[
             SubscriptBox["a", 
              RowBox[{"next", ",", "W"}]], "\[RightVector]"]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[SubscriptBox[\(b\), \(next, W\)], \(\
\[RightVector]\)]\) = \!\(\*SubsuperscriptBox[\(u\), \(IP\), \
\(-1\)]\)\!\(\*OverscriptBox[SubscriptBox[\(b\), \(lo, W\)], \(\[RightVector]\
\)]\) + \!\(\*SubscriptBox[\(u\), \
\(IP\)]\)\!\(\*OverscriptBox[SubscriptBox[\(b\), \(hi, W\)], \(\[RightVector]\
\)]\)\>\"", ",", "\"\<P\>\"", ",", 
            OverscriptBox[
             SubscriptBox["b", 
              RowBox[{"next", ",", "W"}]], "\[RightVector]"]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(P\), \(next, {h, b, c, d}\)]\) \
\!\(\*OverscriptBox[\(=\), \
\(?\)]\)\\n<\!\(\*OverscriptBox[SubscriptBox[\(a\), \(next\)], \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(G\), \(next\)], \(\
\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SubscriptBox[\(b\), \(next\)], \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\({H, B, C, D}\), \(next\
\)], \(\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SubscriptBox[\(a\), \(next\
\)], \(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(b\), \(next\)], \
\(\[RightVector]\)]\)>\!\(\*SuperscriptBox[\(g\), \('\)]\)\>\"", ",", 
            "\"\<P\>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               SubscriptBox["P", 
                RowBox[{"next", ",", "h"}]], " ", "==", " ", 
               RowBox[{
                RowBox[{
                 OverscriptBox[
                  SubscriptBox["a", "next"], "\[RightVector]"], ".", 
                 OverscriptBox[
                  SubscriptBox["G", "next"], "\[RightVector]"]}], " ", "+", 
                " ", 
                RowBox[{
                 OverscriptBox[
                  SubscriptBox["b", "next"], "\[RightVector]"], ".", 
                 OverscriptBox[
                  SubscriptBox["H", "next"], "\[RightVector]"]}], " ", "+", 
                " ", 
                RowBox[{
                 RowBox[{
                  OverscriptBox[
                   SubscriptBox["a", "next"], "\[RightVector]"], ".", 
                  OverscriptBox[
                   SubscriptBox["b", "next"], "\[RightVector]"]}], "*", 
                 SuperscriptBox["g", "'"]}]}]}], ",", " ", 
              RowBox[{
               SubscriptBox["P", 
                RowBox[{"next", ",", "b"}]], " ", "==", " ", 
               RowBox[{
                RowBox[{
                 OverscriptBox[
                  SubscriptBox["a", "next"], "\[RightVector]"], ".", 
                 OverscriptBox[
                  SubscriptBox["G", "next"], "\[RightVector]"]}], " ", "+", 
                " ", 
                RowBox[{
                 OverscriptBox[
                  SubscriptBox["b", "next"], "\[RightVector]"], ".", 
                 OverscriptBox[
                  SubscriptBox["B", "next"], "\[RightVector]"]}], " ", "+", 
                " ", 
                RowBox[{
                 RowBox[{
                  OverscriptBox[
                   SubscriptBox["a", "next"], "\[RightVector]"], ".", 
                  OverscriptBox[
                   SubscriptBox["b", "next"], "\[RightVector]"]}], "*", 
                 SuperscriptBox["g", "'"]}]}]}], ",", " ", 
              RowBox[{
               SubscriptBox["P", 
                RowBox[{"next", ",", "c"}]], " ", "==", " ", 
               RowBox[{
                RowBox[{
                 OverscriptBox[
                  SubscriptBox["a", "next"], "\[RightVector]"], ".", 
                 OverscriptBox[
                  SubscriptBox["G", "next"], "\[RightVector]"]}], " ", "+", 
                " ", 
                RowBox[{
                 OverscriptBox[
                  SubscriptBox["b", "next"], "\[RightVector]"], ".", 
                 OverscriptBox[
                  SubscriptBox["C", "next"], "\[RightVector]"]}], " ", "+", 
                " ", 
                RowBox[{
                 RowBox[{
                  OverscriptBox[
                   SubscriptBox["a", "next"], "\[RightVector]"], ".", 
                  OverscriptBox[
                   SubscriptBox["b", "next"], "\[RightVector]"]}], "*", 
                 SuperscriptBox["g", "'"]}]}]}], ",", " ", 
              RowBox[{
               SubscriptBox["P", 
                RowBox[{"next", ",", "d"}]], " ", "==", " ", 
               RowBox[{
                RowBox[{
                 OverscriptBox[
                  SubscriptBox["a", "next"], "\[RightVector]"], ".", 
                 OverscriptBox[
                  SubscriptBox["G", "next"], "\[RightVector]"]}], " ", "+", 
                " ", 
                RowBox[{
                 OverscriptBox[
                  SubscriptBox["b", "next"], "\[RightVector]"], ".", 
                 OverscriptBox[
                  SubscriptBox["D", "next"], "\[RightVector]"]}], " ", "+", 
                " ", 
                RowBox[{
                 RowBox[{
                  OverscriptBox[
                   SubscriptBox["a", "next"], "\[RightVector]"], ".", 
                  OverscriptBox[
                   SubscriptBox["b", "next"], "\[RightVector]"]}], "*", 
                 SuperscriptBox["g", "'"]}]}]}]}], "}"}]}], "}"}], ",", "\n", 
          "\t\t", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(P\), \(next, W\)]\) \!\(\*OverscriptBox[\
\(=\), \(?\)]\)\\n<\!\(\*OverscriptBox[SubscriptBox[\(a\), \(next, W\)], \(\
\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(G\), \(next\)], \(\
\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SubscriptBox[\(b\), \(next, W\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(H\), \(next\)], \(\
\[RightVector]\)]\)> + <\!\(\*OverscriptBox[SubscriptBox[\(a\), \(next, W\)], \
\(\[RightVector]\)]\),\!\(\*OverscriptBox[SubscriptBox[\(b\), \(next, W\)], \
\(\[RightVector]\)]\)>\!\(\*SuperscriptBox[\(g\), \('\)]\)\>\"", ",", 
            "\"\<P\>\"", ",", 
            RowBox[{
             SubscriptBox["P", 
              RowBox[{"next", ",", "W"}]], " ", "==", " ", 
             RowBox[{
              RowBox[{
               OverscriptBox[
                SubscriptBox["a", 
                 RowBox[{"next", ",", "W"}]], "\[RightVector]"], ".", 
               OverscriptBox[
                SubscriptBox["G", "next"], "\[RightVector]"]}], " ", "+", " ", 
              RowBox[{
               OverscriptBox[
                SubscriptBox["b", 
                 RowBox[{"next", ",", "W"}]], "\[RightVector]"], ".", 
               OverscriptBox[
                SubscriptBox["H", "next"], "\[RightVector]"]}], " ", "+", " ", 
              RowBox[{
               RowBox[{
                OverscriptBox[
                 SubscriptBox["a", 
                  RowBox[{"next", ",", "W"}]], "\[RightVector]"], ".", 
                OverscriptBox[
                 SubscriptBox["b", 
                  RowBox[{"next", ",", "W"}]], "\[RightVector]"]}], "*", 
               SuperscriptBox["g", "'"]}]}]}]}], "}"}]}], 
         "\[IndentingNewLine]", "\t", "}"}], ",", " ", 
        RowBox[{"Alignment", "->", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"Left", ",", "Left", ",", "Left"}], "}"}], "}"}]}], ",", 
        RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", 
      RowBox[{
      "Update", " ", "variables", " ", "for", " ", "next", " ", "iteration"}],
       "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["n", "2"], ",", "halfN"}], "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"k", " ", "=", " ", 
      RowBox[{"k", " ", "-", " ", "1"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       SubscriptBox["k", "2"], ",", "k"}], "]"}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"currentIteration", " ", "+=", " ", "1"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Last", ",", " ", 
    RowBox[{"single", "-", 
     RowBox[{"valued", " ", "iteration"}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"ciStr", " ", "=", " ", 
   RowBox[{"IntegerString", "[", 
    RowBox[{
     SubscriptBox["k", "2"], "[", 
     RowBox[{"[", "currentIteration", "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["n", "0"], " ", "=", " ", 
   RowBox[{
    SubscriptBox["n", "2"], "[", 
    RowBox[{"[", "currentIteration", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["k", "0"], " ", "=", " ", 
   RowBox[{
    SubscriptBox["k", "2"], "[", 
    RowBox[{"[", "currentIteration", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox["G", "\[RightVector]"], " ", "=", " ", 
   RowBox[{
    OverscriptBox[
     SubscriptBox["G", "2"], "\[RightVector]"], "[", 
    RowBox[{"[", "currentIteration", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox["H", "\[RightVector]"], " ", "=", " ", 
   RowBox[{
    OverscriptBox[
     SubscriptBox["H", "2"], "\[RightVector]"], "[", 
    RowBox[{"[", "currentIteration", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox["B", "\[RightVector]"], " ", "=", " ", 
   RowBox[{
    OverscriptBox[
     SubscriptBox["B", "2"], "\[RightVector]"], "[", 
    RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox["C", "\[RightVector]"], " ", "=", " ", 
   RowBox[{
    OverscriptBox[
     SubscriptBox["C", "2"], "\[RightVector]"], "[", 
    RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox["D", "\[RightVector]"], " ", "=", " ", 
   RowBox[{
    OverscriptBox[
     SubscriptBox["D", "2"], "\[RightVector]"], "[", 
    RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["a", "IP"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{
    OverscriptBox[
     SubscriptBox["a", "2"], "\[RightVector]"], "[", 
    RowBox[{"[", "currentIteration", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["b", "IP"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{
    OverscriptBox[
     SubscriptBox["b", "2"], "\[RightVector]"], "[", 
    RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["a", "W"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{
    OverscriptBox[
     SubscriptBox["a", 
      RowBox[{"2", ",", "W"}]], "\[RightVector]"], "[", 
    RowBox[{"[", "currentIteration", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["b", "W"], "\[RightVector]"], " ", "=", " ", 
   RowBox[{
    OverscriptBox[
     SubscriptBox["b", 
      RowBox[{"2", ",", "W"}]], "\[RightVector]"], "[", 
    RowBox[{"[", "currentIteration", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", "h"], " ", "=", " ", 
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"2", ",", "h"}]], "[", 
    RowBox[{"[", "currentIteration", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", "b"], " ", "=", " ", 
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"2", ",", "b"}]], "[", 
    RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", "c"], " ", "=", " ", 
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"2", ",", "c"}]], "[", 
    RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", "d"], " ", "=", " ", 
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"2", ",", "d"}]], "[", 
    RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", "W"], " ", "=", " ", 
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"2", ",", "W"}]], "[", 
    RowBox[{"[", "currentIteration", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["a", "0"], " ", "=", " ", 
   RowBox[{
    OverscriptBox[
     SubscriptBox["a", "IP"], "\[RightVector]"], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["b", "0"], " ", "=", " ", 
   RowBox[{
    OverscriptBox[
     SubscriptBox["b", "IP"], "\[RightVector]"], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["a", 
    RowBox[{"0", ",", "W"}]], " ", "=", " ", 
   RowBox[{
    OverscriptBox[
     SubscriptBox["a", "W"], "\[RightVector]"], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["b", 
    RowBox[{"0", ",", "W"}]], " ", "=", " ", 
   RowBox[{
    OverscriptBox[
     SubscriptBox["b", "W"], "\[RightVector]"], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["G", "0"], " ", "=", " ", 
   RowBox[{
    OverscriptBox["G", "\[RightVector]"], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["H", "0"], " ", "=", " ", 
   RowBox[{
    OverscriptBox["H", "\[RightVector]"], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["B", "0"], " ", "=", " ", 
   RowBox[{
    OverscriptBox["B", "\[RightVector]"], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["C", "0"], " ", "=", " ", 
   RowBox[{
    OverscriptBox["C", "\[RightVector]"], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["D", "0"], " ", "=", " ", 
   RowBox[{
    OverscriptBox["D", "\[RightVector]"], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"0", ",", "h"}]], " ", "=", " ", 
   SubscriptBox["P", "h"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"0", ",", "b"}]], " ", "=", " ", 
   SubscriptBox["P", "b"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"0", ",", "c"}]], " ", "=", " ", 
   SubscriptBox["P", "c"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"0", ",", "d"}]], " ", "=", " ", 
   SubscriptBox["P", "d"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"0", ",", "W"}]], " ", "=", " ", 
    SubscriptBox["P", "W"]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"TellVerifier", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<a0\>\"", "->", 
      SubscriptBox["a", "0"]}], ",", 
     RowBox[{"\"\<b0\>\"", "->", 
      SubscriptBox["b", "0"]}], ",", 
     RowBox[{"\"\<_cost\>\"", "->", "\"\<scalar\>\""}]}], "}"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "interactive"}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<a0\>\"", ",", 
       SubscriptBox["a", "0"], ",", 
       RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}], 
     ";", "\n", "\t", 
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<b0\>\"", ",", 
       SubscriptBox["b", "0"], ",", 
       RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}], 
     ";"}]}], "\n", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["c", "0"], " ", "=", " ", 
    RowBox[{"modq", "[", 
     RowBox[{
      SubscriptBox["a", "0"], "*", 
      SubscriptBox["b", "0"]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"TellVerifier", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<a0W\>\"", "->", 
      SubscriptBox["a", 
       RowBox[{"0", ",", "W"}]]}], ",", 
     RowBox[{"\"\<b0W\>\"", "->", 
      SubscriptBox["b", 
       RowBox[{"0", ",", "W"}]]}], ",", 
     RowBox[{"\"\<_cost\>\"", "->", "\"\<scalar\>\""}]}], "}"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "interactive"}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<a0W\>\"", ",", 
       SubscriptBox["a", 
        RowBox[{"0", ",", "W"}]], ",", 
       RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}], 
     ";", "\n", "\t", 
     RowBox[{"FiatShamirAdd", "[", 
      RowBox[{"\"\<b0W\>\"", ",", 
       SubscriptBox["b", 
        RowBox[{"0", ",", "W"}]], ",", 
       RowBox[{"entropyParameters", "[", "\"\<scalar\>\"", "]"}]}], "]"}], 
     ";"}]}], "\n", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["c", 
     RowBox[{"0", ",", "W"}]], " ", "=", " ", 
    RowBox[{"modq", "[", 
     RowBox[{
      SubscriptBox["a", 
       RowBox[{"0", ",", "W"}]], "*", 
      SubscriptBox["b", 
       RowBox[{"0", ",", "W"}]]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<Iteration \>\"", "<>", "ciStr", "<>", 
           "\"\< (Counting from \>\"", "<>", 
           RowBox[{"IntegerString", "[", 
            RowBox[{
             SubscriptBox["k", "2"], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\< to 0)\>\""}], 
          "]"}], ",", " ", "SpanFromLeft", ",", " ", "SpanFromLeft", ",", " ",
          "SpanFromLeft"}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Name\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", "\"\<Semantics\>\"", "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Knowledge\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(n\), \(0\)]\) := \!\(\*SubscriptBox[\(n\), \
\(2\)]\).\>\"", "<>", "ciStr", "<>", 
          "\"\<[1] \!\(\*OverscriptBox[\(=\), \(?\)]\) 1\>\""}], ",", 
         "\"\<Halving Complete?\>\"", ",", "\"\<P,V\>\"", ",", 
         RowBox[{
          SubscriptBox["n", "0"], "==", "1"}]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(k\), \(0\)]\) := \!\(\*SubscriptBox[\(k\), \
\(2\)]\).\>\"", "<>", "ciStr", "<>", 
          "\"\<[1] \!\(\*OverscriptBox[\(=\), \(?\)]\) 0\>\""}], ",", 
         "\"\<Halving Complete?\>\"", ",", "\"\<P,V\>\"", ",", 
         RowBox[{
          SubscriptBox["k", "0"], "==", "0"}]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(G\), \(0\)]\) := \
\!\(\*OverscriptBox[SubscriptBox[\(G\), \(2\)], \(\[RightVector]\)]\).\>\"", "<>",
           "ciStr", "<>", "\"\<[1]\>\""}], ",", "\"\<\>\"", ",", 
         "\"\<P,V\>\"", ",", 
         SubscriptBox["G", "0"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(H\), \(0\)]\) := \
\!\(\*OverscriptBox[SubscriptBox[\(H\), \(2\)], \(\[RightVector]\)]\).\>\"", "<>",
           "ciStr", "<>", "\"\<[1]\>\""}], ",", "\"\<\>\"", ",", 
         "\"\<P,V\>\"", ",", 
         SubscriptBox["H", "0"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(B\), \(0\)]\) := \
\!\(\*OverscriptBox[SubscriptBox[\(B\), \(2\)], \(\[RightVector]\)]\).\>\"", "<>",
           "ciStr", "<>", "\"\<[1]\>\""}], ",", "\"\<\>\"", ",", 
         "\"\<P,V\>\"", ",", 
         SubscriptBox["B", "0"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(C\), \(0\)]\) := \
\!\(\*OverscriptBox[SubscriptBox[\(C\), \(2\)], \(\[RightVector]\)]\).\>\"", "<>",
           "ciStr", "<>", "\"\<[1]\>\""}], ",", "\"\<\>\"", ",", 
         "\"\<P,V\>\"", ",", 
         SubscriptBox["C", "0"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(D\), \(0\)]\) := \
\!\(\*OverscriptBox[SubscriptBox[\(D\), \(2\)], \(\[RightVector]\)]\).\>\"", "<>",
           "ciStr", "<>", "\"\<[1]\>\""}], ",", "\"\<\>\"", ",", 
         "\"\<P,V\>\"", ",", 
         SubscriptBox["D", "0"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(a\), \(0\)]\) := \
\!\(\*OverscriptBox[SubscriptBox[\(a\), \(2\)], \(\[RightVector]\)]\).\>\"", "<>",
           "ciStr", "<>", "\"\<[1]\>\""}], ",", "\"\<\>\"", ",", 
         "\"\<P,V\>\"", ",", 
         SubscriptBox["a", "0"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(b\), \(0\)]\) := \
\!\(\*OverscriptBox[SubscriptBox[\(b\), \(2\)], \(\[RightVector]\)]\).\>\"", "<>",
           "ciStr", "<>", "\"\<[1]\>\""}], ",", "\"\<\>\"", ",", 
         "\"\<P,V\>\"", ",", 
         SubscriptBox["b", "0"]}], "}"}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(a\), \(0, W\)]\) := \
\!\(\*OverscriptBox[SubscriptBox[\(a\), \(2, W\)], \
\(\[RightVector]\)]\).\>\"", "<>", "ciStr", "<>", "\"\<[1]\>\""}], ",", 
         "\"\<\>\"", ",", "\"\<P,V\>\"", ",", 
         SubscriptBox["a", 
          RowBox[{"0", ",", "W"}]]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(b\), \(0, W\)]\) := \
\!\(\*OverscriptBox[SubscriptBox[\(b\), \(2, W\)], \
\(\[RightVector]\)]\).\>\"", "<>", "ciStr", "<>", "\"\<[1]\>\""}], ",", 
         "\"\<\>\"", ",", "\"\<P,V\>\"", ",", 
         SubscriptBox["b", 
          RowBox[{"0", ",", "W"}]]}], "}"}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(P\), \(0, {h, b, c, W}\)]\) := \
\!\(\*SubscriptBox[\(P\), \(2, {h, b, c, W}\)]\).\>\"", "<>", "ciStr"}], ",", 
         "\"\<\>\"", ",", "\"\<P,V\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["P", 
            RowBox[{"0", ",", "h"}]], ",", 
           SubscriptBox["P", 
            RowBox[{"0", ",", "b"}]], ",", 
           SubscriptBox["P", 
            RowBox[{"0", ",", "c"}]], ",", 
           SubscriptBox["P", 
            RowBox[{"0", ",", "W"}]]}], "}"}]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(c\), \(0\)]\) := \!\(\*SubscriptBox[\(a\), \
\(0\)]\)\!\(\*SubscriptBox[\(b\), \(0\)]\)\>\"", ",", "\"\<\>\"", ",", 
         "\"\<P,V\>\"", ",", 
         SubscriptBox["c", "0"]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(c\), \(0, W\)]\) := \
\!\(\*SubscriptBox[\(a\), \(0, W\)]\)\!\(\*SubscriptBox[\(b\), \(0, \
W\)]\)\>\"", ",", "\"\<\>\"", ",", "\"\<P,V\>\"", ",", 
         SubscriptBox["c", 
          RowBox[{"0", ",", "W"}]]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(P\), \(0, {h, b, c, d, W}\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) \!\(\*SubsuperscriptBox[\(P\), \({h, b, \
c, d, W}\), \('\)]\) + <\!\(\*SubsuperscriptBox[\(u\), \(2\), \
\(2\)]\),\!\(\*SubscriptBox[\(L\), \(2, {h, b, c, d, W}\)]\)> + \
<\!\(\*SubsuperscriptBox[\(u\), \(2\), \(-2\)]\),\!\(\*SubscriptBox[\(R\), \
\(2, {h, b, c, d, W}\)]\)>\>\"", ",", 
         "\"\<Sanity Check\\nfor \!\(\*SubscriptBox[\(P\), \(0\)]\)\>\"", 
         ",", "\"\<P,V\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SubscriptBox["P", 
             RowBox[{"0", ",", "h"}]], "==", 
            RowBox[{
             SubsuperscriptBox["P", "h", "'"], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["u", "2"], "^", "2"}], ")"}], ".", 
              SubscriptBox["L", 
               RowBox[{"2", ",", "h"}]]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{"modinvq", ",", 
                  SubscriptBox["u", "2"]}], "]"}], "^", "2"}], ")"}], ".", 
              SubscriptBox["R", 
               RowBox[{"2", ",", "h"}]]}]}]}], ",", " ", 
           RowBox[{
            SubscriptBox["P", 
             RowBox[{"0", ",", "b"}]], "==", 
            RowBox[{
             SubsuperscriptBox["P", "b", "'"], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["u", "2"], "^", "2"}], ")"}], ".", 
              SubscriptBox["L", 
               RowBox[{"2", ",", "b"}]]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{"modinvq", ",", 
                  SubscriptBox["u", "2"]}], "]"}], "^", "2"}], ")"}], ".", 
              SubscriptBox["R", 
               RowBox[{"2", ",", "b"}]]}]}]}], ",", " ", 
           RowBox[{
            SubscriptBox["P", 
             RowBox[{"0", ",", "c"}]], "==", 
            RowBox[{
             SubsuperscriptBox["P", "c", "'"], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["u", "2"], "^", "2"}], ")"}], ".", 
              SubscriptBox["L", 
               RowBox[{"2", ",", "c"}]]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{"modinvq", ",", 
                  SubscriptBox["u", "2"]}], "]"}], "^", "2"}], ")"}], ".", 
              SubscriptBox["R", 
               RowBox[{"2", ",", "c"}]]}]}]}], ",", " ", 
           RowBox[{
            SubscriptBox["P", 
             RowBox[{"0", ",", "d"}]], "==", 
            RowBox[{
             SubsuperscriptBox["P", "d", "'"], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["u", "2"], "^", "2"}], ")"}], ".", 
              SubscriptBox["L", 
               RowBox[{"2", ",", "d"}]]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{"modinvq", ",", 
                  SubscriptBox["u", "2"]}], "]"}], "^", "2"}], ")"}], ".", 
              SubscriptBox["R", 
               RowBox[{"2", ",", "d"}]]}]}]}], ",", " ", 
           RowBox[{
            SubscriptBox["P", 
             RowBox[{"0", ",", "W"}]], "==", 
            RowBox[{
             SubsuperscriptBox["P", "W", "'"], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["u", "2"], "^", "2"}], ")"}], ".", 
              SubscriptBox["L", 
               RowBox[{"2", ",", "W"}]]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{"modinvq", ",", 
                  SubscriptBox["u", "2"]}], "]"}], "^", "2"}], ")"}], ".", 
              SubscriptBox["R", 
               RowBox[{"2", ",", "W"}]]}]}]}]}], "}"}]}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(P\), \(0, {h, b, c, d}\)]\) \
\!\(\*OverscriptBox[\(=\), \(?\)]\) \!\(\*SubscriptBox[\(G\), \
\(0\)]\)\!\(\*SubscriptBox[\(a\), \(0\)]\) + \
{H,B,C,D\!\(\*SubscriptBox[\(}\), \(0\)]\)\!\(\*SubscriptBox[\(b\), \(0\)]\) \
+ \!\(\*SubscriptBox[\(c\), \(0\)]\)\!\(\*SuperscriptBox[\(g\), \('\)]\)\>\"",
          ",", "\"\<Verifier's Check\>\"", ",", "\"\<P,V\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SubscriptBox["P", 
             RowBox[{"0", ",", "h"}]], "==", 
            RowBox[{
             RowBox[{
              SubscriptBox["G", "0"], "*", 
              SubscriptBox["a", "0"]}], "+", 
             RowBox[{
              SubscriptBox["H", "0"], "*", 
              SubscriptBox["b", "0"]}], "+", 
             RowBox[{
              SuperscriptBox["g", "'"], "*", 
              SubscriptBox["c", "0"]}]}]}], ",", " ", 
           RowBox[{
            SubscriptBox["P", 
             RowBox[{"0", ",", "b"}]], "==", 
            RowBox[{
             RowBox[{
              SubscriptBox["G", "0"], "*", 
              SubscriptBox["a", "0"]}], "+", 
             RowBox[{
              SubscriptBox["B", "0"], "*", 
              SubscriptBox["b", "0"]}], "+", 
             RowBox[{
              SuperscriptBox["g", "'"], "*", 
              SubscriptBox["c", "0"]}]}]}], ",", " ", 
           RowBox[{
            SubscriptBox["P", 
             RowBox[{"0", ",", "c"}]], "==", 
            RowBox[{
             RowBox[{
              SubscriptBox["G", "0"], "*", 
              SubscriptBox["a", "0"]}], "+", 
             RowBox[{
              SubscriptBox["C", "0"], "*", 
              SubscriptBox["b", "0"]}], "+", 
             RowBox[{
              SuperscriptBox["g", "'"], "*", 
              SubscriptBox["c", "0"]}]}]}], ",", " ", 
           RowBox[{
            SubscriptBox["P", 
             RowBox[{"0", ",", "d"}]], "==", 
            RowBox[{
             RowBox[{
              SubscriptBox["G", "0"], "*", 
              SubscriptBox["a", "0"]}], "+", 
             RowBox[{
              SubscriptBox["D", "0"], "*", 
              SubscriptBox["b", "0"]}], "+", 
             RowBox[{
              SuperscriptBox["g", "'"], "*", 
              SubscriptBox["c", "0"]}]}]}]}], "}"}]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(P\), \(0, W\)]\) \!\(\*OverscriptBox[\(=\), \
\(?\)]\) \!\(\*SubscriptBox[\(G\), \(0\)]\)\!\(\*SubscriptBox[\(a\), \(0, \
W\)]\) + \!\(\*SubscriptBox[\(H\), \(0\)]\)\!\(\*SubscriptBox[\(b\), \(0, \
W\)]\) + \!\(\*SubscriptBox[\(c\), \(0, W\)]\)\!\(\*SuperscriptBox[\(g\), \('\
\)]\)\>\"", ",", "\"\<Verifier's Check\>\"", ",", "\"\<P,V\>\"", ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"0", ",", "W"}]], "==", 
          RowBox[{
           RowBox[{
            SubscriptBox["G", "0"], "*", 
            SubscriptBox["a", 
             RowBox[{"0", ",", "W"}]]}], "+", 
           RowBox[{
            SubscriptBox["H", "0"], "*", 
            SubscriptBox["b", 
             RowBox[{"0", ",", "W"}]]}], "+", 
           RowBox[{
            SuperscriptBox["g", "'"], "*", 
            SubscriptBox["c", 
             RowBox[{"0", ",", "W"}]]}]}]}]}], "}"}]}], "\[IndentingNewLine]",
       "}"}], ",", " ", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Left", ",", "Left", ",", "Left"}], "}"}], 
       "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "]"}], "\n"}], "\n", 
 RowBox[{"Print", "[", "\"\<Inner product protocol finished!\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"CommunicationCostGrid", "[", "]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "interactive"}], ",", 
    RowBox[{"Print", "[", 
     RowBox[{"FiatShamirGrid", "[", "]"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ProofFinished", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"StateMachineSave", "[", "\"\<inner_product_halving\>\"", "]"}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.8803168453415823`*^9, 3.8803169920451317`*^9}, 
   3.880317060252612*^9, {3.8803171039468*^9, 3.880317244407495*^9}, {
   3.880317308510992*^9, 3.880317512446159*^9}, {3.8803175789777193`*^9, 
   3.8803176022758512`*^9}, {3.880317643252432*^9, 3.880317927157445*^9}, {
   3.88031795727234*^9, 3.880318204585939*^9}, {3.8803183992709084`*^9, 
   3.880318521172461*^9}, {3.88031856344676*^9, 3.880318570892774*^9}, {
   3.880318626698491*^9, 3.880318631170116*^9}, {3.880318662440543*^9, 
   3.880318666944921*^9}, {3.8803187185541487`*^9, 3.8803187231877604`*^9}, {
   3.880318757155273*^9, 3.880318765613302*^9}, {3.880445178282158*^9, 
   3.8804451809543056`*^9}, {3.880445633703148*^9, 3.8804456786709843`*^9}, {
   3.880445933452429*^9, 3.88044595961534*^9}, {3.881423198305366*^9, 
   3.881423282346714*^9}, {3.8814233304042187`*^9, 3.881423330716618*^9}, {
   3.881423372948728*^9, 3.881423562162627*^9}, {3.8814236059467573`*^9, 
   3.881423610332779*^9}, {3.881423666346949*^9, 3.8814237587171593`*^9}, {
   3.881423792199399*^9, 3.881423998340012*^9}, {3.88142402856146*^9, 
   3.8814240924217253`*^9}, {3.881424125234042*^9, 3.881424175884844*^9}, {
   3.881424238659995*^9, 3.881424265344554*^9}, {3.8814243156294203`*^9, 
   3.881424348884769*^9}, {3.881424387485833*^9, 3.881424596349701*^9}, {
   3.881424644253933*^9, 3.8814248411201153`*^9}, {3.881424901299919*^9, 
   3.881425203823534*^9}, {3.8814253468178377`*^9, 3.881425383650836*^9}, {
   3.881425480370874*^9, 3.881425635300887*^9}, {3.881425694492247*^9, 
   3.8814256952765493`*^9}, {3.8814257819248877`*^9, 3.881425811487357*^9}, {
   3.881425858009715*^9, 3.881425923215163*^9}, {3.8814260559243298`*^9, 
   3.881426076701185*^9}, {3.8814264888951073`*^9, 3.8814270012804203`*^9}, {
   3.881427042702829*^9, 3.881427052214493*^9}, {3.881427090935712*^9, 
   3.881427091391966*^9}, {3.8826272777854567`*^9, 3.882627280427527*^9}, 
   3.882627910710759*^9, {3.882627971497342*^9, 3.882627980697941*^9}, {
   3.882628063621964*^9, 3.882628078491207*^9}, {3.8826281216824636`*^9, 
   3.882628122465724*^9}, {3.88262852550388*^9, 3.882628535493206*^9}, {
   3.8826287625284967`*^9, 3.882628791532867*^9}, {3.882628841830415*^9, 
   3.882628842052259*^9}, {3.882628876216084*^9, 3.882629012194557*^9}, {
   3.8826291028234463`*^9, 3.882629131969844*^9}, {3.882629363381969*^9, 
   3.8826296888124037`*^9}, {3.882629719040361*^9, 3.882629786270879*^9}, {
   3.882631253376346*^9, 3.882631338437698*^9}, {3.882631395937258*^9, 
   3.882631567272575*^9}, {3.882631618187317*^9, 3.882631802141088*^9}, {
   3.8826318339792767`*^9, 3.88263184710804*^9}, {3.8826318844695177`*^9, 
   3.882632040041728*^9}, {3.882632133741102*^9, 3.882632264474086*^9}, {
   3.882632297200739*^9, 3.8826323977429667`*^9}, {3.882681773404204*^9, 
   3.882681863411594*^9}, {3.882681893802516*^9, 3.882681973389339*^9}, {
   3.882682037361861*^9, 3.882682157530059*^9}, {3.882682250664585*^9, 
   3.882682251357604*^9}, {3.882682299610368*^9, 3.882682590300316*^9}, {
   3.8826826263627787`*^9, 3.882682634662668*^9}, {3.882682690683834*^9, 
   3.882682695950554*^9}, {3.882682743713673*^9, 3.8826827637552958`*^9}, {
   3.882682798412777*^9, 3.882682799003285*^9}, {3.882683135602159*^9, 
   3.882683136091189*^9}, {3.882683217678976*^9, 3.8826832457130747`*^9}, {
   3.88268328455964*^9, 3.882683437858819*^9}, {3.882683480353362*^9, 
   3.8826834849448423`*^9}, {3.882683522396207*^9, 3.882683524668419*^9}, {
   3.8826836442921124`*^9, 3.88268366440292*^9}, {3.882683777318771*^9, 
   3.882683783899785*^9}, {3.882683860529763*^9, 3.882683893701631*^9}, {
   3.882684054138159*^9, 3.882684075031803*^9}, {3.882684105320694*^9, 
   3.8826841057987947`*^9}, {3.882684154949242*^9, 3.882684196900304*^9}, {
   3.8826842429232397`*^9, 3.882684419213359*^9}, {3.882684465553197*^9, 
   3.882684480563698*^9}, {3.882684531377277*^9, 3.882684703465274*^9}, {
   3.882684741810522*^9, 3.8826848352949753`*^9}, {3.882684887017418*^9, 
   3.882684916151682*^9}, {3.882684967196713*^9, 3.882685066206952*^9}, {
   3.882685117099575*^9, 3.8826852966832237`*^9}, {3.882685360810267*^9, 
   3.882685439439254*^9}, {3.882685476849839*^9, 3.882685664366293*^9}, {
   3.882685726033647*^9, 3.882685726665656*^9}, {3.882685766020412*^9, 
   3.882685941521679*^9}, {3.882685983390483*^9, 3.882685994588582*^9}, {
   3.882686038497983*^9, 3.882686070049348*^9}, {3.882686104359715*^9, 
   3.882686117392288*^9}, {3.882686149435135*^9, 3.882686178834569*^9}, {
   3.882686228061923*^9, 3.882686500192298*^9}, {3.882686532190242*^9, 
   3.882686583598545*^9}, {3.882686636288343*^9, 3.882687027837552*^9}, {
   3.882687074990663*^9, 3.882687114130794*^9}, {3.8826871564193563`*^9, 
   3.8826877454072857`*^9}, {3.8826877944613123`*^9, 3.882687808462734*^9}, {
   3.882687854187539*^9, 3.882688299280439*^9}, {3.882688336271636*^9, 
   3.8826887166184673`*^9}, {3.882688758950399*^9, 3.882688827252493*^9}, {
   3.882688871878743*^9, 3.882689070142447*^9}, {3.882689132462967*^9, 
   3.882689133393162*^9}, {3.882689191539826*^9, 3.882689198954117*^9}, {
   3.882871703618696*^9, 3.882871706015877*^9}, {3.882872471648245*^9, 
   3.8828724983043127`*^9}, {3.882872639812869*^9, 3.882872760775691*^9}, {
   3.8828728445859413`*^9, 3.882872851450096*^9}, {3.882872960785018*^9, 
   3.882872970646934*^9}, {3.8828730009463787`*^9, 3.882873007456025*^9}, {
   3.882874767641994*^9, 3.882874808966669*^9}, {3.882874874090487*^9, 
   3.882874906425905*^9}, {3.882906234656039*^9, 3.882906235278861*^9}, 
   3.882906532253244*^9, {3.88295818392406*^9, 3.882958199179349*^9}, {
   3.882958336535489*^9, 3.8829583367529287`*^9}, {3.882958406956643*^9, 
   3.882958434492841*^9}, {3.882959908494403*^9, 3.882959971350075*^9}, {
   3.882960557179925*^9, 3.8829605572944727`*^9}, {3.882960831208619*^9, 
   3.882960833799402*^9}, {3.88296097835853*^9, 3.882960981496435*^9}, {
   3.882961141246122*^9, 3.882961142928327*^9}, {3.883133023388094*^9, 
   3.883133040729044*^9}, {3.8832093572688417`*^9, 3.883209545180518*^9}, {
   3.883209595028517*^9, 3.883209611833173*^9}, {3.883209644427051*^9, 
   3.8832097038704433`*^9}, {3.883209749425515*^9, 3.88320975072108*^9}, {
   3.883209804234861*^9, 3.883209951973304*^9}, {3.883209986014626*^9, 
   3.883210016544578*^9}, {3.883210056374196*^9, 3.883210182300868*^9}, {
   3.883210213263484*^9, 3.8832104343659477`*^9}, {3.883210518698201*^9, 
   3.88321054813221*^9}, {3.8832107158094883`*^9, 3.883210718929867*^9}, {
   3.883508332830055*^9, 3.883508361384261*^9}, {3.883512191636553*^9, 
   3.883512200934189*^9}, {3.883513317644562*^9, 3.88351339050819*^9}, {
   3.883513648375308*^9, 3.8835136496960917`*^9}, {3.8835137758673277`*^9, 
   3.8835137762531843`*^9}, {3.883513892095408*^9, 3.883513893454996*^9}, {
   3.884752077969654*^9, 3.884752078129373*^9}, {3.8847849277280703`*^9, 
   3.8847849278400087`*^9}, {3.8873617209126697`*^9, 
   3.8873617210764494`*^9}, {3.8873647003613744`*^9, 
   3.8873647384789486`*^9}, {3.887364851520939*^9, 3.8873649023606915`*^9}, {
   3.8873649604309287`*^9, 3.8873649629678836`*^9}, {3.8873864716864834`*^9, 
   3.8873865567600927`*^9}, {3.8873866251864595`*^9, 
   3.8873866486410303`*^9}, {3.88738668901501*^9, 3.8873868199060316`*^9}, {
   3.8873870061703763`*^9, 3.8873870356529555`*^9}, {3.8873870687359495`*^9, 
   3.8873871989413137`*^9}, {3.8873874776602163`*^9, 3.887387692372193*^9}, {
   3.887387827333027*^9, 3.8873880934860888`*^9}, {3.887388128406077*^9, 
   3.8873881562714014`*^9}, {3.8873882255052595`*^9, 
   3.8873882931567183`*^9}, {3.8873883747309713`*^9, 3.887388410398984*^9}, {
   3.887388755590418*^9, 3.887388829344925*^9}, {3.8873889137344255`*^9, 
   3.8873889932758856`*^9}, {3.887389027126011*^9, 3.887389102340495*^9}, {
   3.8873891387783203`*^9, 3.8873891912858324`*^9}, {3.887389259017048*^9, 
   3.887389332818821*^9}, {3.8873893670698013`*^9, 3.887389456617502*^9}, {
   3.887389503360283*^9, 3.887389521402765*^9}, {3.8873895937057242`*^9, 
   3.887389829558691*^9}, {3.8873901023215103`*^9, 3.887390153459982*^9}, {
   3.8873902917891035`*^9, 3.887390313699539*^9}, {3.887390344491602*^9, 
   3.8873904102680483`*^9}, {3.887390467190837*^9, 3.8873904858957825`*^9}, {
   3.887390537169027*^9, 3.8873906179202323`*^9}, {3.887390652104496*^9, 
   3.8873906552675424`*^9}, {3.887390694427483*^9, 3.8873907067054896`*^9}, {
   3.887390812985484*^9, 3.8873909794242983`*^9}, {3.887391023590906*^9, 
   3.887391150450348*^9}, {3.887391190181125*^9, 3.887391327654306*^9}, {
   3.887391378832178*^9, 3.887391384353304*^9}, {3.887391767018166*^9, 
   3.887391768246945*^9}, {3.887391864684494*^9, 3.8873920141421723`*^9}, {
   3.8873920511495714`*^9, 3.887392144374178*^9}, {3.887392179560111*^9, 
   3.887392470380702*^9}, {3.887392580904012*^9, 3.8873926320320344`*^9}, {
   3.8873927070649757`*^9, 3.887392783064501*^9}, {3.8873928664079523`*^9, 
   3.8873929544148135`*^9}, {3.88739298753697*^9, 3.8873930189309635`*^9}, {
   3.8873931455109053`*^9, 3.887393165380376*^9}, {3.8873931978387375`*^9, 
   3.8873932499666967`*^9}, {3.887393288786517*^9, 3.8873933493168344`*^9}, {
   3.887393504937903*^9, 3.8873935277821383`*^9}, {3.8873939193337293`*^9, 
   3.8873939194627285`*^9}, 3.8873939979846416`*^9, {3.8873940564526896`*^9, 
   3.8873940583105116`*^9}, {3.8873943126683702`*^9, 
   3.8873943146944933`*^9}, {3.887394484278549*^9, 3.8873944843865814`*^9}, {
   3.8873945144295855`*^9, 3.8873945237324443`*^9}, {3.8873946012555804`*^9, 
   3.887394633620512*^9}, {3.8873947831825356`*^9, 3.887394793606515*^9}, {
   3.8873948847187243`*^9, 3.8873948902639036`*^9}, {3.887395023760459*^9, 
   3.887395030276178*^9}, {3.88739517708173*^9, 3.887395179230415*^9}, {
   3.8873952759823*^9, 3.8873952820354033`*^9}, {3.8873954077856693`*^9, 
   3.8873954090874643`*^9}, {3.8873955393683567`*^9, 
   3.8873955421268873`*^9}, {3.8873955733563423`*^9, 3.88739558111664*^9}, {
   3.8874829839032283`*^9, 3.887482989466503*^9}, {3.887483199577581*^9, 
   3.887483211717989*^9}, {3.8874908894427414`*^9, 3.8874909066550226`*^9}, {
   3.8874910021106997`*^9, 3.8874910024727674`*^9}, {3.8876491518638067`*^9, 
   3.8876491520068293`*^9}, {3.889631907667962*^9, 3.889631921206219*^9}, {
   3.892280162808631*^9, 3.892280176412098*^9}, {3.8922808773022537`*^9, 
   3.892280894537779*^9}, {3.892280927731539*^9, 3.892280933634665*^9}, {
   3.892280966471899*^9, 3.892280975421463*^9}, {3.892281214609644*^9, 
   3.892281278396118*^9}, {3.892281312476797*^9, 3.892281386641674*^9}, {
   3.892281569165098*^9, 3.892281570880192*^9}, {3.892345969481433*^9, 
   3.8923459750139017`*^9}, {3.892483147430752*^9, 3.892483184330798*^9}, {
   3.892483217351142*^9, 3.8924832931448927`*^9}, {3.892483351038836*^9, 
   3.8924834868969316`*^9}, {3.892483545883688*^9, 3.89248386052874*^9}, {
   3.8924838973597527`*^9, 3.892483998540227*^9}, {3.8924840640762577`*^9, 
   3.8924842941542673`*^9}, {3.892484408614604*^9, 3.892484409189959*^9}, {
   3.89248445557131*^9, 3.89248514904392*^9}, {3.892485508732305*^9, 
   3.892485554084848*^9}, {3.892486198660692*^9, 3.89248620418729*^9}, {
   3.892487217434924*^9, 3.8924872221149673`*^9}, {3.8983350462235312`*^9, 
   3.8983350516185713`*^9}, {3.8983382139045787`*^9, 3.898338283281748*^9}, {
   3.8983385956776915`*^9, 3.8983386396544504`*^9}, {3.898338729905661*^9, 
   3.89833877011279*^9}, {3.8983392246731772`*^9, 3.8983392706783285`*^9}, {
   3.8983433960059633`*^9, 3.898343430460978*^9}, {3.898366564530306*^9, 
   3.898366565246707*^9}, {3.8990294532254796`*^9, 3.899029506340681*^9}, {
   3.8990295419299483`*^9, 3.899029815812375*^9}, {3.899029853191861*^9, 
   3.899030326482442*^9}, {3.8990322851668406`*^9, 3.899032302148754*^9}, 
   3.899297478896057*^9, {3.899307815261379*^9, 3.8993078153483334`*^9}, {
   3.8993849659035788`*^9, 3.899384966320933*^9}, {3.911403750548472*^9, 
   3.911403885788104*^9}, {3.91140392904035*^9, 3.9114041149612093`*^9}, {
   3.911404152302414*^9, 3.9114042847960773`*^9}, {3.9114080345102153`*^9, 
   3.911408036532551*^9}, {3.912255742676778*^9, 3.912255743295437*^9}},
 CellLabel->
  "In[375]:=",ExpressionUUID->"7cbfb4eb-9a57-4566-bb8a-353be8f5688f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Verification and Inspection", "Section",
 CellChangeTimes->{{3.8974846299496613`*^9, 3.897484702175345*^9}, {
   3.897495197442492*^9, 3.897495199825204*^9}, {3.897496000965238*^9, 
   3.8974960246391907`*^9}, {3.897497298957355*^9, 3.8974973050574903`*^9}, {
   3.898366579518113*^9, 3.8983665831984215`*^9}, 
   3.8983666660443773`*^9},ExpressionUUID->"1a2a8d53-a25c-4934-8f8a-\
178914d97253"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{"fiatShamirSingleKernel", ",", "\n", 
    RowBox[{
     RowBox[{
     "Print", "[", 
      "\"\<Can't react to results and requests without multi-kernel or \
multi-machine setup\>\"", "]"}], ";"}], "\n", 
    RowBox[{"(*", "Else", "*)"}], ",", "\n", 
    RowBox[{
     RowBox[{"WaitForVariables", "[", 
      RowBox[{"{", "\n", "\t", 
       RowBox[{
       "\"\<_verification_result_\>\"", ",", "\n", "\t", 
        "\"\<_inspection_request_\>\"", ",", "\n", "\t", 
        "\"\<_inspection_result_\>\""}], "\n", "}"}], "]"}], ";"}]}], "\n", 
   "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.8983665939856668`*^9, 3.8983665958367605`*^9}, {
  3.898366923521881*^9, 3.8983669738023596`*^9}, {3.898367024032345*^9, 
  3.898367058304881*^9}, {3.8992578304468956`*^9, 3.8992578369432087`*^9}},
 CellLabel->
  "In[448]:=",ExpressionUUID->"e68eef4b-9d9b-46a1-9d05-3ac28314b013"],

Cell[CellGroupData[{

Cell["Message Processing: Event Loop", "Subsection",
 CellChangeTimes->{{3.898366677153061*^9, 3.898366678402622*^9}, 
   3.898366714101658*^9},ExpressionUUID->"fc627b03-9115-4d09-82dd-\
a4194dcf1f73"],

Cell["\<\
Not needed if notebook is executed correctly. Helpful for debugging and \
introducing new features. Wait for inspection requests and receive \
verification and inspection results after proof has been finished. Abort \
after all expected messages have been received.\
\>", "Text",
 CellChangeTimes->{{3.8976484402653303`*^9, 3.897648455622541*^9}, {
  3.897648532788278*^9, 3.897648567328744*^9}, {3.8976490181928673`*^9, 
  3.897649041573123*^9}, {3.897675628161806*^9, 3.897675697150329*^9}, {
  3.8983666054257073`*^9, 3.898366633731693*^9}, {3.898366731420602*^9, 
  3.8983667320529613`*^9}, {3.911400845906129*^9, 
  3.911400887844698*^9}},ExpressionUUID->"020ae2b0-3855-40f5-9cea-\
70fc9b9dd8eb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"StateMachineRestore", "[", "\"\<inner_product_halving\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"ProcessIncomingMessages", "[", 
   RowBox[{"router", ",", 
    RowBox[{"{", "\"\<\>\"", "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.897481821357059*^9, 3.897481872352661*^9}, {
  3.8974819064336033`*^9, 3.897481918084467*^9}, {3.897481948708789*^9, 
  3.897481981326715*^9}, {3.897482016826459*^9, 3.897482128770421*^9}, {
  3.897484068148286*^9, 3.897484139557282*^9}, {3.89748427563197*^9, 
  3.89748429950484*^9}, {3.897484716379912*^9, 3.89748472320048*^9}, {
  3.8974948862409*^9, 3.89749494254821*^9}, {3.897495028522992*^9, 
  3.897495117506402*^9}, {3.89749515965842*^9, 3.897495169118095*^9}, {
  3.897495204443527*^9, 3.897495206818741*^9}, {3.897497225636208*^9, 
  3.897497266873748*^9}, {3.8979021051835957`*^9, 3.8979021053774195`*^9}, {
  3.897903887500248*^9, 3.897903898199651*^9}},
 CellLabel->
  "In[421]:=",ExpressionUUID->"154e820f-ae25-4910-b0c3-c0eb4d383d29"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Prover",
WindowSize->{718.5, 638.25},
WindowMargins->{{-5.25, Automatic}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
CellContext->Notebook,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (January 30, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"876a890d-302e-4701-ba02-2680faa62991"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 496, 7, 158, "Title",ExpressionUUID->"faa4b491-5e11-4480-a38b-7890630b9d91"],
Cell[1079, 31, 12126, 240, 1454, "Text",ExpressionUUID->"c87e6cb6-c687-40d6-a558-e7ff15063073"],
Cell[CellGroupData[{
Cell[13230, 275, 263, 4, 69, "Section",ExpressionUUID->"11fd0fb5-a5b8-4e2c-a5ff-cad55b758019"],
Cell[13496, 281, 608, 10, 57, "Text",ExpressionUUID->"6f46f845-0cde-455e-bef5-d325b0414a58"],
Cell[14107, 293, 344, 10, 57, "Text",ExpressionUUID->"a6577728-6ab3-40e9-85fd-67a7f9d4bfeb"],
Cell[14454, 305, 384, 7, 57, "Text",ExpressionUUID->"4664e31c-bff6-48fe-a0cf-48666a365003"],
Cell[14841, 314, 337, 6, 34, "Text",ExpressionUUID->"d6eac4f9-897f-44ac-8e30-985d66ce8bee"],
Cell[CellGroupData[{
Cell[15203, 324, 887, 19, 160, "Input",ExpressionUUID->"6ff9dc76-0780-4ae5-96f5-8de3f1fd5902"],
Cell[CellGroupData[{
Cell[16115, 347, 216, 4, 22, "Print",ExpressionUUID->"116d21cb-9cfe-4324-8e23-f4fc8421e636"],
Cell[16334, 353, 195, 4, 22, "Print",ExpressionUUID->"587f3ec3-5ff6-4c91-b68e-0c3e9d8ed3ed"]
}, Open  ]]
}, Open  ]],
Cell[16556, 361, 445, 10, 34, "Text",ExpressionUUID->"4e99bd2f-3711-4a92-9e11-1f50a860b105"],
Cell[17004, 373, 826, 18, 75, "Input",ExpressionUUID->"a7a13d0e-8ca6-476b-8ec5-0dbf07f8ec80"],
Cell[17833, 393, 544, 11, 34, "Text",ExpressionUUID->"86898e4d-2a70-41e8-98e2-9c183aa696ad"],
Cell[18380, 406, 618, 14, 73, "Input",ExpressionUUID->"539916a4-b383-4ffd-aa9f-4e520b97c593"],
Cell[19001, 422, 601, 12, 34, "Text",ExpressionUUID->"51835eb4-1503-497d-810f-2dd808f47977"],
Cell[19605, 436, 429, 8, 39, "Input",ExpressionUUID->"52dc856b-9f8a-45e4-a473-9be581e96e9a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20071, 449, 316, 5, 69, "Section",ExpressionUUID->"d31ccf2a-0fff-4583-8947-caf5f753d285"],
Cell[CellGroupData[{
Cell[20412, 458, 178, 3, 34, "Subsection",ExpressionUUID->"3717f2d2-82f5-4bbc-b4ba-49eeee97824c"],
Cell[20593, 463, 1427, 24, 356, "Text",ExpressionUUID->"c87c42d1-f02e-4df2-823b-0f4dd996a12e"],
Cell[22023, 489, 4392, 103, 397, "Code",ExpressionUUID->"d08dd333-9a14-4c70-9cc2-216c35dc7252"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26452, 597, 356, 5, 34, "Subsection",ExpressionUUID->"2a906bb2-a56f-4dcc-a67b-913787bb6287"],
Cell[26811, 604, 2569, 63, 309, "Code",ExpressionUUID->"62f51d77-82ff-47d0-a8c8-682a0a29626a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29417, 672, 216, 4, 34, "Subsection",ExpressionUUID->"12fc3a58-829b-4e9b-8bc7-1db5d21a33dd"],
Cell[29636, 678, 10711, 217, 802, "Code",ExpressionUUID->"fd411253-d2ca-4865-adaa-6e531c81786d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40384, 900, 188, 3, 34, "Subsection",ExpressionUUID->"8e59d7ea-73bf-492a-bc02-edbe62ce3ca2"],
Cell[40575, 905, 4885, 101, 379, "Code",ExpressionUUID->"7abe395b-e149-4b13-b719-3481d759d316"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[45509, 1012, 327, 5, 69, "Section",ExpressionUUID->"76555971-758f-465f-bfec-6a0743d1ba24"],
Cell[CellGroupData[{
Cell[45861, 1021, 346, 5, 34, "Subsection",ExpressionUUID->"3123280c-54d6-4047-9601-af631ae0b10b"],
Cell[46210, 1028, 45571, 1136, 7027, "Code",ExpressionUUID->"a30b07db-f277-43d7-b782-a22b0426c1d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91818, 2169, 229, 5, 34, "Subsection",ExpressionUUID->"b820f5aa-2cd3-4921-a55b-4d3edcce46b8"],
Cell[92050, 2176, 239, 4, 34, "Text",ExpressionUUID->"5ff75e3e-08fa-458c-9694-d82d731e8f62"],
Cell[92292, 2182, 35696, 616, 1556, "Code",ExpressionUUID->"57563dad-e424-45be-a527-b71718fddf77"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128025, 2803, 289, 5, 34, "Subsection",ExpressionUUID->"cfca56cc-6f72-4191-b9ca-2b0f3fabb2ef"],
Cell[128317, 2810, 585, 11, 80, "Text",ExpressionUUID->"c1e6e0ae-6d0d-4399-bc0a-fd047301aa8d"],
Cell[128905, 2823, 5604, 139, 397, "Code",ExpressionUUID->"3462765d-e2ca-42ef-bda9-ec128af90e8e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134546, 2967, 195, 3, 34, "Subsection",ExpressionUUID->"b5eb663b-9d6a-457c-92ce-a76cf532593f"],
Cell[134744, 2972, 265, 6, 34, "Text",ExpressionUUID->"d34e9a49-9391-4172-acb7-38d173db3d49"],
Cell[135012, 2980, 25396, 530, 2132, "Code",ExpressionUUID->"941b8ef9-fb97-4606-b9be-d7cc890367c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160445, 3515, 190, 3, 34, "Subsection",ExpressionUUID->"de66faef-58dc-47c3-8c0b-5c49d00832dd"],
Cell[160638, 3520, 663, 14, 80, "Text",ExpressionUUID->"ef3d1ae1-9db3-452f-beae-e2d2d27c545e"],
Cell[161304, 3536, 11994, 238, 910, "Code",ExpressionUUID->"958f80e0-271f-457a-bd18-2ccfa35cddd1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173335, 3779, 301, 7, 61, "Subsection",ExpressionUUID->"cc8a358f-36d3-4a52-a1b8-12b6693cb195"],
Cell[173639, 3788, 1318, 30, 57, "Text",ExpressionUUID->"e0be0894-2ede-4451-a5c8-c6a4b4d334ce"],
Cell[174960, 3820, 8388, 162, 1064, "Code",ExpressionUUID->"8a32714b-8dcf-43d6-9429-93030fd19a16"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[183397, 3988, 543, 8, 69, "Section",ExpressionUUID->"5a45d715-5ca6-480c-a5a4-82a4aae8b6ce"],
Cell[CellGroupData[{
Cell[183965, 4000, 1261, 36, 36, "Subsection",ExpressionUUID->"96cbbda7-c41e-42c2-bab4-95788c039301"],
Cell[185229, 4038, 3948, 95, 318, "Text",ExpressionUUID->"d522ae41-07d7-4535-9a10-0d9ad072daa6"],
Cell[189180, 4135, 9818, 194, 385, "Code",ExpressionUUID->"104a5d65-74c6-4316-b5d3-66dd8ae68c11"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[199047, 4335, 326, 5, 69, "Section",ExpressionUUID->"03e8145b-2464-4cf5-a8c1-a635c0cf917a"],
Cell[199376, 4342, 6053, 174, 467, "Text",ExpressionUUID->"593efc0c-27b6-4ed2-8071-9de6fc44e049"],
Cell[205432, 4518, 23634, 543, 1430, "Code",ExpressionUUID->"b1548369-de6d-44a3-a372-02e23a06db60"]
}, Open  ]],
Cell[CellGroupData[{
Cell[229103, 5066, 652, 9, 69, "Section",ExpressionUUID->"34bd3f7a-1107-43a9-8486-727468d920cb"],
Cell[229758, 5077, 3616, 99, 349, "Text",ExpressionUUID->"84b81e26-e4f6-4a5a-82fb-2c17f8e770ca"],
Cell[233377, 5178, 15118, 276, 825, "Code",ExpressionUUID->"8d677617-3400-47e2-ab71-0e686b379750"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248532, 5459, 576, 8, 69, "Section",ExpressionUUID->"f1b63298-c7a1-413b-bf6f-1824e87b06b1"],
Cell[249111, 5469, 525, 10, 103, "Text",ExpressionUUID->"84537546-fd57-4e75-9904-47a398f90a4e"],
Cell[CellGroupData[{
Cell[249661, 5483, 256, 4, 34, "Subsection",ExpressionUUID->"1b4d34f1-0a18-4032-a94b-b3a80ba0c5c1"],
Cell[249920, 5489, 8894, 243, 553, "Text",ExpressionUUID->"6ef2404c-28ea-4540-ab22-092e17a10b89",
 InitializationCell->True],
Cell[258817, 5734, 14321, 363, 1034, "Code",ExpressionUUID->"e1c12bea-b419-4d26-b87a-b4bc3d7479d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273175, 6102, 591, 11, 61, "Subsection",ExpressionUUID->"39072ec7-1c0a-4c52-8f79-3ebd73f649e2"],
Cell[273769, 6115, 4080, 82, 88, "Text",ExpressionUUID->"c38ec376-5f92-4e3b-83bd-c9b0aee4c644"],
Cell[277852, 6199, 21625, 391, 836, "Code",ExpressionUUID->"38f9c8f7-5101-4df9-a427-f299ea6cb5b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299514, 6595, 1623, 49, 61, "Subsection",ExpressionUUID->"f21f8b9b-5d7c-4616-a762-dceabecd3c50"],
Cell[301140, 6646, 11014, 318, 515, "Text",ExpressionUUID->"db29d8ea-3c0e-4353-9aea-5651538e9155"],
Cell[312157, 6966, 20860, 507, 1358, "Code",ExpressionUUID->"e9a660ea-d256-4cdf-a9b7-2b883938fa85"]
}, Open  ]],
Cell[CellGroupData[{
Cell[333054, 7478, 473, 9, 61, "Subsection",ExpressionUUID->"5ce96f00-4573-41c6-958e-93efc365e410"],
Cell[333530, 7489, 1437, 40, 34, "Text",ExpressionUUID->"4e1e0a20-8a80-4925-b2a0-a43db087a541"],
Cell[334970, 7531, 11195, 279, 794, "Code",ExpressionUUID->"9b182915-33ce-4cbe-84d2-d407865b7d9d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[346202, 7815, 1955, 56, 65, "Subsection",ExpressionUUID->"5e05c7f3-29b9-4ab5-9345-c3b70c9143d6"],
Cell[348160, 7873, 15172, 449, 749, "Text",ExpressionUUID->"4f621ba4-6c42-4cca-8636-48faf3d3b68b"],
Cell[363335, 8324, 31505, 763, 1872, "Code",ExpressionUUID->"a4627183-a35e-4346-be59-2fe926c9cfaf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[394877, 9092, 622, 19, 34, "Subsection",ExpressionUUID->"a57ae501-b509-409f-b898-6ed3d46c473a"],
Cell[395502, 9113, 886, 22, 34, "Text",ExpressionUUID->"0b2b46e1-4878-4a57-9dd1-af890397eea6"],
Cell[396391, 9137, 3863, 92, 414, "Code",ExpressionUUID->"3fca9ace-6917-47f4-87d8-fd74c356dbc3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[400291, 9234, 567, 17, 34, "Subsection",ExpressionUUID->"dbb259bd-b170-4f87-8a04-817073d9aa4e"],
Cell[400861, 9253, 10643, 320, 532, "Text",ExpressionUUID->"19f98eed-c753-4b62-b0a9-328064625f0a"],
Cell[411507, 9575, 39573, 939, 2116, "Code",ExpressionUUID->"95bf1c3d-91db-408a-b36e-3e5985bdec69"],
Cell[CellGroupData[{
Cell[451105, 10518, 325, 5, 33, "Subsubsection",ExpressionUUID->"6a7e5e8e-6c34-491a-9d5f-caf616dcd703"],
Cell[451433, 10525, 5315, 160, 295, "Text",ExpressionUUID->"93b5849b-24aa-4abb-912b-7cda6136fd55"],
Cell[456751, 10687, 45136, 1071, 2239, "Code",ExpressionUUID->"4d3b6a90-3983-4659-8be8-7cbd0980bd45"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[501936, 11764, 328, 5, 34, "Subsection",ExpressionUUID->"35dbbb96-ad0a-4be6-9f2e-9845accec8fa"],
Cell[502267, 11771, 684, 13, 103, "Text",ExpressionUUID->"1c425026-5648-4996-8e7d-3d1f11f8e74b"],
Cell[502954, 11786, 1071, 20, 59, "Input",ExpressionUUID->"5b3788b9-fcb5-4963-a636-a10f946601e5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[504074, 11812, 169, 3, 69, "Section",ExpressionUUID->"017f88fa-9cd2-4716-8b88-2445a0ca7974"],
Cell[CellGroupData[{
Cell[504268, 11819, 224, 3, 34, "Subsection",ExpressionUUID->"d5c23223-8cd6-4e74-98ef-45789dde92b6"],
Cell[504495, 11824, 12758, 381, 422, "Text",ExpressionUUID->"6ff919a7-5ecc-4859-9972-d425a3874f58"],
Cell[517256, 12207, 36765, 874, 1653, "Code",ExpressionUUID->"26e914ac-a14a-4788-87e5-df4b23a3f9f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[554058, 13086, 166, 3, 34, "Subsection",ExpressionUUID->"05a9b2c2-f72e-475c-8292-7892d63094c1"],
Cell[554227, 13091, 25757, 835, 1448, "Text",ExpressionUUID->"8e76743e-26fe-4b9d-90fd-8103a993730c"],
Cell[579987, 13928, 108501, 2702, 5733, "Code",ExpressionUUID->"7cbfb4eb-9a57-4566-bb8a-353be8f5688f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[688537, 16636, 401, 6, 69, "Section",ExpressionUUID->"1a2a8d53-a25c-4934-8f8a-178914d97253"],
Cell[688941, 16644, 929, 22, 186, "Code",ExpressionUUID->"e68eef4b-9d9b-46a1-9d05-3ac28314b013"],
Cell[CellGroupData[{
Cell[689895, 16670, 201, 3, 34, "Subsection",ExpressionUUID->"fc627b03-9115-4d09-82dd-a4194dcf1f73"],
Cell[690099, 16675, 711, 12, 80, "Text",ExpressionUUID->"020ae2b0-3855-40f5-9cea-70fc9b9dd8eb"],
Cell[690813, 16689, 1035, 19, 59, "Input",ExpressionUUID->"154e820f-ae25-4910-b0c3-c0eb4d383d29"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

